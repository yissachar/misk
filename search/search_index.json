{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Misk is a new open source application container from Cash App. Misk is not ready for use. The API is not stable. Releases \u00b6 Our change log has release history. API is subject to change. implementation ( \"com.squareup.misk:misk:0.18.0\" ) Snapshot builds are available . Modules \u00b6 misk-actions \u00b6 The core annotations and interfaces necessary to define actions that can be hosted in Misk. This package has no dependency on the enclosing container (Misk!) and so your actions can be used in other environments without any heavy dependencies. Actions should extend WebAction , be annotated with a HTTP method like @Post , accept a request object and return a response object. Throw an exception like BadRequestException to fail the request without much boilerplate. misk-aws \u00b6 Integrate with Amazon Web Services, and includes packages to integrate with S3 and SQS. misk-aws-dynamodb \u00b6 Integrate with AWS DynamoDb using AWS SDK for Java 1.x. It should be safe to install side-by-side with misk-aws2-dynamodb if you need to use features in both. misk-aws-dynamodb-testing \u00b6 Integrate with this package to write tests for code that interacts with DynamoDb. Exposes APIs via AWS SDK for Java 1.x. Use alongside with misk-aws-dynamodb . Installing InProcessDynamoDbModule runs a DynamoDb Local instance in memory for your tests to run against. This module is recommended over DockerDynamoDbModule because there is less overhead in test execution performance. Installing DockerDynamoDbModule runs a DynamoDB Local instance in Docker for your tests to execute against. misk-aws2-dynamodb \u00b6 Integrate with AWS DynamoDb using AWS SDK for Java 2.x. It should be safe to install side-by-side with misk-aws-dynamodb if you need to use features in both. Please read the AWS SDK for Java 2.x Migration Guide for more details. misk-aws2-dynamodb-testing \u00b6 Integrate with this package to write tests for code that interacts with DynamoDb. Exposes APIs via AWS SDK for Java 2.x. Use alongside with misk-aws2-dynamodb . Installing InProcessDynamoDbModule runs a DynamoDb Local instance in memory for your tests to run against. This module is recommended over DockerDynamoDbModule because there is less overhead in test execution performance. Installing DockerDynamoDbModule runs a DynamoDB Local instance in Docker for your tests to execute against. misk-service \u00b6 Bind Guava services with inter-service dependencies. Any service can depend on any other service. ServiceManager won\u2019t start a service until the services it depends on are running. misk-inject \u00b6 Integrates Guice with Kotlin. Extending KAbstractModule instead of Guice\u2019s AbstractModule lets you use KClass instead of java.lang.Class and other conveniences. misk-feature \u00b6 Runtime feature flags. misk-launchdarkly is the reference implementation. misk-jobqueue \u00b6 A job queue with a high quality fake. AwsSqsJobQueueModule from misk-aws is the reference implementation. misk-events \u00b6 An event publisher + consumer. There is no open source reference implementation at this time. Looking for Misk-Web? \u00b6 Misk-Web powers the Misk Admin Dashboard with modular Typescript + React powered tabs. Check out Misk-Web ! What are the wisp* modules? \u00b6 The wisp* modules contain no Dependency Injection based code (i.e. no Guice, etc). These modules should never refer to misk* modules, although misk* modules can (and should) use wisp* modules. Also, modules that are wisp*-testing will only be used in test scope in other wisp modules, never in the api/implementation scope. If you are refactoring code from misk into the wisp modules, you must not break any external Misk dependencies or apis. It is ok to deprecate items in misk to encourage eventual migration to wisp directly if desired. If your refactoring does not fit one of the existing wisp modules, create a new module. For now, it is preferred to have many small modules rather than larger conglomerate modules requiring many different dependencies. It should be considered that wisp will be volatile for sometime with the potential for a lot of changes, additions, etc. Misk apps should use wisp modules directly with caution as breaking changes might be required.","title":"Overview"},{"location":"index.html#releases","text":"Our change log has release history. API is subject to change. implementation ( \"com.squareup.misk:misk:0.18.0\" ) Snapshot builds are available .","title":"Releases"},{"location":"index.html#modules","text":"","title":"Modules"},{"location":"index.html#misk-actions","text":"The core annotations and interfaces necessary to define actions that can be hosted in Misk. This package has no dependency on the enclosing container (Misk!) and so your actions can be used in other environments without any heavy dependencies. Actions should extend WebAction , be annotated with a HTTP method like @Post , accept a request object and return a response object. Throw an exception like BadRequestException to fail the request without much boilerplate.","title":"misk-actions"},{"location":"index.html#misk-aws","text":"Integrate with Amazon Web Services, and includes packages to integrate with S3 and SQS.","title":"misk-aws"},{"location":"index.html#misk-aws-dynamodb","text":"Integrate with AWS DynamoDb using AWS SDK for Java 1.x. It should be safe to install side-by-side with misk-aws2-dynamodb if you need to use features in both.","title":"misk-aws-dynamodb"},{"location":"index.html#misk-aws-dynamodb-testing","text":"Integrate with this package to write tests for code that interacts with DynamoDb. Exposes APIs via AWS SDK for Java 1.x. Use alongside with misk-aws-dynamodb . Installing InProcessDynamoDbModule runs a DynamoDb Local instance in memory for your tests to run against. This module is recommended over DockerDynamoDbModule because there is less overhead in test execution performance. Installing DockerDynamoDbModule runs a DynamoDB Local instance in Docker for your tests to execute against.","title":"misk-aws-dynamodb-testing"},{"location":"index.html#misk-aws2-dynamodb","text":"Integrate with AWS DynamoDb using AWS SDK for Java 2.x. It should be safe to install side-by-side with misk-aws-dynamodb if you need to use features in both. Please read the AWS SDK for Java 2.x Migration Guide for more details.","title":"misk-aws2-dynamodb"},{"location":"index.html#misk-aws2-dynamodb-testing","text":"Integrate with this package to write tests for code that interacts with DynamoDb. Exposes APIs via AWS SDK for Java 2.x. Use alongside with misk-aws2-dynamodb . Installing InProcessDynamoDbModule runs a DynamoDb Local instance in memory for your tests to run against. This module is recommended over DockerDynamoDbModule because there is less overhead in test execution performance. Installing DockerDynamoDbModule runs a DynamoDB Local instance in Docker for your tests to execute against.","title":"misk-aws2-dynamodb-testing"},{"location":"index.html#misk-service","text":"Bind Guava services with inter-service dependencies. Any service can depend on any other service. ServiceManager won\u2019t start a service until the services it depends on are running.","title":"misk-service"},{"location":"index.html#misk-inject","text":"Integrates Guice with Kotlin. Extending KAbstractModule instead of Guice\u2019s AbstractModule lets you use KClass instead of java.lang.Class and other conveniences.","title":"misk-inject"},{"location":"index.html#misk-feature","text":"Runtime feature flags. misk-launchdarkly is the reference implementation.","title":"misk-feature"},{"location":"index.html#misk-jobqueue","text":"A job queue with a high quality fake. AwsSqsJobQueueModule from misk-aws is the reference implementation.","title":"misk-jobqueue"},{"location":"index.html#misk-events","text":"An event publisher + consumer. There is no open source reference implementation at this time.","title":"misk-events"},{"location":"index.html#looking-for-misk-web","text":"Misk-Web powers the Misk Admin Dashboard with modular Typescript + React powered tabs. Check out Misk-Web !","title":"Looking for Misk-Web?"},{"location":"index.html#what-are-the-wisp-modules","text":"The wisp* modules contain no Dependency Injection based code (i.e. no Guice, etc). These modules should never refer to misk* modules, although misk* modules can (and should) use wisp* modules. Also, modules that are wisp*-testing will only be used in test scope in other wisp modules, never in the api/implementation scope. If you are refactoring code from misk into the wisp modules, you must not break any external Misk dependencies or apis. It is ok to deprecate items in misk to encourage eventual migration to wisp directly if desired. If your refactoring does not fit one of the existing wisp modules, create a new module. For now, it is preferred to have many small modules rather than larger conglomerate modules requiring many different dependencies. It should be considered that wisp will be volatile for sometime with the potential for a lot of changes, additions, etc. Misk apps should use wisp modules directly with caution as breaking changes might be required.","title":"What are the wisp* modules?"},{"location":"actions.html","text":"Actions \u00b6 Actions are Misk\u2019s unit for an endpoint. Misk lets you make HTTP actions, and gRPC actions via Wire . Web Actions \u00b6 Below are some example Web action declarations. Note that many of the annotations are optional. GET: @Singleton class HelloWebAction @Inject constructor () : WebAction { @Get ( \"/hello/{name}\" ) // Enclose path parameters in {} @ResponseContentType ( MediaTypes . APPLICATION_JSON ) @Authenticated ( services = [ \"my-other-app\" ] , capabilities = [ \"my-app_owners\" ] ) fun hello ( // Use @PathParam with the name of the param. Required if there's a param in the path pattern. @PathParam name : String , // RequestHeaders is optional: @RequestHeaders headers : Headers , // QueryParams are optional: @QueryParam nickName : String? , // e.g. /hello/abc?nickName=def @QueryParam greetings : List < String >? // e.g. /hello/abc?greetings=def&greetings=ghi ): HelloResponse { return HelloResponse ( name ) } } POST: @Singleton class HelloWebPostAction @Inject constructor () : WebAction { @Post ( \"/hello/{name}\" ) @RequestContentType ( MediaTypes . APPLICATION_JSON ) @ResponseContentType ( MediaTypes . APPLICATION_JSON ) @Authenticated ( services = [ \"my-other-app\" ] , capabilities = [ \"my-app_owners\" ] ) fun hello ( @PathParam name : String , // RequestBody is optional, and is automatically deserialized to the provided type. @RequestBody body : PostBody ): HelloPostResponse { return HelloPostResponse ( body . greeting , name ) } } data class HelloPostResponse ( val greeting : String , val name : String ) data class PostBody ( val greeting : String ) Setting up HTTP actions \u00b6 Install the action into a module: class HelloModule : KAbstractModule () { override fun configure () { install ( WebActionModule . create < HelloWebAction > ()) install ( WebActionModule . create < HelloWebPostAction > ()) } } And then put that module onto the top level MiskApplication . fun main ( args : Array < String > ) { MiskApplication ( // ... HelloModule (), // new! ). run ( args ) } Response type \u00b6 If you change the action\u2019s response type to Response<T> , it gives you better control over the response status code and headers. @Singleton class HelloWebResponseAction @Inject constructor () : WebAction { @Get ( \"/hello_but_203/{name}\" ) @ResponseContentType ( MediaTypes . APPLICATION_JSON ) fun hello ( @PathParam name : String ): Response < HelloResponse > = Response ( statusCode = 203 , headers = headersOf (), body = HelloResponse () ) } It\u2019s also possible to throw exceptions that are mapped to status codes. @Singleton class HelloWebResponseAction @Inject constructor () : WebAction { @Get ( \"/no_access/{name}\" ) fun hello ( @PathParam name : String ): HelloResponse { throw UnauthenticatedException () } } gRPC Actions \u00b6 Misk has support for gRPC actions via the Wire protocol buffer (protobuf) library. To create a gRPC action, first define the relevant protos for your service. Let\u2019s say we\u2019re creating a GreeterService that exposes one API, Hello . Create this file in src/main/proto/hello.proto : syntax = \"proto2\" ; package squareup . cash.hello ; option java_package = \"com.squareup.protos.cash.hello\" ; message HelloRequest { optional string message = 1 ; } message HelloResponse { optional string message = 1 ; } service GreeterService { rpc Hello ( HelloRequest ) returns ( HelloResponse ) {} } Next, in your project\u2019s build file (for this example, build.gradle.kts ), add a dependency on the wire plugin: plugins { id(\"com.squareup.wire\") } Add the following configuration to generate the gRPC interfaces for your service: wire { sourcePath { srcDir(\"src/main/proto\") } kotlin { include(\"squareup.cash.hello.GreeterService\") rpcCallStyle = \"blocking\" rpcRole = \"server\" singleMethodServices = true } java { } } Finally, implement and bind your gRPC action. GreeterServiceHelloBlockingServer is generated by Wire. @Singleton class HelloGrpcAction @Inject internal constructor () : GreeterServiceHelloBlockingServer , WebAction { @Unauthorized override fun Hello ( request : HelloRequest ): HelloResponse { return HelloResponse ( \"message\" ) } } // This module binds HelloGrpcAction. class GreeterActionModule : KAbstractModule () { override fun configure () { install ( WebActionModule . create < HelloGrpcAction > ()) } } Creating a gRPC action automatically creates a JSON endpoint with all of the same annotations in the path defined by the ...BlockingServer , typically /<package>.<service name>/<rpc name> . You can also create a second class that extends WebAction to customize this further. Read more about HTTP actions in Web Actions . If you\u2019re building both a gRPC and a HTTP action, a common pattern is to have them both use a common dependency: @Singleton class HelloGrpcAction @Inject constructor ( val greeter : Greeter ) : GreeterServiceHelloBlockingServer , WebAction { @Unauthorized override fun hello () = HelloResponse ( greeter . greet ()) } @Singleton class HelloWebAction @Inject constructor ( val greeter : Greeter ) : WebAction { @Unauthorized @Get ( \"/hello\" ) @ResponseContentType ( MediaTypes . APPLICATION_JSON ) fun hello () = HelloResponse ( greeter . greet ()) } @Singleton class Greeter @Inject constructor () { fun greet () = \"Hello world\" } ActionScoped \u00b6 ActionScoped gives an action access to context produced by the action\u2019s interceptors. Misk has a few ActionScoped items built in: MiskCaller - access derived authorization details HttpCall - access lower level HTTP details, e.g. request headers","title":"Actions"},{"location":"actions.html#actions","text":"Actions are Misk\u2019s unit for an endpoint. Misk lets you make HTTP actions, and gRPC actions via Wire .","title":"Actions"},{"location":"actions.html#web-actions","text":"Below are some example Web action declarations. Note that many of the annotations are optional. GET: @Singleton class HelloWebAction @Inject constructor () : WebAction { @Get ( \"/hello/{name}\" ) // Enclose path parameters in {} @ResponseContentType ( MediaTypes . APPLICATION_JSON ) @Authenticated ( services = [ \"my-other-app\" ] , capabilities = [ \"my-app_owners\" ] ) fun hello ( // Use @PathParam with the name of the param. Required if there's a param in the path pattern. @PathParam name : String , // RequestHeaders is optional: @RequestHeaders headers : Headers , // QueryParams are optional: @QueryParam nickName : String? , // e.g. /hello/abc?nickName=def @QueryParam greetings : List < String >? // e.g. /hello/abc?greetings=def&greetings=ghi ): HelloResponse { return HelloResponse ( name ) } } POST: @Singleton class HelloWebPostAction @Inject constructor () : WebAction { @Post ( \"/hello/{name}\" ) @RequestContentType ( MediaTypes . APPLICATION_JSON ) @ResponseContentType ( MediaTypes . APPLICATION_JSON ) @Authenticated ( services = [ \"my-other-app\" ] , capabilities = [ \"my-app_owners\" ] ) fun hello ( @PathParam name : String , // RequestBody is optional, and is automatically deserialized to the provided type. @RequestBody body : PostBody ): HelloPostResponse { return HelloPostResponse ( body . greeting , name ) } } data class HelloPostResponse ( val greeting : String , val name : String ) data class PostBody ( val greeting : String )","title":"Web Actions"},{"location":"actions.html#setting-up-http-actions","text":"Install the action into a module: class HelloModule : KAbstractModule () { override fun configure () { install ( WebActionModule . create < HelloWebAction > ()) install ( WebActionModule . create < HelloWebPostAction > ()) } } And then put that module onto the top level MiskApplication . fun main ( args : Array < String > ) { MiskApplication ( // ... HelloModule (), // new! ). run ( args ) }","title":"Setting up HTTP actions"},{"location":"actions.html#response-type","text":"If you change the action\u2019s response type to Response<T> , it gives you better control over the response status code and headers. @Singleton class HelloWebResponseAction @Inject constructor () : WebAction { @Get ( \"/hello_but_203/{name}\" ) @ResponseContentType ( MediaTypes . APPLICATION_JSON ) fun hello ( @PathParam name : String ): Response < HelloResponse > = Response ( statusCode = 203 , headers = headersOf (), body = HelloResponse () ) } It\u2019s also possible to throw exceptions that are mapped to status codes. @Singleton class HelloWebResponseAction @Inject constructor () : WebAction { @Get ( \"/no_access/{name}\" ) fun hello ( @PathParam name : String ): HelloResponse { throw UnauthenticatedException () } }","title":"Response type"},{"location":"actions.html#grpc-actions","text":"Misk has support for gRPC actions via the Wire protocol buffer (protobuf) library. To create a gRPC action, first define the relevant protos for your service. Let\u2019s say we\u2019re creating a GreeterService that exposes one API, Hello . Create this file in src/main/proto/hello.proto : syntax = \"proto2\" ; package squareup . cash.hello ; option java_package = \"com.squareup.protos.cash.hello\" ; message HelloRequest { optional string message = 1 ; } message HelloResponse { optional string message = 1 ; } service GreeterService { rpc Hello ( HelloRequest ) returns ( HelloResponse ) {} } Next, in your project\u2019s build file (for this example, build.gradle.kts ), add a dependency on the wire plugin: plugins { id(\"com.squareup.wire\") } Add the following configuration to generate the gRPC interfaces for your service: wire { sourcePath { srcDir(\"src/main/proto\") } kotlin { include(\"squareup.cash.hello.GreeterService\") rpcCallStyle = \"blocking\" rpcRole = \"server\" singleMethodServices = true } java { } } Finally, implement and bind your gRPC action. GreeterServiceHelloBlockingServer is generated by Wire. @Singleton class HelloGrpcAction @Inject internal constructor () : GreeterServiceHelloBlockingServer , WebAction { @Unauthorized override fun Hello ( request : HelloRequest ): HelloResponse { return HelloResponse ( \"message\" ) } } // This module binds HelloGrpcAction. class GreeterActionModule : KAbstractModule () { override fun configure () { install ( WebActionModule . create < HelloGrpcAction > ()) } } Creating a gRPC action automatically creates a JSON endpoint with all of the same annotations in the path defined by the ...BlockingServer , typically /<package>.<service name>/<rpc name> . You can also create a second class that extends WebAction to customize this further. Read more about HTTP actions in Web Actions . If you\u2019re building both a gRPC and a HTTP action, a common pattern is to have them both use a common dependency: @Singleton class HelloGrpcAction @Inject constructor ( val greeter : Greeter ) : GreeterServiceHelloBlockingServer , WebAction { @Unauthorized override fun hello () = HelloResponse ( greeter . greet ()) } @Singleton class HelloWebAction @Inject constructor ( val greeter : Greeter ) : WebAction { @Unauthorized @Get ( \"/hello\" ) @ResponseContentType ( MediaTypes . APPLICATION_JSON ) fun hello () = HelloResponse ( greeter . greet ()) } @Singleton class Greeter @Inject constructor () { fun greet () = \"Hello world\" }","title":"gRPC Actions"},{"location":"actions.html#actionscoped","text":"ActionScoped gives an action access to context produced by the action\u2019s interceptors. Misk has a few ActionScoped items built in: MiskCaller - access derived authorization details HttpCall - access lower level HTTP details, e.g. request headers","title":"ActionScoped"},{"location":"changelog.html","text":"Change Log \u00b6 Version 0.18.0 (2021-06-28) \u00b6 Unstable public release. Version 0.17.1 (2021-04-29) \u00b6 Unstable public release. Version 0.17.0 (2021-04-28) \u00b6 Unstable public release. Version 0.16.0 (2020-12-17) \u00b6 Unstable public release. Version 0.15.0 (2020-12-03) \u00b6 Unstable public release. Version 0.14.0 (2020-11-12) \u00b6 Unstable public release. Version 0.13.0 (2020-07-16) \u00b6 Unstable public release. Version 0.12.0 (2020-05-06) \u00b6 Unstable public release. Version 0.11.0 (2020-02-25) \u00b6 Unstable public release. Version 0.10.0 (2019-01-21) \u00b6 Unstable public release. Version 0.9.0 (2019-12-06) \u00b6 Unstable public release. Version 0.8.0 (2019-10-22) \u00b6 Unstable public release. Version 0.7.0 (2019-08-26) \u00b6 Unstable public release. Version 0.2.5 (2018-06-11) \u00b6 New \u00b6 Cluster interface and DataSourceCluster bindings Add a JPAEntityModule for binding entities for a DataSource Hook up raw Hibernate APIs Use JPA entity types in HibernateModule. Introduce FakeResourceLoader SchemaMigrator for running and tracking schema migrations. Update Misk version in Dockerfiles to 0.2.5 Drop support for unqualified datasources. move exemplars into sample directory in preparation for more of them Make all Kotlin warnings build errors Allow services to specify dependencies on other services. Fast fail on dependency cycles. jre8 was deprecated for kotlin 1.2 Early types for the Transacter APIs Queries in the Misk Hibernate API. Implement Query with dynamic proxies and reflection Offer strict validation and nice errors in ReflectionQueryFactory Log the reasons why liveness/readiness checks fail URL shortener sample Support more operators in Query Wire up Hibernate event listeners through Guice. HibernateTestingModule. Switch tests to MySQL Rollback transactions on exceptions Delete DataSourceModule. It\u2019s redundant with HibernateModule. Support ByteString columns Misk containers should not run as root DbTimestampedEntity Fix \u00b6 Don\u2019t inject until after services are started. Tidy up some test cases. Fix a missing dependency in exemplar Don\u2019t use KubernetesHealthCheck with LocalClusterConnector Version 0.2.4 (2018-05-14) \u00b6 New \u00b6 Add support for protobuf over HTTP Cloudwatch Trail logging support Add retry() helper Add Backoff/ExponentialBackoff MiskCaller and authz support Adds a DataSourceModule Add support for logging to StackDriver Fix \u00b6 Move static resources from web root into resources Move web-specific NetworkInterceptor into web Remove use of instance metadata endpoints Version 0.2.3 (2018-04-27) \u00b6 New \u00b6 Add kubernetes java client so that hosts can know their peers Use EventRouter for exemplarchat. Add a static resource mapper Create a cluster wide admin healthcheck page Change CacheBuilder to be mapOf since no concurrency Adds a healthcheck for the kubernetes client Adds a local cluster connector so that development functions Fix \u00b6 Don\u2019t treat assembly as a release when running in CI Fix tracing startup when none is configured Various event router fixes and refactorings Version 0.2.1 (2018-03-26) \u00b6 New \u00b6 Remove unnecessary check from uploadArchives task (#149) Add a RELEASING.md to outline misk release process (#150) Move chat into its own example project. (#146) Introduce event router api (#147) Add basic frontend for exemplarchat Add MoshiJsonAdapters and SocketEventJsonAdapter (#151) Expose client certificates as action scoped vars (#141) Add ClusterMapper interface, refactor RealEventRouter to event loop (#155) Handle cluster changes (#156) More tests to exercise EventRouter behaviors. (#158) Support loading keystores from combined private key and certificate chain PEM files (#157) Fix \u00b6 Fix event router tests (#159) Version 0.2.0 (2018-03-13) \u00b6 New \u00b6 Add _status action Split Interceptor into NetworkInterceptor and ApplicationInterceptor Introduce websocket support in misk Add tracing interceptor for web actions Add ActionExceptionLogLevelConfig to control log levels for ActionExceptions Allow binding an ExceptionMapper by an Exception type Google Cloud Datastore and Cloud Storage support Add backend for Zipkin tracer Add MiskTracer to facilitate ad-hoc method tracing Retrofit based typed client support (#112) Enable SSL for both clients and servers (#111) Support application/x-www-form-urlencoded parameters (#97) Add API for injecting dynamically sourced flags Add metrics backend for SignalFx Add support for commands Upgrade to Gradle 4.5 to support Java 9; add Java 9 to test matrix Allow customized exception mappings Add support for query strings in urls Fix \u00b6 Eliminate redundant _config suffix in config files Support Web actions that return Nothing Use proper snake-casing for default property names Fix Java path param dispatching Fix NotFoundAction handling (#134) Fix wildcard based content routing Fix a bug when a user-defined Interceptor returns a Response object Fix up Java translation from Moshi. (#107) Version 0.1.0 (2018-02-01) \u00b6 Initial release.","title":"Change Log"},{"location":"changelog.html#change-log","text":"","title":"Change Log"},{"location":"changelog.html#version-0180-2021-06-28","text":"Unstable public release.","title":"Version 0.18.0 (2021-06-28)"},{"location":"changelog.html#version-0171-2021-04-29","text":"Unstable public release.","title":"Version 0.17.1 (2021-04-29)"},{"location":"changelog.html#version-0170-2021-04-28","text":"Unstable public release.","title":"Version 0.17.0 (2021-04-28)"},{"location":"changelog.html#version-0160-2020-12-17","text":"Unstable public release.","title":"Version 0.16.0 (2020-12-17)"},{"location":"changelog.html#version-0150-2020-12-03","text":"Unstable public release.","title":"Version 0.15.0 (2020-12-03)"},{"location":"changelog.html#version-0140-2020-11-12","text":"Unstable public release.","title":"Version 0.14.0 (2020-11-12)"},{"location":"changelog.html#version-0130-2020-07-16","text":"Unstable public release.","title":"Version 0.13.0 (2020-07-16)"},{"location":"changelog.html#version-0120-2020-05-06","text":"Unstable public release.","title":"Version 0.12.0 (2020-05-06)"},{"location":"changelog.html#version-0110-2020-02-25","text":"Unstable public release.","title":"Version 0.11.0 (2020-02-25)"},{"location":"changelog.html#version-0100-2019-01-21","text":"Unstable public release.","title":"Version 0.10.0 (2019-01-21)"},{"location":"changelog.html#version-090-2019-12-06","text":"Unstable public release.","title":"Version 0.9.0 (2019-12-06)"},{"location":"changelog.html#version-080-2019-10-22","text":"Unstable public release.","title":"Version 0.8.0 (2019-10-22)"},{"location":"changelog.html#version-070-2019-08-26","text":"Unstable public release.","title":"Version 0.7.0 (2019-08-26)"},{"location":"changelog.html#version-025-2018-06-11","text":"","title":"Version 0.2.5 (2018-06-11)"},{"location":"changelog.html#new","text":"Cluster interface and DataSourceCluster bindings Add a JPAEntityModule for binding entities for a DataSource Hook up raw Hibernate APIs Use JPA entity types in HibernateModule. Introduce FakeResourceLoader SchemaMigrator for running and tracking schema migrations. Update Misk version in Dockerfiles to 0.2.5 Drop support for unqualified datasources. move exemplars into sample directory in preparation for more of them Make all Kotlin warnings build errors Allow services to specify dependencies on other services. Fast fail on dependency cycles. jre8 was deprecated for kotlin 1.2 Early types for the Transacter APIs Queries in the Misk Hibernate API. Implement Query with dynamic proxies and reflection Offer strict validation and nice errors in ReflectionQueryFactory Log the reasons why liveness/readiness checks fail URL shortener sample Support more operators in Query Wire up Hibernate event listeners through Guice. HibernateTestingModule. Switch tests to MySQL Rollback transactions on exceptions Delete DataSourceModule. It\u2019s redundant with HibernateModule. Support ByteString columns Misk containers should not run as root DbTimestampedEntity","title":"New"},{"location":"changelog.html#fix","text":"Don\u2019t inject until after services are started. Tidy up some test cases. Fix a missing dependency in exemplar Don\u2019t use KubernetesHealthCheck with LocalClusterConnector","title":"Fix"},{"location":"changelog.html#version-024-2018-05-14","text":"","title":"Version 0.2.4 (2018-05-14)"},{"location":"changelog.html#new_1","text":"Add support for protobuf over HTTP Cloudwatch Trail logging support Add retry() helper Add Backoff/ExponentialBackoff MiskCaller and authz support Adds a DataSourceModule Add support for logging to StackDriver","title":"New"},{"location":"changelog.html#fix_1","text":"Move static resources from web root into resources Move web-specific NetworkInterceptor into web Remove use of instance metadata endpoints","title":"Fix"},{"location":"changelog.html#version-023-2018-04-27","text":"","title":"Version 0.2.3 (2018-04-27)"},{"location":"changelog.html#new_2","text":"Add kubernetes java client so that hosts can know their peers Use EventRouter for exemplarchat. Add a static resource mapper Create a cluster wide admin healthcheck page Change CacheBuilder to be mapOf since no concurrency Adds a healthcheck for the kubernetes client Adds a local cluster connector so that development functions","title":"New"},{"location":"changelog.html#fix_2","text":"Don\u2019t treat assembly as a release when running in CI Fix tracing startup when none is configured Various event router fixes and refactorings","title":"Fix"},{"location":"changelog.html#version-021-2018-03-26","text":"","title":"Version 0.2.1 (2018-03-26)"},{"location":"changelog.html#new_3","text":"Remove unnecessary check from uploadArchives task (#149) Add a RELEASING.md to outline misk release process (#150) Move chat into its own example project. (#146) Introduce event router api (#147) Add basic frontend for exemplarchat Add MoshiJsonAdapters and SocketEventJsonAdapter (#151) Expose client certificates as action scoped vars (#141) Add ClusterMapper interface, refactor RealEventRouter to event loop (#155) Handle cluster changes (#156) More tests to exercise EventRouter behaviors. (#158) Support loading keystores from combined private key and certificate chain PEM files (#157)","title":"New"},{"location":"changelog.html#fix_3","text":"Fix event router tests (#159)","title":"Fix"},{"location":"changelog.html#version-020-2018-03-13","text":"","title":"Version 0.2.0 (2018-03-13)"},{"location":"changelog.html#new_4","text":"Add _status action Split Interceptor into NetworkInterceptor and ApplicationInterceptor Introduce websocket support in misk Add tracing interceptor for web actions Add ActionExceptionLogLevelConfig to control log levels for ActionExceptions Allow binding an ExceptionMapper by an Exception type Google Cloud Datastore and Cloud Storage support Add backend for Zipkin tracer Add MiskTracer to facilitate ad-hoc method tracing Retrofit based typed client support (#112) Enable SSL for both clients and servers (#111) Support application/x-www-form-urlencoded parameters (#97) Add API for injecting dynamically sourced flags Add metrics backend for SignalFx Add support for commands Upgrade to Gradle 4.5 to support Java 9; add Java 9 to test matrix Allow customized exception mappings Add support for query strings in urls","title":"New"},{"location":"changelog.html#fix_4","text":"Eliminate redundant _config suffix in config files Support Web actions that return Nothing Use proper snake-casing for default property names Fix Java path param dispatching Fix NotFoundAction handling (#134) Fix wildcard based content routing Fix a bug when a user-defined Interceptor returns a Response object Fix up Java translation from Moshi. (#107)","title":"Fix"},{"location":"changelog.html#version-010-2018-02-01","text":"Initial release.","title":"Version 0.1.0 (2018-02-01)"},{"location":"clients.html","text":"Clients \u00b6 Misk provides configurable HTTP clients built on top of OkHttp and Retrofit , and gRPC clients built on top of Wire . HTTP Clients \u00b6 Config \u00b6 Set up a Config object (and use MiskConfig.load to load config from a YAML file): data class MyServiceConfig ( val http_clients : HttpClientsConfig , // ... ) : Config In the configuration YAML, specify the target service\u2019s address: http_clients : ... endpoints : ... greeter : { url : \"https://hello.example.com\" } Create an OkHttpClient \u00b6 Use HttpClientModule : class MyClientModule : KAbstractModule () { override fun configure () { install ( HttpClientModule ( // Corresponds to the YAML config. Requires a bound HttpClientsConfig name = \"greeter\" , // Optional annotation to define how you inject your client dependency annotation = Names . named ( \"greeterHttp\" ) )) } } This binds an OkHttpClient that you can inject: class MyClient @Inject constructor ( @Named ( \"greeterHttp\" ) val client : OkHttpClient ) { fun callGreeter () { val response = client . newCall ( Request . Builder () . url ( \"http://localhost:8080/hello\" ) . build () ). execute () } } Create typed clients with Retrofit \u00b6 First, create a Retrofit interface. See the Retrofit docs for more details. interface GreeterApi { @POST ( \"/hello\" ) @Headers ( value = [ \"accept: application/json\" ] ) fun hello ( @Body request : HelloRequest ): Call < HelloResponse > } Next, install a TypedHttpClientModule with this interface. class HelloClientModule : KAbstractModule () { override fun configure () { install ( TypedHttpClientModule ( GreeterApi :: class , // Corresponds to the YAML config. Requires a bound HttpClientsConfig name = \"greeter\" , // Optional annotation to define how you inject your client dependency annotation = Names . named ( \"greeterApi\" ) ) ) } } Now you can inject an implementation of this client: @Singleton class MyApiClient @Inject constructor ( @Named ( \"greeterApi\" ) private val api : GreeterApi ) { fun hello ( message : String ): String { val response = api . hello ( HelloRequest ( message = message ) ). execute () } } gRPC Clients \u00b6 First, include the auto-generated gRPC client code at the caller module using the Wire Gradle plugin. plugins { id(\"com.squareup.wire\") } wire { sourcePath { srcDir(\"src/main/proto\") } // Generate Kotlin for the gRPC client API. kotlin { // Set this to false if you're generating client and server interfaces in one module exclusive = false includes (\"squareup.cash.hello.GreeterService\") rpcRole = \"client\" } java { } } Next, bind your client in code in a similar fashion to an HTTP client. Set up client configuration, as described in Config . Then, bind a GrpcClientModule : class GreeterClientModule : KAbstractModule () { override fun configure () { install ( GrpcClientModule . create < GreeterServiceClient , GrpcGreeterServiceClient > ( // Corresponds to the YAML config. Requires a bound HttpClientsConfig name = \"greeter\" , // Optional annotation to define how you inject your client dependency annotation = Names . named ( \"greeterGrpc\" ) )) } } With this all setup, you can now inject your client in source code and connect via gRPC: internal class GrpcGreeterServiceClient @Inject internal constructor ( @Named ( \"greeterGrpc\" ) private val greeterGrpc : GreeterServiceClient ) { fun get ( message : String ) { val response = greeterGrpc . Hello (). executeBlocking ( HelloRequest ( message )) // ... do something with the response here } }","title":"Clients"},{"location":"clients.html#clients","text":"Misk provides configurable HTTP clients built on top of OkHttp and Retrofit , and gRPC clients built on top of Wire .","title":"Clients"},{"location":"clients.html#http-clients","text":"","title":"HTTP Clients"},{"location":"clients.html#config","text":"Set up a Config object (and use MiskConfig.load to load config from a YAML file): data class MyServiceConfig ( val http_clients : HttpClientsConfig , // ... ) : Config In the configuration YAML, specify the target service\u2019s address: http_clients : ... endpoints : ... greeter : { url : \"https://hello.example.com\" }","title":"Config"},{"location":"clients.html#create-an-okhttpclient","text":"Use HttpClientModule : class MyClientModule : KAbstractModule () { override fun configure () { install ( HttpClientModule ( // Corresponds to the YAML config. Requires a bound HttpClientsConfig name = \"greeter\" , // Optional annotation to define how you inject your client dependency annotation = Names . named ( \"greeterHttp\" ) )) } } This binds an OkHttpClient that you can inject: class MyClient @Inject constructor ( @Named ( \"greeterHttp\" ) val client : OkHttpClient ) { fun callGreeter () { val response = client . newCall ( Request . Builder () . url ( \"http://localhost:8080/hello\" ) . build () ). execute () } }","title":"Create an OkHttpClient"},{"location":"clients.html#create-typed-clients-with-retrofit","text":"First, create a Retrofit interface. See the Retrofit docs for more details. interface GreeterApi { @POST ( \"/hello\" ) @Headers ( value = [ \"accept: application/json\" ] ) fun hello ( @Body request : HelloRequest ): Call < HelloResponse > } Next, install a TypedHttpClientModule with this interface. class HelloClientModule : KAbstractModule () { override fun configure () { install ( TypedHttpClientModule ( GreeterApi :: class , // Corresponds to the YAML config. Requires a bound HttpClientsConfig name = \"greeter\" , // Optional annotation to define how you inject your client dependency annotation = Names . named ( \"greeterApi\" ) ) ) } } Now you can inject an implementation of this client: @Singleton class MyApiClient @Inject constructor ( @Named ( \"greeterApi\" ) private val api : GreeterApi ) { fun hello ( message : String ): String { val response = api . hello ( HelloRequest ( message = message ) ). execute () } }","title":"Create typed clients with Retrofit"},{"location":"clients.html#grpc-clients","text":"First, include the auto-generated gRPC client code at the caller module using the Wire Gradle plugin. plugins { id(\"com.squareup.wire\") } wire { sourcePath { srcDir(\"src/main/proto\") } // Generate Kotlin for the gRPC client API. kotlin { // Set this to false if you're generating client and server interfaces in one module exclusive = false includes (\"squareup.cash.hello.GreeterService\") rpcRole = \"client\" } java { } } Next, bind your client in code in a similar fashion to an HTTP client. Set up client configuration, as described in Config . Then, bind a GrpcClientModule : class GreeterClientModule : KAbstractModule () { override fun configure () { install ( GrpcClientModule . create < GreeterServiceClient , GrpcGreeterServiceClient > ( // Corresponds to the YAML config. Requires a bound HttpClientsConfig name = \"greeter\" , // Optional annotation to define how you inject your client dependency annotation = Names . named ( \"greeterGrpc\" ) )) } } With this all setup, you can now inject your client in source code and connect via gRPC: internal class GrpcGreeterServiceClient @Inject internal constructor ( @Named ( \"greeterGrpc\" ) private val greeterGrpc : GreeterServiceClient ) { fun get ( message : String ) { val response = greeterGrpc . Hello (). executeBlocking ( HelloRequest ( message )) // ... do something with the response here } }","title":"gRPC Clients"},{"location":"contributing.html","text":"Contributing \u00b6 If you would like to contribute code to this project you can do so through GitHub by forking the repository and sending a pull request. When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible. Before your code can be accepted into the project you must also sign the Individual Contributor License Agreement (CLA) .","title":"Contributing"},{"location":"contributing.html#contributing","text":"If you would like to contribute code to this project you can do so through GitHub by forking the repository and sending a pull request. When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible. Before your code can be accepted into the project you must also sign the Individual Contributor License Agreement (CLA) .","title":"Contributing"},{"location":"getting-started.html","text":"Getting Started \u00b6 Misk is an application container for Kotlin. It provides libraries for common application concerns like serving endpoints, caching, queueing, persistence, distributed leasing, and clustering. The easiest way to get started is to copy the Misk exemplar project . This exemplar contains a Misk web app with the requisite dependencies. Start the service \u00b6 Run ExemplarService#main , or use gradle to run: ./gradlew run Set up bindings \u00b6 A Misk application is wired together using Guice . Features of Misk are managed by Guava Services , provided by Guice Modules , and configured using Misk Config s. For example, if your application needs a Redis cache, you would install RedisModule , and add a corresponding RedisConfig to your application\u2019s config YAML. Misk is unopinionated about which of its features your application chooses to use, and offers multiple alternatives for some common concerns. The main function \u00b6 The entry point to every Misk application is MiskApplication : fun main ( args : Array < String > ) { val environment = Environment . fromEnvironmentVariable () val env = Env ( environment . name ) val config = MiskConfig . load < ExemplarConfig > ( \"exemplar\" , env ) MiskApplication ( MiskRealServiceModule (), MiskWebModule ( config . web ), ExemplarAccessModule (), ExemplarWebActionsModule (), // e.g. to add an admin dashboard: AdminDashboardModule ( isDevelopment = true ) ). run ( args ) } Set up configuration \u00b6 Every Misk application has a top-level class that implements the Config marker interface. This Config encapsulates all of the configuration for the app. By default, configs are loaded from YAML files at the app\u2019s resources root. Each value in the config must have a corresponding entry in the YAML file. Modules in Misk that require configuration usually have their own Config objects. If you want to use the Module in your app, you should add them as properties of your app\u2019s Config object, for example: data class MyAppConfig ( val my_config_value : String , val http_clients : HttpClientsConfig ) : Config This then corresponds to a YAML file: my_config_value : \"this value\" http_clients : # ... config Config resolution \u00b6 Configs are loaded using the app\u2019s resource loader. The config loader looks for files in the following order by default: $SERVICE_NAME-common.yaml $SERVICE_NAME-$ENVIRONMENT.yaml At least one of $SERVICE_NAME-common.yaml or $SERVICE_NAME-$ENVIRONMENT.yaml must exist. Values from later files take precedence. Write an endpoint \u00b6 Actions are Misk\u2019s unit for an endpoint. Actions inherit from WebAction and have a @Get / @Post annotation: @Singleton class HelloWebAction @Inject constructor () : WebAction { @Get ( \"/hello/{name}\" ) @Unauthenticated @ResponseContentType ( MediaTypes . APPLICATION_JSON ) fun hello ( @PathParam name : String , ): HelloResponse { return HelloResponse ( name ) } } data class HelloResponse ( val name : String ) Read more about this in Actions . Test the endpoint \u00b6 You can unit test directly: class HelloWebActionTest { @Test fun `tests the unit` () { assertThat ( HelloWebAction (). hello ( \"sandy\" , headersOf (), null , null )) . isEqualTo ( HelloResponse ( \"sandy\" )) } } Integration tests set up a module for you, and adds an injector to the test class. You can use WebTestingModule to set up a running web server and make WebTestClient available. @MiskTest ( startService = true ) class HelloWebActionTest { @MiskTestModule val module = TestModule () @Inject private lateinit var webTestClient : WebTestClient @Test fun `tests a request being made` () { val hello = webTestClient . get ( \"/hello/sandy\" ) assertThat ( hello . response . code ). isEqualTo ( 200 ) assertThat ( hello . parseJson < HelloResponse > ()) . isEqualTo ( HelloResponse ( \"sandy\" )) } class TestModule : KAbstractModule () { override fun configure () { install ( WebTestingModule ()) install ( HelloModule ()) } } } Create services \u00b6 The main function is just an entry point for wiring together components of Misk. Long-running threads that do the real work are written as Services using Guava\u2019s Service Framework . A Service is bound by installing a ServiceModule , for example: class MyServiceModule : KAbstractModule () { override fun configure () { install ( ServiceModule < MyService > ()) } } Notice that in this examplewe use KAbstractModule() , Misk\u2019s Kotlin wrapper for AbstractModule , as our base Module class. MiskApplication will start all services installed by a ServiceModule . If there is a Service that must be run after a other set of Services have started, the service dependency graph should be specified at the installation site. For example, if you are operating a movie service, which needs a database: class MovieServiceModule : KAbstractModule () { override fun configure () { // Note that DatabaseService does not have to be installed here. // It could be installed in another KAbstractModule if preferred. install ( ServiceModule < DatabaseService > ()) // Multiple dependencies can be added by chaining calls to `dependsOn`. install ( ServiceModule < MovieService > () . dependsOn < DatabaseService > ()) } } See ServiceModule for more details about the service graph. When writing Services , always prefer to inherit from one of the common base classes: AbstractIdleService , AbstractScheduledService , or AbstractExecutionThreadService . See Services Explained for details. If your service is can make use of exponential backoff and scheduling, take a look at using RepeatedTaskQueue .","title":"Getting Started"},{"location":"getting-started.html#getting-started","text":"Misk is an application container for Kotlin. It provides libraries for common application concerns like serving endpoints, caching, queueing, persistence, distributed leasing, and clustering. The easiest way to get started is to copy the Misk exemplar project . This exemplar contains a Misk web app with the requisite dependencies.","title":"Getting Started"},{"location":"getting-started.html#start-the-service","text":"Run ExemplarService#main , or use gradle to run: ./gradlew run","title":"Start the service"},{"location":"getting-started.html#set-up-bindings","text":"A Misk application is wired together using Guice . Features of Misk are managed by Guava Services , provided by Guice Modules , and configured using Misk Config s. For example, if your application needs a Redis cache, you would install RedisModule , and add a corresponding RedisConfig to your application\u2019s config YAML. Misk is unopinionated about which of its features your application chooses to use, and offers multiple alternatives for some common concerns.","title":"Set up bindings"},{"location":"getting-started.html#the-main-function","text":"The entry point to every Misk application is MiskApplication : fun main ( args : Array < String > ) { val environment = Environment . fromEnvironmentVariable () val env = Env ( environment . name ) val config = MiskConfig . load < ExemplarConfig > ( \"exemplar\" , env ) MiskApplication ( MiskRealServiceModule (), MiskWebModule ( config . web ), ExemplarAccessModule (), ExemplarWebActionsModule (), // e.g. to add an admin dashboard: AdminDashboardModule ( isDevelopment = true ) ). run ( args ) }","title":"The main function"},{"location":"getting-started.html#set-up-configuration","text":"Every Misk application has a top-level class that implements the Config marker interface. This Config encapsulates all of the configuration for the app. By default, configs are loaded from YAML files at the app\u2019s resources root. Each value in the config must have a corresponding entry in the YAML file. Modules in Misk that require configuration usually have their own Config objects. If you want to use the Module in your app, you should add them as properties of your app\u2019s Config object, for example: data class MyAppConfig ( val my_config_value : String , val http_clients : HttpClientsConfig ) : Config This then corresponds to a YAML file: my_config_value : \"this value\" http_clients : # ... config","title":"Set up configuration"},{"location":"getting-started.html#config-resolution","text":"Configs are loaded using the app\u2019s resource loader. The config loader looks for files in the following order by default: $SERVICE_NAME-common.yaml $SERVICE_NAME-$ENVIRONMENT.yaml At least one of $SERVICE_NAME-common.yaml or $SERVICE_NAME-$ENVIRONMENT.yaml must exist. Values from later files take precedence.","title":"Config resolution"},{"location":"getting-started.html#write-an-endpoint","text":"Actions are Misk\u2019s unit for an endpoint. Actions inherit from WebAction and have a @Get / @Post annotation: @Singleton class HelloWebAction @Inject constructor () : WebAction { @Get ( \"/hello/{name}\" ) @Unauthenticated @ResponseContentType ( MediaTypes . APPLICATION_JSON ) fun hello ( @PathParam name : String , ): HelloResponse { return HelloResponse ( name ) } } data class HelloResponse ( val name : String ) Read more about this in Actions .","title":"Write an endpoint"},{"location":"getting-started.html#test-the-endpoint","text":"You can unit test directly: class HelloWebActionTest { @Test fun `tests the unit` () { assertThat ( HelloWebAction (). hello ( \"sandy\" , headersOf (), null , null )) . isEqualTo ( HelloResponse ( \"sandy\" )) } } Integration tests set up a module for you, and adds an injector to the test class. You can use WebTestingModule to set up a running web server and make WebTestClient available. @MiskTest ( startService = true ) class HelloWebActionTest { @MiskTestModule val module = TestModule () @Inject private lateinit var webTestClient : WebTestClient @Test fun `tests a request being made` () { val hello = webTestClient . get ( \"/hello/sandy\" ) assertThat ( hello . response . code ). isEqualTo ( 200 ) assertThat ( hello . parseJson < HelloResponse > ()) . isEqualTo ( HelloResponse ( \"sandy\" )) } class TestModule : KAbstractModule () { override fun configure () { install ( WebTestingModule ()) install ( HelloModule ()) } } }","title":"Test the endpoint"},{"location":"getting-started.html#create-services","text":"The main function is just an entry point for wiring together components of Misk. Long-running threads that do the real work are written as Services using Guava\u2019s Service Framework . A Service is bound by installing a ServiceModule , for example: class MyServiceModule : KAbstractModule () { override fun configure () { install ( ServiceModule < MyService > ()) } } Notice that in this examplewe use KAbstractModule() , Misk\u2019s Kotlin wrapper for AbstractModule , as our base Module class. MiskApplication will start all services installed by a ServiceModule . If there is a Service that must be run after a other set of Services have started, the service dependency graph should be specified at the installation site. For example, if you are operating a movie service, which needs a database: class MovieServiceModule : KAbstractModule () { override fun configure () { // Note that DatabaseService does not have to be installed here. // It could be installed in another KAbstractModule if preferred. install ( ServiceModule < DatabaseService > ()) // Multiple dependencies can be added by chaining calls to `dependsOn`. install ( ServiceModule < MovieService > () . dependsOn < DatabaseService > ()) } } See ServiceModule for more details about the service graph. When writing Services , always prefer to inherit from one of the common base classes: AbstractIdleService , AbstractScheduledService , or AbstractExecutionThreadService . See Services Explained for details. If your service is can make use of exponential backoff and scheduling, take a look at using RepeatedTaskQueue .","title":"Create services"},{"location":"releasing-manual.html","text":"Manual Releasing Steps \u00b6 These should generally not be needed but are kept here for posterity. The CI auto-releasing in Github Actions should be sufficient, and is documented in the Releasing doc. Prerequisite: Sonatype (Maven Central) Account \u00b6 Create an account on the Sonatype issues site . Ask an existing publisher to open an issue requesting publishing permissions for misk projects. Prerequisite: GPG Keys \u00b6 Generate a GPG key (RSA, 4096 bit, 3650 day) expiry, or use an existing one. You should leave the password empty for this key. $ gpg --full-generate-key Upload the GPG keys to public servers: $ gpg --list-keys --keyid-format LONG /Users/johnbarber/.gnupg/pubring.kbx ------------------------------ pub rsa4096/XXXXXXXXXXXXXXXX 2019-07-16 [SC] [expires: 2029-07-13] YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY uid [ultimate] John Barber <jbarber@cash.app> sub rsa4096/ZZZZZZZZZZZZZZZZ 2019-07-16 [E] [expires: 2029-07-13] $ gpg --send-keys --keyserver keyserver.ubuntu.com XXXXXXXXXXXXXXXX Prerequisite: Gradle Properties \u00b6 Define publishing properties in ~/.gradle/gradle.properties : signing.keyId=1A2345F8 signing.password= signing.secretKeyRingFile=/Users/jwilson/.gnupg/secring.gpg signing.keyId is the GPG key\u2019s ID. Get it with this: $ gpg --list-keys --keyid-format SHORT signing.password is the password for this key. This might be empty! signing.secretKeyRingFile is the absolute path for secring.gpg . You may need to export this file manually with the following command where XXXXXXXX is the keyId above: $ gpg --keyring secring.gpg --export-secret-key XXXXXXXX > ~/.gnupg/secring.gpg Cutting a Release \u00b6 Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Set environment variables with your Sonatype credentials . export SONATYPE_NEXUS_USERNAME=johnbarber export SONATYPE_NEXUS_PASSWORD=`pbpaste` Update, build, and upload: sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"com.squareup.misk:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"com.squareup.misk:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -name \"README.md\"` miskweb ci-build -e ./gradlew clean uploadArchives Visit Sonatype Nexus to promote (close then release) the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a misk-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push && git push --tags","title":"Manual Releasing"},{"location":"releasing-manual.html#manual-releasing-steps","text":"These should generally not be needed but are kept here for posterity. The CI auto-releasing in Github Actions should be sufficient, and is documented in the Releasing doc.","title":"Manual Releasing Steps"},{"location":"releasing-manual.html#prerequisite-sonatype-maven-central-account","text":"Create an account on the Sonatype issues site . Ask an existing publisher to open an issue requesting publishing permissions for misk projects.","title":"Prerequisite: Sonatype (Maven Central) Account"},{"location":"releasing-manual.html#prerequisite-gpg-keys","text":"Generate a GPG key (RSA, 4096 bit, 3650 day) expiry, or use an existing one. You should leave the password empty for this key. $ gpg --full-generate-key Upload the GPG keys to public servers: $ gpg --list-keys --keyid-format LONG /Users/johnbarber/.gnupg/pubring.kbx ------------------------------ pub rsa4096/XXXXXXXXXXXXXXXX 2019-07-16 [SC] [expires: 2029-07-13] YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY uid [ultimate] John Barber <jbarber@cash.app> sub rsa4096/ZZZZZZZZZZZZZZZZ 2019-07-16 [E] [expires: 2029-07-13] $ gpg --send-keys --keyserver keyserver.ubuntu.com XXXXXXXXXXXXXXXX","title":"Prerequisite: GPG Keys"},{"location":"releasing-manual.html#prerequisite-gradle-properties","text":"Define publishing properties in ~/.gradle/gradle.properties : signing.keyId=1A2345F8 signing.password= signing.secretKeyRingFile=/Users/jwilson/.gnupg/secring.gpg signing.keyId is the GPG key\u2019s ID. Get it with this: $ gpg --list-keys --keyid-format SHORT signing.password is the password for this key. This might be empty! signing.secretKeyRingFile is the absolute path for secring.gpg . You may need to export this file manually with the following command where XXXXXXXX is the keyId above: $ gpg --keyring secring.gpg --export-secret-key XXXXXXXX > ~/.gnupg/secring.gpg","title":"Prerequisite: Gradle Properties"},{"location":"releasing-manual.html#cutting-a-release","text":"Update CHANGELOG.md . Set versions: export RELEASE_VERSION=X.Y.Z export NEXT_VERSION=X.Y.Z-SNAPSHOT Set environment variables with your Sonatype credentials . export SONATYPE_NEXUS_USERNAME=johnbarber export SONATYPE_NEXUS_PASSWORD=`pbpaste` Update, build, and upload: sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"com.squareup.misk:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"com.squareup.misk:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -name \"README.md\"` miskweb ci-build -e ./gradlew clean uploadArchives Visit Sonatype Nexus to promote (close then release) the artifact. Or drop it if there is a problem! Tag the release, prepare for the next one, and push to GitHub. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a misk-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push && git push --tags","title":"Cutting a Release"},{"location":"releasing.html","text":"Releasing \u00b6 Update CHANGELOG.md . Set versions: export RELEASE_VERSION=A.B.C export NEXT_VERSION=A.B.D-SNAPSHOT Update documentation and Gradle properties with RELEASE_VERSION sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"com.squareup.misk:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"com.squareup.misk:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -maxdepth 2 -name \"README.md\"` Tag the release and push to GitHub. Merge PR. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a misk-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" git push && git push --tags Trigger the \u201cPublish a release\u201d action manually. Wait until it completes, then visit Sonatype Nexus to promote (close then release) the artifact. Or drop it if there is a problem! Prepare for the next release and push to GitHub. Merge PR. sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push Draft a new release of A.B.C to trigger the \u201cPublish the mkdocs to gh-pages\u201d action. Troubleshooting \u00b6 If the github action fails, drop the artifacts from Sonatype and re run the job. You might need to delete the plugin off the JetBrains plugin portal first if the ubuntu job which publishes it already succeeded.","title":"Releasing"},{"location":"releasing.html#releasing","text":"Update CHANGELOG.md . Set versions: export RELEASE_VERSION=A.B.C export NEXT_VERSION=A.B.D-SNAPSHOT Update documentation and Gradle properties with RELEASE_VERSION sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$RELEASE_VERSION/g\" \\ gradle.properties sed -i \"\" \\ \"s/\\\"com.squareup.misk:\\([^\\:]*\\):[^\\\"]*\\\"/\\\"com.squareup.misk:\\1:$RELEASE_VERSION\\\"/g\" \\ `find . -maxdepth 2 -name \"README.md\"` Tag the release and push to GitHub. Merge PR. git commit -am \"Prepare for release $RELEASE_VERSION.\" git tag -a misk-$RELEASE_VERSION -m \"Version $RELEASE_VERSION\" git push && git push --tags Trigger the \u201cPublish a release\u201d action manually. Wait until it completes, then visit Sonatype Nexus to promote (close then release) the artifact. Or drop it if there is a problem! Prepare for the next release and push to GitHub. Merge PR. sed -i \"\" \\ \"s/VERSION_NAME=.*/VERSION_NAME=$NEXT_VERSION/g\" \\ gradle.properties git commit -am \"Prepare next development version.\" git push Draft a new release of A.B.C to trigger the \u201cPublish the mkdocs to gh-pages\u201d action.","title":"Releasing"},{"location":"releasing.html#troubleshooting","text":"If the github action fails, drop the artifacts from Sonatype and re run the job. You might need to delete the plugin off the JetBrains plugin portal first if the ubuntu job which publishes it already succeeded.","title":"Troubleshooting"},{"location":"0.x/misk/index.html","text":"misk Packages \u00b6 Name Summary misk misk.client misk.clustering.kubernetes misk.clustering.weights misk.concurrent misk.config misk.environment misk.flags misk.flags.memory misk.grpc misk.io misk.moshi misk.moshi.adapters misk.moshi.okio misk.moshi.time misk.okio misk.scope misk.scope.executor misk.security.authz misk.security.cert misk.security.keys misk.security.ssl misk.tasks misk.time misk.tracing misk.web misk.web.actions misk.web.dashboard misk.web.exceptions misk.web.formatter misk.web.interceptors misk.web.jetty misk.web.marshal misk.web.mdc misk.web.metadata misk.web.metadata.config misk.web.metadata.database misk.web.metadata.webaction misk.web.proxy misk.web.resources Index \u00b6 All Types","title":"misk"},{"location":"0.x/misk/index.html#packages","text":"Name Summary misk misk.client misk.clustering.kubernetes misk.clustering.weights misk.concurrent misk.config misk.environment misk.flags misk.flags.memory misk.grpc misk.io misk.moshi misk.moshi.adapters misk.moshi.okio misk.moshi.time misk.okio misk.scope misk.scope.executor misk.security.authz misk.security.cert misk.security.keys misk.security.ssl misk.tasks misk.time misk.tracing misk.web misk.web.actions misk.web.dashboard misk.web.exceptions misk.web.formatter misk.web.interceptors misk.web.jetty misk.web.marshal misk.web.mdc misk.web.metadata misk.web.metadata.config misk.web.metadata.database misk.web.metadata.webaction misk.web.proxy misk.web.resources","title":"Packages"},{"location":"0.x/misk/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.security.authz.AccessAnnotationEntry Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. misk.security.authz.AccessControlModule Install support for performing access control checks for actions based on the incoming caller. misk.security.authz.AccessInterceptor misk.Action misk.web.exceptions.ActionExceptionLogLevelConfig Configures the log Level for an ActionException. misk.scope.ActionScope misk.scope.executor.ActionScopedExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread misk.scope.ActionScopedProvider An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc. misk.scope.ActionScopedProviderModule Module used by components and applications to provide ActionScoped context objects misk.clustering.weights.ActiveClusterWeight A static ClusterWeightProvider that always returns 100 misk.clustering.weights.ActiveClusterWeightModule Provides an ActiveClusterWeight misk.web.dashboard.AdminDashboard Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard misk.web.dashboard.AdminDashboardAccess misk.web.dashboard.AdminDashboardModule Installs default Admin Dashboard that runs at multibound DashboardHomeUrl misk.web.dashboard.AdminDashboardTestingModule misk.ApplicationInterceptor misk.config.AppName misk.config.AppNameModule Binds a @AppName String to the provided application name misk.client.BackwardsCompatibleClientsConfig misk.client.BackwardsCompatibleClientsConfigConverter misk.client.BackwardsCompatibleEndpointConfig misk.client.BeginClientCallChain misk.moshi.adapters.BigDecimalAdapter okio.BufferedSource (extensions in package misk.okio) misk.moshi.okio.ByteStringAdapter JSON adapter converting ByteString s as base64 encoded strings misk.Chain misk.security.ssl.CipherSuites misk.web.formatter.ClassNameFormatter misk.client.ClientAction Metadata about a client action misk.security.ssl.ClientCertChain Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any) misk.security.ssl.ClientCertIssuer Qualifier annotation for an ActionScoped containing the issuer of the client cert misk.security.ssl.ClientCertSubject Qualifier annotation for an ActionScoped containing the subject of the client cert misk.client.ClientChain misk.client.ClientMetricsInterceptor misk.client.ClientNetworkChain misk.client.ClientNetworkInterceptor Intercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response misk.client.ClientNetworkInterceptorsModule The common set of ClientNetworkInterceptor s for all misk apps. misk.clustering.weights.ClusterWeightProvider Provides the current weight assigned to the cluster. misk.clustering.weights.ClusterWeightService A marker interface for the Service that produces the ClusterWeightProvider . misk.web.interceptors.ConcurrencyLimiterFactory Multibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used. misk.web.dashboard.ConfigDashboardTabModule Installs Config tab for the Misk Admin Dashboard misk.web.metadata.config.ConfigMetadataAction misk.config.ConfigModule misk.web.CorsConfig misk.web.dashboard.DashboardHomeUrl Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard misk.web.metadata.DashboardMetadataAction Serve metadata related to a Misk-Web Dashboard misk.web.dashboard.DashboardModule Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps misk.web.dashboard.DashboardNavbarItem A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu misk.web.dashboard.DashboardNavbarStatus Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard misk.web.dashboard.DashboardTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu misk.web.dashboard.DashboardTabProvider Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry misk.web.dashboard.DashboardTheme Per dashboard customization of the navbar theme misk.web.metadata.database.DatabaseQueryFunctionMetadata misk.web.metadata.database.DatabaseQueryMetadata Metadata front end model for Database Query Misk-Web Tab misk.web.metadata.database.DatabaseQueryMetadataAction Display available queries and their types misk.tasks.DelayedTask A DelayedTask is a task that runs in the future misk.environment.DeploymentModule Binds Deployment to make it available to services and actions misk.security.authz.DevelopmentOnly misk.web.DispatchMechanism Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics. misk.web.dashboard.EnvironmentToColorLookup misk.environment.EnvVarLoader Loads an environment variable value. misk.web.exceptions.ExceptionHandlingInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule misk.web.exceptions.ExceptionMapper Maps an exception to a Response misk.web.exceptions.ExceptionMapperModule Binds a Throwable to an ExceptionMapper . misk.web.exceptions.ExceptionMapperResolver misk.concurrent.ExecutorServiceModule Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down. misk.concurrent.ExplicitReleaseBlockingQueue An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take , BlockingQueue.poll , and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release . Used by tests that want to explicitly control when pollers receive queued items. misk.concurrent.ExplicitReleaseDelayQueue An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire misk.security.authz.FakeCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use. misk.clustering.weights.FakeClusterWeight A ClusterWeightProvider for testing misk.clustering.weights.FakeClusterWeightModule Provides a FakeClusterWeight for testing misk.environment.FakeEnvVarModule Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding. misk.web.actions.FakeWebSocket misk.web.FeatureBinding Binds an HTTP call to a WebAction function. misk.flags.Flag misk.flags.Flags misk.flags.FlagsModule Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available misk.flags.FlagStore Applications register their interest in monitoring flags through the registerFlag calls. If registration and watching requires contacting a remote service (e.g. a flag service, Zookeeper, etc), this should be done asynchronously so that multiple flags can be registered in parallel, with the Flag.get calls blocking until the registration for that flag is complete. An application can also call awaitRegistrationsComplete to block until all pending registrations have completed, allowing e.g. the application to avoid processing incoming requests until all of its flags are available and watched misk.time.ForceUtcTimeZoneService Forces the default JVM timezone to UTC. misk.environment.ForEnvVars misk.web.marshal.GenericMarshallers Handles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content misk.web.marshal.GenericUnmarshallers Handles generic unmarshalling, for cases where the action can accept anything misk.client.GrpcClientModule Creates a gRPC client given a Wire-generated interface and HTTP configuration. misk.web.HttpCall A live HTTP call from a client for use by a chain of network interceptors. misk.client.HttpClientConfig misk.client.HttpClientConfigUrlProvider Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly. misk.client.HttpClientEndpointConfig misk.client.HttpClientEnvoyConfig misk.client.HttpClientFactory misk.client.HttpClientModule Provides an OkHttpClient and ProtoMessageHttpClient for a peer service misk.client.HttpClientsConfig misk.client.HttpClientsConfigModule misk.client.HttpClientSSLConfig misk.flags.memory.InMemoryBooleanFlag misk.flags.memory.InMemoryDoubleFlag misk.flags.memory.InMemoryFlag In-memory representation of flags, allowing the flag to be programmatically changed by tests misk.flags.memory.InMemoryFlagStore In memory implementation of a FlagStore , suitable for use in testing misk.flags.memory.InMemoryFlagStoreModule misk.flags.memory.InMemoryIntFlag misk.flags.memory.InMemoryStringFlag misk.moshi.time.InstantAdapter misk.web.actions.InternalErrorAction misk.web.interceptors.InternalErrorInterceptorFactory misk.client.JettyPortPeerClientModule For testing. misk.web.jetty.JettyService misk.flags.JsonFlag misk.web.marshal.JsonMarshaller misk.web.marshal.JsonUnmarshaller misk.security.keys.KeyService Handles encryption and decryption using keys stored in a key management service kotlin.reflect.KFunction (extensions in package misk) misk.clustering.kubernetes.KubernetesClusterModule KubernetesClusterModule installs cluster support based on Kubernetes misk.clustering.kubernetes.KubernetesConfig misk.web.actions.LivenessCheckAction misk.moshi.time.LocalDateAdapter misk.web.mdc.LogContextProvider misk.web.interceptors.LogRateLimiter Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation. misk.web.marshal.Marshaller Marshalls typed kotlin objects into a ResponseBody misk.web.jetty.MeasuredQueuedThreadPool A MeasuredThreadPool for a QueuedThreadPool misk.web.jetty.MeasuredThreadPool A common interface that can emit metrics about a thread pool. misk.web.jetty.MeasuredThreadPoolExecutor A MeasuredThreadPool for a ThreadPoolExecutor com.squareup.wire.MessageSource (extensions in package misk.grpc) misk.MiskApplication The entry point for misk applications misk.security.authz.MiskCallerAuthenticator Interface for determining the current MiskCaller . Typically use an ActionScoped , ActionScoped , etc to determine the caller based on request headers or client certificate information. misk.MiskCommand A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command. misk.MiskCommonServiceModule This module has common bindings for all environments (both real and testing). misk.config.MiskConfig misk.MiskRealServiceModule Install this module in real environments. misk.web.dashboard.MiskWebColor Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts misk.web.MiskWebFormBuilder Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping. misk.web.MiskWebModule misk.web.dashboard.MiskWebTheme Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts com.squareup.moshi.Moshi (extensions in package misk.moshi) misk.moshi.MoshiAdapterModule misk.moshi.MoshiModule For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly. misk.web.marshal.MultipartUnmarshaller misk.web.NetworkChain misk.web.NetworkInterceptor misk.web.metadata.database.NoAdminDashboardDatabaseAccess misk.web.actions.NotFoundAction misk.client.OkHttpClientCommonConfigurator misk.web.proxy.OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor java.nio.file.Path (extensions in package misk.io) misk.web.PathPattern A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters. misk.client.PeerClientFactory Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. misk.client.PeerClientModule Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig . misk.web.marshal.PlainTextMarshaller misk.web.marshal.PlainTextUnmarshaller misk.web.marshal.ProtobufMarshaller misk.web.marshal.ProtobufUnmarshaller misk.client.ProtoMessageHttpClient This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes. misk.web.actions.ReadinessCheckAction misk.environment.RealEnvVarModule Binds a EnvVarLoader for production misk.web.interceptors.RebalancingInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. misk.tasks.RepeatedTaskQueue A RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution. misk.tasks.RepeatedTaskQueueConfig misk.tasks.RepeatedTaskQueueFactory misk.tasks.RepeatedTaskQueueMetrics misk.web.interceptors.RequestBodyLoggingInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor misk.web.interceptors.RequestLoggingInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client. misk.web.resources.ResourceEntryFinder okhttp3.Response (extensions in package misk.web) misk.web.interceptors.ResponseBodyMarshallerFactory misk.tasks.Result misk.config.Secret Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader . misk.web.metadata.ServiceMetadataAction Service Metadata used for front end dashboards including App Name and Misk.Deployment name misk.web.SocketAddress Information about the socket on which a HTTP call arrived. misk.web.resources.StaticResourceAction StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : misk.web.resources.StaticResourceEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : misk.tasks.Status misk.web.actions.StatusAction Returns the current status of the service for programmatic tools that want to query for the current state of the server kotlin.String (extensions in package misk.web) misk.web.jetty.ThreadPoolQueueMetrics misk.security.ssl.TlsProtocols io.opentracing.Tracer (extensions in package misk.tracing) misk.client.TypedClientFactory misk.client.TypedHttpClientModule Creates a retrofit-backed typed client given an API interface and an HTTP configuration. misk.client.TypedPeerClientFactory Factory for creating typed clients that call other members of a cluster. misk.client.TypedPeerHttpClientModule Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. misk.web.marshal.Unmarshaller Unmarshalls a typed object from an incoming source misk.web.dashboard.ValidWebEntry misk.web.actions.WebActionEntry WebActionEntry misk.web.metadata.webaction.WebActionMetadata Metadata front end model for Web Action Misk-Web Tab misk.web.metadata.webaction.WebActionMetadataAction misk.web.WebActionModule misk.web.WebConfig misk.web.proxy.WebProxyAction WebProxyAction misk.web.proxy.WebProxyEntry Maps URLs requested against this server to URLs of servers to delegate to misk.web.WebSslConfig misk.web.dashboard.WebTab misk.web.dashboard.WebTabResourceModule Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) misk.web.WebUnixDomainSocketConfig misk.concurrent.WrappingListeningExecutorService ListeningExecutorService which wraps all calls misk.security.cert.X500Name java.security.cert.X509Certificate (extensions in package misk.security.cert)","title":"All Types - Misk"},{"location":"0.x/misk/alltypes/index.html#all-types","text":"Name Summary misk.security.authz.AccessAnnotationEntry Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. misk.security.authz.AccessControlModule Install support for performing access control checks for actions based on the incoming caller. misk.security.authz.AccessInterceptor misk.Action misk.web.exceptions.ActionExceptionLogLevelConfig Configures the log Level for an ActionException. misk.scope.ActionScope misk.scope.executor.ActionScopedExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread misk.scope.ActionScopedProvider An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc. misk.scope.ActionScopedProviderModule Module used by components and applications to provide ActionScoped context objects misk.clustering.weights.ActiveClusterWeight A static ClusterWeightProvider that always returns 100 misk.clustering.weights.ActiveClusterWeightModule Provides an ActiveClusterWeight misk.web.dashboard.AdminDashboard Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard misk.web.dashboard.AdminDashboardAccess misk.web.dashboard.AdminDashboardModule Installs default Admin Dashboard that runs at multibound DashboardHomeUrl misk.web.dashboard.AdminDashboardTestingModule misk.ApplicationInterceptor misk.config.AppName misk.config.AppNameModule Binds a @AppName String to the provided application name misk.client.BackwardsCompatibleClientsConfig misk.client.BackwardsCompatibleClientsConfigConverter misk.client.BackwardsCompatibleEndpointConfig misk.client.BeginClientCallChain misk.moshi.adapters.BigDecimalAdapter okio.BufferedSource (extensions in package misk.okio) misk.moshi.okio.ByteStringAdapter JSON adapter converting ByteString s as base64 encoded strings misk.Chain misk.security.ssl.CipherSuites misk.web.formatter.ClassNameFormatter misk.client.ClientAction Metadata about a client action misk.security.ssl.ClientCertChain Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any) misk.security.ssl.ClientCertIssuer Qualifier annotation for an ActionScoped containing the issuer of the client cert misk.security.ssl.ClientCertSubject Qualifier annotation for an ActionScoped containing the subject of the client cert misk.client.ClientChain misk.client.ClientMetricsInterceptor misk.client.ClientNetworkChain misk.client.ClientNetworkInterceptor Intercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response misk.client.ClientNetworkInterceptorsModule The common set of ClientNetworkInterceptor s for all misk apps. misk.clustering.weights.ClusterWeightProvider Provides the current weight assigned to the cluster. misk.clustering.weights.ClusterWeightService A marker interface for the Service that produces the ClusterWeightProvider . misk.web.interceptors.ConcurrencyLimiterFactory Multibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used. misk.web.dashboard.ConfigDashboardTabModule Installs Config tab for the Misk Admin Dashboard misk.web.metadata.config.ConfigMetadataAction misk.config.ConfigModule misk.web.CorsConfig misk.web.dashboard.DashboardHomeUrl Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard misk.web.metadata.DashboardMetadataAction Serve metadata related to a Misk-Web Dashboard misk.web.dashboard.DashboardModule Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps misk.web.dashboard.DashboardNavbarItem A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu misk.web.dashboard.DashboardNavbarStatus Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard misk.web.dashboard.DashboardTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu misk.web.dashboard.DashboardTabProvider Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry misk.web.dashboard.DashboardTheme Per dashboard customization of the navbar theme misk.web.metadata.database.DatabaseQueryFunctionMetadata misk.web.metadata.database.DatabaseQueryMetadata Metadata front end model for Database Query Misk-Web Tab misk.web.metadata.database.DatabaseQueryMetadataAction Display available queries and their types misk.tasks.DelayedTask A DelayedTask is a task that runs in the future misk.environment.DeploymentModule Binds Deployment to make it available to services and actions misk.security.authz.DevelopmentOnly misk.web.DispatchMechanism Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics. misk.web.dashboard.EnvironmentToColorLookup misk.environment.EnvVarLoader Loads an environment variable value. misk.web.exceptions.ExceptionHandlingInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule misk.web.exceptions.ExceptionMapper Maps an exception to a Response misk.web.exceptions.ExceptionMapperModule Binds a Throwable to an ExceptionMapper . misk.web.exceptions.ExceptionMapperResolver misk.concurrent.ExecutorServiceModule Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down. misk.concurrent.ExplicitReleaseBlockingQueue An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take , BlockingQueue.poll , and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release . Used by tests that want to explicitly control when pollers receive queued items. misk.concurrent.ExplicitReleaseDelayQueue An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire misk.security.authz.FakeCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use. misk.clustering.weights.FakeClusterWeight A ClusterWeightProvider for testing misk.clustering.weights.FakeClusterWeightModule Provides a FakeClusterWeight for testing misk.environment.FakeEnvVarModule Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding. misk.web.actions.FakeWebSocket misk.web.FeatureBinding Binds an HTTP call to a WebAction function. misk.flags.Flag misk.flags.Flags misk.flags.FlagsModule Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available misk.flags.FlagStore Applications register their interest in monitoring flags through the registerFlag calls. If registration and watching requires contacting a remote service (e.g. a flag service, Zookeeper, etc), this should be done asynchronously so that multiple flags can be registered in parallel, with the Flag.get calls blocking until the registration for that flag is complete. An application can also call awaitRegistrationsComplete to block until all pending registrations have completed, allowing e.g. the application to avoid processing incoming requests until all of its flags are available and watched misk.time.ForceUtcTimeZoneService Forces the default JVM timezone to UTC. misk.environment.ForEnvVars misk.web.marshal.GenericMarshallers Handles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content misk.web.marshal.GenericUnmarshallers Handles generic unmarshalling, for cases where the action can accept anything misk.client.GrpcClientModule Creates a gRPC client given a Wire-generated interface and HTTP configuration. misk.web.HttpCall A live HTTP call from a client for use by a chain of network interceptors. misk.client.HttpClientConfig misk.client.HttpClientConfigUrlProvider Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly. misk.client.HttpClientEndpointConfig misk.client.HttpClientEnvoyConfig misk.client.HttpClientFactory misk.client.HttpClientModule Provides an OkHttpClient and ProtoMessageHttpClient for a peer service misk.client.HttpClientsConfig misk.client.HttpClientsConfigModule misk.client.HttpClientSSLConfig misk.flags.memory.InMemoryBooleanFlag misk.flags.memory.InMemoryDoubleFlag misk.flags.memory.InMemoryFlag In-memory representation of flags, allowing the flag to be programmatically changed by tests misk.flags.memory.InMemoryFlagStore In memory implementation of a FlagStore , suitable for use in testing misk.flags.memory.InMemoryFlagStoreModule misk.flags.memory.InMemoryIntFlag misk.flags.memory.InMemoryStringFlag misk.moshi.time.InstantAdapter misk.web.actions.InternalErrorAction misk.web.interceptors.InternalErrorInterceptorFactory misk.client.JettyPortPeerClientModule For testing. misk.web.jetty.JettyService misk.flags.JsonFlag misk.web.marshal.JsonMarshaller misk.web.marshal.JsonUnmarshaller misk.security.keys.KeyService Handles encryption and decryption using keys stored in a key management service kotlin.reflect.KFunction (extensions in package misk) misk.clustering.kubernetes.KubernetesClusterModule KubernetesClusterModule installs cluster support based on Kubernetes misk.clustering.kubernetes.KubernetesConfig misk.web.actions.LivenessCheckAction misk.moshi.time.LocalDateAdapter misk.web.mdc.LogContextProvider misk.web.interceptors.LogRateLimiter Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation. misk.web.marshal.Marshaller Marshalls typed kotlin objects into a ResponseBody misk.web.jetty.MeasuredQueuedThreadPool A MeasuredThreadPool for a QueuedThreadPool misk.web.jetty.MeasuredThreadPool A common interface that can emit metrics about a thread pool. misk.web.jetty.MeasuredThreadPoolExecutor A MeasuredThreadPool for a ThreadPoolExecutor com.squareup.wire.MessageSource (extensions in package misk.grpc) misk.MiskApplication The entry point for misk applications misk.security.authz.MiskCallerAuthenticator Interface for determining the current MiskCaller . Typically use an ActionScoped , ActionScoped , etc to determine the caller based on request headers or client certificate information. misk.MiskCommand A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command. misk.MiskCommonServiceModule This module has common bindings for all environments (both real and testing). misk.config.MiskConfig misk.MiskRealServiceModule Install this module in real environments. misk.web.dashboard.MiskWebColor Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts misk.web.MiskWebFormBuilder Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping. misk.web.MiskWebModule misk.web.dashboard.MiskWebTheme Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts com.squareup.moshi.Moshi (extensions in package misk.moshi) misk.moshi.MoshiAdapterModule misk.moshi.MoshiModule For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly. misk.web.marshal.MultipartUnmarshaller misk.web.NetworkChain misk.web.NetworkInterceptor misk.web.metadata.database.NoAdminDashboardDatabaseAccess misk.web.actions.NotFoundAction misk.client.OkHttpClientCommonConfigurator misk.web.proxy.OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor java.nio.file.Path (extensions in package misk.io) misk.web.PathPattern A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters. misk.client.PeerClientFactory Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. misk.client.PeerClientModule Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig . misk.web.marshal.PlainTextMarshaller misk.web.marshal.PlainTextUnmarshaller misk.web.marshal.ProtobufMarshaller misk.web.marshal.ProtobufUnmarshaller misk.client.ProtoMessageHttpClient This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes. misk.web.actions.ReadinessCheckAction misk.environment.RealEnvVarModule Binds a EnvVarLoader for production misk.web.interceptors.RebalancingInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. misk.tasks.RepeatedTaskQueue A RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution. misk.tasks.RepeatedTaskQueueConfig misk.tasks.RepeatedTaskQueueFactory misk.tasks.RepeatedTaskQueueMetrics misk.web.interceptors.RequestBodyLoggingInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor misk.web.interceptors.RequestLoggingInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client. misk.web.resources.ResourceEntryFinder okhttp3.Response (extensions in package misk.web) misk.web.interceptors.ResponseBodyMarshallerFactory misk.tasks.Result misk.config.Secret Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader . misk.web.metadata.ServiceMetadataAction Service Metadata used for front end dashboards including App Name and Misk.Deployment name misk.web.SocketAddress Information about the socket on which a HTTP call arrived. misk.web.resources.StaticResourceAction StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : misk.web.resources.StaticResourceEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : misk.tasks.Status misk.web.actions.StatusAction Returns the current status of the service for programmatic tools that want to query for the current state of the server kotlin.String (extensions in package misk.web) misk.web.jetty.ThreadPoolQueueMetrics misk.security.ssl.TlsProtocols io.opentracing.Tracer (extensions in package misk.tracing) misk.client.TypedClientFactory misk.client.TypedHttpClientModule Creates a retrofit-backed typed client given an API interface and an HTTP configuration. misk.client.TypedPeerClientFactory Factory for creating typed clients that call other members of a cluster. misk.client.TypedPeerHttpClientModule Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. misk.web.marshal.Unmarshaller Unmarshalls a typed object from an incoming source misk.web.dashboard.ValidWebEntry misk.web.actions.WebActionEntry WebActionEntry misk.web.metadata.webaction.WebActionMetadata Metadata front end model for Web Action Misk-Web Tab misk.web.metadata.webaction.WebActionMetadataAction misk.web.WebActionModule misk.web.WebConfig misk.web.proxy.WebProxyAction WebProxyAction misk.web.proxy.WebProxyEntry Maps URLs requested against this server to URLs of servers to delegate to misk.web.WebSslConfig misk.web.dashboard.WebTab misk.web.dashboard.WebTabResourceModule Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) misk.web.WebUnixDomainSocketConfig misk.concurrent.WrappingListeningExecutorService ListeningExecutorService which wraps all calls misk.security.cert.X500Name java.security.cert.X509Certificate (extensions in package misk.security.cert)","title":"All Types"},{"location":"0.x/misk/misk/index.html","text":"misk / misk Package misk \u00b6 Types \u00b6 Name Summary Action data class Action ApplicationInterceptor interface ApplicationInterceptor Chain interface Chain MiskApplication class MiskApplication The entry point for misk applications MiskCommand abstract class MiskCommand : Runnable A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command. MiskCommonServiceModule class MiskCommonServiceModule : KAbstractModule This module has common bindings for all environments (both real and testing). MiskRealServiceModule class MiskRealServiceModule : KAbstractModule Install this module in real environments. Extensions for External Classes \u00b6 Name Summary kotlin.reflect.KFunction","title":"Package misk - Misk"},{"location":"0.x/misk/misk/index.html#package-misk","text":"","title":"Package misk"},{"location":"0.x/misk/misk/index.html#types","text":"Name Summary Action data class Action ApplicationInterceptor interface ApplicationInterceptor Chain interface Chain MiskApplication class MiskApplication The entry point for misk applications MiskCommand abstract class MiskCommand : Runnable A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command. MiskCommonServiceModule class MiskCommonServiceModule : KAbstractModule This module has common bindings for all environments (both real and testing). MiskRealServiceModule class MiskRealServiceModule : KAbstractModule Install this module in real environments.","title":"Types"},{"location":"0.x/misk/misk/index.html#extensions-for-external-classes","text":"Name Summary kotlin.reflect.KFunction","title":"Extensions for External Classes"},{"location":"0.x/misk/misk/-action/index.html","text":"misk / misk / Action Action \u00b6 data class Action Constructors \u00b6 Name Summary <init> Action(name: String , function: KFunction <*>, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameters: List < KParameter >, returnType: KType , dispatchMechanism: DispatchMechanism ) Properties \u00b6 Name Summary acceptedMediaRanges val acceptedMediaRanges: List <MediaRange> dispatchMechanism val dispatchMechanism: DispatchMechanism function val function: KFunction <*> name val name: String parameters val parameters: List < KParameter > parameterTypes val parameterTypes: List < KType > ParameterTypes and RequestType can differ because RequestType pertains only to the type of the request body, whereas ParameterTypes includes other parts of the request such as path params and query params. requestType val requestType: KType ? responseContentType val responseContentType: MediaType? returnType val returnType: KType Functions \u00b6 Name Summary hasReturnValue fun hasReturnValue(): Boolean toString fun toString(): String","title":"Action - Misk"},{"location":"0.x/misk/misk/-action/index.html#action","text":"data class Action","title":"Action"},{"location":"0.x/misk/misk/-action/index.html#constructors","text":"Name Summary <init> Action(name: String , function: KFunction <*>, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameters: List < KParameter >, returnType: KType , dispatchMechanism: DispatchMechanism )","title":"Constructors"},{"location":"0.x/misk/misk/-action/index.html#properties","text":"Name Summary acceptedMediaRanges val acceptedMediaRanges: List <MediaRange> dispatchMechanism val dispatchMechanism: DispatchMechanism function val function: KFunction <*> name val name: String parameters val parameters: List < KParameter > parameterTypes val parameterTypes: List < KType > ParameterTypes and RequestType can differ because RequestType pertains only to the type of the request body, whereas ParameterTypes includes other parts of the request such as path params and query params. requestType val requestType: KType ? responseContentType val responseContentType: MediaType? returnType val returnType: KType","title":"Properties"},{"location":"0.x/misk/misk/-action/index.html#functions","text":"Name Summary hasReturnValue fun hasReturnValue(): Boolean toString fun toString(): String","title":"Functions"},{"location":"0.x/misk/misk/-action/-init-.html","text":"misk / misk / Action / <init> <init> \u00b6 Action(name: String , function: KFunction <*>, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameters: List < KParameter >, returnType: KType , dispatchMechanism: DispatchMechanism )","title":" init "},{"location":"0.x/misk/misk/-action/-init-.html#init","text":"Action(name: String , function: KFunction <*>, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameters: List < KParameter >, returnType: KType , dispatchMechanism: DispatchMechanism )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk/-action/accepted-media-ranges.html","text":"misk / misk / Action / acceptedMediaRanges acceptedMediaRanges \u00b6 val acceptedMediaRanges: List <MediaRange>","title":"acceptedMediaRanges - Misk"},{"location":"0.x/misk/misk/-action/accepted-media-ranges.html#acceptedmediaranges","text":"val acceptedMediaRanges: List <MediaRange>","title":"acceptedMediaRanges"},{"location":"0.x/misk/misk/-action/dispatch-mechanism.html","text":"misk / misk / Action / dispatchMechanism dispatchMechanism \u00b6 val dispatchMechanism: DispatchMechanism","title":"dispatchMechanism - Misk"},{"location":"0.x/misk/misk/-action/dispatch-mechanism.html#dispatchmechanism","text":"val dispatchMechanism: DispatchMechanism","title":"dispatchMechanism"},{"location":"0.x/misk/misk/-action/function.html","text":"misk / misk / Action / function function \u00b6 val function: KFunction <*>","title":"function - Misk"},{"location":"0.x/misk/misk/-action/function.html#function","text":"val function: KFunction <*>","title":"function"},{"location":"0.x/misk/misk/-action/has-return-value.html","text":"misk / misk / Action / hasReturnValue hasReturnValue \u00b6 fun hasReturnValue(): Boolean","title":"hasReturnValue - Misk"},{"location":"0.x/misk/misk/-action/has-return-value.html#hasreturnvalue","text":"fun hasReturnValue(): Boolean","title":"hasReturnValue"},{"location":"0.x/misk/misk/-action/name.html","text":"misk / misk / Action / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk/misk/-action/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk/misk/-action/parameter-types.html","text":"misk / misk / Action / parameterTypes parameterTypes \u00b6 val parameterTypes: List < KType > ParameterTypes and RequestType can differ because RequestType pertains only to the type of the request body, whereas ParameterTypes includes other parts of the request such as path params and query params.","title":"parameterTypes - Misk"},{"location":"0.x/misk/misk/-action/parameter-types.html#parametertypes","text":"val parameterTypes: List < KType > ParameterTypes and RequestType can differ because RequestType pertains only to the type of the request body, whereas ParameterTypes includes other parts of the request such as path params and query params.","title":"parameterTypes"},{"location":"0.x/misk/misk/-action/parameters.html","text":"misk / misk / Action / parameters parameters \u00b6 val parameters: List < KParameter >","title":"parameters - Misk"},{"location":"0.x/misk/misk/-action/parameters.html#parameters","text":"val parameters: List < KParameter >","title":"parameters"},{"location":"0.x/misk/misk/-action/request-type.html","text":"misk / misk / Action / requestType requestType \u00b6 val requestType: KType ?","title":"requestType - Misk"},{"location":"0.x/misk/misk/-action/request-type.html#requesttype","text":"val requestType: KType ?","title":"requestType"},{"location":"0.x/misk/misk/-action/response-content-type.html","text":"misk / misk / Action / responseContentType responseContentType \u00b6 val responseContentType: MediaType?","title":"responseContentType - Misk"},{"location":"0.x/misk/misk/-action/response-content-type.html#responsecontenttype","text":"val responseContentType: MediaType?","title":"responseContentType"},{"location":"0.x/misk/misk/-action/return-type.html","text":"misk / misk / Action / returnType returnType \u00b6 val returnType: KType","title":"returnType - Misk"},{"location":"0.x/misk/misk/-action/return-type.html#returntype","text":"val returnType: KType","title":"returnType"},{"location":"0.x/misk/misk/-action/to-string.html","text":"misk / misk / Action / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk/misk/-action/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk/misk/-application-interceptor/index.html","text":"misk / misk / ApplicationInterceptor ApplicationInterceptor \u00b6 interface ApplicationInterceptor Types \u00b6 Name Summary Factory interface Factory Functions \u00b6 Name Summary intercept abstract fun intercept(chain: Chain ): Any Inheritors \u00b6 Name Summary AccessInterceptor class AccessInterceptor : ApplicationInterceptor RequestBodyLoggingInterceptor class RequestBodyLoggingInterceptor : ApplicationInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor","title":"ApplicationInterceptor - Misk"},{"location":"0.x/misk/misk/-application-interceptor/index.html#applicationinterceptor","text":"interface ApplicationInterceptor","title":"ApplicationInterceptor"},{"location":"0.x/misk/misk/-application-interceptor/index.html#types","text":"Name Summary Factory interface Factory","title":"Types"},{"location":"0.x/misk/misk/-application-interceptor/index.html#functions","text":"Name Summary intercept abstract fun intercept(chain: Chain ): Any","title":"Functions"},{"location":"0.x/misk/misk/-application-interceptor/index.html#inheritors","text":"Name Summary AccessInterceptor class AccessInterceptor : ApplicationInterceptor RequestBodyLoggingInterceptor class RequestBodyLoggingInterceptor : ApplicationInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor","title":"Inheritors"},{"location":"0.x/misk/misk/-application-interceptor/intercept.html","text":"misk / misk / ApplicationInterceptor / intercept intercept \u00b6 abstract fun intercept(chain: Chain ): Any","title":"intercept - Misk"},{"location":"0.x/misk/misk/-application-interceptor/intercept.html#intercept","text":"abstract fun intercept(chain: Chain ): Any","title":"intercept"},{"location":"0.x/misk/misk/-application-interceptor/-factory/index.html","text":"misk / misk / ApplicationInterceptor / Factory Factory \u00b6 interface Factory Functions \u00b6 Name Summary create abstract fun create(action: Action ): ApplicationInterceptor ? Inheritors \u00b6 Name Summary Factory class Factory : ApplicationInterceptor.Factory","title":"Factory - Misk"},{"location":"0.x/misk/misk/-application-interceptor/-factory/index.html#factory","text":"interface Factory","title":"Factory"},{"location":"0.x/misk/misk/-application-interceptor/-factory/index.html#functions","text":"Name Summary create abstract fun create(action: Action ): ApplicationInterceptor ?","title":"Functions"},{"location":"0.x/misk/misk/-application-interceptor/-factory/index.html#inheritors","text":"Name Summary Factory class Factory : ApplicationInterceptor.Factory","title":"Inheritors"},{"location":"0.x/misk/misk/-application-interceptor/-factory/create.html","text":"misk / misk / ApplicationInterceptor / Factory / create create \u00b6 abstract fun create(action: Action ): ApplicationInterceptor ?","title":"create - Misk"},{"location":"0.x/misk/misk/-application-interceptor/-factory/create.html#create","text":"abstract fun create(action: Action ): ApplicationInterceptor ?","title":"create"},{"location":"0.x/misk/misk/-chain/index.html","text":"misk / misk / Chain Chain \u00b6 interface Chain Properties \u00b6 Name Summary action abstract val action: WebAction args abstract val args: List < Any ?> function abstract val function: KFunction <*> httpCall abstract val httpCall: HttpCall Functions \u00b6 Name Summary proceed abstract fun proceed(args: List < Any ?>): Any","title":"Chain - Misk"},{"location":"0.x/misk/misk/-chain/index.html#chain","text":"interface Chain","title":"Chain"},{"location":"0.x/misk/misk/-chain/index.html#properties","text":"Name Summary action abstract val action: WebAction args abstract val args: List < Any ?> function abstract val function: KFunction <*> httpCall abstract val httpCall: HttpCall","title":"Properties"},{"location":"0.x/misk/misk/-chain/index.html#functions","text":"Name Summary proceed abstract fun proceed(args: List < Any ?>): Any","title":"Functions"},{"location":"0.x/misk/misk/-chain/action.html","text":"misk / misk / Chain / action action \u00b6 abstract val action: WebAction","title":"action - Misk"},{"location":"0.x/misk/misk/-chain/action.html#action","text":"abstract val action: WebAction","title":"action"},{"location":"0.x/misk/misk/-chain/args.html","text":"misk / misk / Chain / args args \u00b6 abstract val args: List < Any ?>","title":"args - Misk"},{"location":"0.x/misk/misk/-chain/args.html#args","text":"abstract val args: List < Any ?>","title":"args"},{"location":"0.x/misk/misk/-chain/function.html","text":"misk / misk / Chain / function function \u00b6 abstract val function: KFunction <*>","title":"function - Misk"},{"location":"0.x/misk/misk/-chain/function.html#function","text":"abstract val function: KFunction <*>","title":"function"},{"location":"0.x/misk/misk/-chain/http-call.html","text":"misk / misk / Chain / httpCall httpCall \u00b6 abstract val httpCall: HttpCall","title":"httpCall - Misk"},{"location":"0.x/misk/misk/-chain/http-call.html#httpcall","text":"abstract val httpCall: HttpCall","title":"httpCall"},{"location":"0.x/misk/misk/-chain/proceed.html","text":"misk / misk / Chain / proceed proceed \u00b6 abstract fun proceed(args: List < Any ?>): Any","title":"proceed - Misk"},{"location":"0.x/misk/misk/-chain/proceed.html#proceed","text":"abstract fun proceed(args: List < Any ?>): Any","title":"proceed"},{"location":"0.x/misk/misk/-misk-application/index.html","text":"misk / misk / MiskApplication MiskApplication \u00b6 class MiskApplication The entry point for misk applications Constructors \u00b6 Name Summary <init> MiskApplication(vararg modules: Module) MiskApplication(vararg commands: MiskCommand )``MiskApplication(modules: List <Module>, commands: List < MiskCommand > = listOf()) The entry point for misk applications Functions \u00b6 Name Summary run fun run(args: Array < String >): Unit Runs the application, finding and executing the appropriate command based on the provided command line arguments","title":"MiskApplication - Misk"},{"location":"0.x/misk/misk/-misk-application/index.html#miskapplication","text":"class MiskApplication The entry point for misk applications","title":"MiskApplication"},{"location":"0.x/misk/misk/-misk-application/index.html#constructors","text":"Name Summary <init> MiskApplication(vararg modules: Module) MiskApplication(vararg commands: MiskCommand )``MiskApplication(modules: List <Module>, commands: List < MiskCommand > = listOf()) The entry point for misk applications","title":"Constructors"},{"location":"0.x/misk/misk/-misk-application/index.html#functions","text":"Name Summary run fun run(args: Array < String >): Unit Runs the application, finding and executing the appropriate command based on the provided command line arguments","title":"Functions"},{"location":"0.x/misk/misk/-misk-application/-init-.html","text":"misk / misk / MiskApplication / <init> <init> \u00b6 MiskApplication(vararg modules: Module) MiskApplication(vararg commands: MiskCommand )``MiskApplication(modules: List <Module>, commands: List < MiskCommand > = listOf()) The entry point for misk applications","title":" init "},{"location":"0.x/misk/misk/-misk-application/-init-.html#init","text":"MiskApplication(vararg modules: Module) MiskApplication(vararg commands: MiskCommand )``MiskApplication(modules: List <Module>, commands: List < MiskCommand > = listOf()) The entry point for misk applications","title":"&lt;init&gt;"},{"location":"0.x/misk/misk/-misk-application/run.html","text":"misk / misk / MiskApplication / run run \u00b6 fun run(args: Array < String >): Unit Runs the application, finding and executing the appropriate command based on the provided command line arguments","title":"run - Misk"},{"location":"0.x/misk/misk/-misk-application/run.html#run","text":"fun run(args: Array < String >): Unit Runs the application, finding and executing the appropriate command based on the provided command line arguments","title":"run"},{"location":"0.x/misk/misk/-misk-command/index.html","text":"misk / misk / MiskCommand MiskCommand \u00b6 abstract class MiskCommand : Runnable A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command. Constructors \u00b6 Name Summary <init> MiskCommand(name: String , vararg modules: Module)``MiskCommand(name: String , modules: List <Module>) A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command. Functions \u00b6 Name Summary requireCli fun requireCli(value: Boolean , lazyMessage: () -> String ): Unit Confirms that the given precondition is true, otherwise throws a ParameterException with the supplied message.","title":"MiskCommand - Misk"},{"location":"0.x/misk/misk/-misk-command/index.html#miskcommand","text":"abstract class MiskCommand : Runnable A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command.","title":"MiskCommand"},{"location":"0.x/misk/misk/-misk-command/index.html#constructors","text":"Name Summary <init> MiskCommand(name: String , vararg modules: Module)``MiskCommand(name: String , modules: List <Module>) A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command.","title":"Constructors"},{"location":"0.x/misk/misk/-misk-command/index.html#functions","text":"Name Summary requireCli fun requireCli(value: Boolean , lazyMessage: () -> String ): Unit Confirms that the given precondition is true, otherwise throws a ParameterException with the supplied message.","title":"Functions"},{"location":"0.x/misk/misk/-misk-command/-init-.html","text":"misk / misk / MiskCommand / <init> <init> \u00b6 MiskCommand(name: String , vararg modules: Module)``MiskCommand(name: String , modules: List <Module>) A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command.","title":" init "},{"location":"0.x/misk/misk/-misk-command/-init-.html#init","text":"MiskCommand(name: String , vararg modules: Module)``MiskCommand(name: String , modules: List <Module>) A command to run from the command line. Each command has an associated name and the list of modules to use in initializing the command. Commands can specify optional and required arguments via JCommander annotations. The command line will pick the appropriate command based on the name, create an injector based on that command\u2019s modules, use the injector to initialize the command, and then run the command.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk/-misk-command/require-cli.html","text":"misk / misk / MiskCommand / requireCli requireCli \u00b6 fun requireCli(value: Boolean , lazyMessage: () -> String ): Unit Confirms that the given precondition is true, otherwise throws a ParameterException with the supplied message.","title":"requireCli - Misk"},{"location":"0.x/misk/misk/-misk-command/require-cli.html#requirecli","text":"fun requireCli(value: Boolean , lazyMessage: () -> String ): Unit Confirms that the given precondition is true, otherwise throws a ParameterException with the supplied message.","title":"requireCli"},{"location":"0.x/misk/misk/-misk-common-service-module/index.html","text":"misk / misk / MiskCommonServiceModule MiskCommonServiceModule \u00b6 class MiskCommonServiceModule : KAbstractModule This module has common bindings for all environments (both real and testing). Constructors \u00b6 Name Summary <init> MiskCommonServiceModule() This module has common bindings for all environments (both real and testing). Functions \u00b6 Name Summary configure fun configure(): Unit","title":"MiskCommonServiceModule - Misk"},{"location":"0.x/misk/misk/-misk-common-service-module/index.html#miskcommonservicemodule","text":"class MiskCommonServiceModule : KAbstractModule This module has common bindings for all environments (both real and testing).","title":"MiskCommonServiceModule"},{"location":"0.x/misk/misk/-misk-common-service-module/index.html#constructors","text":"Name Summary <init> MiskCommonServiceModule() This module has common bindings for all environments (both real and testing).","title":"Constructors"},{"location":"0.x/misk/misk/-misk-common-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk/-misk-common-service-module/-init-.html","text":"misk / misk / MiskCommonServiceModule / <init> <init> \u00b6 MiskCommonServiceModule() This module has common bindings for all environments (both real and testing).","title":" init "},{"location":"0.x/misk/misk/-misk-common-service-module/-init-.html#init","text":"MiskCommonServiceModule() This module has common bindings for all environments (both real and testing).","title":"&lt;init&gt;"},{"location":"0.x/misk/misk/-misk-common-service-module/configure.html","text":"misk / misk / MiskCommonServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk/-misk-common-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk/-misk-real-service-module/index.html","text":"misk / misk / MiskRealServiceModule MiskRealServiceModule \u00b6 class MiskRealServiceModule : KAbstractModule Install this module in real environments. The vast majority of Service bindings belong in MiskCommonServiceModule , in order to share with MiskTestingServiceModule . Only bindings that are not suitable for a unit testing environment belong here. Constructors \u00b6 Name Summary <init> MiskRealServiceModule() Install this module in real environments. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"MiskRealServiceModule - Misk"},{"location":"0.x/misk/misk/-misk-real-service-module/index.html#miskrealservicemodule","text":"class MiskRealServiceModule : KAbstractModule Install this module in real environments. The vast majority of Service bindings belong in MiskCommonServiceModule , in order to share with MiskTestingServiceModule . Only bindings that are not suitable for a unit testing environment belong here.","title":"MiskRealServiceModule"},{"location":"0.x/misk/misk/-misk-real-service-module/index.html#constructors","text":"Name Summary <init> MiskRealServiceModule() Install this module in real environments.","title":"Constructors"},{"location":"0.x/misk/misk/-misk-real-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk/-misk-real-service-module/-init-.html","text":"misk / misk / MiskRealServiceModule / <init> <init> \u00b6 MiskRealServiceModule() Install this module in real environments. The vast majority of Service bindings belong in MiskCommonServiceModule , in order to share with MiskTestingServiceModule . Only bindings that are not suitable for a unit testing environment belong here.","title":" init "},{"location":"0.x/misk/misk/-misk-real-service-module/-init-.html#init","text":"MiskRealServiceModule() Install this module in real environments. The vast majority of Service bindings belong in MiskCommonServiceModule , in order to share with MiskTestingServiceModule . Only bindings that are not suitable for a unit testing environment belong here.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk/-misk-real-service-module/configure.html","text":"misk / misk / MiskRealServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk/-misk-real-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk/kotlin.reflect.-k-function/index.html","text":"misk / misk / kotlin.reflect.KFunction Extensions for kotlin.reflect.KFunction \u00b6 Name Summary asAction fun KFunction <*>.asAction(dispatchMechanism: DispatchMechanism ): Action","title":"Extensions for kotlin.reflect.KFunction - Misk"},{"location":"0.x/misk/misk/kotlin.reflect.-k-function/index.html#extensions-for-kotlinreflectkfunction","text":"Name Summary asAction fun KFunction <*>.asAction(dispatchMechanism: DispatchMechanism ): Action","title":"Extensions for kotlin.reflect.KFunction"},{"location":"0.x/misk/misk/kotlin.reflect.-k-function/as-action.html","text":"misk / misk / kotlin.reflect.KFunction / asAction asAction \u00b6 fun KFunction <*>.asAction(dispatchMechanism: DispatchMechanism ): Action","title":"asAction - Misk"},{"location":"0.x/misk/misk/kotlin.reflect.-k-function/as-action.html#asaction","text":"fun KFunction <*>.asAction(dispatchMechanism: DispatchMechanism ): Action","title":"asAction"},{"location":"0.x/misk/misk.client/index.html","text":"misk / misk.client Package misk.client \u00b6 Types \u00b6 Name Summary BackwardsCompatibleClientsConfig data class BackwardsCompatibleClientsConfig BackwardsCompatibleClientsConfigConverter class BackwardsCompatibleClientsConfigConverter : Converter< BackwardsCompatibleClientsConfig , HttpClientsConfig > BackwardsCompatibleEndpointConfig data class BackwardsCompatibleEndpointConfig BeginClientCallChain interface BeginClientCallChain ClientAction data class ClientAction Metadata about a client action ClientChain interface ClientChain ClientMetricsInterceptor class ClientMetricsInterceptor : Interceptor ClientNetworkChain interface ClientNetworkChain ClientNetworkInterceptor interface ClientNetworkInterceptor Intercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response ClientNetworkInterceptorsModule class ClientNetworkInterceptorsModule : KAbstractModule The common set of ClientNetworkInterceptor s for all misk apps. GrpcClientModule class GrpcClientModule<T : Service, G : T > : KAbstractModule Creates a gRPC client given a Wire-generated interface and HTTP configuration. HttpClientConfig data class HttpClientConfig HttpClientConfigUrlProvider class HttpClientConfigUrlProvider Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly. HttpClientEndpointConfig data class HttpClientEndpointConfig HttpClientEnvoyConfig data class HttpClientEnvoyConfig HttpClientFactory class HttpClientFactory HttpClientModule class HttpClientModule : KAbstractModule Provides an OkHttpClient and ProtoMessageHttpClient for a peer service HttpClientsConfig data class HttpClientsConfig : Config HttpClientsConfigModule class HttpClientsConfigModule : KAbstractModule HttpClientSSLConfig data class HttpClientSSLConfig JettyPortPeerClientModule class JettyPortPeerClientModule : KAbstractModule For testing. OkHttpClientCommonConfigurator class OkHttpClientCommonConfigurator PeerClientFactory class PeerClientFactory Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. PeerClientModule class PeerClientModule : KAbstractModule Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig . ProtoMessageHttpClient class ProtoMessageHttpClient This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes. TypedClientFactory class TypedClientFactory TypedHttpClientModule class TypedHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client given an API interface and an HTTP configuration. TypedPeerClientFactory interface TypedPeerClientFactory<T> Factory for creating typed clients that call other members of a cluster. TypedPeerHttpClientModule class TypedPeerHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. Functions \u00b6 Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"Package misk.client - Misk"},{"location":"0.x/misk/misk.client/index.html#package-miskclient","text":"","title":"Package misk.client"},{"location":"0.x/misk/misk.client/index.html#types","text":"Name Summary BackwardsCompatibleClientsConfig data class BackwardsCompatibleClientsConfig BackwardsCompatibleClientsConfigConverter class BackwardsCompatibleClientsConfigConverter : Converter< BackwardsCompatibleClientsConfig , HttpClientsConfig > BackwardsCompatibleEndpointConfig data class BackwardsCompatibleEndpointConfig BeginClientCallChain interface BeginClientCallChain ClientAction data class ClientAction Metadata about a client action ClientChain interface ClientChain ClientMetricsInterceptor class ClientMetricsInterceptor : Interceptor ClientNetworkChain interface ClientNetworkChain ClientNetworkInterceptor interface ClientNetworkInterceptor Intercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response ClientNetworkInterceptorsModule class ClientNetworkInterceptorsModule : KAbstractModule The common set of ClientNetworkInterceptor s for all misk apps. GrpcClientModule class GrpcClientModule<T : Service, G : T > : KAbstractModule Creates a gRPC client given a Wire-generated interface and HTTP configuration. HttpClientConfig data class HttpClientConfig HttpClientConfigUrlProvider class HttpClientConfigUrlProvider Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly. HttpClientEndpointConfig data class HttpClientEndpointConfig HttpClientEnvoyConfig data class HttpClientEnvoyConfig HttpClientFactory class HttpClientFactory HttpClientModule class HttpClientModule : KAbstractModule Provides an OkHttpClient and ProtoMessageHttpClient for a peer service HttpClientsConfig data class HttpClientsConfig : Config HttpClientsConfigModule class HttpClientsConfigModule : KAbstractModule HttpClientSSLConfig data class HttpClientSSLConfig JettyPortPeerClientModule class JettyPortPeerClientModule : KAbstractModule For testing. OkHttpClientCommonConfigurator class OkHttpClientCommonConfigurator PeerClientFactory class PeerClientFactory Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. PeerClientModule class PeerClientModule : KAbstractModule Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig . ProtoMessageHttpClient class ProtoMessageHttpClient This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes. TypedClientFactory class TypedClientFactory TypedHttpClientModule class TypedHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client given an API interface and an HTTP configuration. TypedPeerClientFactory interface TypedPeerClientFactory<T> Factory for creating typed clients that call other members of a cluster. TypedPeerHttpClientModule class TypedPeerHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration.","title":"Types"},{"location":"0.x/misk/misk.client/index.html#functions","text":"Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"Functions"},{"location":"0.x/misk/misk.client/apply-defaults.html","text":"misk / misk.client / applyDefaults applyDefaults \u00b6 fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"applyDefaults - Misk"},{"location":"0.x/misk/misk.client/apply-defaults.html#applydefaults","text":"fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"applyDefaults"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/index.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig BackwardsCompatibleClientsConfig \u00b6 data class BackwardsCompatibleClientsConfig Constructors \u00b6 Name Summary <init> BackwardsCompatibleClientsConfig(defaultConnectTimeout: Duration ? = null, defaultWriteTimeout: Duration ? = null, defaultReadTimeout: Duration ? = null, ssl: HttpClientSSLConfig ? = null, defaultPingInterval: Duration ? = null, defaultCallTimeout: Duration ? = null, endpoints: Map < String , BackwardsCompatibleEndpointConfig > = mapOf(), hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf()) Properties \u00b6 Name Summary defaultCallTimeout val defaultCallTimeout: Duration ? defaultConnectTimeout val defaultConnectTimeout: Duration ? defaultPingInterval val defaultPingInterval: Duration ? defaultReadTimeout val defaultReadTimeout: Duration ? defaultWriteTimeout val defaultWriteTimeout: Duration ? endpoints val endpoints: Map < String , BackwardsCompatibleEndpointConfig > hostConfigs val hostConfigs: LinkedHashMap < String , HttpClientConfig > ssl val ssl: HttpClientSSLConfig ?","title":"BackwardsCompatibleClientsConfig - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/index.html#backwardscompatibleclientsconfig","text":"data class BackwardsCompatibleClientsConfig","title":"BackwardsCompatibleClientsConfig"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/index.html#constructors","text":"Name Summary <init> BackwardsCompatibleClientsConfig(defaultConnectTimeout: Duration ? = null, defaultWriteTimeout: Duration ? = null, defaultReadTimeout: Duration ? = null, ssl: HttpClientSSLConfig ? = null, defaultPingInterval: Duration ? = null, defaultCallTimeout: Duration ? = null, endpoints: Map < String , BackwardsCompatibleEndpointConfig > = mapOf(), hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf())","title":"Constructors"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/index.html#properties","text":"Name Summary defaultCallTimeout val defaultCallTimeout: Duration ? defaultConnectTimeout val defaultConnectTimeout: Duration ? defaultPingInterval val defaultPingInterval: Duration ? defaultReadTimeout val defaultReadTimeout: Duration ? defaultWriteTimeout val defaultWriteTimeout: Duration ? endpoints val endpoints: Map < String , BackwardsCompatibleEndpointConfig > hostConfigs val hostConfigs: LinkedHashMap < String , HttpClientConfig > ssl val ssl: HttpClientSSLConfig ?","title":"Properties"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/-init-.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / <init> <init> \u00b6 BackwardsCompatibleClientsConfig(defaultConnectTimeout: Duration ? = null, defaultWriteTimeout: Duration ? = null, defaultReadTimeout: Duration ? = null, ssl: HttpClientSSLConfig ? = null, defaultPingInterval: Duration ? = null, defaultCallTimeout: Duration ? = null, endpoints: Map < String , BackwardsCompatibleEndpointConfig > = mapOf(), hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf())","title":" init "},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/-init-.html#init","text":"BackwardsCompatibleClientsConfig(defaultConnectTimeout: Duration ? = null, defaultWriteTimeout: Duration ? = null, defaultReadTimeout: Duration ? = null, ssl: HttpClientSSLConfig ? = null, defaultPingInterval: Duration ? = null, defaultCallTimeout: Duration ? = null, endpoints: Map < String , BackwardsCompatibleEndpointConfig > = mapOf(), hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf())","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-call-timeout.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / defaultCallTimeout defaultCallTimeout \u00b6 val defaultCallTimeout: Duration ?","title":"defaultCallTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-call-timeout.html#defaultcalltimeout","text":"val defaultCallTimeout: Duration ?","title":"defaultCallTimeout"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-connect-timeout.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / defaultConnectTimeout defaultConnectTimeout \u00b6 val defaultConnectTimeout: Duration ?","title":"defaultConnectTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-connect-timeout.html#defaultconnecttimeout","text":"val defaultConnectTimeout: Duration ?","title":"defaultConnectTimeout"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-ping-interval.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / defaultPingInterval defaultPingInterval \u00b6 val defaultPingInterval: Duration ?","title":"defaultPingInterval - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-ping-interval.html#defaultpinginterval","text":"val defaultPingInterval: Duration ?","title":"defaultPingInterval"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-read-timeout.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / defaultReadTimeout defaultReadTimeout \u00b6 val defaultReadTimeout: Duration ?","title":"defaultReadTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-read-timeout.html#defaultreadtimeout","text":"val defaultReadTimeout: Duration ?","title":"defaultReadTimeout"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-write-timeout.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / defaultWriteTimeout defaultWriteTimeout \u00b6 val defaultWriteTimeout: Duration ?","title":"defaultWriteTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/default-write-timeout.html#defaultwritetimeout","text":"val defaultWriteTimeout: Duration ?","title":"defaultWriteTimeout"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/endpoints.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / endpoints endpoints \u00b6 val endpoints: Map < String , BackwardsCompatibleEndpointConfig >","title":"endpoints - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/endpoints.html#endpoints","text":"val endpoints: Map < String , BackwardsCompatibleEndpointConfig >","title":"endpoints"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/host-configs.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / hostConfigs hostConfigs \u00b6 val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"hostConfigs - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/host-configs.html#hostconfigs","text":"val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"hostConfigs"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/ssl.html","text":"misk / misk.client / BackwardsCompatibleClientsConfig / ssl ssl \u00b6 val ssl: HttpClientSSLConfig ?","title":"ssl - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config/ssl.html#ssl","text":"val ssl: HttpClientSSLConfig ?","title":"ssl"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/index.html","text":"misk / misk.client / BackwardsCompatibleClientsConfigConverter BackwardsCompatibleClientsConfigConverter \u00b6 class BackwardsCompatibleClientsConfigConverter : Converter< BackwardsCompatibleClientsConfig , HttpClientsConfig > Constructors \u00b6 Name Summary <init> BackwardsCompatibleClientsConfigConverter() Functions \u00b6 Name Summary convert fun convert(value: BackwardsCompatibleClientsConfig ): HttpClientsConfig getInputType fun getInputType(typeFactory: TypeFactory): JavaType! getOutputType fun getOutputType(typeFactory: TypeFactory): JavaType!","title":"BackwardsCompatibleClientsConfigConverter - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/index.html#backwardscompatibleclientsconfigconverter","text":"class BackwardsCompatibleClientsConfigConverter : Converter< BackwardsCompatibleClientsConfig , HttpClientsConfig >","title":"BackwardsCompatibleClientsConfigConverter"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/index.html#constructors","text":"Name Summary <init> BackwardsCompatibleClientsConfigConverter()","title":"Constructors"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/index.html#functions","text":"Name Summary convert fun convert(value: BackwardsCompatibleClientsConfig ): HttpClientsConfig getInputType fun getInputType(typeFactory: TypeFactory): JavaType! getOutputType fun getOutputType(typeFactory: TypeFactory): JavaType!","title":"Functions"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/-init-.html","text":"misk / misk.client / BackwardsCompatibleClientsConfigConverter / <init> <init> \u00b6 BackwardsCompatibleClientsConfigConverter()","title":" init "},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/-init-.html#init","text":"BackwardsCompatibleClientsConfigConverter()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/convert.html","text":"misk / misk.client / BackwardsCompatibleClientsConfigConverter / convert convert \u00b6 fun convert(value: BackwardsCompatibleClientsConfig ): HttpClientsConfig","title":"convert - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/convert.html#convert","text":"fun convert(value: BackwardsCompatibleClientsConfig ): HttpClientsConfig","title":"convert"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/get-input-type.html","text":"misk / misk.client / BackwardsCompatibleClientsConfigConverter / getInputType getInputType \u00b6 fun getInputType(typeFactory: TypeFactory): JavaType!","title":"getInputType - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/get-input-type.html#getinputtype","text":"fun getInputType(typeFactory: TypeFactory): JavaType!","title":"getInputType"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/get-output-type.html","text":"misk / misk.client / BackwardsCompatibleClientsConfigConverter / getOutputType getOutputType \u00b6 fun getOutputType(typeFactory: TypeFactory): JavaType!","title":"getOutputType - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-clients-config-converter/get-output-type.html#getoutputtype","text":"fun getOutputType(typeFactory: TypeFactory): JavaType!","title":"getOutputType"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/index.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig BackwardsCompatibleEndpointConfig \u00b6 data class BackwardsCompatibleEndpointConfig Constructors \u00b6 Name Summary <init> BackwardsCompatibleEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int = 128, maxRequestsPerHost: Int = 32, maxIdleConnections: Int = 100, keepAliveDuration: Duration = Duration.ofMinutes(5), ssl: HttpClientSSLConfig ? = null, clientConfig: HttpClientConfig ? = null) Properties \u00b6 Name Summary callTimeout val callTimeout: Duration ? clientConfig val clientConfig: HttpClientConfig ? connectTimeout val connectTimeout: Duration ? envoy val envoy: HttpClientEnvoyConfig ? keepAliveDuration val keepAliveDuration: Duration maxIdleConnections val maxIdleConnections: Int maxRequests val maxRequests: Int maxRequestsPerHost val maxRequestsPerHost: Int pingInterval val pingInterval: Duration ? readTimeout val readTimeout: Duration ? ssl val ssl: HttpClientSSLConfig ? url val url: String ? writeTimeout val writeTimeout: Duration ?","title":"BackwardsCompatibleEndpointConfig - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/index.html#backwardscompatibleendpointconfig","text":"data class BackwardsCompatibleEndpointConfig","title":"BackwardsCompatibleEndpointConfig"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/index.html#constructors","text":"Name Summary <init> BackwardsCompatibleEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int = 128, maxRequestsPerHost: Int = 32, maxIdleConnections: Int = 100, keepAliveDuration: Duration = Duration.ofMinutes(5), ssl: HttpClientSSLConfig ? = null, clientConfig: HttpClientConfig ? = null)","title":"Constructors"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/index.html#properties","text":"Name Summary callTimeout val callTimeout: Duration ? clientConfig val clientConfig: HttpClientConfig ? connectTimeout val connectTimeout: Duration ? envoy val envoy: HttpClientEnvoyConfig ? keepAliveDuration val keepAliveDuration: Duration maxIdleConnections val maxIdleConnections: Int maxRequests val maxRequests: Int maxRequestsPerHost val maxRequestsPerHost: Int pingInterval val pingInterval: Duration ? readTimeout val readTimeout: Duration ? ssl val ssl: HttpClientSSLConfig ? url val url: String ? writeTimeout val writeTimeout: Duration ?","title":"Properties"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/-init-.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / <init> <init> \u00b6 BackwardsCompatibleEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int = 128, maxRequestsPerHost: Int = 32, maxIdleConnections: Int = 100, keepAliveDuration: Duration = Duration.ofMinutes(5), ssl: HttpClientSSLConfig ? = null, clientConfig: HttpClientConfig ? = null)","title":" init "},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/-init-.html#init","text":"BackwardsCompatibleEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int = 128, maxRequestsPerHost: Int = 32, maxIdleConnections: Int = 100, keepAliveDuration: Duration = Duration.ofMinutes(5), ssl: HttpClientSSLConfig ? = null, clientConfig: HttpClientConfig ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/call-timeout.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / callTimeout callTimeout \u00b6 val callTimeout: Duration ?","title":"callTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/call-timeout.html#calltimeout","text":"val callTimeout: Duration ?","title":"callTimeout"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/client-config.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / clientConfig clientConfig \u00b6 val clientConfig: HttpClientConfig ?","title":"clientConfig - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/client-config.html#clientconfig","text":"val clientConfig: HttpClientConfig ?","title":"clientConfig"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/connect-timeout.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / connectTimeout connectTimeout \u00b6 val connectTimeout: Duration ?","title":"connectTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/connect-timeout.html#connecttimeout","text":"val connectTimeout: Duration ?","title":"connectTimeout"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/envoy.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / envoy envoy \u00b6 val envoy: HttpClientEnvoyConfig ?","title":"envoy - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/envoy.html#envoy","text":"val envoy: HttpClientEnvoyConfig ?","title":"envoy"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/keep-alive-duration.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / keepAliveDuration keepAliveDuration \u00b6 val keepAliveDuration: Duration","title":"keepAliveDuration - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/keep-alive-duration.html#keepaliveduration","text":"val keepAliveDuration: Duration","title":"keepAliveDuration"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/max-idle-connections.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / maxIdleConnections maxIdleConnections \u00b6 val maxIdleConnections: Int","title":"maxIdleConnections - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/max-idle-connections.html#maxidleconnections","text":"val maxIdleConnections: Int","title":"maxIdleConnections"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/max-requests-per-host.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / maxRequestsPerHost maxRequestsPerHost \u00b6 val maxRequestsPerHost: Int","title":"maxRequestsPerHost - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/max-requests-per-host.html#maxrequestsperhost","text":"val maxRequestsPerHost: Int","title":"maxRequestsPerHost"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/max-requests.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / maxRequests maxRequests \u00b6 val maxRequests: Int","title":"maxRequests - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/max-requests.html#maxrequests","text":"val maxRequests: Int","title":"maxRequests"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/ping-interval.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / pingInterval pingInterval \u00b6 val pingInterval: Duration ?","title":"pingInterval - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/ping-interval.html#pinginterval","text":"val pingInterval: Duration ?","title":"pingInterval"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/read-timeout.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / readTimeout readTimeout \u00b6 val readTimeout: Duration ?","title":"readTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/read-timeout.html#readtimeout","text":"val readTimeout: Duration ?","title":"readTimeout"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/ssl.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / ssl ssl \u00b6 val ssl: HttpClientSSLConfig ?","title":"ssl - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/ssl.html#ssl","text":"val ssl: HttpClientSSLConfig ?","title":"ssl"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/url.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / url url \u00b6 val url: String ?","title":"url - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/url.html#url","text":"val url: String ?","title":"url"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/write-timeout.html","text":"misk / misk.client / BackwardsCompatibleEndpointConfig / writeTimeout writeTimeout \u00b6 val writeTimeout: Duration ?","title":"writeTimeout - Misk"},{"location":"0.x/misk/misk.client/-backwards-compatible-endpoint-config/write-timeout.html#writetimeout","text":"val writeTimeout: Duration ?","title":"writeTimeout"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/index.html","text":"misk / misk.client / BeginClientCallChain BeginClientCallChain \u00b6 interface BeginClientCallChain Properties \u00b6 Name Summary action abstract val action: ClientAction args abstract val args: List <*> Functions \u00b6 Name Summary proceed abstract fun proceed(args: List <*>): Call< Any >","title":"BeginClientCallChain - Misk"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/index.html#beginclientcallchain","text":"interface BeginClientCallChain","title":"BeginClientCallChain"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/index.html#properties","text":"Name Summary action abstract val action: ClientAction args abstract val args: List <*>","title":"Properties"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/index.html#functions","text":"Name Summary proceed abstract fun proceed(args: List <*>): Call< Any >","title":"Functions"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/action.html","text":"misk / misk.client / BeginClientCallChain / action action \u00b6 abstract val action: ClientAction","title":"action - Misk"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/action.html#action","text":"abstract val action: ClientAction","title":"action"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/args.html","text":"misk / misk.client / BeginClientCallChain / args args \u00b6 abstract val args: List <*>","title":"args - Misk"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/args.html#args","text":"abstract val args: List <*>","title":"args"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/proceed.html","text":"misk / misk.client / BeginClientCallChain / proceed proceed \u00b6 abstract fun proceed(args: List <*>): Call< Any >","title":"proceed - Misk"},{"location":"0.x/misk/misk.client/-begin-client-call-chain/proceed.html#proceed","text":"abstract fun proceed(args: List <*>): Call< Any >","title":"proceed"},{"location":"0.x/misk/misk.client/-client-action/index.html","text":"misk / misk.client / ClientAction ClientAction \u00b6 data class ClientAction Metadata about a client action Constructors \u00b6 Name Summary <init> ClientAction(name: String , function: KFunction <*>, parameterTypes: List < KType >, returnType: KType ) Metadata about a client action Properties \u00b6 Name Summary function val function: KFunction <*> The function that was used to invoke the action name val name: String The name of the action, composed of the name of the client + the name of the method parameterTypes val parameterTypes: List < KType > The parameter types to the action returnType val returnType: KType The return type fo the action","title":"ClientAction - Misk"},{"location":"0.x/misk/misk.client/-client-action/index.html#clientaction","text":"data class ClientAction Metadata about a client action","title":"ClientAction"},{"location":"0.x/misk/misk.client/-client-action/index.html#constructors","text":"Name Summary <init> ClientAction(name: String , function: KFunction <*>, parameterTypes: List < KType >, returnType: KType ) Metadata about a client action","title":"Constructors"},{"location":"0.x/misk/misk.client/-client-action/index.html#properties","text":"Name Summary function val function: KFunction <*> The function that was used to invoke the action name val name: String The name of the action, composed of the name of the client + the name of the method parameterTypes val parameterTypes: List < KType > The parameter types to the action returnType val returnType: KType The return type fo the action","title":"Properties"},{"location":"0.x/misk/misk.client/-client-action/-init-.html","text":"misk / misk.client / ClientAction / <init> <init> \u00b6 ClientAction(name: String , function: KFunction <*>, parameterTypes: List < KType >, returnType: KType ) Metadata about a client action","title":" init "},{"location":"0.x/misk/misk.client/-client-action/-init-.html#init","text":"ClientAction(name: String , function: KFunction <*>, parameterTypes: List < KType >, returnType: KType ) Metadata about a client action","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-client-action/function.html","text":"misk / misk.client / ClientAction / function function \u00b6 val function: KFunction <*> The function that was used to invoke the action","title":"function - Misk"},{"location":"0.x/misk/misk.client/-client-action/function.html#function","text":"val function: KFunction <*> The function that was used to invoke the action","title":"function"},{"location":"0.x/misk/misk.client/-client-action/name.html","text":"misk / misk.client / ClientAction / name name \u00b6 val name: String The name of the action, composed of the name of the client + the name of the method","title":"name - Misk"},{"location":"0.x/misk/misk.client/-client-action/name.html#name","text":"val name: String The name of the action, composed of the name of the client + the name of the method","title":"name"},{"location":"0.x/misk/misk.client/-client-action/parameter-types.html","text":"misk / misk.client / ClientAction / parameterTypes parameterTypes \u00b6 val parameterTypes: List < KType > The parameter types to the action","title":"parameterTypes - Misk"},{"location":"0.x/misk/misk.client/-client-action/parameter-types.html#parametertypes","text":"val parameterTypes: List < KType > The parameter types to the action","title":"parameterTypes"},{"location":"0.x/misk/misk.client/-client-action/return-type.html","text":"misk / misk.client / ClientAction / returnType returnType \u00b6 val returnType: KType The return type fo the action","title":"returnType - Misk"},{"location":"0.x/misk/misk.client/-client-action/return-type.html#returntype","text":"val returnType: KType The return type fo the action","title":"returnType"},{"location":"0.x/misk/misk.client/-client-chain/index.html","text":"misk / misk.client / ClientChain ClientChain \u00b6 interface ClientChain Properties \u00b6 Name Summary action abstract val action: ClientAction args abstract val args: List <*> call abstract val call: Call< Any > callback abstract val callback: Callback< Any > Functions \u00b6 Name Summary proceed abstract fun proceed(args: List <*>, callback: Callback< Any >): Unit","title":"ClientChain - Misk"},{"location":"0.x/misk/misk.client/-client-chain/index.html#clientchain","text":"interface ClientChain","title":"ClientChain"},{"location":"0.x/misk/misk.client/-client-chain/index.html#properties","text":"Name Summary action abstract val action: ClientAction args abstract val args: List <*> call abstract val call: Call< Any > callback abstract val callback: Callback< Any >","title":"Properties"},{"location":"0.x/misk/misk.client/-client-chain/index.html#functions","text":"Name Summary proceed abstract fun proceed(args: List <*>, callback: Callback< Any >): Unit","title":"Functions"},{"location":"0.x/misk/misk.client/-client-chain/action.html","text":"misk / misk.client / ClientChain / action action \u00b6 abstract val action: ClientAction","title":"action - Misk"},{"location":"0.x/misk/misk.client/-client-chain/action.html#action","text":"abstract val action: ClientAction","title":"action"},{"location":"0.x/misk/misk.client/-client-chain/args.html","text":"misk / misk.client / ClientChain / args args \u00b6 abstract val args: List <*>","title":"args - Misk"},{"location":"0.x/misk/misk.client/-client-chain/args.html#args","text":"abstract val args: List <*>","title":"args"},{"location":"0.x/misk/misk.client/-client-chain/call.html","text":"misk / misk.client / ClientChain / call call \u00b6 abstract val call: Call< Any >","title":"call - Misk"},{"location":"0.x/misk/misk.client/-client-chain/call.html#call","text":"abstract val call: Call< Any >","title":"call"},{"location":"0.x/misk/misk.client/-client-chain/callback.html","text":"misk / misk.client / ClientChain / callback callback \u00b6 abstract val callback: Callback< Any >","title":"callback - Misk"},{"location":"0.x/misk/misk.client/-client-chain/callback.html#callback","text":"abstract val callback: Callback< Any >","title":"callback"},{"location":"0.x/misk/misk.client/-client-chain/proceed.html","text":"misk / misk.client / ClientChain / proceed proceed \u00b6 abstract fun proceed(args: List <*>, callback: Callback< Any >): Unit","title":"proceed - Misk"},{"location":"0.x/misk/misk.client/-client-chain/proceed.html#proceed","text":"abstract fun proceed(args: List <*>, callback: Callback< Any >): Unit","title":"proceed"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/index.html","text":"misk / misk.client / ClientMetricsInterceptor ClientMetricsInterceptor \u00b6 class ClientMetricsInterceptor : Interceptor Types \u00b6 Name Summary Factory class Factory Properties \u00b6 Name Summary clientName val clientName: String Functions \u00b6 Name Summary intercept fun intercept(chain: Chain): Response","title":"ClientMetricsInterceptor - Misk"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/index.html#clientmetricsinterceptor","text":"class ClientMetricsInterceptor : Interceptor","title":"ClientMetricsInterceptor"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/index.html#types","text":"Name Summary Factory class Factory","title":"Types"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/index.html#properties","text":"Name Summary clientName val clientName: String","title":"Properties"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/index.html#functions","text":"Name Summary intercept fun intercept(chain: Chain): Response","title":"Functions"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/client-name.html","text":"misk / misk.client / ClientMetricsInterceptor / clientName clientName \u00b6 val clientName: String","title":"clientName - Misk"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/client-name.html#clientname","text":"val clientName: String","title":"clientName"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/intercept.html","text":"misk / misk.client / ClientMetricsInterceptor / intercept intercept \u00b6 fun intercept(chain: Chain): Response","title":"intercept - Misk"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/intercept.html#intercept","text":"fun intercept(chain: Chain): Response","title":"intercept"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/-factory/index.html","text":"misk / misk.client / ClientMetricsInterceptor / Factory Factory \u00b6 @Singleton class Factory Functions \u00b6 Name Summary create fun create(clientName: String ): ClientMetricsInterceptor","title":"Factory - Misk"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/-factory/index.html#factory","text":"@Singleton class Factory","title":"Factory"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/-factory/index.html#functions","text":"Name Summary create fun create(clientName: String ): ClientMetricsInterceptor","title":"Functions"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/-factory/create.html","text":"misk / misk.client / ClientMetricsInterceptor / Factory / create create \u00b6 fun create(clientName: String ): ClientMetricsInterceptor","title":"create - Misk"},{"location":"0.x/misk/misk.client/-client-metrics-interceptor/-factory/create.html#create","text":"fun create(clientName: String ): ClientMetricsInterceptor","title":"create"},{"location":"0.x/misk/misk.client/-client-network-chain/index.html","text":"misk / misk.client / ClientNetworkChain ClientNetworkChain \u00b6 interface ClientNetworkChain Properties \u00b6 Name Summary action abstract val action: ClientAction request abstract val request: Request Functions \u00b6 Name Summary proceed abstract fun proceed(request: Request): Response","title":"ClientNetworkChain - Misk"},{"location":"0.x/misk/misk.client/-client-network-chain/index.html#clientnetworkchain","text":"interface ClientNetworkChain","title":"ClientNetworkChain"},{"location":"0.x/misk/misk.client/-client-network-chain/index.html#properties","text":"Name Summary action abstract val action: ClientAction request abstract val request: Request","title":"Properties"},{"location":"0.x/misk/misk.client/-client-network-chain/index.html#functions","text":"Name Summary proceed abstract fun proceed(request: Request): Response","title":"Functions"},{"location":"0.x/misk/misk.client/-client-network-chain/action.html","text":"misk / misk.client / ClientNetworkChain / action action \u00b6 abstract val action: ClientAction","title":"action - Misk"},{"location":"0.x/misk/misk.client/-client-network-chain/action.html#action","text":"abstract val action: ClientAction","title":"action"},{"location":"0.x/misk/misk.client/-client-network-chain/proceed.html","text":"misk / misk.client / ClientNetworkChain / proceed proceed \u00b6 abstract fun proceed(request: Request): Response","title":"proceed - Misk"},{"location":"0.x/misk/misk.client/-client-network-chain/proceed.html#proceed","text":"abstract fun proceed(request: Request): Response","title":"proceed"},{"location":"0.x/misk/misk.client/-client-network-chain/request.html","text":"misk / misk.client / ClientNetworkChain / request request \u00b6 abstract val request: Request","title":"request - Misk"},{"location":"0.x/misk/misk.client/-client-network-chain/request.html#request","text":"abstract val request: Request","title":"request"},{"location":"0.x/misk/misk.client/-client-network-interceptor/index.html","text":"misk / misk.client / ClientNetworkInterceptor ClientNetworkInterceptor \u00b6 interface ClientNetworkInterceptor Intercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response Types \u00b6 Name Summary Factory interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : Functions \u00b6 Name Summary intercept abstract fun intercept(chain: ClientNetworkChain ): Response","title":"ClientNetworkInterceptor - Misk"},{"location":"0.x/misk/misk.client/-client-network-interceptor/index.html#clientnetworkinterceptor","text":"interface ClientNetworkInterceptor Intercepts client side calls at the application level, able to view and modify the outgoing HTTP request and observe the returned HTTP response","title":"ClientNetworkInterceptor"},{"location":"0.x/misk/misk.client/-client-network-interceptor/index.html#types","text":"Name Summary Factory interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule :","title":"Types"},{"location":"0.x/misk/misk.client/-client-network-interceptor/index.html#functions","text":"Name Summary intercept abstract fun intercept(chain: ClientNetworkChain ): Response","title":"Functions"},{"location":"0.x/misk/misk.client/-client-network-interceptor/intercept.html","text":"misk / misk.client / ClientNetworkInterceptor / intercept intercept \u00b6 abstract fun intercept(chain: ClientNetworkChain ): Response","title":"intercept - Misk"},{"location":"0.x/misk/misk.client/-client-network-interceptor/intercept.html#intercept","text":"abstract fun intercept(chain: ClientNetworkChain ): Response","title":"intercept"},{"location":"0.x/misk/misk.client/-client-network-interceptor/-factory/index.html","text":"misk / misk.client / ClientNetworkInterceptor / Factory Factory \u00b6 interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<ClientNetworkInterceptor.Factory>().to<MyFactory>() Functions \u00b6 Name Summary create abstract fun create(action: ClientAction ): ClientNetworkInterceptor ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.client/-client-network-interceptor/-factory/index.html#factory","text":"interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<ClientNetworkInterceptor.Factory>().to<MyFactory>()","title":"Factory"},{"location":"0.x/misk/misk.client/-client-network-interceptor/-factory/index.html#functions","text":"Name Summary create abstract fun create(action: ClientAction ): ClientNetworkInterceptor ?","title":"Functions"},{"location":"0.x/misk/misk.client/-client-network-interceptor/-factory/create.html","text":"misk / misk.client / ClientNetworkInterceptor / Factory / create create \u00b6 abstract fun create(action: ClientAction ): ClientNetworkInterceptor ?","title":"create - Misk"},{"location":"0.x/misk/misk.client/-client-network-interceptor/-factory/create.html#create","text":"abstract fun create(action: ClientAction ): ClientNetworkInterceptor ?","title":"create"},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/index.html","text":"misk / misk.client / ClientNetworkInterceptorsModule ClientNetworkInterceptorsModule \u00b6 class ClientNetworkInterceptorsModule : KAbstractModule The common set of ClientNetworkInterceptor s for all misk apps. Constructors \u00b6 Name Summary <init> ClientNetworkInterceptorsModule() The common set of ClientNetworkInterceptor s for all misk apps. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"ClientNetworkInterceptorsModule - Misk"},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/index.html#clientnetworkinterceptorsmodule","text":"class ClientNetworkInterceptorsModule : KAbstractModule The common set of ClientNetworkInterceptor s for all misk apps.","title":"ClientNetworkInterceptorsModule"},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/index.html#constructors","text":"Name Summary <init> ClientNetworkInterceptorsModule() The common set of ClientNetworkInterceptor s for all misk apps.","title":"Constructors"},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/-init-.html","text":"misk / misk.client / ClientNetworkInterceptorsModule / <init> <init> \u00b6 ClientNetworkInterceptorsModule() The common set of ClientNetworkInterceptor s for all misk apps.","title":" init "},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/-init-.html#init","text":"ClientNetworkInterceptorsModule() The common set of ClientNetworkInterceptor s for all misk apps.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/configure.html","text":"misk / misk.client / ClientNetworkInterceptorsModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.client/-client-network-interceptors-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.client/-grpc-client-module/index.html","text":"misk / misk.client / GrpcClientModule GrpcClientModule \u00b6 class GrpcClientModule<T : Service, G : T > : KAbstractModule Creates a gRPC client given a Wire-generated interface and HTTP configuration. Constructors \u00b6 Name Summary <init> GrpcClientModule(kclass: KClass < T >, grpcClientClass: KClass < G >, name: String , annotation: Annotation ? = null) Creates a gRPC client given a Wire-generated interface and HTTP configuration. Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <T : Service, G : T > create(name: String , annotation: Annotation ? = null): GrpcClientModule < T , G >","title":"GrpcClientModule - Misk"},{"location":"0.x/misk/misk.client/-grpc-client-module/index.html#grpcclientmodule","text":"class GrpcClientModule<T : Service, G : T > : KAbstractModule Creates a gRPC client given a Wire-generated interface and HTTP configuration.","title":"GrpcClientModule"},{"location":"0.x/misk/misk.client/-grpc-client-module/index.html#constructors","text":"Name Summary <init> GrpcClientModule(kclass: KClass < T >, grpcClientClass: KClass < G >, name: String , annotation: Annotation ? = null) Creates a gRPC client given a Wire-generated interface and HTTP configuration.","title":"Constructors"},{"location":"0.x/misk/misk.client/-grpc-client-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.client/-grpc-client-module/index.html#companion-object-functions","text":"Name Summary create fun <T : Service, G : T > create(name: String , annotation: Annotation ? = null): GrpcClientModule < T , G >","title":"Companion Object Functions"},{"location":"0.x/misk/misk.client/-grpc-client-module/-init-.html","text":"misk / misk.client / GrpcClientModule / <init> <init> \u00b6 GrpcClientModule(kclass: KClass < T >, grpcClientClass: KClass < G >, name: String , annotation: Annotation ? = null) Creates a gRPC client given a Wire-generated interface and HTTP configuration.","title":" init "},{"location":"0.x/misk/misk.client/-grpc-client-module/-init-.html#init","text":"GrpcClientModule(kclass: KClass < T >, grpcClientClass: KClass < G >, name: String , annotation: Annotation ? = null) Creates a gRPC client given a Wire-generated interface and HTTP configuration.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-grpc-client-module/configure.html","text":"misk / misk.client / GrpcClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.client/-grpc-client-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.client/-grpc-client-module/create.html","text":"misk / misk.client / GrpcClientModule / create create \u00b6 inline fun <reified T : Service, reified G : T > create(name: String , annotation: Annotation ? = null): GrpcClientModule < T , G >","title":"create - Misk"},{"location":"0.x/misk/misk.client/-grpc-client-module/create.html#create","text":"inline fun <reified T : Service, reified G : T > create(name: String , annotation: Annotation ? = null): GrpcClientModule < T , G >","title":"create"},{"location":"0.x/misk/misk.client/-http-client-config/index.html","text":"misk / misk.client / HttpClientConfig HttpClientConfig \u00b6 data class HttpClientConfig Constructors \u00b6 Name Summary <init> HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null) Properties \u00b6 Name Summary callTimeout val callTimeout: Duration ? connectTimeout val connectTimeout: Duration ? keepAliveDuration val keepAliveDuration: Duration ? maxIdleConnections val maxIdleConnections: Int ? maxRequests val maxRequests: Int ? maxRequestsPerHost val maxRequestsPerHost: Int ? pingInterval val pingInterval: Duration ? protocols val protocols: List < String >? readTimeout val readTimeout: Duration ? ssl val ssl: HttpClientSSLConfig ? unixSocketFile val unixSocketFile: String ? writeTimeout val writeTimeout: Duration ? Functions \u00b6 Name Summary toWispConfig fun toWispConfig(): HttpClientConfig Extension Functions \u00b6 Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"HttpClientConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/index.html#httpclientconfig","text":"data class HttpClientConfig","title":"HttpClientConfig"},{"location":"0.x/misk/misk.client/-http-client-config/index.html#constructors","text":"Name Summary <init> HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null)","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-client-config/index.html#properties","text":"Name Summary callTimeout val callTimeout: Duration ? connectTimeout val connectTimeout: Duration ? keepAliveDuration val keepAliveDuration: Duration ? maxIdleConnections val maxIdleConnections: Int ? maxRequests val maxRequests: Int ? maxRequestsPerHost val maxRequestsPerHost: Int ? pingInterval val pingInterval: Duration ? protocols val protocols: List < String >? readTimeout val readTimeout: Duration ? ssl val ssl: HttpClientSSLConfig ? unixSocketFile val unixSocketFile: String ? writeTimeout val writeTimeout: Duration ?","title":"Properties"},{"location":"0.x/misk/misk.client/-http-client-config/index.html#functions","text":"Name Summary toWispConfig fun toWispConfig(): HttpClientConfig","title":"Functions"},{"location":"0.x/misk/misk.client/-http-client-config/index.html#extension-functions","text":"Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"Extension Functions"},{"location":"0.x/misk/misk.client/-http-client-config/-init-.html","text":"misk / misk.client / HttpClientConfig / <init> <init> \u00b6 HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null)","title":" init "},{"location":"0.x/misk/misk.client/-http-client-config/-init-.html#init","text":"HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-client-config/call-timeout.html","text":"misk / misk.client / HttpClientConfig / callTimeout callTimeout \u00b6 val callTimeout: Duration ?","title":"callTimeout - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/call-timeout.html#calltimeout","text":"val callTimeout: Duration ?","title":"callTimeout"},{"location":"0.x/misk/misk.client/-http-client-config/connect-timeout.html","text":"misk / misk.client / HttpClientConfig / connectTimeout connectTimeout \u00b6 val connectTimeout: Duration ?","title":"connectTimeout - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/connect-timeout.html#connecttimeout","text":"val connectTimeout: Duration ?","title":"connectTimeout"},{"location":"0.x/misk/misk.client/-http-client-config/keep-alive-duration.html","text":"misk / misk.client / HttpClientConfig / keepAliveDuration keepAliveDuration \u00b6 val keepAliveDuration: Duration ?","title":"keepAliveDuration - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/keep-alive-duration.html#keepaliveduration","text":"val keepAliveDuration: Duration ?","title":"keepAliveDuration"},{"location":"0.x/misk/misk.client/-http-client-config/max-idle-connections.html","text":"misk / misk.client / HttpClientConfig / maxIdleConnections maxIdleConnections \u00b6 val maxIdleConnections: Int ?","title":"maxIdleConnections - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/max-idle-connections.html#maxidleconnections","text":"val maxIdleConnections: Int ?","title":"maxIdleConnections"},{"location":"0.x/misk/misk.client/-http-client-config/max-requests-per-host.html","text":"misk / misk.client / HttpClientConfig / maxRequestsPerHost maxRequestsPerHost \u00b6 val maxRequestsPerHost: Int ?","title":"maxRequestsPerHost - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/max-requests-per-host.html#maxrequestsperhost","text":"val maxRequestsPerHost: Int ?","title":"maxRequestsPerHost"},{"location":"0.x/misk/misk.client/-http-client-config/max-requests.html","text":"misk / misk.client / HttpClientConfig / maxRequests maxRequests \u00b6 val maxRequests: Int ?","title":"maxRequests - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/max-requests.html#maxrequests","text":"val maxRequests: Int ?","title":"maxRequests"},{"location":"0.x/misk/misk.client/-http-client-config/ping-interval.html","text":"misk / misk.client / HttpClientConfig / pingInterval pingInterval \u00b6 val pingInterval: Duration ?","title":"pingInterval - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/ping-interval.html#pinginterval","text":"val pingInterval: Duration ?","title":"pingInterval"},{"location":"0.x/misk/misk.client/-http-client-config/protocols.html","text":"misk / misk.client / HttpClientConfig / protocols protocols \u00b6 val protocols: List < String >?","title":"protocols - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/protocols.html#protocols","text":"val protocols: List < String >?","title":"protocols"},{"location":"0.x/misk/misk.client/-http-client-config/read-timeout.html","text":"misk / misk.client / HttpClientConfig / readTimeout readTimeout \u00b6 val readTimeout: Duration ?","title":"readTimeout - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/read-timeout.html#readtimeout","text":"val readTimeout: Duration ?","title":"readTimeout"},{"location":"0.x/misk/misk.client/-http-client-config/ssl.html","text":"misk / misk.client / HttpClientConfig / ssl ssl \u00b6 val ssl: HttpClientSSLConfig ?","title":"ssl - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/ssl.html#ssl","text":"val ssl: HttpClientSSLConfig ?","title":"ssl"},{"location":"0.x/misk/misk.client/-http-client-config/to-wisp-config.html","text":"misk / misk.client / HttpClientConfig / toWispConfig toWispConfig \u00b6 fun toWispConfig(): HttpClientConfig","title":"toWispConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/to-wisp-config.html#towispconfig","text":"fun toWispConfig(): HttpClientConfig","title":"toWispConfig"},{"location":"0.x/misk/misk.client/-http-client-config/unix-socket-file.html","text":"misk / misk.client / HttpClientConfig / unixSocketFile unixSocketFile \u00b6 val unixSocketFile: String ?","title":"unixSocketFile - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/unix-socket-file.html#unixsocketfile","text":"val unixSocketFile: String ?","title":"unixSocketFile"},{"location":"0.x/misk/misk.client/-http-client-config/write-timeout.html","text":"misk / misk.client / HttpClientConfig / writeTimeout writeTimeout \u00b6 val writeTimeout: Duration ?","title":"writeTimeout - Misk"},{"location":"0.x/misk/misk.client/-http-client-config/write-timeout.html#writetimeout","text":"val writeTimeout: Duration ?","title":"writeTimeout"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/index.html","text":"misk / misk.client / HttpClientConfigUrlProvider HttpClientConfigUrlProvider \u00b6 class HttpClientConfigUrlProvider Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly. Constructors \u00b6 Name Summary <init> HttpClientConfigUrlProvider() Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly. Properties \u00b6 Name Summary envoyClientEndpointProvider lateinit var envoyClientEndpointProvider: EnvoyClientEndpointProvider Functions \u00b6 Name Summary getUrl fun getUrl(endpointConfig: HttpClientEndpointConfig ): String","title":"HttpClientConfigUrlProvider - Misk"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/index.html#httpclientconfigurlprovider","text":"class HttpClientConfigUrlProvider Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly.","title":"HttpClientConfigUrlProvider"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/index.html#constructors","text":"Name Summary <init> HttpClientConfigUrlProvider() Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly.","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/index.html#properties","text":"Name Summary envoyClientEndpointProvider lateinit var envoyClientEndpointProvider: EnvoyClientEndpointProvider","title":"Properties"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/index.html#functions","text":"Name Summary getUrl fun getUrl(endpointConfig: HttpClientEndpointConfig ): String","title":"Functions"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/-init-.html","text":"misk / misk.client / HttpClientConfigUrlProvider / <init> <init> \u00b6 HttpClientConfigUrlProvider() Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly.","title":" init "},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/-init-.html#init","text":"HttpClientConfigUrlProvider() Calculates the url for an http client config, which can differ depending on if the client is envoy-based or connects directly.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/envoy-client-endpoint-provider.html","text":"misk / misk.client / HttpClientConfigUrlProvider / envoyClientEndpointProvider envoyClientEndpointProvider \u00b6 lateinit var envoyClientEndpointProvider: EnvoyClientEndpointProvider","title":"envoyClientEndpointProvider - Misk"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/envoy-client-endpoint-provider.html#envoyclientendpointprovider","text":"lateinit var envoyClientEndpointProvider: EnvoyClientEndpointProvider","title":"envoyClientEndpointProvider"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/get-url.html","text":"misk / misk.client / HttpClientConfigUrlProvider / getUrl getUrl \u00b6 fun getUrl(endpointConfig: HttpClientEndpointConfig ): String","title":"getUrl - Misk"},{"location":"0.x/misk/misk.client/-http-client-config-url-provider/get-url.html#geturl","text":"fun getUrl(endpointConfig: HttpClientEndpointConfig ): String","title":"getUrl"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/index.html","text":"misk / misk.client / HttpClientEndpointConfig HttpClientEndpointConfig \u00b6 data class HttpClientEndpointConfig Constructors \u00b6 Name Summary <init> HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig()) Properties \u00b6 Name Summary clientConfig val clientConfig: HttpClientConfig envoy val envoy: HttpClientEnvoyConfig ? url val url: String ? Functions \u00b6 Name Summary toWispConfig fun toWispConfig(): HttpClientEndpointConfig","title":"HttpClientEndpointConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/index.html#httpclientendpointconfig","text":"data class HttpClientEndpointConfig","title":"HttpClientEndpointConfig"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/index.html#constructors","text":"Name Summary <init> HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig())","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/index.html#properties","text":"Name Summary clientConfig val clientConfig: HttpClientConfig envoy val envoy: HttpClientEnvoyConfig ? url val url: String ?","title":"Properties"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/index.html#functions","text":"Name Summary toWispConfig fun toWispConfig(): HttpClientEndpointConfig","title":"Functions"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/-init-.html","text":"misk / misk.client / HttpClientEndpointConfig / <init> <init> \u00b6 HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig())","title":" init "},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/-init-.html#init","text":"HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig())","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/client-config.html","text":"misk / misk.client / HttpClientEndpointConfig / clientConfig clientConfig \u00b6 val clientConfig: HttpClientConfig","title":"clientConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/client-config.html#clientconfig","text":"val clientConfig: HttpClientConfig","title":"clientConfig"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/envoy.html","text":"misk / misk.client / HttpClientEndpointConfig / envoy envoy \u00b6 val envoy: HttpClientEnvoyConfig ?","title":"envoy - Misk"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/envoy.html#envoy","text":"val envoy: HttpClientEnvoyConfig ?","title":"envoy"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/to-wisp-config.html","text":"misk / misk.client / HttpClientEndpointConfig / toWispConfig toWispConfig \u00b6 fun toWispConfig(): HttpClientEndpointConfig","title":"toWispConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/to-wisp-config.html#towispconfig","text":"fun toWispConfig(): HttpClientEndpointConfig","title":"toWispConfig"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/url.html","text":"misk / misk.client / HttpClientEndpointConfig / url url \u00b6 val url: String ?","title":"url - Misk"},{"location":"0.x/misk/misk.client/-http-client-endpoint-config/url.html#url","text":"val url: String ?","title":"url"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/index.html","text":"misk / misk.client / HttpClientEnvoyConfig HttpClientEnvoyConfig \u00b6 data class HttpClientEnvoyConfig Constructors \u00b6 Name Summary <init> HttpClientEnvoyConfig(app: String , env: String ? = null) Properties \u00b6 Name Summary app val app: String env val env: String ? Environment to target. If null, the same environment as the app is running in is assumed. Functions \u00b6 Name Summary toWispConfig fun toWispConfig(): HttpClientEnvoyConfig","title":"HttpClientEnvoyConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/index.html#httpclientenvoyconfig","text":"data class HttpClientEnvoyConfig","title":"HttpClientEnvoyConfig"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/index.html#constructors","text":"Name Summary <init> HttpClientEnvoyConfig(app: String , env: String ? = null)","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/index.html#properties","text":"Name Summary app val app: String env val env: String ? Environment to target. If null, the same environment as the app is running in is assumed.","title":"Properties"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/index.html#functions","text":"Name Summary toWispConfig fun toWispConfig(): HttpClientEnvoyConfig","title":"Functions"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/-init-.html","text":"misk / misk.client / HttpClientEnvoyConfig / <init> <init> \u00b6 HttpClientEnvoyConfig(app: String , env: String ? = null)","title":" init "},{"location":"0.x/misk/misk.client/-http-client-envoy-config/-init-.html#init","text":"HttpClientEnvoyConfig(app: String , env: String ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/app.html","text":"misk / misk.client / HttpClientEnvoyConfig / app app \u00b6 val app: String","title":"app - Misk"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/app.html#app","text":"val app: String","title":"app"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/env.html","text":"misk / misk.client / HttpClientEnvoyConfig / env env \u00b6 val env: String ? Environment to target. If null, the same environment as the app is running in is assumed.","title":"env - Misk"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/env.html#env","text":"val env: String ? Environment to target. If null, the same environment as the app is running in is assumed.","title":"env"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/to-wisp-config.html","text":"misk / misk.client / HttpClientEnvoyConfig / toWispConfig toWispConfig \u00b6 fun toWispConfig(): HttpClientEnvoyConfig","title":"toWispConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-envoy-config/to-wisp-config.html#towispconfig","text":"fun toWispConfig(): HttpClientEnvoyConfig","title":"toWispConfig"},{"location":"0.x/misk/misk.client/-http-client-factory/index.html","text":"misk / misk.client / HttpClientFactory HttpClientFactory \u00b6 @Singleton class HttpClientFactory Constructors \u00b6 Name Summary <init> HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator ) Properties \u00b6 Name Summary envoyClientEndpointProvider var envoyClientEndpointProvider: EnvoyClientEndpointProvider? okhttpInterceptors var okhttpInterceptors: Provider< List <Interceptor>>? Functions \u00b6 Name Summary create fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"HttpClientFactory - Misk"},{"location":"0.x/misk/misk.client/-http-client-factory/index.html#httpclientfactory","text":"@Singleton class HttpClientFactory","title":"HttpClientFactory"},{"location":"0.x/misk/misk.client/-http-client-factory/index.html#constructors","text":"Name Summary <init> HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator )","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-client-factory/index.html#properties","text":"Name Summary envoyClientEndpointProvider var envoyClientEndpointProvider: EnvoyClientEndpointProvider? okhttpInterceptors var okhttpInterceptors: Provider< List <Interceptor>>?","title":"Properties"},{"location":"0.x/misk/misk.client/-http-client-factory/index.html#functions","text":"Name Summary create fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"Functions"},{"location":"0.x/misk/misk.client/-http-client-factory/-init-.html","text":"misk / misk.client / HttpClientFactory / <init> <init> \u00b6 HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator )","title":" init "},{"location":"0.x/misk/misk.client/-http-client-factory/-init-.html#init","text":"HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-client-factory/create.html","text":"misk / misk.client / HttpClientFactory / create create \u00b6 fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"create - Misk"},{"location":"0.x/misk/misk.client/-http-client-factory/create.html#create","text":"fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"create"},{"location":"0.x/misk/misk.client/-http-client-factory/envoy-client-endpoint-provider.html","text":"misk / misk.client / HttpClientFactory / envoyClientEndpointProvider envoyClientEndpointProvider \u00b6 var envoyClientEndpointProvider: EnvoyClientEndpointProvider?","title":"envoyClientEndpointProvider - Misk"},{"location":"0.x/misk/misk.client/-http-client-factory/envoy-client-endpoint-provider.html#envoyclientendpointprovider","text":"var envoyClientEndpointProvider: EnvoyClientEndpointProvider?","title":"envoyClientEndpointProvider"},{"location":"0.x/misk/misk.client/-http-client-factory/okhttp-interceptors.html","text":"misk / misk.client / HttpClientFactory / okhttpInterceptors okhttpInterceptors \u00b6 var okhttpInterceptors: Provider< List <Interceptor>>?","title":"okhttpInterceptors - Misk"},{"location":"0.x/misk/misk.client/-http-client-factory/okhttp-interceptors.html#okhttpinterceptors","text":"var okhttpInterceptors: Provider< List <Interceptor>>?","title":"okhttpInterceptors"},{"location":"0.x/misk/misk.client/-http-client-module/index.html","text":"misk / misk.client / HttpClientModule HttpClientModule \u00b6 class HttpClientModule : KAbstractModule Provides an OkHttpClient and ProtoMessageHttpClient for a peer service Constructors \u00b6 Name Summary <init> HttpClientModule(name: String , annotation: Annotation ? = null) Provides an OkHttpClient and ProtoMessageHttpClient for a peer service Functions \u00b6 Name Summary configure fun configure(): Unit","title":"HttpClientModule - Misk"},{"location":"0.x/misk/misk.client/-http-client-module/index.html#httpclientmodule","text":"class HttpClientModule : KAbstractModule Provides an OkHttpClient and ProtoMessageHttpClient for a peer service","title":"HttpClientModule"},{"location":"0.x/misk/misk.client/-http-client-module/index.html#constructors","text":"Name Summary <init> HttpClientModule(name: String , annotation: Annotation ? = null) Provides an OkHttpClient and ProtoMessageHttpClient for a peer service","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-client-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.client/-http-client-module/-init-.html","text":"misk / misk.client / HttpClientModule / <init> <init> \u00b6 HttpClientModule(name: String , annotation: Annotation ? = null) Provides an OkHttpClient and ProtoMessageHttpClient for a peer service","title":" init "},{"location":"0.x/misk/misk.client/-http-client-module/-init-.html#init","text":"HttpClientModule(name: String , annotation: Annotation ? = null) Provides an OkHttpClient and ProtoMessageHttpClient for a peer service","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-client-module/configure.html","text":"misk / misk.client / HttpClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.client/-http-client-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/index.html","text":"misk / misk.client / HttpClientSSLConfig HttpClientSSLConfig \u00b6 data class HttpClientSSLConfig Constructors \u00b6 Name Summary <init> HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig) Properties \u00b6 Name Summary cert_store val cert_store: CertStoreConfig? trust_store val trust_store: TrustStoreConfig Functions \u00b6 Name Summary toWispConfig fun toWispConfig(): HttpClientSSLConfig","title":"HttpClientSSLConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/index.html#httpclientsslconfig","text":"data class HttpClientSSLConfig","title":"HttpClientSSLConfig"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/index.html#constructors","text":"Name Summary <init> HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/index.html#properties","text":"Name Summary cert_store val cert_store: CertStoreConfig? trust_store val trust_store: TrustStoreConfig","title":"Properties"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/index.html#functions","text":"Name Summary toWispConfig fun toWispConfig(): HttpClientSSLConfig","title":"Functions"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/-init-.html","text":"misk / misk.client / HttpClientSSLConfig / <init> <init> \u00b6 HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)","title":" init "},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/-init-.html#init","text":"HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/cert_store.html","text":"misk / misk.client / HttpClientSSLConfig / cert_store cert_store \u00b6 val cert_store: CertStoreConfig?","title":"cert_store - Misk"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/cert_store.html#cert_store","text":"val cert_store: CertStoreConfig?","title":"cert_store"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/to-wisp-config.html","text":"misk / misk.client / HttpClientSSLConfig / toWispConfig toWispConfig \u00b6 fun toWispConfig(): HttpClientSSLConfig","title":"toWispConfig - Misk"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/to-wisp-config.html#towispconfig","text":"fun toWispConfig(): HttpClientSSLConfig","title":"toWispConfig"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/trust_store.html","text":"misk / misk.client / HttpClientSSLConfig / trust_store trust_store \u00b6 val trust_store: TrustStoreConfig","title":"trust_store - Misk"},{"location":"0.x/misk/misk.client/-http-client-s-s-l-config/trust_store.html#trust_store","text":"val trust_store: TrustStoreConfig","title":"trust_store"},{"location":"0.x/misk/misk.client/-http-clients-config/index.html","text":"misk / misk.client / HttpClientsConfig HttpClientsConfig \u00b6 data class HttpClientsConfig : Config Constructors \u00b6 Name Summary <init> HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf()) Properties \u00b6 Name Summary endpoints val endpoints: Map < String , HttpClientEndpointConfig > hostConfigs val hostConfigs: LinkedHashMap < String , HttpClientConfig > Functions \u00b6 Name Summary endpointNames fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get get operator fun get(clientName: String ): HttpClientEndpointConfig operator fun get(url: URL ): HttpClientEndpointConfig Companion Object Properties \u00b6 Name Summary httpClientConfigDefaults val httpClientConfigDefaults: HttpClientConfig logger val logger: KLogger","title":"HttpClientsConfig - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config/index.html#httpclientsconfig","text":"data class HttpClientsConfig : Config","title":"HttpClientsConfig"},{"location":"0.x/misk/misk.client/-http-clients-config/index.html#constructors","text":"Name Summary <init> HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf())","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-clients-config/index.html#properties","text":"Name Summary endpoints val endpoints: Map < String , HttpClientEndpointConfig > hostConfigs val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"Properties"},{"location":"0.x/misk/misk.client/-http-clients-config/index.html#functions","text":"Name Summary endpointNames fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get get operator fun get(clientName: String ): HttpClientEndpointConfig operator fun get(url: URL ): HttpClientEndpointConfig","title":"Functions"},{"location":"0.x/misk/misk.client/-http-clients-config/index.html#companion-object-properties","text":"Name Summary httpClientConfigDefaults val httpClientConfigDefaults: HttpClientConfig logger val logger: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk/misk.client/-http-clients-config/-init-.html","text":"misk / misk.client / HttpClientsConfig / <init> <init> \u00b6 HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf())","title":" init "},{"location":"0.x/misk/misk.client/-http-clients-config/-init-.html#init","text":"HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf())","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-clients-config/endpoint-names.html","text":"misk / misk.client / HttpClientsConfig / endpointNames endpointNames \u00b6 fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get","title":"endpointNames - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config/endpoint-names.html#endpointnames","text":"fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get","title":"endpointNames"},{"location":"0.x/misk/misk.client/-http-clients-config/endpoints.html","text":"misk / misk.client / HttpClientsConfig / endpoints endpoints \u00b6 val endpoints: Map < String , HttpClientEndpointConfig >","title":"endpoints - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config/endpoints.html#endpoints","text":"val endpoints: Map < String , HttpClientEndpointConfig >","title":"endpoints"},{"location":"0.x/misk/misk.client/-http-clients-config/get.html","text":"misk / misk.client / HttpClientsConfig / get get \u00b6 operator fun get(clientName: String ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given client, populated with defaults as needed operator fun get(url: URL ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given URL, populated with defaults as needed","title":"get - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config/get.html#get","text":"operator fun get(clientName: String ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given client, populated with defaults as needed operator fun get(url: URL ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given URL, populated with defaults as needed","title":"get"},{"location":"0.x/misk/misk.client/-http-clients-config/host-configs.html","text":"misk / misk.client / HttpClientsConfig / hostConfigs hostConfigs \u00b6 val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"hostConfigs - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config/host-configs.html#hostconfigs","text":"val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"hostConfigs"},{"location":"0.x/misk/misk.client/-http-clients-config/http-client-config-defaults.html","text":"misk / misk.client / HttpClientsConfig / httpClientConfigDefaults httpClientConfigDefaults \u00b6 val httpClientConfigDefaults: HttpClientConfig","title":"httpClientConfigDefaults - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config/http-client-config-defaults.html#httpclientconfigdefaults","text":"val httpClientConfigDefaults: HttpClientConfig","title":"httpClientConfigDefaults"},{"location":"0.x/misk/misk.client/-http-clients-config/logger.html","text":"misk / misk.client / HttpClientsConfig / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk/misk.client/-http-clients-config-module/index.html","text":"misk / misk.client / HttpClientsConfigModule HttpClientsConfigModule \u00b6 class HttpClientsConfigModule : KAbstractModule Constructors \u00b6 Name Summary <init> HttpClientsConfigModule(config: HttpClientsConfig ) Functions \u00b6 Name Summary configure fun configure(): Unit","title":"HttpClientsConfigModule - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config-module/index.html#httpclientsconfigmodule","text":"class HttpClientsConfigModule : KAbstractModule","title":"HttpClientsConfigModule"},{"location":"0.x/misk/misk.client/-http-clients-config-module/index.html#constructors","text":"Name Summary <init> HttpClientsConfigModule(config: HttpClientsConfig )","title":"Constructors"},{"location":"0.x/misk/misk.client/-http-clients-config-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.client/-http-clients-config-module/-init-.html","text":"misk / misk.client / HttpClientsConfigModule / <init> <init> \u00b6 HttpClientsConfigModule(config: HttpClientsConfig )","title":" init "},{"location":"0.x/misk/misk.client/-http-clients-config-module/-init-.html#init","text":"HttpClientsConfigModule(config: HttpClientsConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-http-clients-config-module/configure.html","text":"misk / misk.client / HttpClientsConfigModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.client/-http-clients-config-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/index.html","text":"misk / misk.client / JettyPortPeerClientModule JettyPortPeerClientModule \u00b6 class JettyPortPeerClientModule : KAbstractModule For testing. Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the Jetty server\u2019s port. Constructors \u00b6 Name Summary <init> JettyPortPeerClientModule() For testing. Functions \u00b6 Name Summary peerClientFactory fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , jetty: JettyService ): PeerClientFactory","title":"JettyPortPeerClientModule - Misk"},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/index.html#jettyportpeerclientmodule","text":"class JettyPortPeerClientModule : KAbstractModule For testing. Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the Jetty server\u2019s port.","title":"JettyPortPeerClientModule"},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/index.html#constructors","text":"Name Summary <init> JettyPortPeerClientModule() For testing.","title":"Constructors"},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/index.html#functions","text":"Name Summary peerClientFactory fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , jetty: JettyService ): PeerClientFactory","title":"Functions"},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/-init-.html","text":"misk / misk.client / JettyPortPeerClientModule / <init> <init> \u00b6 JettyPortPeerClientModule() For testing. Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the Jetty server\u2019s port.","title":" init "},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/-init-.html#init","text":"JettyPortPeerClientModule() For testing. Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the Jetty server\u2019s port.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/peer-client-factory.html","text":"misk / misk.client / JettyPortPeerClientModule / peerClientFactory peerClientFactory \u00b6 @Provides @Singleton fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , jetty: JettyService ): PeerClientFactory","title":"peerClientFactory - Misk"},{"location":"0.x/misk/misk.client/-jetty-port-peer-client-module/peer-client-factory.html#peerclientfactory","text":"@Provides @Singleton fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , jetty: JettyService ): PeerClientFactory","title":"peerClientFactory"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/index.html","text":"misk / misk.client / OkHttpClientCommonConfigurator OkHttpClientCommonConfigurator \u00b6 class OkHttpClientCommonConfigurator Constructors \u00b6 Name Summary <init> OkHttpClientCommonConfigurator() Properties \u00b6 Name Summary delegate val delegate: OkHttpClientCommonConfigurator Functions \u00b6 Name Summary configure fun configure(builder: Builder, config: HttpClientEndpointConfig): Builder","title":"OkHttpClientCommonConfigurator - Misk"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/index.html#okhttpclientcommonconfigurator","text":"class OkHttpClientCommonConfigurator","title":"OkHttpClientCommonConfigurator"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/index.html#constructors","text":"Name Summary <init> OkHttpClientCommonConfigurator()","title":"Constructors"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/index.html#properties","text":"Name Summary delegate val delegate: OkHttpClientCommonConfigurator","title":"Properties"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/index.html#functions","text":"Name Summary configure fun configure(builder: Builder, config: HttpClientEndpointConfig): Builder","title":"Functions"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/-init-.html","text":"misk / misk.client / OkHttpClientCommonConfigurator / <init> <init> \u00b6 OkHttpClientCommonConfigurator()","title":" init "},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/-init-.html#init","text":"OkHttpClientCommonConfigurator()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/configure.html","text":"misk / misk.client / OkHttpClientCommonConfigurator / configure configure \u00b6 fun configure(builder: Builder, config: HttpClientEndpointConfig): Builder","title":"configure - Misk"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/configure.html#configure","text":"fun configure(builder: Builder, config: HttpClientEndpointConfig): Builder","title":"configure"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/delegate.html","text":"misk / misk.client / OkHttpClientCommonConfigurator / delegate delegate \u00b6 val delegate: OkHttpClientCommonConfigurator","title":"delegate - Misk"},{"location":"0.x/misk/misk.client/-ok-http-client-common-configurator/delegate.html#delegate","text":"val delegate: OkHttpClientCommonConfigurator","title":"delegate"},{"location":"0.x/misk/misk.client/-peer-client-factory/index.html","text":"misk / misk.client / PeerClientFactory PeerClientFactory \u00b6 class PeerClientFactory Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. An OkHttpClient is cached for each peer. Constructors \u00b6 Name Summary <init> PeerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , httpsPort: Int ) Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. Functions \u00b6 Name Summary baseUrl fun baseUrl(peer: Member): String Get the base URL for calling the given peer cluster member. client fun client(peer: Member): OkHttpClient Get a client to call the given peer cluster member. This client will fail when calling different services, as determined by the OU in the certificate returned by the called service.","title":"PeerClientFactory - Misk"},{"location":"0.x/misk/misk.client/-peer-client-factory/index.html#peerclientfactory","text":"class PeerClientFactory Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. An OkHttpClient is cached for each peer.","title":"PeerClientFactory"},{"location":"0.x/misk/misk.client/-peer-client-factory/index.html#constructors","text":"Name Summary <init> PeerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , httpsPort: Int ) Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster.","title":"Constructors"},{"location":"0.x/misk/misk.client/-peer-client-factory/index.html#functions","text":"Name Summary baseUrl fun baseUrl(peer: Member): String Get the base URL for calling the given peer cluster member. client fun client(peer: Member): OkHttpClient Get a client to call the given peer cluster member. This client will fail when calling different services, as determined by the OU in the certificate returned by the called service.","title":"Functions"},{"location":"0.x/misk/misk.client/-peer-client-factory/-init-.html","text":"misk / misk.client / PeerClientFactory / <init> <init> \u00b6 PeerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , httpsPort: Int ) Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. An OkHttpClient is cached for each peer.","title":" init "},{"location":"0.x/misk/misk.client/-peer-client-factory/-init-.html#init","text":"PeerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , httpsPort: Int ) Factory that creates OkHttpClient s for connecting to another instance of the same application running in the same cluster. An OkHttpClient is cached for each peer.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-peer-client-factory/base-url.html","text":"misk / misk.client / PeerClientFactory / baseUrl baseUrl \u00b6 fun baseUrl(peer: Member): String Get the base URL for calling the given peer cluster member.","title":"baseUrl - Misk"},{"location":"0.x/misk/misk.client/-peer-client-factory/base-url.html#baseurl","text":"fun baseUrl(peer: Member): String Get the base URL for calling the given peer cluster member.","title":"baseUrl"},{"location":"0.x/misk/misk.client/-peer-client-factory/client.html","text":"misk / misk.client / PeerClientFactory / client client \u00b6 fun client(peer: Member): OkHttpClient Get a client to call the given peer cluster member. This client will fail when calling different services, as determined by the OU in the certificate returned by the called service.","title":"client - Misk"},{"location":"0.x/misk/misk.client/-peer-client-factory/client.html#client","text":"fun client(peer: Member): OkHttpClient Get a client to call the given peer cluster member. This client will fail when calling different services, as determined by the OU in the certificate returned by the called service.","title":"client"},{"location":"0.x/misk/misk.client/-peer-client-module/index.html","text":"misk / misk.client / PeerClientModule PeerClientModule \u00b6 class PeerClientModule : KAbstractModule Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig . Constructors \u00b6 Name Summary <init> PeerClientModule() Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig . Functions \u00b6 Name Summary peerClientFactory fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , webConfig: WebConfig ): PeerClientFactory","title":"PeerClientModule - Misk"},{"location":"0.x/misk/misk.client/-peer-client-module/index.html#peerclientmodule","text":"class PeerClientModule : KAbstractModule Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig .","title":"PeerClientModule"},{"location":"0.x/misk/misk.client/-peer-client-module/index.html#constructors","text":"Name Summary <init> PeerClientModule() Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig .","title":"Constructors"},{"location":"0.x/misk/misk.client/-peer-client-module/index.html#functions","text":"Name Summary peerClientFactory fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , webConfig: WebConfig ): PeerClientFactory","title":"Functions"},{"location":"0.x/misk/misk.client/-peer-client-module/-init-.html","text":"misk / misk.client / PeerClientModule / <init> <init> \u00b6 PeerClientModule() Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig .","title":" init "},{"location":"0.x/misk/misk.client/-peer-client-module/-init-.html#init","text":"PeerClientModule() Binds a PeerClientFactory that calls peers on the HTTPS port of this process\u2019s server, as determined by the SSL port in the WebConfig .","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-peer-client-module/peer-client-factory.html","text":"misk / misk.client / PeerClientModule / peerClientFactory peerClientFactory \u00b6 @Provides @Singleton fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , webConfig: WebConfig ): PeerClientFactory","title":"peerClientFactory - Misk"},{"location":"0.x/misk/misk.client/-peer-client-module/peer-client-factory.html#peerclientfactory","text":"@Provides @Singleton fun peerClientFactory(appName: String , httpClientsConfig: HttpClientsConfig , httpClientFactory: HttpClientFactory , webConfig: WebConfig ): PeerClientFactory","title":"peerClientFactory"},{"location":"0.x/misk/misk.client/-proto-message-http-client/index.html","text":"misk / misk.client / ProtoMessageHttpClient ProtoMessageHttpClient \u00b6 class ProtoMessageHttpClient This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes. Constructors \u00b6 Name Summary <init> ProtoMessageHttpClient(baseUrl: String , moshi: Moshi, okHttp: OkHttpClient) This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes. Functions \u00b6 Name Summary post fun <O : Any > post(path: String , requestBody: Message<*, *>, responseType: Class < O >): O fun <O : Any > post(path: String , requestBody: Message<*, *>): O","title":"ProtoMessageHttpClient - Misk"},{"location":"0.x/misk/misk.client/-proto-message-http-client/index.html#protomessagehttpclient","text":"class ProtoMessageHttpClient This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes.","title":"ProtoMessageHttpClient"},{"location":"0.x/misk/misk.client/-proto-message-http-client/index.html#constructors","text":"Name Summary <init> ProtoMessageHttpClient(baseUrl: String , moshi: Moshi, okHttp: OkHttpClient) This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes.","title":"Constructors"},{"location":"0.x/misk/misk.client/-proto-message-http-client/index.html#functions","text":"Name Summary post fun <O : Any > post(path: String , requestBody: Message<*, *>, responseType: Class < O >): O fun <O : Any > post(path: String , requestBody: Message<*, *>): O","title":"Functions"},{"location":"0.x/misk/misk.client/-proto-message-http-client/-init-.html","text":"misk / misk.client / ProtoMessageHttpClient / <init> <init> \u00b6 ProtoMessageHttpClient(baseUrl: String , moshi: Moshi, okHttp: OkHttpClient) This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes.","title":" init "},{"location":"0.x/misk/misk.client/-proto-message-http-client/-init-.html#init","text":"ProtoMessageHttpClient(baseUrl: String , moshi: Moshi, okHttp: OkHttpClient) This helper class is for making HTTP requests to an endpoint that handles protobuf Message classes.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-proto-message-http-client/post.html","text":"misk / misk.client / ProtoMessageHttpClient / post post \u00b6 fun <O : Any > post(path: String , requestBody: Message<*, *>, responseType: Class < O >): O inline fun <reified O : Any > post(path: String , requestBody: Message<*, *>): O","title":"post - Misk"},{"location":"0.x/misk/misk.client/-proto-message-http-client/post.html#post","text":"fun <O : Any > post(path: String , requestBody: Message<*, *>, responseType: Class < O >): O inline fun <reified O : Any > post(path: String , requestBody: Message<*, *>): O","title":"post"},{"location":"0.x/misk/misk.client/-typed-client-factory/index.html","text":"misk / misk.client / TypedClientFactory TypedClientFactory \u00b6 class TypedClientFactory Constructors \u00b6 Name Summary <init> TypedClientFactory() Functions \u00b6 Name Summary build fun <T : Any > build(endpointConfig: HttpClientEndpointConfig , kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>?): T Build up a typed client dynamically in runtime. This is useful for platform-type services that cannot statically define all of the services they talk to. fun <T : Any > build(endpointConfig: HttpClientEndpointConfig , name: String , retrofitBuilderProvider: Provider<Builder>? = null): T Reified flavor of build","title":"TypedClientFactory - Misk"},{"location":"0.x/misk/misk.client/-typed-client-factory/index.html#typedclientfactory","text":"class TypedClientFactory","title":"TypedClientFactory"},{"location":"0.x/misk/misk.client/-typed-client-factory/index.html#constructors","text":"Name Summary <init> TypedClientFactory()","title":"Constructors"},{"location":"0.x/misk/misk.client/-typed-client-factory/index.html#functions","text":"Name Summary build fun <T : Any > build(endpointConfig: HttpClientEndpointConfig , kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>?): T Build up a typed client dynamically in runtime. This is useful for platform-type services that cannot statically define all of the services they talk to. fun <T : Any > build(endpointConfig: HttpClientEndpointConfig , name: String , retrofitBuilderProvider: Provider<Builder>? = null): T Reified flavor of build","title":"Functions"},{"location":"0.x/misk/misk.client/-typed-client-factory/-init-.html","text":"misk / misk.client / TypedClientFactory / <init> <init> \u00b6 TypedClientFactory()","title":" init "},{"location":"0.x/misk/misk.client/-typed-client-factory/-init-.html#init","text":"TypedClientFactory()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-typed-client-factory/build.html","text":"misk / misk.client / TypedClientFactory / build build \u00b6 fun <T : Any > build(endpointConfig: HttpClientEndpointConfig , kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>?): T Build up a typed client dynamically in runtime. This is useful for platform-type services that cannot statically define all of the services they talk to. Services should cache the resulting clients to avoid incurring the construction on every call. Parameters \u00b6 endpointConfig - HTTP configuration to use to connect to the service kclass - The class of the typed client that will be built name - A name to reference the client by for observability purposes retrofitBuilderProvider - Optional retrofit builder override. If not provided, an empty builder is used inline fun <reified T : Any > build(endpointConfig: HttpClientEndpointConfig , name: String , retrofitBuilderProvider: Provider<Builder>? = null): T Reified flavor of build","title":"build - Misk"},{"location":"0.x/misk/misk.client/-typed-client-factory/build.html#build","text":"fun <T : Any > build(endpointConfig: HttpClientEndpointConfig , kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>?): T Build up a typed client dynamically in runtime. This is useful for platform-type services that cannot statically define all of the services they talk to. Services should cache the resulting clients to avoid incurring the construction on every call.","title":"build"},{"location":"0.x/misk/misk.client/-typed-client-factory/build.html#parameters","text":"endpointConfig - HTTP configuration to use to connect to the service kclass - The class of the typed client that will be built name - A name to reference the client by for observability purposes retrofitBuilderProvider - Optional retrofit builder override. If not provided, an empty builder is used inline fun <reified T : Any > build(endpointConfig: HttpClientEndpointConfig , name: String , retrofitBuilderProvider: Provider<Builder>? = null): T Reified flavor of build","title":"Parameters"},{"location":"0.x/misk/misk.client/-typed-http-client-module/index.html","text":"misk / misk.client / TypedHttpClientModule TypedHttpClientModule \u00b6 class TypedHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client given an API interface and an HTTP configuration. Parameters \u00b6 retrofitBuilderProvider - Optional provider of a Retrofit.Builder . This provider should not return a singleton since the builder it returns will be mutated. Constructors \u00b6 Name Summary <init> TypedHttpClientModule(kclass: KClass < T >, name: String , annotation: Annotation ? = null, retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client given an API interface and an HTTP configuration. Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <T : Any > create(name: String , annotation: Annotation ? = null): TypedHttpClientModule < T >","title":"TypedHttpClientModule - Misk"},{"location":"0.x/misk/misk.client/-typed-http-client-module/index.html#typedhttpclientmodule","text":"class TypedHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client given an API interface and an HTTP configuration.","title":"TypedHttpClientModule"},{"location":"0.x/misk/misk.client/-typed-http-client-module/index.html#parameters","text":"retrofitBuilderProvider - Optional provider of a Retrofit.Builder . This provider should not return a singleton since the builder it returns will be mutated.","title":"Parameters"},{"location":"0.x/misk/misk.client/-typed-http-client-module/index.html#constructors","text":"Name Summary <init> TypedHttpClientModule(kclass: KClass < T >, name: String , annotation: Annotation ? = null, retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client given an API interface and an HTTP configuration.","title":"Constructors"},{"location":"0.x/misk/misk.client/-typed-http-client-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.client/-typed-http-client-module/index.html#companion-object-functions","text":"Name Summary create fun <T : Any > create(name: String , annotation: Annotation ? = null): TypedHttpClientModule < T >","title":"Companion Object Functions"},{"location":"0.x/misk/misk.client/-typed-http-client-module/-init-.html","text":"misk / misk.client / TypedHttpClientModule / <init> <init> \u00b6 TypedHttpClientModule(kclass: KClass < T >, name: String , annotation: Annotation ? = null, retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client given an API interface and an HTTP configuration. Parameters \u00b6 retrofitBuilderProvider - Optional provider of a Retrofit.Builder . This provider should not return a singleton since the builder it returns will be mutated.","title":" init "},{"location":"0.x/misk/misk.client/-typed-http-client-module/-init-.html#init","text":"TypedHttpClientModule(kclass: KClass < T >, name: String , annotation: Annotation ? = null, retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client given an API interface and an HTTP configuration.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-typed-http-client-module/-init-.html#parameters","text":"retrofitBuilderProvider - Optional provider of a Retrofit.Builder . This provider should not return a singleton since the builder it returns will be mutated.","title":"Parameters"},{"location":"0.x/misk/misk.client/-typed-http-client-module/configure.html","text":"misk / misk.client / TypedHttpClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.client/-typed-http-client-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.client/-typed-http-client-module/create.html","text":"misk / misk.client / TypedHttpClientModule / create create \u00b6 inline fun <reified T : Any > create(name: String , annotation: Annotation ? = null): TypedHttpClientModule < T >","title":"create - Misk"},{"location":"0.x/misk/misk.client/-typed-http-client-module/create.html#create","text":"inline fun <reified T : Any > create(name: String , annotation: Annotation ? = null): TypedHttpClientModule < T >","title":"create"},{"location":"0.x/misk/misk.client/-typed-peer-client-factory/index.html","text":"misk / misk.client / TypedPeerClientFactory TypedPeerClientFactory \u00b6 interface TypedPeerClientFactory<T> Factory for creating typed clients that call other members of a cluster. Functions \u00b6 Name Summary client abstract fun client(peer: Member): T","title":"TypedPeerClientFactory - Misk"},{"location":"0.x/misk/misk.client/-typed-peer-client-factory/index.html#typedpeerclientfactory","text":"interface TypedPeerClientFactory<T> Factory for creating typed clients that call other members of a cluster.","title":"TypedPeerClientFactory"},{"location":"0.x/misk/misk.client/-typed-peer-client-factory/index.html#functions","text":"Name Summary client abstract fun client(peer: Member): T","title":"Functions"},{"location":"0.x/misk/misk.client/-typed-peer-client-factory/client.html","text":"misk / misk.client / TypedPeerClientFactory / client client \u00b6 abstract fun client(peer: Member): T","title":"client - Misk"},{"location":"0.x/misk/misk.client/-typed-peer-client-factory/client.html#client","text":"abstract fun client(peer: Member): T","title":"client"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/index.html","text":"misk / misk.client / TypedPeerHttpClientModule TypedPeerHttpClientModule \u00b6 class TypedPeerHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. The factory returned typed clients that can be used to call other members of the cluster. Constructors \u00b6 Name Summary <init> TypedPeerHttpClientModule(kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <T : Any > create(name: String ): TypedPeerHttpClientModule < T >","title":"TypedPeerHttpClientModule - Misk"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/index.html#typedpeerhttpclientmodule","text":"class TypedPeerHttpClientModule<T : Any > : KAbstractModule Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. The factory returned typed clients that can be used to call other members of the cluster.","title":"TypedPeerHttpClientModule"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/index.html#constructors","text":"Name Summary <init> TypedPeerHttpClientModule(kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration.","title":"Constructors"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/index.html#companion-object-functions","text":"Name Summary create fun <T : Any > create(name: String ): TypedPeerHttpClientModule < T >","title":"Companion Object Functions"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/-init-.html","text":"misk / misk.client / TypedPeerHttpClientModule / <init> <init> \u00b6 TypedPeerHttpClientModule(kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. The factory returned typed clients that can be used to call other members of the cluster.","title":" init "},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/-init-.html#init","text":"TypedPeerHttpClientModule(kclass: KClass < T >, name: String , retrofitBuilderProvider: Provider<Builder>? = null) Creates a retrofit-backed typed client factory given an API interface and an HTTP configuration. The factory returned typed clients that can be used to call other members of the cluster.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/configure.html","text":"misk / misk.client / TypedPeerHttpClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/create.html","text":"misk / misk.client / TypedPeerHttpClientModule / create create \u00b6 inline fun <reified T : Any > create(name: String ): TypedPeerHttpClientModule < T >","title":"create - Misk"},{"location":"0.x/misk/misk.client/-typed-peer-http-client-module/create.html#create","text":"inline fun <reified T : Any > create(name: String ): TypedPeerHttpClientModule < T >","title":"create"},{"location":"0.x/misk/misk.clustering.kubernetes/index.html","text":"misk / misk.clustering.kubernetes Package misk.clustering.kubernetes \u00b6 Types \u00b6 Name Summary KubernetesClusterModule class KubernetesClusterModule : KAbstractModule KubernetesClusterModule installs cluster support based on Kubernetes KubernetesConfig data class KubernetesConfig : Config","title":"Package misk.clustering.kubernetes - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/index.html#package-miskclusteringkubernetes","text":"","title":"Package misk.clustering.kubernetes"},{"location":"0.x/misk/misk.clustering.kubernetes/index.html#types","text":"Name Summary KubernetesClusterModule class KubernetesClusterModule : KAbstractModule KubernetesClusterModule installs cluster support based on Kubernetes KubernetesConfig data class KubernetesConfig : Config","title":"Types"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/index.html","text":"misk / misk.clustering.kubernetes / KubernetesClusterModule KubernetesClusterModule \u00b6 class KubernetesClusterModule : KAbstractModule KubernetesClusterModule installs cluster support based on Kubernetes Constructors \u00b6 Name Summary <init> KubernetesClusterModule(config: KubernetesConfig ) KubernetesClusterModule installs cluster support based on Kubernetes Functions \u00b6 Name Summary configure fun configure(): Unit","title":"KubernetesClusterModule - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/index.html#kubernetesclustermodule","text":"class KubernetesClusterModule : KAbstractModule KubernetesClusterModule installs cluster support based on Kubernetes","title":"KubernetesClusterModule"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/index.html#constructors","text":"Name Summary <init> KubernetesClusterModule(config: KubernetesConfig ) KubernetesClusterModule installs cluster support based on Kubernetes","title":"Constructors"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/-init-.html","text":"misk / misk.clustering.kubernetes / KubernetesClusterModule / <init> <init> \u00b6 KubernetesClusterModule(config: KubernetesConfig ) KubernetesClusterModule installs cluster support based on Kubernetes","title":" init "},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/-init-.html#init","text":"KubernetesClusterModule(config: KubernetesConfig ) KubernetesClusterModule installs cluster support based on Kubernetes","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/configure.html","text":"misk / misk.clustering.kubernetes / KubernetesClusterModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-cluster-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/index.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig KubernetesConfig \u00b6 data class KubernetesConfig : Config Constructors \u00b6 Name Summary <init> KubernetesConfig(my_pod_namespace: String = System.getenv(\"MY_POD_NAMESPACE\") ?: \"<invalid-namespace>\", my_pod_name: String = System.getenv(\"MY_POD_NAME\") ?: \"<invalid-pod-name>\", my_pod_ip: String = System.getenv(\"MY_POD_IP\") ?: \"<invalid-pod-ip>\", clustering_pod_label_selector: String ? = null, kubernetes_watch_read_timeout: Long = 60, kubernetes_read_timeout: Long = 15, kubernetes_connect_timeout: Long = 5) Properties \u00b6 Name Summary clustering_pod_label_selector val clustering_pod_label_selector: String ? Optional Kubernetes label selector to filter which pods in the namespace are considered to be in the same cluster. If omitted, all healthy pods in the namespace are included in the cluster. Ex: \u201capp = helloserver\u201d. kubernetes_connect_timeout val kubernetes_connect_timeout: Long kubernetes_read_timeout val kubernetes_read_timeout: Long kubernetes_watch_read_timeout val kubernetes_watch_read_timeout: Long my_pod_ip val my_pod_ip: String my_pod_name val my_pod_name: String my_pod_namespace val my_pod_namespace: String","title":"KubernetesConfig - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/index.html#kubernetesconfig","text":"data class KubernetesConfig : Config","title":"KubernetesConfig"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/index.html#constructors","text":"Name Summary <init> KubernetesConfig(my_pod_namespace: String = System.getenv(\"MY_POD_NAMESPACE\") ?: \"<invalid-namespace>\", my_pod_name: String = System.getenv(\"MY_POD_NAME\") ?: \"<invalid-pod-name>\", my_pod_ip: String = System.getenv(\"MY_POD_IP\") ?: \"<invalid-pod-ip>\", clustering_pod_label_selector: String ? = null, kubernetes_watch_read_timeout: Long = 60, kubernetes_read_timeout: Long = 15, kubernetes_connect_timeout: Long = 5)","title":"Constructors"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/index.html#properties","text":"Name Summary clustering_pod_label_selector val clustering_pod_label_selector: String ? Optional Kubernetes label selector to filter which pods in the namespace are considered to be in the same cluster. If omitted, all healthy pods in the namespace are included in the cluster. Ex: \u201capp = helloserver\u201d. kubernetes_connect_timeout val kubernetes_connect_timeout: Long kubernetes_read_timeout val kubernetes_read_timeout: Long kubernetes_watch_read_timeout val kubernetes_watch_read_timeout: Long my_pod_ip val my_pod_ip: String my_pod_name val my_pod_name: String my_pod_namespace val my_pod_namespace: String","title":"Properties"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/-init-.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / <init> <init> \u00b6 KubernetesConfig(my_pod_namespace: String = System.getenv(\"MY_POD_NAMESPACE\") ?: \"<invalid-namespace>\", my_pod_name: String = System.getenv(\"MY_POD_NAME\") ?: \"<invalid-pod-name>\", my_pod_ip: String = System.getenv(\"MY_POD_IP\") ?: \"<invalid-pod-ip>\", clustering_pod_label_selector: String ? = null, kubernetes_watch_read_timeout: Long = 60, kubernetes_read_timeout: Long = 15, kubernetes_connect_timeout: Long = 5)","title":" init "},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/-init-.html#init","text":"KubernetesConfig(my_pod_namespace: String = System.getenv(\"MY_POD_NAMESPACE\") ?: \"<invalid-namespace>\", my_pod_name: String = System.getenv(\"MY_POD_NAME\") ?: \"<invalid-pod-name>\", my_pod_ip: String = System.getenv(\"MY_POD_IP\") ?: \"<invalid-pod-ip>\", clustering_pod_label_selector: String ? = null, kubernetes_watch_read_timeout: Long = 60, kubernetes_read_timeout: Long = 15, kubernetes_connect_timeout: Long = 5)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/clustering_pod_label_selector.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / clustering_pod_label_selector clustering_pod_label_selector \u00b6 val clustering_pod_label_selector: String ? Optional Kubernetes label selector to filter which pods in the namespace are considered to be in the same cluster. If omitted, all healthy pods in the namespace are included in the cluster. Ex: \u201capp = helloserver\u201d. Property \u00b6 clustering_pod_label_selector - Optional Kubernetes label selector to filter which pods in the namespace are considered to be in the same cluster. If omitted, all healthy pods in the namespace are included in the cluster. Ex: \u201capp = helloserver\u201d.","title":"clustering_pod_label_selector - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/clustering_pod_label_selector.html#clustering_pod_label_selector","text":"val clustering_pod_label_selector: String ? Optional Kubernetes label selector to filter which pods in the namespace are considered to be in the same cluster. If omitted, all healthy pods in the namespace are included in the cluster. Ex: \u201capp = helloserver\u201d.","title":"clustering_pod_label_selector"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/clustering_pod_label_selector.html#property","text":"clustering_pod_label_selector - Optional Kubernetes label selector to filter which pods in the namespace are considered to be in the same cluster. If omitted, all healthy pods in the namespace are included in the cluster. Ex: \u201capp = helloserver\u201d.","title":"Property"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/kubernetes_connect_timeout.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / kubernetes_connect_timeout kubernetes_connect_timeout \u00b6 val kubernetes_connect_timeout: Long","title":"kubernetes_connect_timeout - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/kubernetes_connect_timeout.html#kubernetes_connect_timeout","text":"val kubernetes_connect_timeout: Long","title":"kubernetes_connect_timeout"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/kubernetes_read_timeout.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / kubernetes_read_timeout kubernetes_read_timeout \u00b6 val kubernetes_read_timeout: Long","title":"kubernetes_read_timeout - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/kubernetes_read_timeout.html#kubernetes_read_timeout","text":"val kubernetes_read_timeout: Long","title":"kubernetes_read_timeout"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/kubernetes_watch_read_timeout.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / kubernetes_watch_read_timeout kubernetes_watch_read_timeout \u00b6 val kubernetes_watch_read_timeout: Long","title":"kubernetes_watch_read_timeout - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/kubernetes_watch_read_timeout.html#kubernetes_watch_read_timeout","text":"val kubernetes_watch_read_timeout: Long","title":"kubernetes_watch_read_timeout"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/my_pod_ip.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / my_pod_ip my_pod_ip \u00b6 val my_pod_ip: String","title":"my_pod_ip - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/my_pod_ip.html#my_pod_ip","text":"val my_pod_ip: String","title":"my_pod_ip"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/my_pod_name.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / my_pod_name my_pod_name \u00b6 val my_pod_name: String","title":"my_pod_name - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/my_pod_name.html#my_pod_name","text":"val my_pod_name: String","title":"my_pod_name"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/my_pod_namespace.html","text":"misk / misk.clustering.kubernetes / KubernetesConfig / my_pod_namespace my_pod_namespace \u00b6 val my_pod_namespace: String","title":"my_pod_namespace - Misk"},{"location":"0.x/misk/misk.clustering.kubernetes/-kubernetes-config/my_pod_namespace.html#my_pod_namespace","text":"val my_pod_namespace: String","title":"my_pod_namespace"},{"location":"0.x/misk/misk.clustering.weights/index.html","text":"misk / misk.clustering.weights Package misk.clustering.weights \u00b6 Types \u00b6 Name Summary ActiveClusterWeight class ActiveClusterWeight : ClusterWeightProvider A static ClusterWeightProvider that always returns 100 ActiveClusterWeightModule class ActiveClusterWeightModule : KAbstractModule Provides an ActiveClusterWeight ClusterWeightProvider interface ClusterWeightProvider Provides the current weight assigned to the cluster. ClusterWeightService interface ClusterWeightService : Service A marker interface for the Service that produces the ClusterWeightProvider . FakeClusterWeight class FakeClusterWeight : ClusterWeightProvider A ClusterWeightProvider for testing FakeClusterWeightModule class FakeClusterWeightModule : KAbstractModule Provides a FakeClusterWeight for testing","title":"Package misk.clustering.weights - Misk"},{"location":"0.x/misk/misk.clustering.weights/index.html#package-miskclusteringweights","text":"","title":"Package misk.clustering.weights"},{"location":"0.x/misk/misk.clustering.weights/index.html#types","text":"Name Summary ActiveClusterWeight class ActiveClusterWeight : ClusterWeightProvider A static ClusterWeightProvider that always returns 100 ActiveClusterWeightModule class ActiveClusterWeightModule : KAbstractModule Provides an ActiveClusterWeight ClusterWeightProvider interface ClusterWeightProvider Provides the current weight assigned to the cluster. ClusterWeightService interface ClusterWeightService : Service A marker interface for the Service that produces the ClusterWeightProvider . FakeClusterWeight class FakeClusterWeight : ClusterWeightProvider A ClusterWeightProvider for testing FakeClusterWeightModule class FakeClusterWeightModule : KAbstractModule Provides a FakeClusterWeight for testing","title":"Types"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-service.html","text":"misk / misk.clustering.weights / ClusterWeightService ClusterWeightService \u00b6 interface ClusterWeightService : Service A marker interface for the Service that produces the ClusterWeightProvider .","title":"ClusterWeightService - Misk"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-service.html#clusterweightservice","text":"interface ClusterWeightService : Service A marker interface for the Service that produces the ClusterWeightProvider .","title":"ClusterWeightService"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/index.html","text":"misk / misk.clustering.weights / ActiveClusterWeight ActiveClusterWeight \u00b6 class ActiveClusterWeight : ClusterWeightProvider A static ClusterWeightProvider that always returns 100 Constructors \u00b6 Name Summary <init> ActiveClusterWeight() A static ClusterWeightProvider that always returns 100 Functions \u00b6 Name Summary get fun get(): Int","title":"ActiveClusterWeight - Misk"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/index.html#activeclusterweight","text":"class ActiveClusterWeight : ClusterWeightProvider A static ClusterWeightProvider that always returns 100","title":"ActiveClusterWeight"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/index.html#constructors","text":"Name Summary <init> ActiveClusterWeight() A static ClusterWeightProvider that always returns 100","title":"Constructors"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/index.html#functions","text":"Name Summary get fun get(): Int","title":"Functions"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/-init-.html","text":"misk / misk.clustering.weights / ActiveClusterWeight / <init> <init> \u00b6 ActiveClusterWeight() A static ClusterWeightProvider that always returns 100","title":" init "},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/-init-.html#init","text":"ActiveClusterWeight() A static ClusterWeightProvider that always returns 100","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/get.html","text":"misk / misk.clustering.weights / ActiveClusterWeight / get get \u00b6 fun get(): Int Overrides ClusterWeightProvider.get","title":"get - Misk"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight/get.html#get","text":"fun get(): Int Overrides ClusterWeightProvider.get","title":"get"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/index.html","text":"misk / misk.clustering.weights / ActiveClusterWeightModule ActiveClusterWeightModule \u00b6 class ActiveClusterWeightModule : KAbstractModule Provides an ActiveClusterWeight Constructors \u00b6 Name Summary <init> ActiveClusterWeightModule() Provides an ActiveClusterWeight Functions \u00b6 Name Summary configure fun configure(): Unit","title":"ActiveClusterWeightModule - Misk"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/index.html#activeclusterweightmodule","text":"class ActiveClusterWeightModule : KAbstractModule Provides an ActiveClusterWeight","title":"ActiveClusterWeightModule"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/index.html#constructors","text":"Name Summary <init> ActiveClusterWeightModule() Provides an ActiveClusterWeight","title":"Constructors"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/-init-.html","text":"misk / misk.clustering.weights / ActiveClusterWeightModule / <init> <init> \u00b6 ActiveClusterWeightModule() Provides an ActiveClusterWeight","title":" init "},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/-init-.html#init","text":"ActiveClusterWeightModule() Provides an ActiveClusterWeight","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/configure.html","text":"misk / misk.clustering.weights / ActiveClusterWeightModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.clustering.weights/-active-cluster-weight-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-provider/index.html","text":"misk / misk.clustering.weights / ClusterWeightProvider ClusterWeightProvider \u00b6 interface ClusterWeightProvider Provides the current weight assigned to the cluster. A weight value is between 0 and 100 to indicate how much traffic a cluster should handle. Typically an active-passive setup has 1 active cluster with 100 and 1 passive cluster with 0. If your application does not require dynamic cluster weights, you can install the ActiveClusterWeightModule If your application does require dynamic cluster weights, you need must provide your own impl and ClusterWeightService for others to depend on. Functions \u00b6 Name Summary get abstract fun get(): Int Inheritors \u00b6 Name Summary ActiveClusterWeight class ActiveClusterWeight : ClusterWeightProvider A static ClusterWeightProvider that always returns 100 FakeClusterWeight class FakeClusterWeight : ClusterWeightProvider A ClusterWeightProvider for testing","title":"ClusterWeightProvider - Misk"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-provider/index.html#clusterweightprovider","text":"interface ClusterWeightProvider Provides the current weight assigned to the cluster. A weight value is between 0 and 100 to indicate how much traffic a cluster should handle. Typically an active-passive setup has 1 active cluster with 100 and 1 passive cluster with 0. If your application does not require dynamic cluster weights, you can install the ActiveClusterWeightModule If your application does require dynamic cluster weights, you need must provide your own impl and ClusterWeightService for others to depend on.","title":"ClusterWeightProvider"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-provider/index.html#functions","text":"Name Summary get abstract fun get(): Int","title":"Functions"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-provider/index.html#inheritors","text":"Name Summary ActiveClusterWeight class ActiveClusterWeight : ClusterWeightProvider A static ClusterWeightProvider that always returns 100 FakeClusterWeight class FakeClusterWeight : ClusterWeightProvider A ClusterWeightProvider for testing","title":"Inheritors"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-provider/get.html","text":"misk / misk.clustering.weights / ClusterWeightProvider / get get \u00b6 abstract fun get(): Int","title":"get - Misk"},{"location":"0.x/misk/misk.clustering.weights/-cluster-weight-provider/get.html#get","text":"abstract fun get(): Int","title":"get"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/index.html","text":"misk / misk.clustering.weights / FakeClusterWeight FakeClusterWeight \u00b6 class FakeClusterWeight : ClusterWeightProvider A ClusterWeightProvider for testing Constructors \u00b6 Name Summary <init> FakeClusterWeight() A ClusterWeightProvider for testing Functions \u00b6 Name Summary get fun get(): Int setClusterWeight fun setClusterWeight(weight: Int ): Unit","title":"FakeClusterWeight - Misk"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/index.html#fakeclusterweight","text":"class FakeClusterWeight : ClusterWeightProvider A ClusterWeightProvider for testing","title":"FakeClusterWeight"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/index.html#constructors","text":"Name Summary <init> FakeClusterWeight() A ClusterWeightProvider for testing","title":"Constructors"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/index.html#functions","text":"Name Summary get fun get(): Int setClusterWeight fun setClusterWeight(weight: Int ): Unit","title":"Functions"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/-init-.html","text":"misk / misk.clustering.weights / FakeClusterWeight / <init> <init> \u00b6 FakeClusterWeight() A ClusterWeightProvider for testing","title":" init "},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/-init-.html#init","text":"FakeClusterWeight() A ClusterWeightProvider for testing","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/get.html","text":"misk / misk.clustering.weights / FakeClusterWeight / get get \u00b6 fun get(): Int Overrides ClusterWeightProvider.get","title":"get - Misk"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/get.html#get","text":"fun get(): Int Overrides ClusterWeightProvider.get","title":"get"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/set-cluster-weight.html","text":"misk / misk.clustering.weights / FakeClusterWeight / setClusterWeight setClusterWeight \u00b6 fun setClusterWeight(weight: Int ): Unit","title":"setClusterWeight - Misk"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight/set-cluster-weight.html#setclusterweight","text":"fun setClusterWeight(weight: Int ): Unit","title":"setClusterWeight"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/index.html","text":"misk / misk.clustering.weights / FakeClusterWeightModule FakeClusterWeightModule \u00b6 class FakeClusterWeightModule : KAbstractModule Provides a FakeClusterWeight for testing Constructors \u00b6 Name Summary <init> FakeClusterWeightModule() Provides a FakeClusterWeight for testing Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeClusterWeightModule - Misk"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/index.html#fakeclusterweightmodule","text":"class FakeClusterWeightModule : KAbstractModule Provides a FakeClusterWeight for testing","title":"FakeClusterWeightModule"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/index.html#constructors","text":"Name Summary <init> FakeClusterWeightModule() Provides a FakeClusterWeight for testing","title":"Constructors"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/-init-.html","text":"misk / misk.clustering.weights / FakeClusterWeightModule / <init> <init> \u00b6 FakeClusterWeightModule() Provides a FakeClusterWeight for testing","title":" init "},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/-init-.html#init","text":"FakeClusterWeightModule() Provides a FakeClusterWeight for testing","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/configure.html","text":"misk / misk.clustering.weights / FakeClusterWeightModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.clustering.weights/-fake-cluster-weight-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.concurrent/index.html","text":"misk / misk.concurrent Package misk.concurrent \u00b6 Types \u00b6 Name Summary ExecutorServiceModule class ExecutorServiceModule : KAbstractModule Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down. ExplicitReleaseBlockingQueue class ExplicitReleaseBlockingQueue<T> : BlockingQueue < T > An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take , BlockingQueue.poll , and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release . Used by tests that want to explicitly control when pollers receive queued items. ExplicitReleaseDelayQueue class ExplicitReleaseDelayQueue<T : Delayed > : BlockingQueue < T > An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire WrappingListeningExecutorService abstract class WrappingListeningExecutorService : ForwardingListeningExecutorService ListeningExecutorService which wraps all calls","title":"Package misk.concurrent - Misk"},{"location":"0.x/misk/misk.concurrent/index.html#package-miskconcurrent","text":"","title":"Package misk.concurrent"},{"location":"0.x/misk/misk.concurrent/index.html#types","text":"Name Summary ExecutorServiceModule class ExecutorServiceModule : KAbstractModule Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down. ExplicitReleaseBlockingQueue class ExplicitReleaseBlockingQueue<T> : BlockingQueue < T > An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take , BlockingQueue.poll , and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release . Used by tests that want to explicitly control when pollers receive queued items. ExplicitReleaseDelayQueue class ExplicitReleaseDelayQueue<T : Delayed > : BlockingQueue < T > An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire WrappingListeningExecutorService abstract class WrappingListeningExecutorService : ForwardingListeningExecutorService ListeningExecutorService which wraps all calls","title":"Types"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/index.html","text":"misk / misk.concurrent / ExecutorServiceModule ExecutorServiceModule \u00b6 class ExecutorServiceModule : KAbstractModule Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down. Constructors \u00b6 Name Summary <init> ExecutorServiceModule(annotation: KClass <out Annotation >, createFunction: (ExecutorServiceFactory) -> ExecutorService ) Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down. Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary withFixedThreadPool fun withFixedThreadPool(annotation: KClass <out Annotation >, nameFormat: String , nThreads: Int ): ExecutorServiceModule withUnboundThreadPool fun withUnboundThreadPool(annotation: KClass <out Annotation >, nameFormat: String ): ExecutorServiceModule","title":"ExecutorServiceModule - Misk"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/index.html#executorservicemodule","text":"class ExecutorServiceModule : KAbstractModule Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down.","title":"ExecutorServiceModule"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/index.html#constructors","text":"Name Summary <init> ExecutorServiceModule(annotation: KClass <out Annotation >, createFunction: (ExecutorServiceFactory) -> ExecutorService ) Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down.","title":"Constructors"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/index.html#companion-object-functions","text":"Name Summary withFixedThreadPool fun withFixedThreadPool(annotation: KClass <out Annotation >, nameFormat: String , nThreads: Int ): ExecutorServiceModule withUnboundThreadPool fun withUnboundThreadPool(annotation: KClass <out Annotation >, nameFormat: String ): ExecutorServiceModule","title":"Companion Object Functions"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/-init-.html","text":"misk / misk.concurrent / ExecutorServiceModule / <init> <init> \u00b6 ExecutorServiceModule(annotation: KClass <out Annotation >, createFunction: (ExecutorServiceFactory) -> ExecutorService ) Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down.","title":" init "},{"location":"0.x/misk/misk.concurrent/-executor-service-module/-init-.html#init","text":"ExecutorServiceModule(annotation: KClass <out Annotation >, createFunction: (ExecutorServiceFactory) -> ExecutorService ) Install this to bind an executor service with annotation . The executor service will be automatically shut down when the service shuts down.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/configure.html","text":"misk / misk.concurrent / ExecutorServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/with-fixed-thread-pool.html","text":"misk / misk.concurrent / ExecutorServiceModule / withFixedThreadPool withFixedThreadPool \u00b6 fun withFixedThreadPool(annotation: KClass <out Annotation >, nameFormat: String , nThreads: Int ): ExecutorServiceModule","title":"withFixedThreadPool - Misk"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/with-fixed-thread-pool.html#withfixedthreadpool","text":"fun withFixedThreadPool(annotation: KClass <out Annotation >, nameFormat: String , nThreads: Int ): ExecutorServiceModule","title":"withFixedThreadPool"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/with-unbound-thread-pool.html","text":"misk / misk.concurrent / ExecutorServiceModule / withUnboundThreadPool withUnboundThreadPool \u00b6 fun withUnboundThreadPool(annotation: KClass <out Annotation >, nameFormat: String ): ExecutorServiceModule","title":"withUnboundThreadPool - Misk"},{"location":"0.x/misk/misk.concurrent/-executor-service-module/with-unbound-thread-pool.html#withunboundthreadpool","text":"fun withUnboundThreadPool(annotation: KClass <out Annotation >, nameFormat: String ): ExecutorServiceModule","title":"withUnboundThreadPool"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/index.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue ExplicitReleaseBlockingQueue \u00b6 class ExplicitReleaseBlockingQueue<T> : BlockingQueue < T > An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take , BlockingQueue.poll , and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release . Used by tests that want to explicitly control when pollers receive queued items. Constructors \u00b6 Name Summary <init> ExplicitReleaseBlockingQueue() Properties \u00b6 Name Summary size val size: Int Functions \u00b6 Name Summary add fun add(element: T ): Boolean addAll fun addAll(elements: Collection < T >): Boolean clear fun clear(): Unit contains fun contains(element: T ): Boolean containsAll fun containsAll(elements: Collection < T >): Boolean drainTo fun drainTo(c: MutableCollection <in T >): Int fun drainTo(c: MutableCollection <in T >?, maxElements: Int ): Int element fun element(): T isEmpty fun isEmpty(): Boolean iterator fun iterator(): MutableIterator < T > offer fun offer(e: T ): Boolean fun offer(e: T , timeout: Long , unit: TimeUnit ): Boolean peek fun peek(): T ? peekPending fun peekPending(): T ? poll fun poll(timeout: Long , unit: TimeUnit ): T ? fun poll(): T ? put fun put(e: T ): Unit release fun release(n: Int ): Int releases up to n items from the pending queue, making them visible to take , poll , peek , etc. This method does not \u201cextend credit\u201d; if n > number of pending items on the queue, every currently pending item is made visible, but any items added in the future continue to go onto the pending queue releaseAll fun releaseAll(): Int releases all items from the pending queue, returning the number of items released remainingCapacity fun remainingCapacity(): Int remove fun remove(element: T ): Boolean fun remove(): T ? removeAll fun removeAll(elements: Collection < T >): Boolean retainAll fun retainAll(elements: Collection < T >): Boolean take fun take(): T","title":"ExplicitReleaseBlockingQueue - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/index.html#explicitreleaseblockingqueue","text":"class ExplicitReleaseBlockingQueue<T> : BlockingQueue < T > An ExplicitReleaseBlockingQueue is a BlockingQueue that only returns elements from BlockingQueue.take , BlockingQueue.poll , and BlockingQueue.peek after a call to ExplicitReleaseBlockingQueue.release . Used by tests that want to explicitly control when pollers receive queued items.","title":"ExplicitReleaseBlockingQueue"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/index.html#constructors","text":"Name Summary <init> ExplicitReleaseBlockingQueue()","title":"Constructors"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/index.html#properties","text":"Name Summary size val size: Int","title":"Properties"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/index.html#functions","text":"Name Summary add fun add(element: T ): Boolean addAll fun addAll(elements: Collection < T >): Boolean clear fun clear(): Unit contains fun contains(element: T ): Boolean containsAll fun containsAll(elements: Collection < T >): Boolean drainTo fun drainTo(c: MutableCollection <in T >): Int fun drainTo(c: MutableCollection <in T >?, maxElements: Int ): Int element fun element(): T isEmpty fun isEmpty(): Boolean iterator fun iterator(): MutableIterator < T > offer fun offer(e: T ): Boolean fun offer(e: T , timeout: Long , unit: TimeUnit ): Boolean peek fun peek(): T ? peekPending fun peekPending(): T ? poll fun poll(timeout: Long , unit: TimeUnit ): T ? fun poll(): T ? put fun put(e: T ): Unit release fun release(n: Int ): Int releases up to n items from the pending queue, making them visible to take , poll , peek , etc. This method does not \u201cextend credit\u201d; if n > number of pending items on the queue, every currently pending item is made visible, but any items added in the future continue to go onto the pending queue releaseAll fun releaseAll(): Int releases all items from the pending queue, returning the number of items released remainingCapacity fun remainingCapacity(): Int remove fun remove(element: T ): Boolean fun remove(): T ? removeAll fun removeAll(elements: Collection < T >): Boolean retainAll fun retainAll(elements: Collection < T >): Boolean take fun take(): T","title":"Functions"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/-init-.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / <init> <init> \u00b6 ExplicitReleaseBlockingQueue()","title":" init "},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/-init-.html#init","text":"ExplicitReleaseBlockingQueue()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/add-all.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / addAll addAll \u00b6 fun addAll(elements: Collection < T >): Boolean","title":"addAll - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/add-all.html#addall","text":"fun addAll(elements: Collection < T >): Boolean","title":"addAll"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/add.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / add add \u00b6 fun add(element: T ): Boolean","title":"add - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/add.html#add","text":"fun add(element: T ): Boolean","title":"add"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/clear.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / clear clear \u00b6 fun clear(): Unit","title":"clear - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/clear.html#clear","text":"fun clear(): Unit","title":"clear"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/contains-all.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / containsAll containsAll \u00b6 fun containsAll(elements: Collection < T >): Boolean","title":"containsAll - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/contains-all.html#containsall","text":"fun containsAll(elements: Collection < T >): Boolean","title":"containsAll"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/contains.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / contains contains \u00b6 fun contains(element: T ): Boolean","title":"contains - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/contains.html#contains","text":"fun contains(element: T ): Boolean","title":"contains"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/drain-to.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / drainTo drainTo \u00b6 fun drainTo(c: MutableCollection <in T >): Int fun drainTo(c: MutableCollection <in T >?, maxElements: Int ): Int","title":"drainTo - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/drain-to.html#drainto","text":"fun drainTo(c: MutableCollection <in T >): Int fun drainTo(c: MutableCollection <in T >?, maxElements: Int ): Int","title":"drainTo"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/element.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / element element \u00b6 fun element(): T","title":"element - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/element.html#element","text":"fun element(): T","title":"element"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/is-empty.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / isEmpty isEmpty \u00b6 fun isEmpty(): Boolean","title":"isEmpty - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/is-empty.html#isempty","text":"fun isEmpty(): Boolean","title":"isEmpty"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/iterator.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / iterator iterator \u00b6 fun iterator(): MutableIterator < T >","title":"iterator - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/iterator.html#iterator","text":"fun iterator(): MutableIterator < T >","title":"iterator"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/offer.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / offer offer \u00b6 fun offer(e: T ): Boolean fun offer(e: T , timeout: Long , unit: TimeUnit ): Boolean","title":"offer - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/offer.html#offer","text":"fun offer(e: T ): Boolean fun offer(e: T , timeout: Long , unit: TimeUnit ): Boolean","title":"offer"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/peek-pending.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / peekPending peekPending \u00b6 fun peekPending(): T ?","title":"peekPending - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/peek-pending.html#peekpending","text":"fun peekPending(): T ?","title":"peekPending"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/peek.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / peek peek \u00b6 fun peek(): T ?","title":"peek - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/peek.html#peek","text":"fun peek(): T ?","title":"peek"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/poll.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / poll poll \u00b6 fun poll(timeout: Long , unit: TimeUnit ): T ? fun poll(): T ?","title":"poll - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/poll.html#poll","text":"fun poll(timeout: Long , unit: TimeUnit ): T ? fun poll(): T ?","title":"poll"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/put.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / put put \u00b6 fun put(e: T ): Unit","title":"put - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/put.html#put","text":"fun put(e: T ): Unit","title":"put"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/release-all.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / releaseAll releaseAll \u00b6 fun releaseAll(): Int releases all items from the pending queue, returning the number of items released","title":"releaseAll - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/release-all.html#releaseall","text":"fun releaseAll(): Int releases all items from the pending queue, returning the number of items released","title":"releaseAll"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/release.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / release release \u00b6 fun release(n: Int ): Int releases up to n items from the pending queue, making them visible to take , poll , peek , etc. This method does not \u201cextend credit\u201d; if n > number of pending items on the queue, every currently pending item is made visible, but any items added in the future continue to go onto the pending queue Return the number of items actually releases","title":"release - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/release.html#release","text":"fun release(n: Int ): Int releases up to n items from the pending queue, making them visible to take , poll , peek , etc. This method does not \u201cextend credit\u201d; if n > number of pending items on the queue, every currently pending item is made visible, but any items added in the future continue to go onto the pending queue Return the number of items actually releases","title":"release"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/remaining-capacity.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / remainingCapacity remainingCapacity \u00b6 fun remainingCapacity(): Int","title":"remainingCapacity - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/remaining-capacity.html#remainingcapacity","text":"fun remainingCapacity(): Int","title":"remainingCapacity"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/remove-all.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / removeAll removeAll \u00b6 fun removeAll(elements: Collection < T >): Boolean","title":"removeAll - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/remove-all.html#removeall","text":"fun removeAll(elements: Collection < T >): Boolean","title":"removeAll"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/remove.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / remove remove \u00b6 fun remove(element: T ): Boolean fun remove(): T ?","title":"remove - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/remove.html#remove","text":"fun remove(element: T ): Boolean fun remove(): T ?","title":"remove"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/retain-all.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / retainAll retainAll \u00b6 fun retainAll(elements: Collection < T >): Boolean","title":"retainAll - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/retain-all.html#retainall","text":"fun retainAll(elements: Collection < T >): Boolean","title":"retainAll"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/size.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / size size \u00b6 val size: Int","title":"size - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/size.html#size","text":"val size: Int","title":"size"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/take.html","text":"misk / misk.concurrent / ExplicitReleaseBlockingQueue / take take \u00b6 fun take(): T","title":"take - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-blocking-queue/take.html#take","text":"fun take(): T","title":"take"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/index.html","text":"misk / misk.concurrent / ExplicitReleaseDelayQueue ExplicitReleaseDelayQueue \u00b6 class ExplicitReleaseDelayQueue<T : Delayed > : BlockingQueue < T > An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire Constructors \u00b6 Name Summary <init> ExplicitReleaseDelayQueue() Functions \u00b6 Name Summary peekPending fun peekPending(): T ? release fun release(n: Int ): Int releaseAll fun releaseAll(): Int","title":"ExplicitReleaseDelayQueue - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/index.html#explicitreleasedelayqueue","text":"class ExplicitReleaseDelayQueue<T : Delayed > : BlockingQueue < T > An ExplicitReleaseDelayQueue is an ExplicitReleaseBlockingQueue that release elements in the order in which they expire","title":"ExplicitReleaseDelayQueue"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/index.html#constructors","text":"Name Summary <init> ExplicitReleaseDelayQueue()","title":"Constructors"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/index.html#functions","text":"Name Summary peekPending fun peekPending(): T ? release fun release(n: Int ): Int releaseAll fun releaseAll(): Int","title":"Functions"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/-init-.html","text":"misk / misk.concurrent / ExplicitReleaseDelayQueue / <init> <init> \u00b6 ExplicitReleaseDelayQueue()","title":" init "},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/-init-.html#init","text":"ExplicitReleaseDelayQueue()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/peek-pending.html","text":"misk / misk.concurrent / ExplicitReleaseDelayQueue / peekPending peekPending \u00b6 fun peekPending(): T ?","title":"peekPending - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/peek-pending.html#peekpending","text":"fun peekPending(): T ?","title":"peekPending"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/release-all.html","text":"misk / misk.concurrent / ExplicitReleaseDelayQueue / releaseAll releaseAll \u00b6 fun releaseAll(): Int","title":"releaseAll - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/release-all.html#releaseall","text":"fun releaseAll(): Int","title":"releaseAll"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/release.html","text":"misk / misk.concurrent / ExplicitReleaseDelayQueue / release release \u00b6 fun release(n: Int ): Int","title":"release - Misk"},{"location":"0.x/misk/misk.concurrent/-explicit-release-delay-queue/release.html#release","text":"fun release(n: Int ): Int","title":"release"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/index.html","text":"misk / misk.concurrent / WrappingListeningExecutorService WrappingListeningExecutorService \u00b6 abstract class WrappingListeningExecutorService : ForwardingListeningExecutorService ListeningExecutorService which wraps all calls Constructors \u00b6 Name Summary <init> WrappingListeningExecutorService() ListeningExecutorService which wraps all calls Functions \u00b6 Name Summary execute open fun execute(runnable: Runnable ): Unit invokeAll open fun <T> invokeAll(callables: Collection < Callable < T >>): List < Future < T >> open fun <T> invokeAll(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): List < Future < T >> invokeAny open fun <T> invokeAny(callables: Collection < Callable < T >>): T open fun <T> invokeAny(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): T submit open fun <T> submit(callable: Callable < T >): ListenableFuture< T > open fun <T> submit(runnable: Runnable , result: T ): ListenableFuture< T > open fun submit(runnable: Runnable ): ListenableFuture<*> wrap abstract fun <T> wrap(callable: Callable < T >): Callable < T > Wraps the specified callable and returns the new wrapped one. Inheritors \u00b6 Name Summary ActionScopedExecutorService class ActionScopedExecutorService : WrappingListeningExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":"WrappingListeningExecutorService - Misk"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/index.html#wrappinglisteningexecutorservice","text":"abstract class WrappingListeningExecutorService : ForwardingListeningExecutorService ListeningExecutorService which wraps all calls","title":"WrappingListeningExecutorService"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/index.html#constructors","text":"Name Summary <init> WrappingListeningExecutorService() ListeningExecutorService which wraps all calls","title":"Constructors"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/index.html#functions","text":"Name Summary execute open fun execute(runnable: Runnable ): Unit invokeAll open fun <T> invokeAll(callables: Collection < Callable < T >>): List < Future < T >> open fun <T> invokeAll(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): List < Future < T >> invokeAny open fun <T> invokeAny(callables: Collection < Callable < T >>): T open fun <T> invokeAny(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): T submit open fun <T> submit(callable: Callable < T >): ListenableFuture< T > open fun <T> submit(runnable: Runnable , result: T ): ListenableFuture< T > open fun submit(runnable: Runnable ): ListenableFuture<*> wrap abstract fun <T> wrap(callable: Callable < T >): Callable < T > Wraps the specified callable and returns the new wrapped one.","title":"Functions"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/index.html#inheritors","text":"Name Summary ActionScopedExecutorService class ActionScopedExecutorService : WrappingListeningExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":"Inheritors"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/-init-.html","text":"misk / misk.concurrent / WrappingListeningExecutorService / <init> <init> \u00b6 WrappingListeningExecutorService() ListeningExecutorService which wraps all calls","title":" init "},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/-init-.html#init","text":"WrappingListeningExecutorService() ListeningExecutorService which wraps all calls","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/execute.html","text":"misk / misk.concurrent / WrappingListeningExecutorService / execute execute \u00b6 open fun execute(runnable: Runnable ): Unit","title":"execute - Misk"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/execute.html#execute","text":"open fun execute(runnable: Runnable ): Unit","title":"execute"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-all.html","text":"misk / misk.concurrent / WrappingListeningExecutorService / invokeAll invokeAll \u00b6 open fun <T> invokeAll(callables: Collection < Callable < T >>): List < Future < T >> open fun <T> invokeAll(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): List < Future < T >>","title":"invokeAll - Misk"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-all.html#invokeall","text":"open fun <T> invokeAll(callables: Collection < Callable < T >>): List < Future < T >> open fun <T> invokeAll(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): List < Future < T >>","title":"invokeAll"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-any.html","text":"misk / misk.concurrent / WrappingListeningExecutorService / invokeAny invokeAny \u00b6 open fun <T> invokeAny(callables: Collection < Callable < T >>): T open fun <T> invokeAny(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): T","title":"invokeAny - Misk"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/invoke-any.html#invokeany","text":"open fun <T> invokeAny(callables: Collection < Callable < T >>): T open fun <T> invokeAny(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): T","title":"invokeAny"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/submit.html","text":"misk / misk.concurrent / WrappingListeningExecutorService / submit submit \u00b6 open fun <T> submit(callable: Callable < T >): ListenableFuture< T > open fun <T> submit(runnable: Runnable , result: T ): ListenableFuture< T > open fun submit(runnable: Runnable ): ListenableFuture<*>","title":"submit - Misk"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/submit.html#submit","text":"open fun <T> submit(callable: Callable < T >): ListenableFuture< T > open fun <T> submit(runnable: Runnable , result: T ): ListenableFuture< T > open fun submit(runnable: Runnable ): ListenableFuture<*>","title":"submit"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/wrap.html","text":"misk / misk.concurrent / WrappingListeningExecutorService / wrap wrap \u00b6 protected abstract fun <T> wrap(callable: Callable < T >): Callable < T > Wraps the specified callable and returns the new wrapped one.","title":"wrap - Misk"},{"location":"0.x/misk/misk.concurrent/-wrapping-listening-executor-service/wrap.html#wrap","text":"protected abstract fun <T> wrap(callable: Callable < T >): Callable < T > Wraps the specified callable and returns the new wrapped one.","title":"wrap"},{"location":"0.x/misk/misk.config/index.html","text":"misk / misk.config Package misk.config \u00b6 Types \u00b6 Name Summary AppNameModule class AppNameModule : KAbstractModule Binds a @AppName String to the provided application name ConfigModule class ConfigModule<T : Config> : KAbstractModule MiskConfig object MiskConfig Secret interface Secret<T> Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader . Annotations \u00b6 Name Summary AppName annotation class AppName","title":"Package misk.config - Misk"},{"location":"0.x/misk/misk.config/index.html#package-miskconfig","text":"","title":"Package misk.config"},{"location":"0.x/misk/misk.config/index.html#types","text":"Name Summary AppNameModule class AppNameModule : KAbstractModule Binds a @AppName String to the provided application name ConfigModule class ConfigModule<T : Config> : KAbstractModule MiskConfig object MiskConfig Secret interface Secret<T> Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader .","title":"Types"},{"location":"0.x/misk/misk.config/index.html#annotations","text":"Name Summary AppName annotation class AppName","title":"Annotations"},{"location":"0.x/misk/misk.config/-app-name/index.html","text":"misk / misk.config / AppName AppName \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION, AnnotationTarget.VALUE_PARAMETER]) annotation class AppName Constructors \u00b6 Name Summary <init> AppName()","title":"AppName - Misk"},{"location":"0.x/misk/misk.config/-app-name/index.html#appname","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION, AnnotationTarget.VALUE_PARAMETER]) annotation class AppName","title":"AppName"},{"location":"0.x/misk/misk.config/-app-name/index.html#constructors","text":"Name Summary <init> AppName()","title":"Constructors"},{"location":"0.x/misk/misk.config/-app-name/-init-.html","text":"misk / misk.config / AppName / <init> <init> \u00b6 AppName()","title":" init "},{"location":"0.x/misk/misk.config/-app-name/-init-.html#init","text":"AppName()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.config/-app-name-module/index.html","text":"misk / misk.config / AppNameModule AppNameModule \u00b6 class AppNameModule : KAbstractModule Binds a @AppName String to the provided application name Constructors \u00b6 Name Summary <init> AppNameModule(appName: String ) Binds a @AppName String to the provided application name Functions \u00b6 Name Summary configure fun configure(): Unit","title":"AppNameModule - Misk"},{"location":"0.x/misk/misk.config/-app-name-module/index.html#appnamemodule","text":"class AppNameModule : KAbstractModule Binds a @AppName String to the provided application name","title":"AppNameModule"},{"location":"0.x/misk/misk.config/-app-name-module/index.html#constructors","text":"Name Summary <init> AppNameModule(appName: String ) Binds a @AppName String to the provided application name","title":"Constructors"},{"location":"0.x/misk/misk.config/-app-name-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.config/-app-name-module/-init-.html","text":"misk / misk.config / AppNameModule / <init> <init> \u00b6 AppNameModule(appName: String ) Binds a @AppName String to the provided application name","title":" init "},{"location":"0.x/misk/misk.config/-app-name-module/-init-.html#init","text":"AppNameModule(appName: String ) Binds a @AppName String to the provided application name","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.config/-app-name-module/configure.html","text":"misk / misk.config / AppNameModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.config/-app-name-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.config/-config-module/index.html","text":"misk / misk.config / ConfigModule ConfigModule \u00b6 class ConfigModule<T : Config> : KAbstractModule Constructors \u00b6 Name Summary <init> ConfigModule(configClass: Class < T >, appName: String , config: T ) Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <T : Config> create(appName: String , config: T ): ConfigModule < T >","title":"ConfigModule - Misk"},{"location":"0.x/misk/misk.config/-config-module/index.html#configmodule","text":"class ConfigModule<T : Config> : KAbstractModule","title":"ConfigModule"},{"location":"0.x/misk/misk.config/-config-module/index.html#constructors","text":"Name Summary <init> ConfigModule(configClass: Class < T >, appName: String , config: T )","title":"Constructors"},{"location":"0.x/misk/misk.config/-config-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.config/-config-module/index.html#companion-object-functions","text":"Name Summary create fun <T : Config> create(appName: String , config: T ): ConfigModule < T >","title":"Companion Object Functions"},{"location":"0.x/misk/misk.config/-config-module/-init-.html","text":"misk / misk.config / ConfigModule / <init> <init> \u00b6 ConfigModule(configClass: Class < T >, appName: String , config: T )","title":" init "},{"location":"0.x/misk/misk.config/-config-module/-init-.html#init","text":"ConfigModule(configClass: Class < T >, appName: String , config: T )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.config/-config-module/configure.html","text":"misk / misk.config / ConfigModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.config/-config-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.config/-config-module/create.html","text":"misk / misk.config / ConfigModule / create create \u00b6 inline fun <reified T : Config> create(appName: String , config: T ): ConfigModule < T >","title":"create - Misk"},{"location":"0.x/misk/misk.config/-config-module/create.html#create","text":"inline fun <reified T : Config> create(appName: String , config: T ): ConfigModule < T >","title":"create"},{"location":"0.x/misk/misk.config/-misk-config/index.html","text":"misk / misk.config / MiskConfig MiskConfig \u00b6 object MiskConfig Types \u00b6 Name Summary RealSecret class RealSecret<T> : Secret < T > SecretJacksonModule class SecretJacksonModule : SimpleModule Functions \u00b6 Name Summary filesInDir fun filesInDir(dir: String , filter: FilenameFilter = FilenameFilter { _, filename -> filename.endsWith(\".yaml\") }): List < File > flattenYamlMap fun flattenYamlMap(configYamls: Map < String , String ?>): JsonNode Returns a JsonNode that combines the YAMLs in configYamls . If two nodes define the same value the last one wins. load fun <T : Config> load(appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T fun <T : Config> load(configClass: Class <out Config>, appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T loadConfigYamlMap fun loadConfigYamlMap(appName: String , deployment: Deployment, overrideFiles: List < File >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Map < String , String ?> Returns a map whose keys are the names of the source Yaml files to load, and whose values are the contents of those files. If a file is absent the map\u2019s value will be null. toYaml fun <T : Config> toYaml(config: T , resourceLoader: ResourceLoader): String","title":"MiskConfig - Misk"},{"location":"0.x/misk/misk.config/-misk-config/index.html#miskconfig","text":"object MiskConfig","title":"MiskConfig"},{"location":"0.x/misk/misk.config/-misk-config/index.html#types","text":"Name Summary RealSecret class RealSecret<T> : Secret < T > SecretJacksonModule class SecretJacksonModule : SimpleModule","title":"Types"},{"location":"0.x/misk/misk.config/-misk-config/index.html#functions","text":"Name Summary filesInDir fun filesInDir(dir: String , filter: FilenameFilter = FilenameFilter { _, filename -> filename.endsWith(\".yaml\") }): List < File > flattenYamlMap fun flattenYamlMap(configYamls: Map < String , String ?>): JsonNode Returns a JsonNode that combines the YAMLs in configYamls . If two nodes define the same value the last one wins. load fun <T : Config> load(appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T fun <T : Config> load(configClass: Class <out Config>, appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T loadConfigYamlMap fun loadConfigYamlMap(appName: String , deployment: Deployment, overrideFiles: List < File >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Map < String , String ?> Returns a map whose keys are the names of the source Yaml files to load, and whose values are the contents of those files. If a file is absent the map\u2019s value will be null. toYaml fun <T : Config> toYaml(config: T , resourceLoader: ResourceLoader): String","title":"Functions"},{"location":"0.x/misk/misk.config/-misk-config/files-in-dir.html","text":"misk / misk.config / MiskConfig / filesInDir filesInDir \u00b6 @JvmStatic fun filesInDir(dir: String , filter: FilenameFilter = FilenameFilter { _, filename -> filename.endsWith(\".yaml\") }): List < File >","title":"filesInDir - Misk"},{"location":"0.x/misk/misk.config/-misk-config/files-in-dir.html#filesindir","text":"@JvmStatic fun filesInDir(dir: String , filter: FilenameFilter = FilenameFilter { _, filename -> filename.endsWith(\".yaml\") }): List < File >","title":"filesInDir"},{"location":"0.x/misk/misk.config/-misk-config/flatten-yaml-map.html","text":"misk / misk.config / MiskConfig / flattenYamlMap flattenYamlMap \u00b6 fun flattenYamlMap(configYamls: Map < String , String ?>): JsonNode Returns a JsonNode that combines the YAMLs in configYamls . If two nodes define the same value the last one wins.","title":"flattenYamlMap - Misk"},{"location":"0.x/misk/misk.config/-misk-config/flatten-yaml-map.html#flattenyamlmap","text":"fun flattenYamlMap(configYamls: Map < String , String ?>): JsonNode Returns a JsonNode that combines the YAMLs in configYamls . If two nodes define the same value the last one wins.","title":"flattenYamlMap"},{"location":"0.x/misk/misk.config/-misk-config/load-config-yaml-map.html","text":"misk / misk.config / MiskConfig / loadConfigYamlMap loadConfigYamlMap \u00b6 fun loadConfigYamlMap(appName: String , deployment: Deployment, overrideFiles: List < File >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Map < String , String ?> Returns a map whose keys are the names of the source Yaml files to load, and whose values are the contents of those files. If a file is absent the map\u2019s value will be null.","title":"loadConfigYamlMap - Misk"},{"location":"0.x/misk/misk.config/-misk-config/load-config-yaml-map.html#loadconfigyamlmap","text":"fun loadConfigYamlMap(appName: String , deployment: Deployment, overrideFiles: List < File >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Map < String , String ?> Returns a map whose keys are the names of the source Yaml files to load, and whose values are the contents of those files. If a file is absent the map\u2019s value will be null.","title":"loadConfigYamlMap"},{"location":"0.x/misk/misk.config/-misk-config/load.html","text":"misk / misk.config / MiskConfig / load load \u00b6 @JvmStatic inline fun <reified T : Config> load(appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T @JvmStatic fun <T : Config> load(configClass: Class <out Config>, appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T","title":"load - Misk"},{"location":"0.x/misk/misk.config/-misk-config/load.html#load","text":"@JvmStatic inline fun <reified T : Config> load(appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T @JvmStatic fun <T : Config> load(configClass: Class <out Config>, appName: String , deployment: Deployment, overrideFiles: List < File > = listOf(), resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): T","title":"load"},{"location":"0.x/misk/misk.config/-misk-config/to-yaml.html","text":"misk / misk.config / MiskConfig / toYaml toYaml \u00b6 fun <T : Config> toYaml(config: T , resourceLoader: ResourceLoader): String","title":"toYaml - Misk"},{"location":"0.x/misk/misk.config/-misk-config/to-yaml.html#toyaml","text":"fun <T : Config> toYaml(config: T , resourceLoader: ResourceLoader): String","title":"toYaml"},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/index.html","text":"misk / misk.config / MiskConfig / RealSecret RealSecret \u00b6 class RealSecret<T> : Secret < T > Constructors \u00b6 Name Summary <init> RealSecret(value: T ) Properties \u00b6 Name Summary value val value: T","title":"RealSecret - Misk"},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/index.html#realsecret","text":"class RealSecret<T> : Secret < T >","title":"RealSecret"},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/index.html#constructors","text":"Name Summary <init> RealSecret(value: T )","title":"Constructors"},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/index.html#properties","text":"Name Summary value val value: T","title":"Properties"},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/-init-.html","text":"misk / misk.config / MiskConfig / RealSecret / <init> <init> \u00b6 RealSecret(value: T )","title":" init "},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/-init-.html#init","text":"RealSecret(value: T )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/value.html","text":"misk / misk.config / MiskConfig / RealSecret / value value \u00b6 val value: T Overrides Secret.value","title":"value - Misk"},{"location":"0.x/misk/misk.config/-misk-config/-real-secret/value.html#value","text":"val value: T Overrides Secret.value","title":"value"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/index.html","text":"misk / misk.config / MiskConfig / SecretJacksonModule SecretJacksonModule \u00b6 class SecretJacksonModule : SimpleModule Constructors \u00b6 Name Summary <init> SecretJacksonModule(resourceLoader: ResourceLoader, mapper: ObjectMapper) Properties \u00b6 Name Summary mapper val mapper: ObjectMapper resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary setupModule fun setupModule(context: SetupContext?): Unit","title":"SecretJacksonModule - Misk"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/index.html#secretjacksonmodule","text":"class SecretJacksonModule : SimpleModule","title":"SecretJacksonModule"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/index.html#constructors","text":"Name Summary <init> SecretJacksonModule(resourceLoader: ResourceLoader, mapper: ObjectMapper)","title":"Constructors"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/index.html#properties","text":"Name Summary mapper val mapper: ObjectMapper resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/index.html#functions","text":"Name Summary setupModule fun setupModule(context: SetupContext?): Unit","title":"Functions"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/-init-.html","text":"misk / misk.config / MiskConfig / SecretJacksonModule / <init> <init> \u00b6 SecretJacksonModule(resourceLoader: ResourceLoader, mapper: ObjectMapper)","title":" init "},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/-init-.html#init","text":"SecretJacksonModule(resourceLoader: ResourceLoader, mapper: ObjectMapper)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/mapper.html","text":"misk / misk.config / MiskConfig / SecretJacksonModule / mapper mapper \u00b6 val mapper: ObjectMapper","title":"mapper - Misk"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/mapper.html#mapper","text":"val mapper: ObjectMapper","title":"mapper"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/resource-loader.html","text":"misk / misk.config / MiskConfig / SecretJacksonModule / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/setup-module.html","text":"misk / misk.config / MiskConfig / SecretJacksonModule / setupModule setupModule \u00b6 fun setupModule(context: SetupContext?): Unit","title":"setupModule - Misk"},{"location":"0.x/misk/misk.config/-misk-config/-secret-jackson-module/setup-module.html#setupmodule","text":"fun setupModule(context: SetupContext?): Unit","title":"setupModule"},{"location":"0.x/misk/misk.config/-secret/index.html","text":"misk / misk.config / Secret Secret \u00b6 interface Secret<T> Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader . Usage example: data class SuperSecretConfig( val string_value: String, val secret_information: Secret<SecretInformationConfig>, ) : Config With data class SecretInformationConfig( val answer_to_universe: String, val limit: Int ) : Config We would have the SuperSecretConfig yaml be: string_value: \"this is not a secret\" secret_information: \"classpath:/misk/resources/secret_information_values.yaml\" And the secret_information stored as: answer_to_universe: 42 limit: 5 Lastly, this secret information would be accessed using: superSecretConfig.secret_information.value.answer_to_universe Properties \u00b6 Name Summary value abstract val value: T Inheritors \u00b6 Name Summary RealSecret class RealSecret<T> : Secret < T >","title":"Secret - Misk"},{"location":"0.x/misk/misk.config/-secret/index.html#secret","text":"interface Secret<T> Type for any secrets that need to be loaded as reference in their config file. Secret addresses should use format specified in misk.resources.ResourceLoader . Usage example: data class SuperSecretConfig( val string_value: String, val secret_information: Secret<SecretInformationConfig>, ) : Config With data class SecretInformationConfig( val answer_to_universe: String, val limit: Int ) : Config We would have the SuperSecretConfig yaml be: string_value: \"this is not a secret\" secret_information: \"classpath:/misk/resources/secret_information_values.yaml\" And the secret_information stored as: answer_to_universe: 42 limit: 5 Lastly, this secret information would be accessed using: superSecretConfig.secret_information.value.answer_to_universe","title":"Secret"},{"location":"0.x/misk/misk.config/-secret/index.html#properties","text":"Name Summary value abstract val value: T","title":"Properties"},{"location":"0.x/misk/misk.config/-secret/index.html#inheritors","text":"Name Summary RealSecret class RealSecret<T> : Secret < T >","title":"Inheritors"},{"location":"0.x/misk/misk.config/-secret/value.html","text":"misk / misk.config / Secret / value value \u00b6 abstract val value: T","title":"value - Misk"},{"location":"0.x/misk/misk.config/-secret/value.html#value","text":"abstract val value: T","title":"value"},{"location":"0.x/misk/misk.environment/index.html","text":"misk / misk.environment Package misk.environment \u00b6 Types \u00b6 Name Summary DeploymentModule class DeploymentModule : KAbstractModule Binds Deployment to make it available to services and actions EnvVarLoader interface EnvVarLoader : EnvironmentVariableLoader Loads an environment variable value. FakeEnvVarModule class FakeEnvVarModule : KAbstractModule Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding. RealEnvVarModule class RealEnvVarModule : KAbstractModule Binds a EnvVarLoader for production Annotations \u00b6 Name Summary ForEnvVars annotation class ForEnvVars","title":"Package misk.environment - Misk"},{"location":"0.x/misk/misk.environment/index.html#package-miskenvironment","text":"","title":"Package misk.environment"},{"location":"0.x/misk/misk.environment/index.html#types","text":"Name Summary DeploymentModule class DeploymentModule : KAbstractModule Binds Deployment to make it available to services and actions EnvVarLoader interface EnvVarLoader : EnvironmentVariableLoader Loads an environment variable value. FakeEnvVarModule class FakeEnvVarModule : KAbstractModule Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding. RealEnvVarModule class RealEnvVarModule : KAbstractModule Binds a EnvVarLoader for production","title":"Types"},{"location":"0.x/misk/misk.environment/index.html#annotations","text":"Name Summary ForEnvVars annotation class ForEnvVars","title":"Annotations"},{"location":"0.x/misk/misk.environment/-deployment-module/index.html","text":"misk / misk.environment / DeploymentModule DeploymentModule \u00b6 class DeploymentModule : KAbstractModule Binds Deployment to make it available to services and actions Constructors \u00b6 Name Summary <init> DeploymentModule(deployment: Deployment = getDeploymentFromEnvironmentVariable()) Binds Deployment to make it available to services and actions Functions \u00b6 Name Summary configure fun configure(): Unit","title":"DeploymentModule - Misk"},{"location":"0.x/misk/misk.environment/-deployment-module/index.html#deploymentmodule","text":"class DeploymentModule : KAbstractModule Binds Deployment to make it available to services and actions","title":"DeploymentModule"},{"location":"0.x/misk/misk.environment/-deployment-module/index.html#constructors","text":"Name Summary <init> DeploymentModule(deployment: Deployment = getDeploymentFromEnvironmentVariable()) Binds Deployment to make it available to services and actions","title":"Constructors"},{"location":"0.x/misk/misk.environment/-deployment-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.environment/-deployment-module/-init-.html","text":"misk / misk.environment / DeploymentModule / <init> <init> \u00b6 DeploymentModule(deployment: Deployment = getDeploymentFromEnvironmentVariable()) Binds Deployment to make it available to services and actions","title":" init "},{"location":"0.x/misk/misk.environment/-deployment-module/-init-.html#init","text":"DeploymentModule(deployment: Deployment = getDeploymentFromEnvironmentVariable()) Binds Deployment to make it available to services and actions","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.environment/-deployment-module/configure.html","text":"misk / misk.environment / DeploymentModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.environment/-deployment-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.environment/-env-var-loader/index.html","text":"misk / misk.environment / EnvVarLoader EnvVarLoader \u00b6 interface EnvVarLoader : EnvironmentVariableLoader Loads an environment variable value. Functions \u00b6 Name Summary getEnvVar open fun getEnvVar(name: String ): String Get the environment variable value","title":"EnvVarLoader - Misk"},{"location":"0.x/misk/misk.environment/-env-var-loader/index.html#envvarloader","text":"interface EnvVarLoader : EnvironmentVariableLoader Loads an environment variable value.","title":"EnvVarLoader"},{"location":"0.x/misk/misk.environment/-env-var-loader/index.html#functions","text":"Name Summary getEnvVar open fun getEnvVar(name: String ): String Get the environment variable value","title":"Functions"},{"location":"0.x/misk/misk.environment/-env-var-loader/get-env-var.html","text":"misk / misk.environment / EnvVarLoader / getEnvVar getEnvVar \u00b6 open fun getEnvVar(name: String ): String Get the environment variable value Exceptions \u00b6 IllegalStateException - if the environment variable is not found","title":"getEnvVar - Misk"},{"location":"0.x/misk/misk.environment/-env-var-loader/get-env-var.html#getenvvar","text":"open fun getEnvVar(name: String ): String Get the environment variable value","title":"getEnvVar"},{"location":"0.x/misk/misk.environment/-env-var-loader/get-env-var.html#exceptions","text":"IllegalStateException - if the environment variable is not found","title":"Exceptions"},{"location":"0.x/misk/misk.environment/-fake-env-var-module/index.html","text":"misk / misk.environment / FakeEnvVarModule FakeEnvVarModule \u00b6 class FakeEnvVarModule : KAbstractModule Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding. Constructors \u00b6 Name Summary <init> FakeEnvVarModule() Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeEnvVarModule - Misk"},{"location":"0.x/misk/misk.environment/-fake-env-var-module/index.html#fakeenvvarmodule","text":"class FakeEnvVarModule : KAbstractModule Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding.","title":"FakeEnvVarModule"},{"location":"0.x/misk/misk.environment/-fake-env-var-module/index.html#constructors","text":"Name Summary <init> FakeEnvVarModule() Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding.","title":"Constructors"},{"location":"0.x/misk/misk.environment/-fake-env-var-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.environment/-fake-env-var-module/-init-.html","text":"misk / misk.environment / FakeEnvVarModule / <init> <init> \u00b6 FakeEnvVarModule() Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding.","title":" init "},{"location":"0.x/misk/misk.environment/-fake-env-var-module/-init-.html#init","text":"FakeEnvVarModule() Binds a EnvVarLoader for tests. Tests can contribute values through the @ForEnvVars Map<String, String> binding.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.environment/-fake-env-var-module/configure.html","text":"misk / misk.environment / FakeEnvVarModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.environment/-fake-env-var-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.environment/-for-env-vars/index.html","text":"misk / misk.environment / ForEnvVars ForEnvVars \u00b6 @Qualifier annotation class ForEnvVars Constructors \u00b6 Name Summary <init> ForEnvVars()","title":"ForEnvVars - Misk"},{"location":"0.x/misk/misk.environment/-for-env-vars/index.html#forenvvars","text":"@Qualifier annotation class ForEnvVars","title":"ForEnvVars"},{"location":"0.x/misk/misk.environment/-for-env-vars/index.html#constructors","text":"Name Summary <init> ForEnvVars()","title":"Constructors"},{"location":"0.x/misk/misk.environment/-for-env-vars/-init-.html","text":"misk / misk.environment / ForEnvVars / <init> <init> \u00b6 ForEnvVars()","title":" init "},{"location":"0.x/misk/misk.environment/-for-env-vars/-init-.html#init","text":"ForEnvVars()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.environment/-real-env-var-module/index.html","text":"misk / misk.environment / RealEnvVarModule RealEnvVarModule \u00b6 class RealEnvVarModule : KAbstractModule Binds a EnvVarLoader for production Constructors \u00b6 Name Summary <init> RealEnvVarModule() Binds a EnvVarLoader for production Functions \u00b6 Name Summary configure fun configure(): Unit","title":"RealEnvVarModule - Misk"},{"location":"0.x/misk/misk.environment/-real-env-var-module/index.html#realenvvarmodule","text":"class RealEnvVarModule : KAbstractModule Binds a EnvVarLoader for production","title":"RealEnvVarModule"},{"location":"0.x/misk/misk.environment/-real-env-var-module/index.html#constructors","text":"Name Summary <init> RealEnvVarModule() Binds a EnvVarLoader for production","title":"Constructors"},{"location":"0.x/misk/misk.environment/-real-env-var-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.environment/-real-env-var-module/-init-.html","text":"misk / misk.environment / RealEnvVarModule / <init> <init> \u00b6 RealEnvVarModule() Binds a EnvVarLoader for production","title":" init "},{"location":"0.x/misk/misk.environment/-real-env-var-module/-init-.html#init","text":"RealEnvVarModule() Binds a EnvVarLoader for production","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.environment/-real-env-var-module/configure.html","text":"misk / misk.environment / RealEnvVarModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.environment/-real-env-var-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.flags/index.html","text":"misk / misk.flags Package misk.flags \u00b6 Types \u00b6 Name Summary Flag interface Flag<out T> Flags open class Flags FlagsModule abstract class FlagsModule : KAbstractModule Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available FlagStore interface FlagStore Applications register their interest in monitoring flags through the registerFlag calls. If registration and watching requires contacting a remote service (e.g. a flag service, Zookeeper, etc), this should be done asynchronously so that multiple flags can be registered in parallel, with the Flag.get calls blocking until the registration for that flag is complete. An application can also call awaitRegistrationsComplete to block until all pending registrations have completed, allowing e.g. the application to avoid processing incoming requests until all of its flags are available and watched JsonFlag class JsonFlag<out T : Any > : Flag < T > Functions \u00b6 Name Summary registerFlag fun <T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T >","title":"Package misk.flags - Misk"},{"location":"0.x/misk/misk.flags/index.html#package-miskflags","text":"","title":"Package misk.flags"},{"location":"0.x/misk/misk.flags/index.html#types","text":"Name Summary Flag interface Flag<out T> Flags open class Flags FlagsModule abstract class FlagsModule : KAbstractModule Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available FlagStore interface FlagStore Applications register their interest in monitoring flags through the registerFlag calls. If registration and watching requires contacting a remote service (e.g. a flag service, Zookeeper, etc), this should be done asynchronously so that multiple flags can be registered in parallel, with the Flag.get calls blocking until the registration for that flag is complete. An application can also call awaitRegistrationsComplete to block until all pending registrations have completed, allowing e.g. the application to avoid processing incoming requests until all of its flags are available and watched JsonFlag class JsonFlag<out T : Any > : Flag < T >","title":"Types"},{"location":"0.x/misk/misk.flags/index.html#functions","text":"Name Summary registerFlag fun <T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T >","title":"Functions"},{"location":"0.x/misk/misk.flags/register-flag.html","text":"misk / misk.flags / registerFlag registerFlag \u00b6 inline fun <reified T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T >","title":"registerFlag - Misk"},{"location":"0.x/misk/misk.flags/register-flag.html#registerflag","text":"inline fun <reified T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T >","title":"registerFlag"},{"location":"0.x/misk/misk.flags/-flag/index.html","text":"misk / misk.flags / Flag Flag \u00b6 interface Flag<out T> Properties \u00b6 Name Summary description abstract val description: String name abstract val name: String Functions \u00b6 Name Summary get abstract fun get(): T ? Inheritors \u00b6 Name Summary InMemoryFlag interface InMemoryFlag<T> : Flag < T > In-memory representation of flags, allowing the flag to be programmatically changed by tests JsonFlag class JsonFlag<out T : Any > : Flag < T >","title":"Flag - Misk"},{"location":"0.x/misk/misk.flags/-flag/index.html#flag","text":"interface Flag<out T>","title":"Flag"},{"location":"0.x/misk/misk.flags/-flag/index.html#properties","text":"Name Summary description abstract val description: String name abstract val name: String","title":"Properties"},{"location":"0.x/misk/misk.flags/-flag/index.html#functions","text":"Name Summary get abstract fun get(): T ?","title":"Functions"},{"location":"0.x/misk/misk.flags/-flag/index.html#inheritors","text":"Name Summary InMemoryFlag interface InMemoryFlag<T> : Flag < T > In-memory representation of flags, allowing the flag to be programmatically changed by tests JsonFlag class JsonFlag<out T : Any > : Flag < T >","title":"Inheritors"},{"location":"0.x/misk/misk.flags/-flag/description.html","text":"misk / misk.flags / Flag / description description \u00b6 abstract val description: String","title":"description - Misk"},{"location":"0.x/misk/misk.flags/-flag/description.html#description","text":"abstract val description: String","title":"description"},{"location":"0.x/misk/misk.flags/-flag/get.html","text":"misk / misk.flags / Flag / get get \u00b6 abstract fun get(): T ?","title":"get - Misk"},{"location":"0.x/misk/misk.flags/-flag/get.html#get","text":"abstract fun get(): T ?","title":"get"},{"location":"0.x/misk/misk.flags/-flag/name.html","text":"misk / misk.flags / Flag / name name \u00b6 abstract val name: String","title":"name - Misk"},{"location":"0.x/misk/misk.flags/-flag/name.html#name","text":"abstract val name: String","title":"name"},{"location":"0.x/misk/misk.flags/-flag-store/index.html","text":"misk / misk.flags / FlagStore FlagStore \u00b6 interface FlagStore Applications register their interest in monitoring flags through the registerFlag calls. If registration and watching requires contacting a remote service (e.g. a flag service, Zookeeper, etc), this should be done asynchronously so that multiple flags can be registered in parallel, with the Flag.get calls blocking until the registration for that flag is complete. An application can also call awaitRegistrationsComplete to block until all pending registrations have completed, allowing e.g. the application to avoid processing incoming requests until all of its flags are available and watched Functions \u00b6 Name Summary awaitRegistrationsComplete abstract fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Blocks until all pending registrations have completed registerFlag abstract fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): Flag < T > Asynchronously registers interest in the given flag of the provided type Extension Functions \u00b6 Name Summary registerFlag fun <T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T > Inheritors \u00b6 Name Summary InMemoryFlagStore class InMemoryFlagStore : FlagStore In memory implementation of a FlagStore , suitable for use in testing","title":"FlagStore - Misk"},{"location":"0.x/misk/misk.flags/-flag-store/index.html#flagstore","text":"interface FlagStore Applications register their interest in monitoring flags through the registerFlag calls. If registration and watching requires contacting a remote service (e.g. a flag service, Zookeeper, etc), this should be done asynchronously so that multiple flags can be registered in parallel, with the Flag.get calls blocking until the registration for that flag is complete. An application can also call awaitRegistrationsComplete to block until all pending registrations have completed, allowing e.g. the application to avoid processing incoming requests until all of its flags are available and watched","title":"FlagStore"},{"location":"0.x/misk/misk.flags/-flag-store/index.html#functions","text":"Name Summary awaitRegistrationsComplete abstract fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Blocks until all pending registrations have completed registerFlag abstract fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): Flag < T > Asynchronously registers interest in the given flag of the provided type","title":"Functions"},{"location":"0.x/misk/misk.flags/-flag-store/index.html#extension-functions","text":"Name Summary registerFlag fun <T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T >","title":"Extension Functions"},{"location":"0.x/misk/misk.flags/-flag-store/index.html#inheritors","text":"Name Summary InMemoryFlagStore class InMemoryFlagStore : FlagStore In memory implementation of a FlagStore , suitable for use in testing","title":"Inheritors"},{"location":"0.x/misk/misk.flags/-flag-store/await-registrations-complete.html","text":"misk / misk.flags / FlagStore / awaitRegistrationsComplete awaitRegistrationsComplete \u00b6 abstract fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Blocks until all pending registrations have completed","title":"awaitRegistrationsComplete - Misk"},{"location":"0.x/misk/misk.flags/-flag-store/await-registrations-complete.html#awaitregistrationscomplete","text":"abstract fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Blocks until all pending registrations have completed","title":"awaitRegistrationsComplete"},{"location":"0.x/misk/misk.flags/-flag-store/register-flag.html","text":"misk / misk.flags / FlagStore / registerFlag registerFlag \u00b6 abstract fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): Flag < T > Asynchronously registers interest in the given flag of the provided type","title":"registerFlag - Misk"},{"location":"0.x/misk/misk.flags/-flag-store/register-flag.html#registerflag","text":"abstract fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): Flag < T > Asynchronously registers interest in the given flag of the provided type","title":"registerFlag"},{"location":"0.x/misk/misk.flags/-flags/index.html","text":"misk / misk.flags / Flags Flags \u00b6 open class Flags Types \u00b6 Name Summary BooleanFlag class BooleanFlag Context data class Context DoubleFlag class DoubleFlag IntFlag class IntFlag JsonFlagInternal class JsonFlagInternal<T : Any > StringFlag class StringFlag Properties \u00b6 Name Summary context val context: Flags.Context name val name: String Functions \u00b6 Name Summary JsonFlag fun <T : Any > JsonFlag(description: String , name: String ? = null, default: T ? = null): Flags.JsonFlagInternal < T >","title":"Flags - Misk"},{"location":"0.x/misk/misk.flags/-flags/index.html#flags","text":"open class Flags","title":"Flags"},{"location":"0.x/misk/misk.flags/-flags/index.html#types","text":"Name Summary BooleanFlag class BooleanFlag Context data class Context DoubleFlag class DoubleFlag IntFlag class IntFlag JsonFlagInternal class JsonFlagInternal<T : Any > StringFlag class StringFlag","title":"Types"},{"location":"0.x/misk/misk.flags/-flags/index.html#properties","text":"Name Summary context val context: Flags.Context name val name: String","title":"Properties"},{"location":"0.x/misk/misk.flags/-flags/index.html#functions","text":"Name Summary JsonFlag fun <T : Any > JsonFlag(description: String , name: String ? = null, default: T ? = null): Flags.JsonFlagInternal < T >","title":"Functions"},{"location":"0.x/misk/misk.flags/-flags/-json-flag.html","text":"misk / misk.flags / Flags / JsonFlag JsonFlag \u00b6 inline fun <reified T : Any > JsonFlag(description: String , name: String ? = null, default: T ? = null): Flags.JsonFlagInternal < T >","title":"JsonFlag - Misk"},{"location":"0.x/misk/misk.flags/-flags/-json-flag.html#jsonflag","text":"inline fun <reified T : Any > JsonFlag(description: String , name: String ? = null, default: T ? = null): Flags.JsonFlagInternal < T >","title":"JsonFlag"},{"location":"0.x/misk/misk.flags/-flags/context.html","text":"misk / misk.flags / Flags / context context \u00b6 val context: Flags.Context","title":"context - Misk"},{"location":"0.x/misk/misk.flags/-flags/context.html#context","text":"val context: Flags.Context","title":"context"},{"location":"0.x/misk/misk.flags/-flags/name.html","text":"misk / misk.flags / Flags / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk/misk.flags/-flags/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/index.html","text":"misk / misk.flags / Flags / BooleanFlag BooleanFlag \u00b6 class BooleanFlag Constructors \u00b6 Name Summary <init> BooleanFlag(description: String , name: String ? = null, default: Boolean = false) Functions \u00b6 Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Boolean >","title":"BooleanFlag - Misk"},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/index.html#booleanflag","text":"class BooleanFlag","title":"BooleanFlag"},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/index.html#constructors","text":"Name Summary <init> BooleanFlag(description: String , name: String ? = null, default: Boolean = false)","title":"Constructors"},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/index.html#functions","text":"Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Boolean >","title":"Functions"},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/-init-.html","text":"misk / misk.flags / Flags / BooleanFlag / <init> <init> \u00b6 BooleanFlag(description: String , name: String ? = null, default: Boolean = false)","title":" init "},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/-init-.html#init","text":"BooleanFlag(description: String , name: String ? = null, default: Boolean = false)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/provide-delegate.html","text":"misk / misk.flags / Flags / BooleanFlag / provideDelegate provideDelegate \u00b6 operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Boolean >","title":"provideDelegate - Misk"},{"location":"0.x/misk/misk.flags/-flags/-boolean-flag/provide-delegate.html#providedelegate","text":"operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Boolean >","title":"provideDelegate"},{"location":"0.x/misk/misk.flags/-flags/-context/index.html","text":"misk / misk.flags / Flags / Context Context \u00b6 data class Context Constructors \u00b6 Name Summary <init> Context(prefix: String , moshi: Moshi, flagStore: FlagStore ) Properties \u00b6 Name Summary flagStore val flagStore: FlagStore moshi val moshi: Moshi prefix val prefix: String","title":"Context - Misk"},{"location":"0.x/misk/misk.flags/-flags/-context/index.html#context","text":"data class Context","title":"Context"},{"location":"0.x/misk/misk.flags/-flags/-context/index.html#constructors","text":"Name Summary <init> Context(prefix: String , moshi: Moshi, flagStore: FlagStore )","title":"Constructors"},{"location":"0.x/misk/misk.flags/-flags/-context/index.html#properties","text":"Name Summary flagStore val flagStore: FlagStore moshi val moshi: Moshi prefix val prefix: String","title":"Properties"},{"location":"0.x/misk/misk.flags/-flags/-context/-init-.html","text":"misk / misk.flags / Flags / Context / <init> <init> \u00b6 Context(prefix: String , moshi: Moshi, flagStore: FlagStore )","title":" init "},{"location":"0.x/misk/misk.flags/-flags/-context/-init-.html#init","text":"Context(prefix: String , moshi: Moshi, flagStore: FlagStore )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags/-flags/-context/flag-store.html","text":"misk / misk.flags / Flags / Context / flagStore flagStore \u00b6 val flagStore: FlagStore","title":"flagStore - Misk"},{"location":"0.x/misk/misk.flags/-flags/-context/flag-store.html#flagstore","text":"val flagStore: FlagStore","title":"flagStore"},{"location":"0.x/misk/misk.flags/-flags/-context/moshi.html","text":"misk / misk.flags / Flags / Context / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk/misk.flags/-flags/-context/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk/misk.flags/-flags/-context/prefix.html","text":"misk / misk.flags / Flags / Context / prefix prefix \u00b6 val prefix: String","title":"prefix - Misk"},{"location":"0.x/misk/misk.flags/-flags/-context/prefix.html#prefix","text":"val prefix: String","title":"prefix"},{"location":"0.x/misk/misk.flags/-flags/-double-flag/index.html","text":"misk / misk.flags / Flags / DoubleFlag DoubleFlag \u00b6 class DoubleFlag Constructors \u00b6 Name Summary <init> DoubleFlag(description: String , name: String ? = null, default: Double = 0.0) Functions \u00b6 Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Double >","title":"DoubleFlag - Misk"},{"location":"0.x/misk/misk.flags/-flags/-double-flag/index.html#doubleflag","text":"class DoubleFlag","title":"DoubleFlag"},{"location":"0.x/misk/misk.flags/-flags/-double-flag/index.html#constructors","text":"Name Summary <init> DoubleFlag(description: String , name: String ? = null, default: Double = 0.0)","title":"Constructors"},{"location":"0.x/misk/misk.flags/-flags/-double-flag/index.html#functions","text":"Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Double >","title":"Functions"},{"location":"0.x/misk/misk.flags/-flags/-double-flag/-init-.html","text":"misk / misk.flags / Flags / DoubleFlag / <init> <init> \u00b6 DoubleFlag(description: String , name: String ? = null, default: Double = 0.0)","title":" init "},{"location":"0.x/misk/misk.flags/-flags/-double-flag/-init-.html#init","text":"DoubleFlag(description: String , name: String ? = null, default: Double = 0.0)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags/-flags/-double-flag/provide-delegate.html","text":"misk / misk.flags / Flags / DoubleFlag / provideDelegate provideDelegate \u00b6 operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Double >","title":"provideDelegate - Misk"},{"location":"0.x/misk/misk.flags/-flags/-double-flag/provide-delegate.html#providedelegate","text":"operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Double >","title":"provideDelegate"},{"location":"0.x/misk/misk.flags/-flags/-int-flag/index.html","text":"misk / misk.flags / Flags / IntFlag IntFlag \u00b6 class IntFlag Constructors \u00b6 Name Summary <init> IntFlag(description: String , name: String ? = null, default: Int = 0) Functions \u00b6 Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Int >","title":"IntFlag - Misk"},{"location":"0.x/misk/misk.flags/-flags/-int-flag/index.html#intflag","text":"class IntFlag","title":"IntFlag"},{"location":"0.x/misk/misk.flags/-flags/-int-flag/index.html#constructors","text":"Name Summary <init> IntFlag(description: String , name: String ? = null, default: Int = 0)","title":"Constructors"},{"location":"0.x/misk/misk.flags/-flags/-int-flag/index.html#functions","text":"Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Int >","title":"Functions"},{"location":"0.x/misk/misk.flags/-flags/-int-flag/-init-.html","text":"misk / misk.flags / Flags / IntFlag / <init> <init> \u00b6 IntFlag(description: String , name: String ? = null, default: Int = 0)","title":" init "},{"location":"0.x/misk/misk.flags/-flags/-int-flag/-init-.html#init","text":"IntFlag(description: String , name: String ? = null, default: Int = 0)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags/-flags/-int-flag/provide-delegate.html","text":"misk / misk.flags / Flags / IntFlag / provideDelegate provideDelegate \u00b6 operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Int >","title":"provideDelegate - Misk"},{"location":"0.x/misk/misk.flags/-flags/-int-flag/provide-delegate.html#providedelegate","text":"operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , Int >","title":"provideDelegate"},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/index.html","text":"misk / misk.flags / Flags / JsonFlagInternal JsonFlagInternal \u00b6 class JsonFlagInternal<T : Any > Constructors \u00b6 Name Summary <init> JsonFlagInternal(kclass: KClass < T >, description: String , name: String ? = null, default: T ? = null) Functions \u00b6 Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , T ?>","title":"JsonFlagInternal - Misk"},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/index.html#jsonflaginternal","text":"class JsonFlagInternal<T : Any >","title":"JsonFlagInternal"},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/index.html#constructors","text":"Name Summary <init> JsonFlagInternal(kclass: KClass < T >, description: String , name: String ? = null, default: T ? = null)","title":"Constructors"},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/index.html#functions","text":"Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , T ?>","title":"Functions"},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/-init-.html","text":"misk / misk.flags / Flags / JsonFlagInternal / <init> <init> \u00b6 JsonFlagInternal(kclass: KClass < T >, description: String , name: String ? = null, default: T ? = null)","title":" init "},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/-init-.html#init","text":"JsonFlagInternal(kclass: KClass < T >, description: String , name: String ? = null, default: T ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/provide-delegate.html","text":"misk / misk.flags / Flags / JsonFlagInternal / provideDelegate provideDelegate \u00b6 operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , T ?>","title":"provideDelegate - Misk"},{"location":"0.x/misk/misk.flags/-flags/-json-flag-internal/provide-delegate.html#providedelegate","text":"operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , T ?>","title":"provideDelegate"},{"location":"0.x/misk/misk.flags/-flags/-string-flag/index.html","text":"misk / misk.flags / Flags / StringFlag StringFlag \u00b6 class StringFlag Constructors \u00b6 Name Summary <init> StringFlag(description: String , name: String ? = null, default: String = \"\") Functions \u00b6 Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , String >","title":"StringFlag - Misk"},{"location":"0.x/misk/misk.flags/-flags/-string-flag/index.html#stringflag","text":"class StringFlag","title":"StringFlag"},{"location":"0.x/misk/misk.flags/-flags/-string-flag/index.html#constructors","text":"Name Summary <init> StringFlag(description: String , name: String ? = null, default: String = \"\")","title":"Constructors"},{"location":"0.x/misk/misk.flags/-flags/-string-flag/index.html#functions","text":"Name Summary provideDelegate operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , String >","title":"Functions"},{"location":"0.x/misk/misk.flags/-flags/-string-flag/-init-.html","text":"misk / misk.flags / Flags / StringFlag / <init> <init> \u00b6 StringFlag(description: String , name: String ? = null, default: String = \"\")","title":" init "},{"location":"0.x/misk/misk.flags/-flags/-string-flag/-init-.html#init","text":"StringFlag(description: String , name: String ? = null, default: String = \"\")","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags/-flags/-string-flag/provide-delegate.html","text":"misk / misk.flags / Flags / StringFlag / provideDelegate provideDelegate \u00b6 operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , String >","title":"provideDelegate - Misk"},{"location":"0.x/misk/misk.flags/-flags/-string-flag/provide-delegate.html#providedelegate","text":"operator fun provideDelegate(thisRef: Flags , prop: KProperty <*>): ReadOnlyProperty < Flags , String >","title":"provideDelegate"},{"location":"0.x/misk/misk.flags/-flags-module/index.html","text":"misk / misk.flags / FlagsModule FlagsModule \u00b6 abstract class FlagsModule : KAbstractModule Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available Constructors \u00b6 Name Summary <init> FlagsModule() Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available Functions \u00b6 Name Summary bindFlag fun <T : Any > bindFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindFlag(name: String , description: String , type: KClass < T >, qualifier: Annotation = Names.named(name)): Unit bindFlags fun <T : Flags > bindFlags(prefix: String = \"\", qualifier: Annotation ? = null): Unit fun <T : Flags > bindFlags(type: KClass < T >, prefix: String = \"\", qualifier: Annotation ? = null): Unit bindJsonFlag fun <T : Any > bindJsonFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindJsonFlag(type: KClass < T >, name: String , description: String , a: Annotation = Names.named(name)): Unit configure open fun configure(): Unit configureFlags abstract fun configureFlags(): Unit","title":"FlagsModule - Misk"},{"location":"0.x/misk/misk.flags/-flags-module/index.html#flagsmodule","text":"abstract class FlagsModule : KAbstractModule Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available","title":"FlagsModule"},{"location":"0.x/misk/misk.flags/-flags-module/index.html#constructors","text":"Name Summary <init> FlagsModule() Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available","title":"Constructors"},{"location":"0.x/misk/misk.flags/-flags-module/index.html#functions","text":"Name Summary bindFlag fun <T : Any > bindFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindFlag(name: String , description: String , type: KClass < T >, qualifier: Annotation = Names.named(name)): Unit bindFlags fun <T : Flags > bindFlags(prefix: String = \"\", qualifier: Annotation ? = null): Unit fun <T : Flags > bindFlags(type: KClass < T >, prefix: String = \"\", qualifier: Annotation ? = null): Unit bindJsonFlag fun <T : Any > bindJsonFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindJsonFlag(type: KClass < T >, name: String , description: String , a: Annotation = Names.named(name)): Unit configure open fun configure(): Unit configureFlags abstract fun configureFlags(): Unit","title":"Functions"},{"location":"0.x/misk/misk.flags/-flags-module/-init-.html","text":"misk / misk.flags / FlagsModule / <init> <init> \u00b6 FlagsModule() Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available","title":" init "},{"location":"0.x/misk/misk.flags/-flags-module/-init-.html#init","text":"FlagsModule() Installs support for flag. Applications should inherit from this module and override configureFlags , calling the various bindXXXFlags methods to make flag variables available","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags/-flags-module/bind-flag.html","text":"misk / misk.flags / FlagsModule / bindFlag bindFlag \u00b6 inline fun <reified T : Any > bindFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindFlag(name: String , description: String , type: KClass < T >, qualifier: Annotation = Names.named(name)): Unit","title":"bindFlag - Misk"},{"location":"0.x/misk/misk.flags/-flags-module/bind-flag.html#bindflag","text":"inline fun <reified T : Any > bindFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindFlag(name: String , description: String , type: KClass < T >, qualifier: Annotation = Names.named(name)): Unit","title":"bindFlag"},{"location":"0.x/misk/misk.flags/-flags-module/bind-flags.html","text":"misk / misk.flags / FlagsModule / bindFlags bindFlags \u00b6 inline fun <reified T : Flags > bindFlags(prefix: String = \"\", qualifier: Annotation ? = null): Unit fun <T : Flags > bindFlags(type: KClass < T >, prefix: String = \"\", qualifier: Annotation ? = null): Unit","title":"bindFlags - Misk"},{"location":"0.x/misk/misk.flags/-flags-module/bind-flags.html#bindflags","text":"inline fun <reified T : Flags > bindFlags(prefix: String = \"\", qualifier: Annotation ? = null): Unit fun <T : Flags > bindFlags(type: KClass < T >, prefix: String = \"\", qualifier: Annotation ? = null): Unit","title":"bindFlags"},{"location":"0.x/misk/misk.flags/-flags-module/bind-json-flag.html","text":"misk / misk.flags / FlagsModule / bindJsonFlag bindJsonFlag \u00b6 inline fun <reified T : Any > bindJsonFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindJsonFlag(type: KClass < T >, name: String , description: String , a: Annotation = Names.named(name)): Unit","title":"bindJsonFlag - Misk"},{"location":"0.x/misk/misk.flags/-flags-module/bind-json-flag.html#bindjsonflag","text":"inline fun <reified T : Any > bindJsonFlag(name: String , description: String , qualifier: Annotation = Names.named(name)): Unit fun <T : Any > bindJsonFlag(type: KClass < T >, name: String , description: String , a: Annotation = Names.named(name)): Unit","title":"bindJsonFlag"},{"location":"0.x/misk/misk.flags/-flags-module/configure-flags.html","text":"misk / misk.flags / FlagsModule / configureFlags configureFlags \u00b6 protected abstract fun configureFlags(): Unit","title":"configureFlags - Misk"},{"location":"0.x/misk/misk.flags/-flags-module/configure-flags.html#configureflags","text":"protected abstract fun configureFlags(): Unit","title":"configureFlags"},{"location":"0.x/misk/misk.flags/-flags-module/configure.html","text":"misk / misk.flags / FlagsModule / configure configure \u00b6 protected open fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.flags/-flags-module/configure.html#configure","text":"protected open fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.flags/-json-flag/index.html","text":"misk / misk.flags / JsonFlag JsonFlag \u00b6 class JsonFlag<out T : Any > : Flag < T > Properties \u00b6 Name Summary description val description: String name val name: String Functions \u00b6 Name Summary get fun get(): T ?","title":"JsonFlag - Misk"},{"location":"0.x/misk/misk.flags/-json-flag/index.html#jsonflag","text":"class JsonFlag<out T : Any > : Flag < T >","title":"JsonFlag"},{"location":"0.x/misk/misk.flags/-json-flag/index.html#properties","text":"Name Summary description val description: String name val name: String","title":"Properties"},{"location":"0.x/misk/misk.flags/-json-flag/index.html#functions","text":"Name Summary get fun get(): T ?","title":"Functions"},{"location":"0.x/misk/misk.flags/-json-flag/description.html","text":"misk / misk.flags / JsonFlag / description description \u00b6 val description: String Overrides Flag.description","title":"description - Misk"},{"location":"0.x/misk/misk.flags/-json-flag/description.html#description","text":"val description: String Overrides Flag.description","title":"description"},{"location":"0.x/misk/misk.flags/-json-flag/get.html","text":"misk / misk.flags / JsonFlag / get get \u00b6 fun get(): T ? Overrides Flag.get","title":"get - Misk"},{"location":"0.x/misk/misk.flags/-json-flag/get.html#get","text":"fun get(): T ? Overrides Flag.get","title":"get"},{"location":"0.x/misk/misk.flags/-json-flag/name.html","text":"misk / misk.flags / JsonFlag / name name \u00b6 val name: String Overrides Flag.name","title":"name - Misk"},{"location":"0.x/misk/misk.flags/-json-flag/name.html#name","text":"val name: String Overrides Flag.name","title":"name"},{"location":"0.x/misk/misk.flags.memory/index.html","text":"misk / misk.flags.memory Package misk.flags.memory \u00b6 Types \u00b6 Name Summary InMemoryBooleanFlag class InMemoryBooleanFlag : InMemoryFlag < Boolean > InMemoryDoubleFlag class InMemoryDoubleFlag : InMemoryFlag < Double > InMemoryFlag interface InMemoryFlag<T> : Flag < T > In-memory representation of flags, allowing the flag to be programmatically changed by tests InMemoryFlagStore class InMemoryFlagStore : FlagStore In memory implementation of a FlagStore , suitable for use in testing InMemoryFlagStoreModule class InMemoryFlagStoreModule : KAbstractModule InMemoryIntFlag class InMemoryIntFlag : InMemoryFlag < Int > InMemoryStringFlag class InMemoryStringFlag : InMemoryFlag < String >","title":"Package misk.flags.memory - Misk"},{"location":"0.x/misk/misk.flags.memory/index.html#package-miskflagsmemory","text":"","title":"Package misk.flags.memory"},{"location":"0.x/misk/misk.flags.memory/index.html#types","text":"Name Summary InMemoryBooleanFlag class InMemoryBooleanFlag : InMemoryFlag < Boolean > InMemoryDoubleFlag class InMemoryDoubleFlag : InMemoryFlag < Double > InMemoryFlag interface InMemoryFlag<T> : Flag < T > In-memory representation of flags, allowing the flag to be programmatically changed by tests InMemoryFlagStore class InMemoryFlagStore : FlagStore In memory implementation of a FlagStore , suitable for use in testing InMemoryFlagStoreModule class InMemoryFlagStoreModule : KAbstractModule InMemoryIntFlag class InMemoryIntFlag : InMemoryFlag < Int > InMemoryStringFlag class InMemoryStringFlag : InMemoryFlag < String >","title":"Types"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/index.html","text":"misk / misk.flags.memory / InMemoryBooleanFlag InMemoryBooleanFlag \u00b6 class InMemoryBooleanFlag : InMemoryFlag < Boolean > Properties \u00b6 Name Summary description val description: String name val name: String Functions \u00b6 Name Summary get fun get(): Boolean ? set fun set(v: Boolean ): Unit","title":"InMemoryBooleanFlag - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/index.html#inmemorybooleanflag","text":"class InMemoryBooleanFlag : InMemoryFlag < Boolean >","title":"InMemoryBooleanFlag"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/index.html#properties","text":"Name Summary description val description: String name val name: String","title":"Properties"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/index.html#functions","text":"Name Summary get fun get(): Boolean ? set fun set(v: Boolean ): Unit","title":"Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/description.html","text":"misk / misk.flags.memory / InMemoryBooleanFlag / description description \u00b6 val description: String Overrides Flag.description","title":"description - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/description.html#description","text":"val description: String Overrides Flag.description","title":"description"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/get.html","text":"misk / misk.flags.memory / InMemoryBooleanFlag / get get \u00b6 fun get(): Boolean ? Overrides Flag.get","title":"get - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/get.html#get","text":"fun get(): Boolean ? Overrides Flag.get","title":"get"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/name.html","text":"misk / misk.flags.memory / InMemoryBooleanFlag / name name \u00b6 val name: String Overrides Flag.name","title":"name - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/name.html#name","text":"val name: String Overrides Flag.name","title":"name"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/set.html","text":"misk / misk.flags.memory / InMemoryBooleanFlag / set set \u00b6 fun set(v: Boolean ): Unit Overrides InMemoryFlag.set","title":"set - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-boolean-flag/set.html#set","text":"fun set(v: Boolean ): Unit Overrides InMemoryFlag.set","title":"set"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/index.html","text":"misk / misk.flags.memory / InMemoryDoubleFlag InMemoryDoubleFlag \u00b6 class InMemoryDoubleFlag : InMemoryFlag < Double > Properties \u00b6 Name Summary description val description: String name val name: String Functions \u00b6 Name Summary get fun get(): Double ? set fun set(v: Double ): Unit","title":"InMemoryDoubleFlag - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/index.html#inmemorydoubleflag","text":"class InMemoryDoubleFlag : InMemoryFlag < Double >","title":"InMemoryDoubleFlag"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/index.html#properties","text":"Name Summary description val description: String name val name: String","title":"Properties"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/index.html#functions","text":"Name Summary get fun get(): Double ? set fun set(v: Double ): Unit","title":"Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/description.html","text":"misk / misk.flags.memory / InMemoryDoubleFlag / description description \u00b6 val description: String Overrides Flag.description","title":"description - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/description.html#description","text":"val description: String Overrides Flag.description","title":"description"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/get.html","text":"misk / misk.flags.memory / InMemoryDoubleFlag / get get \u00b6 fun get(): Double ? Overrides Flag.get","title":"get - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/get.html#get","text":"fun get(): Double ? Overrides Flag.get","title":"get"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/name.html","text":"misk / misk.flags.memory / InMemoryDoubleFlag / name name \u00b6 val name: String Overrides Flag.name","title":"name - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/name.html#name","text":"val name: String Overrides Flag.name","title":"name"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/set.html","text":"misk / misk.flags.memory / InMemoryDoubleFlag / set set \u00b6 fun set(v: Double ): Unit Overrides InMemoryFlag.set","title":"set - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-double-flag/set.html#set","text":"fun set(v: Double ): Unit Overrides InMemoryFlag.set","title":"set"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/index.html","text":"misk / misk.flags.memory / InMemoryFlag InMemoryFlag \u00b6 interface InMemoryFlag<T> : Flag < T > In-memory representation of flags, allowing the flag to be programmatically changed by tests Inherited Properties \u00b6 Name Summary description abstract val description: String name abstract val name: String Functions \u00b6 Name Summary set abstract fun set(v: T ): Unit Inherited Functions \u00b6 Name Summary get abstract fun get(): T ? Inheritors \u00b6 Name Summary InMemoryBooleanFlag class InMemoryBooleanFlag : InMemoryFlag < Boolean > InMemoryDoubleFlag class InMemoryDoubleFlag : InMemoryFlag < Double > InMemoryIntFlag class InMemoryIntFlag : InMemoryFlag < Int > InMemoryStringFlag class InMemoryStringFlag : InMemoryFlag < String >","title":"InMemoryFlag - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/index.html#inmemoryflag","text":"interface InMemoryFlag<T> : Flag < T > In-memory representation of flags, allowing the flag to be programmatically changed by tests","title":"InMemoryFlag"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/index.html#inherited-properties","text":"Name Summary description abstract val description: String name abstract val name: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/index.html#functions","text":"Name Summary set abstract fun set(v: T ): Unit","title":"Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/index.html#inherited-functions","text":"Name Summary get abstract fun get(): T ?","title":"Inherited Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/index.html#inheritors","text":"Name Summary InMemoryBooleanFlag class InMemoryBooleanFlag : InMemoryFlag < Boolean > InMemoryDoubleFlag class InMemoryDoubleFlag : InMemoryFlag < Double > InMemoryIntFlag class InMemoryIntFlag : InMemoryFlag < Int > InMemoryStringFlag class InMemoryStringFlag : InMemoryFlag < String >","title":"Inheritors"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/set.html","text":"misk / misk.flags.memory / InMemoryFlag / set set \u00b6 abstract fun set(v: T ): Unit","title":"set - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag/set.html#set","text":"abstract fun set(v: T ): Unit","title":"set"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/index.html","text":"misk / misk.flags.memory / InMemoryFlagStore InMemoryFlagStore \u00b6 @Singleton class InMemoryFlagStore : FlagStore In memory implementation of a FlagStore , suitable for use in testing Constructors \u00b6 Name Summary <init> InMemoryFlagStore() In memory implementation of a FlagStore , suitable for use in testing Properties \u00b6 Name Summary booleanFlags val booleanFlags: Map < String , InMemoryBooleanFlag > doubleFlags val doubleFlags: Map < String , InMemoryDoubleFlag > flags val flags: Map < String , InMemoryFlag <*>> intFlags val intFlags: Map < String , InMemoryIntFlag > stringFlags val stringFlags: Map < String , InMemoryStringFlag > Functions \u00b6 Name Summary awaitRegistrationsComplete fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Blocks until all pending registrations have completed registerFlag fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): InMemoryFlag < T > Asynchronously registers interest in the given flag of the provided type Extension Functions \u00b6 Name Summary registerFlag fun <T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T >","title":"InMemoryFlagStore - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/index.html#inmemoryflagstore","text":"@Singleton class InMemoryFlagStore : FlagStore In memory implementation of a FlagStore , suitable for use in testing","title":"InMemoryFlagStore"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/index.html#constructors","text":"Name Summary <init> InMemoryFlagStore() In memory implementation of a FlagStore , suitable for use in testing","title":"Constructors"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/index.html#properties","text":"Name Summary booleanFlags val booleanFlags: Map < String , InMemoryBooleanFlag > doubleFlags val doubleFlags: Map < String , InMemoryDoubleFlag > flags val flags: Map < String , InMemoryFlag <*>> intFlags val intFlags: Map < String , InMemoryIntFlag > stringFlags val stringFlags: Map < String , InMemoryStringFlag >","title":"Properties"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/index.html#functions","text":"Name Summary awaitRegistrationsComplete fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Blocks until all pending registrations have completed registerFlag fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): InMemoryFlag < T > Asynchronously registers interest in the given flag of the provided type","title":"Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/index.html#extension-functions","text":"Name Summary registerFlag fun <T : Any > FlagStore .registerFlag(name: String , description: String ): Flag < T >","title":"Extension Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/-init-.html","text":"misk / misk.flags.memory / InMemoryFlagStore / <init> <init> \u00b6 InMemoryFlagStore() In memory implementation of a FlagStore , suitable for use in testing","title":" init "},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/-init-.html#init","text":"InMemoryFlagStore() In memory implementation of a FlagStore , suitable for use in testing","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/await-registrations-complete.html","text":"misk / misk.flags.memory / InMemoryFlagStore / awaitRegistrationsComplete awaitRegistrationsComplete \u00b6 fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Overrides FlagStore.awaitRegistrationsComplete Blocks until all pending registrations have completed","title":"awaitRegistrationsComplete - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/await-registrations-complete.html#awaitregistrationscomplete","text":"fun awaitRegistrationsComplete(timeout: Long , unit: TimeUnit ): Unit Overrides FlagStore.awaitRegistrationsComplete Blocks until all pending registrations have completed","title":"awaitRegistrationsComplete"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/boolean-flags.html","text":"misk / misk.flags.memory / InMemoryFlagStore / booleanFlags booleanFlags \u00b6 val booleanFlags: Map < String , InMemoryBooleanFlag >","title":"booleanFlags - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/boolean-flags.html#booleanflags","text":"val booleanFlags: Map < String , InMemoryBooleanFlag >","title":"booleanFlags"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/double-flags.html","text":"misk / misk.flags.memory / InMemoryFlagStore / doubleFlags doubleFlags \u00b6 val doubleFlags: Map < String , InMemoryDoubleFlag >","title":"doubleFlags - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/double-flags.html#doubleflags","text":"val doubleFlags: Map < String , InMemoryDoubleFlag >","title":"doubleFlags"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/flags.html","text":"misk / misk.flags.memory / InMemoryFlagStore / flags flags \u00b6 val flags: Map < String , InMemoryFlag <*>>","title":"flags - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/flags.html#flags","text":"val flags: Map < String , InMemoryFlag <*>>","title":"flags"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/int-flags.html","text":"misk / misk.flags.memory / InMemoryFlagStore / intFlags intFlags \u00b6 val intFlags: Map < String , InMemoryIntFlag >","title":"intFlags - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/int-flags.html#intflags","text":"val intFlags: Map < String , InMemoryIntFlag >","title":"intFlags"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/register-flag.html","text":"misk / misk.flags.memory / InMemoryFlagStore / registerFlag registerFlag \u00b6 fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): InMemoryFlag < T > Overrides FlagStore.registerFlag Asynchronously registers interest in the given flag of the provided type","title":"registerFlag - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/register-flag.html#registerflag","text":"fun <T : Any > registerFlag(name: String , description: String , type: KClass < T >): InMemoryFlag < T > Overrides FlagStore.registerFlag Asynchronously registers interest in the given flag of the provided type","title":"registerFlag"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/string-flags.html","text":"misk / misk.flags.memory / InMemoryFlagStore / stringFlags stringFlags \u00b6 val stringFlags: Map < String , InMemoryStringFlag >","title":"stringFlags - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store/string-flags.html#stringflags","text":"val stringFlags: Map < String , InMemoryStringFlag >","title":"stringFlags"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/index.html","text":"misk / misk.flags.memory / InMemoryFlagStoreModule InMemoryFlagStoreModule \u00b6 class InMemoryFlagStoreModule : KAbstractModule Constructors \u00b6 Name Summary <init> InMemoryFlagStoreModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"InMemoryFlagStoreModule - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/index.html#inmemoryflagstoremodule","text":"class InMemoryFlagStoreModule : KAbstractModule","title":"InMemoryFlagStoreModule"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/index.html#constructors","text":"Name Summary <init> InMemoryFlagStoreModule()","title":"Constructors"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/-init-.html","text":"misk / misk.flags.memory / InMemoryFlagStoreModule / <init> <init> \u00b6 InMemoryFlagStoreModule()","title":" init "},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/-init-.html#init","text":"InMemoryFlagStoreModule()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/configure.html","text":"misk / misk.flags.memory / InMemoryFlagStoreModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-flag-store-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/index.html","text":"misk / misk.flags.memory / InMemoryIntFlag InMemoryIntFlag \u00b6 class InMemoryIntFlag : InMemoryFlag < Int > Properties \u00b6 Name Summary description val description: String name val name: String Functions \u00b6 Name Summary get fun get(): Int ? set fun set(v: Int ): Unit","title":"InMemoryIntFlag - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/index.html#inmemoryintflag","text":"class InMemoryIntFlag : InMemoryFlag < Int >","title":"InMemoryIntFlag"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/index.html#properties","text":"Name Summary description val description: String name val name: String","title":"Properties"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/index.html#functions","text":"Name Summary get fun get(): Int ? set fun set(v: Int ): Unit","title":"Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/description.html","text":"misk / misk.flags.memory / InMemoryIntFlag / description description \u00b6 val description: String Overrides Flag.description","title":"description - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/description.html#description","text":"val description: String Overrides Flag.description","title":"description"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/get.html","text":"misk / misk.flags.memory / InMemoryIntFlag / get get \u00b6 fun get(): Int ? Overrides Flag.get","title":"get - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/get.html#get","text":"fun get(): Int ? Overrides Flag.get","title":"get"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/name.html","text":"misk / misk.flags.memory / InMemoryIntFlag / name name \u00b6 val name: String Overrides Flag.name","title":"name - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/name.html#name","text":"val name: String Overrides Flag.name","title":"name"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/set.html","text":"misk / misk.flags.memory / InMemoryIntFlag / set set \u00b6 fun set(v: Int ): Unit Overrides InMemoryFlag.set","title":"set - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-int-flag/set.html#set","text":"fun set(v: Int ): Unit Overrides InMemoryFlag.set","title":"set"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/index.html","text":"misk / misk.flags.memory / InMemoryStringFlag InMemoryStringFlag \u00b6 class InMemoryStringFlag : InMemoryFlag < String > Properties \u00b6 Name Summary description val description: String name val name: String Functions \u00b6 Name Summary get fun get(): String ? set fun set(v: String ): Unit","title":"InMemoryStringFlag - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/index.html#inmemorystringflag","text":"class InMemoryStringFlag : InMemoryFlag < String >","title":"InMemoryStringFlag"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/index.html#properties","text":"Name Summary description val description: String name val name: String","title":"Properties"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/index.html#functions","text":"Name Summary get fun get(): String ? set fun set(v: String ): Unit","title":"Functions"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/description.html","text":"misk / misk.flags.memory / InMemoryStringFlag / description description \u00b6 val description: String Overrides Flag.description","title":"description - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/description.html#description","text":"val description: String Overrides Flag.description","title":"description"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/get.html","text":"misk / misk.flags.memory / InMemoryStringFlag / get get \u00b6 fun get(): String ? Overrides Flag.get","title":"get - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/get.html#get","text":"fun get(): String ? Overrides Flag.get","title":"get"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/name.html","text":"misk / misk.flags.memory / InMemoryStringFlag / name name \u00b6 val name: String Overrides Flag.name","title":"name - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/name.html#name","text":"val name: String Overrides Flag.name","title":"name"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/set.html","text":"misk / misk.flags.memory / InMemoryStringFlag / set set \u00b6 fun set(v: String ): Unit Overrides InMemoryFlag.set","title":"set - Misk"},{"location":"0.x/misk/misk.flags.memory/-in-memory-string-flag/set.html#set","text":"fun set(v: String ): Unit Overrides InMemoryFlag.set","title":"set"},{"location":"0.x/misk/misk.grpc/index.html","text":"misk / misk.grpc Package misk.grpc \u00b6 Extensions for External Classes \u00b6 Name Summary com.squareup.wire.MessageSource","title":"Package misk.grpc - Misk"},{"location":"0.x/misk/misk.grpc/index.html#package-miskgrpc","text":"","title":"Package misk.grpc"},{"location":"0.x/misk/misk.grpc/index.html#extensions-for-external-classes","text":"Name Summary com.squareup.wire.MessageSource","title":"Extensions for External Classes"},{"location":"0.x/misk/misk.grpc/com.squareup.wire.-message-source/index.html","text":"misk / misk.grpc / com.squareup.wire.MessageSource Extensions for com.squareup.wire.MessageSource \u00b6 Name Summary consumeEachAndClose fun <T : Any > MessageSource< T >.consumeEachAndClose(block: ( T ) -> Unit ): Unit","title":"Extensions for com.squareup.wire.MessageSource - Misk"},{"location":"0.x/misk/misk.grpc/com.squareup.wire.-message-source/index.html#extensions-for-comsquareupwiremessagesource","text":"Name Summary consumeEachAndClose fun <T : Any > MessageSource< T >.consumeEachAndClose(block: ( T ) -> Unit ): Unit","title":"Extensions for com.squareup.wire.MessageSource"},{"location":"0.x/misk/misk.grpc/com.squareup.wire.-message-source/consume-each-and-close.html","text":"misk / misk.grpc / com.squareup.wire.MessageSource / consumeEachAndClose consumeEachAndClose \u00b6 fun <T : Any > MessageSource< T >.consumeEachAndClose(block: ( T ) -> Unit ): Unit","title":"consumeEachAndClose - Misk"},{"location":"0.x/misk/misk.grpc/com.squareup.wire.-message-source/consume-each-and-close.html#consumeeachandclose","text":"fun <T : Any > MessageSource< T >.consumeEachAndClose(block: ( T ) -> Unit ): Unit","title":"consumeEachAndClose"},{"location":"0.x/misk/misk.io/index.html","text":"misk / misk.io Package misk.io \u00b6 Extensions for External Classes \u00b6 Name Summary java.nio.file.Path","title":"Package misk.io - Misk"},{"location":"0.x/misk/misk.io/index.html#package-miskio","text":"","title":"Package misk.io"},{"location":"0.x/misk/misk.io/index.html#extensions-for-external-classes","text":"Name Summary java.nio.file.Path","title":"Extensions for External Classes"},{"location":"0.x/misk/misk.io/java.nio.file.-path/index.html","text":"misk / misk.io / java.nio.file.Path Extensions for java.nio.file.Path \u00b6 Name Summary listRecursively fun Path .listRecursively(includeDirs: Boolean = false): List < Path >","title":"Extensions for java.nio.file.Path - Misk"},{"location":"0.x/misk/misk.io/java.nio.file.-path/index.html#extensions-for-javaniofilepath","text":"Name Summary listRecursively fun Path .listRecursively(includeDirs: Boolean = false): List < Path >","title":"Extensions for java.nio.file.Path"},{"location":"0.x/misk/misk.io/java.nio.file.-path/list-recursively.html","text":"misk / misk.io / java.nio.file.Path / listRecursively listRecursively \u00b6 fun Path .listRecursively(includeDirs: Boolean = false): List < Path > Return all of the paths beneath this one, including nested paths","title":"listRecursively - Misk"},{"location":"0.x/misk/misk.io/java.nio.file.-path/list-recursively.html#listrecursively","text":"fun Path .listRecursively(includeDirs: Boolean = false): List < Path > Return all of the paths beneath this one, including nested paths","title":"listRecursively"},{"location":"0.x/misk/misk.moshi/index.html","text":"misk / misk.moshi Package misk.moshi \u00b6 Types \u00b6 Name Summary MoshiAdapterModule class MoshiAdapterModule : KAbstractModule MoshiModule class MoshiModule : KAbstractModule For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly. Extensions for External Classes \u00b6 Name Summary com.squareup.moshi.Moshi","title":"Package misk.moshi - Misk"},{"location":"0.x/misk/misk.moshi/index.html#package-miskmoshi","text":"","title":"Package misk.moshi"},{"location":"0.x/misk/misk.moshi/index.html#types","text":"Name Summary MoshiAdapterModule class MoshiAdapterModule : KAbstractModule MoshiModule class MoshiModule : KAbstractModule For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly.","title":"Types"},{"location":"0.x/misk/misk.moshi/index.html#extensions-for-external-classes","text":"Name Summary com.squareup.moshi.Moshi","title":"Extensions for External Classes"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/index.html","text":"misk / misk.moshi / MoshiAdapterModule MoshiAdapterModule \u00b6 class MoshiAdapterModule : KAbstractModule Constructors \u00b6 Name Summary <init> MoshiAdapterModule(jsonAdapter: Any ) Functions \u00b6 Name Summary binder fun binder(): Binder configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary invoke operator fun <T> invoke(adapter: JsonAdapter< T >): MoshiAdapterModule","title":"MoshiAdapterModule - Misk"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/index.html#moshiadaptermodule","text":"class MoshiAdapterModule : KAbstractModule","title":"MoshiAdapterModule"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/index.html#constructors","text":"Name Summary <init> MoshiAdapterModule(jsonAdapter: Any )","title":"Constructors"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/index.html#functions","text":"Name Summary binder fun binder(): Binder configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/index.html#companion-object-functions","text":"Name Summary invoke operator fun <T> invoke(adapter: JsonAdapter< T >): MoshiAdapterModule","title":"Companion Object Functions"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/-init-.html","text":"misk / misk.moshi / MoshiAdapterModule / <init> <init> \u00b6 MoshiAdapterModule(jsonAdapter: Any )","title":" init "},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/-init-.html#init","text":"MoshiAdapterModule(jsonAdapter: Any )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/binder.html","text":"misk / misk.moshi / MoshiAdapterModule / binder binder \u00b6 protected fun binder(): Binder","title":"binder - Misk"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/binder.html#binder","text":"protected fun binder(): Binder","title":"binder"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/configure.html","text":"misk / misk.moshi / MoshiAdapterModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/invoke.html","text":"misk / misk.moshi / MoshiAdapterModule / invoke invoke \u00b6 inline operator fun <reified T> invoke(adapter: JsonAdapter< T >): MoshiAdapterModule","title":"invoke - Misk"},{"location":"0.x/misk/misk.moshi/-moshi-adapter-module/invoke.html#invoke","text":"inline operator fun <reified T> invoke(adapter: JsonAdapter< T >): MoshiAdapterModule","title":"invoke"},{"location":"0.x/misk/misk.moshi/-moshi-module/index.html","text":"misk / misk.moshi / MoshiModule MoshiModule \u00b6 class MoshiModule : KAbstractModule For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly. Constructors \u00b6 Name Summary <init> MoshiModule(useWireToRead: Boolean = false, useWireToWrite: Boolean = false) For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly. Functions \u00b6 Name Summary configure fun configure(): Unit provideMoshi fun provideMoshi(jsonAdapters: List < Any >): Moshi","title":"MoshiModule - Misk"},{"location":"0.x/misk/misk.moshi/-moshi-module/index.html#moshimodule","text":"class MoshiModule : KAbstractModule For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly.","title":"MoshiModule"},{"location":"0.x/misk/misk.moshi/-moshi-module/index.html#constructors","text":"Name Summary <init> MoshiModule(useWireToRead: Boolean = false, useWireToWrite: Boolean = false) For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly.","title":"Constructors"},{"location":"0.x/misk/misk.moshi/-moshi-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideMoshi fun provideMoshi(jsonAdapters: List < Any >): Moshi","title":"Functions"},{"location":"0.x/misk/misk.moshi/-moshi-module/-init-.html","text":"misk / misk.moshi / MoshiModule / <init> <init> \u00b6 MoshiModule(useWireToRead: Boolean = false, useWireToWrite: Boolean = false) For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly.","title":" init "},{"location":"0.x/misk/misk.moshi/-moshi-module/-init-.html#init","text":"MoshiModule(useWireToRead: Boolean = false, useWireToWrite: Boolean = false) For service setup, prefer to install misk.MiskCommonServiceModule over installing MoshiModule directly.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.moshi/-moshi-module/configure.html","text":"misk / misk.moshi / MoshiModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.moshi/-moshi-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.moshi/-moshi-module/provide-moshi.html","text":"misk / misk.moshi / MoshiModule / provideMoshi provideMoshi \u00b6 @Provides @Singleton fun provideMoshi(jsonAdapters: List < Any >): Moshi","title":"provideMoshi - Misk"},{"location":"0.x/misk/misk.moshi/-moshi-module/provide-moshi.html#providemoshi","text":"@Provides @Singleton fun provideMoshi(jsonAdapters: List < Any >): Moshi","title":"provideMoshi"},{"location":"0.x/misk/misk.moshi/com.squareup.moshi.-moshi/index.html","text":"misk / misk.moshi / com.squareup.moshi.Moshi Extensions for com.squareup.moshi.Moshi \u00b6 Name Summary adapter fun <T> Moshi.adapter(): JsonAdapter< T >","title":"Extensions for com.squareup.moshi.Moshi - Misk"},{"location":"0.x/misk/misk.moshi/com.squareup.moshi.-moshi/index.html#extensions-for-comsquareupmoshimoshi","text":"Name Summary adapter fun <T> Moshi.adapter(): JsonAdapter< T >","title":"Extensions for com.squareup.moshi.Moshi"},{"location":"0.x/misk/misk.moshi/com.squareup.moshi.-moshi/adapter.html","text":"misk / misk.moshi / com.squareup.moshi.Moshi / adapter adapter \u00b6 inline fun <reified T> Moshi.adapter(): JsonAdapter< T >","title":"adapter - Misk"},{"location":"0.x/misk/misk.moshi/com.squareup.moshi.-moshi/adapter.html#adapter","text":"inline fun <reified T> Moshi.adapter(): JsonAdapter< T >","title":"adapter"},{"location":"0.x/misk/misk.moshi.adapters/index.html","text":"misk / misk.moshi.adapters Package misk.moshi.adapters \u00b6 Types \u00b6 Name Summary BigDecimalAdapter object BigDecimalAdapter","title":"Package misk.moshi.adapters - Misk"},{"location":"0.x/misk/misk.moshi.adapters/index.html#package-miskmoshiadapters","text":"","title":"Package misk.moshi.adapters"},{"location":"0.x/misk/misk.moshi.adapters/index.html#types","text":"Name Summary BigDecimalAdapter object BigDecimalAdapter","title":"Types"},{"location":"0.x/misk/misk.moshi.adapters/-big-decimal-adapter/index.html","text":"misk / misk.moshi.adapters / BigDecimalAdapter BigDecimalAdapter \u00b6 object BigDecimalAdapter Functions \u00b6 Name Summary decode fun decode(decimal: String ): BigDecimal encode fun encode(decimal: BigDecimal ): String","title":"BigDecimalAdapter - Misk"},{"location":"0.x/misk/misk.moshi.adapters/-big-decimal-adapter/index.html#bigdecimaladapter","text":"object BigDecimalAdapter","title":"BigDecimalAdapter"},{"location":"0.x/misk/misk.moshi.adapters/-big-decimal-adapter/index.html#functions","text":"Name Summary decode fun decode(decimal: String ): BigDecimal encode fun encode(decimal: BigDecimal ): String","title":"Functions"},{"location":"0.x/misk/misk.moshi.adapters/-big-decimal-adapter/decode.html","text":"misk / misk.moshi.adapters / BigDecimalAdapter / decode decode \u00b6 fun decode(decimal: String ): BigDecimal","title":"decode - Misk"},{"location":"0.x/misk/misk.moshi.adapters/-big-decimal-adapter/decode.html#decode","text":"fun decode(decimal: String ): BigDecimal","title":"decode"},{"location":"0.x/misk/misk.moshi.adapters/-big-decimal-adapter/encode.html","text":"misk / misk.moshi.adapters / BigDecimalAdapter / encode encode \u00b6 fun encode(decimal: BigDecimal ): String","title":"encode - Misk"},{"location":"0.x/misk/misk.moshi.adapters/-big-decimal-adapter/encode.html#encode","text":"fun encode(decimal: BigDecimal ): String","title":"encode"},{"location":"0.x/misk/misk.moshi.okio/index.html","text":"misk / misk.moshi.okio Package misk.moshi.okio \u00b6 Types \u00b6 Name Summary ByteStringAdapter object ByteStringAdapter JSON adapter converting ByteString s as base64 encoded strings","title":"Package misk.moshi.okio - Misk"},{"location":"0.x/misk/misk.moshi.okio/index.html#package-miskmoshiokio","text":"","title":"Package misk.moshi.okio"},{"location":"0.x/misk/misk.moshi.okio/index.html#types","text":"Name Summary ByteStringAdapter object ByteStringAdapter JSON adapter converting ByteString s as base64 encoded strings","title":"Types"},{"location":"0.x/misk/misk.moshi.okio/-byte-string-adapter/index.html","text":"misk / misk.moshi.okio / ByteStringAdapter ByteStringAdapter \u00b6 object ByteStringAdapter JSON adapter converting ByteString s as base64 encoded strings Functions \u00b6 Name Summary fromJson fun fromJson(value: String ): ByteString toJson fun toJson(value: ByteString): String","title":"ByteStringAdapter - Misk"},{"location":"0.x/misk/misk.moshi.okio/-byte-string-adapter/index.html#bytestringadapter","text":"object ByteStringAdapter JSON adapter converting ByteString s as base64 encoded strings","title":"ByteStringAdapter"},{"location":"0.x/misk/misk.moshi.okio/-byte-string-adapter/index.html#functions","text":"Name Summary fromJson fun fromJson(value: String ): ByteString toJson fun toJson(value: ByteString): String","title":"Functions"},{"location":"0.x/misk/misk.moshi.okio/-byte-string-adapter/from-json.html","text":"misk / misk.moshi.okio / ByteStringAdapter / fromJson fromJson \u00b6 fun fromJson(value: String ): ByteString","title":"fromJson - Misk"},{"location":"0.x/misk/misk.moshi.okio/-byte-string-adapter/from-json.html#fromjson","text":"fun fromJson(value: String ): ByteString","title":"fromJson"},{"location":"0.x/misk/misk.moshi.okio/-byte-string-adapter/to-json.html","text":"misk / misk.moshi.okio / ByteStringAdapter / toJson toJson \u00b6 fun toJson(value: ByteString): String","title":"toJson - Misk"},{"location":"0.x/misk/misk.moshi.okio/-byte-string-adapter/to-json.html#tojson","text":"fun toJson(value: ByteString): String","title":"toJson"},{"location":"0.x/misk/misk.moshi.time/index.html","text":"misk / misk.moshi.time Package misk.moshi.time \u00b6 Types \u00b6 Name Summary InstantAdapter object InstantAdapter LocalDateAdapter object LocalDateAdapter","title":"Package misk.moshi.time - Misk"},{"location":"0.x/misk/misk.moshi.time/index.html#package-miskmoshitime","text":"","title":"Package misk.moshi.time"},{"location":"0.x/misk/misk.moshi.time/index.html#types","text":"Name Summary InstantAdapter object InstantAdapter LocalDateAdapter object LocalDateAdapter","title":"Types"},{"location":"0.x/misk/misk.moshi.time/-instant-adapter/index.html","text":"misk / misk.moshi.time / InstantAdapter InstantAdapter \u00b6 object InstantAdapter Functions \u00b6 Name Summary fromJson fun fromJson(date: Date ?): Instant ? toJson fun toJson(value: Instant ?): Date ?","title":"InstantAdapter - Misk"},{"location":"0.x/misk/misk.moshi.time/-instant-adapter/index.html#instantadapter","text":"object InstantAdapter","title":"InstantAdapter"},{"location":"0.x/misk/misk.moshi.time/-instant-adapter/index.html#functions","text":"Name Summary fromJson fun fromJson(date: Date ?): Instant ? toJson fun toJson(value: Instant ?): Date ?","title":"Functions"},{"location":"0.x/misk/misk.moshi.time/-instant-adapter/from-json.html","text":"misk / misk.moshi.time / InstantAdapter / fromJson fromJson \u00b6 fun fromJson(date: Date ?): Instant ?","title":"fromJson - Misk"},{"location":"0.x/misk/misk.moshi.time/-instant-adapter/from-json.html#fromjson","text":"fun fromJson(date: Date ?): Instant ?","title":"fromJson"},{"location":"0.x/misk/misk.moshi.time/-instant-adapter/to-json.html","text":"misk / misk.moshi.time / InstantAdapter / toJson toJson \u00b6 fun toJson(value: Instant ?): Date ?","title":"toJson - Misk"},{"location":"0.x/misk/misk.moshi.time/-instant-adapter/to-json.html#tojson","text":"fun toJson(value: Instant ?): Date ?","title":"toJson"},{"location":"0.x/misk/misk.moshi.time/-local-date-adapter/index.html","text":"misk / misk.moshi.time / LocalDateAdapter LocalDateAdapter \u00b6 object LocalDateAdapter Functions \u00b6 Name Summary fromJson fun fromJson(date: Date ?): LocalDate ? toJson fun toJson(value: LocalDate ?): Date ?","title":"LocalDateAdapter - Misk"},{"location":"0.x/misk/misk.moshi.time/-local-date-adapter/index.html#localdateadapter","text":"object LocalDateAdapter","title":"LocalDateAdapter"},{"location":"0.x/misk/misk.moshi.time/-local-date-adapter/index.html#functions","text":"Name Summary fromJson fun fromJson(date: Date ?): LocalDate ? toJson fun toJson(value: LocalDate ?): Date ?","title":"Functions"},{"location":"0.x/misk/misk.moshi.time/-local-date-adapter/from-json.html","text":"misk / misk.moshi.time / LocalDateAdapter / fromJson fromJson \u00b6 fun fromJson(date: Date ?): LocalDate ?","title":"fromJson - Misk"},{"location":"0.x/misk/misk.moshi.time/-local-date-adapter/from-json.html#fromjson","text":"fun fromJson(date: Date ?): LocalDate ?","title":"fromJson"},{"location":"0.x/misk/misk.moshi.time/-local-date-adapter/to-json.html","text":"misk / misk.moshi.time / LocalDateAdapter / toJson toJson \u00b6 fun toJson(value: LocalDate ?): Date ?","title":"toJson - Misk"},{"location":"0.x/misk/misk.moshi.time/-local-date-adapter/to-json.html#tojson","text":"fun toJson(value: LocalDate ?): Date ?","title":"toJson"},{"location":"0.x/misk/misk.okio/index.html","text":"misk / misk.okio Package misk.okio \u00b6 Extensions for External Classes \u00b6 Name Summary okio.BufferedSource","title":"Package misk.okio - Misk"},{"location":"0.x/misk/misk.okio/index.html#package-miskokio","text":"","title":"Package misk.okio"},{"location":"0.x/misk/misk.okio/index.html#extensions-for-external-classes","text":"Name Summary okio.BufferedSource","title":"Extensions for External Classes"},{"location":"0.x/misk/misk.okio/okio.-buffered-source/index.html","text":"misk / misk.okio / okio.BufferedSource Extensions for okio.BufferedSource \u00b6 Name Summary forEachBlock fun BufferedSource.forEachBlock(buffer: ByteArray , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit fun BufferedSource.forEachBlock(blockSize: Int , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit split fun BufferedSource.split(separator: ByteString): Sequence <Buffer>","title":"Extensions for okio.BufferedSource - Misk"},{"location":"0.x/misk/misk.okio/okio.-buffered-source/index.html#extensions-for-okiobufferedsource","text":"Name Summary forEachBlock fun BufferedSource.forEachBlock(buffer: ByteArray , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit fun BufferedSource.forEachBlock(blockSize: Int , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit split fun BufferedSource.split(separator: ByteString): Sequence <Buffer>","title":"Extensions for okio.BufferedSource"},{"location":"0.x/misk/misk.okio/okio.-buffered-source/for-each-block.html","text":"misk / misk.okio / okio.BufferedSource / forEachBlock forEachBlock \u00b6 fun BufferedSource.forEachBlock(buffer: ByteArray , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit fun BufferedSource.forEachBlock(blockSize: Int , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit","title":"forEachBlock - Misk"},{"location":"0.x/misk/misk.okio/okio.-buffered-source/for-each-block.html#foreachblock","text":"fun BufferedSource.forEachBlock(buffer: ByteArray , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit fun BufferedSource.forEachBlock(blockSize: Int , f: (buffer: ByteArray , bytesRead: Int ) -> Unit ): Unit","title":"forEachBlock"},{"location":"0.x/misk/misk.okio/okio.-buffered-source/split.html","text":"misk / misk.okio / okio.BufferedSource / split split \u00b6 fun BufferedSource.split(separator: ByteString): Sequence <Buffer>","title":"split - Misk"},{"location":"0.x/misk/misk.okio/okio.-buffered-source/split.html#split","text":"fun BufferedSource.split(separator: ByteString): Sequence <Buffer>","title":"split"},{"location":"0.x/misk/misk.scope/index.html","text":"misk / misk.scope Package misk.scope \u00b6 Types \u00b6 Name Summary ActionScope class ActionScope : AutoCloseable ActionScopedProvider interface ActionScopedProvider<out T> An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc. ActionScopedProviderModule abstract class ActionScopedProviderModule : KAbstractModule Module used by components and applications to provide ActionScoped context objects","title":"Package misk.scope - Misk"},{"location":"0.x/misk/misk.scope/index.html#package-miskscope","text":"","title":"Package misk.scope"},{"location":"0.x/misk/misk.scope/index.html#types","text":"Name Summary ActionScope class ActionScope : AutoCloseable ActionScopedProvider interface ActionScopedProvider<out T> An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc. ActionScopedProviderModule abstract class ActionScopedProviderModule : KAbstractModule Module used by components and applications to provide ActionScoped context objects","title":"Types"},{"location":"0.x/misk/misk.scope/-action-scope/index.html","text":"misk / misk.scope / ActionScope ActionScope \u00b6 @Singleton class ActionScope : AutoCloseable Functions \u00b6 Name Summary close fun close(): Unit enter fun enter(seedData: Map <Key<*>, Any ?>): ActionScope Starts the scope on a thread with the provided seed data get fun <T> get(key: Key< T >): T Returns the action scoped value for the given key inScope fun inScope(): Boolean Returns true if currently in the scope propagate fun <T> propagate(c: Callable < T >): Callable < T > Wraps a Callable that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: KFunction < T >): KFunction < T > Wraps a KFunction that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: () -> T ): () -> T Wraps a function or lambda that will be called on another thread, propagating the current scoped data onto that thread","title":"ActionScope - Misk"},{"location":"0.x/misk/misk.scope/-action-scope/index.html#actionscope","text":"@Singleton class ActionScope : AutoCloseable","title":"ActionScope"},{"location":"0.x/misk/misk.scope/-action-scope/index.html#functions","text":"Name Summary close fun close(): Unit enter fun enter(seedData: Map <Key<*>, Any ?>): ActionScope Starts the scope on a thread with the provided seed data get fun <T> get(key: Key< T >): T Returns the action scoped value for the given key inScope fun inScope(): Boolean Returns true if currently in the scope propagate fun <T> propagate(c: Callable < T >): Callable < T > Wraps a Callable that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: KFunction < T >): KFunction < T > Wraps a KFunction that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: () -> T ): () -> T Wraps a function or lambda that will be called on another thread, propagating the current scoped data onto that thread","title":"Functions"},{"location":"0.x/misk/misk.scope/-action-scope/close.html","text":"misk / misk.scope / ActionScope / close close \u00b6 fun close(): Unit","title":"close - Misk"},{"location":"0.x/misk/misk.scope/-action-scope/close.html#close","text":"fun close(): Unit","title":"close"},{"location":"0.x/misk/misk.scope/-action-scope/enter.html","text":"misk / misk.scope / ActionScope / enter enter \u00b6 fun enter(seedData: Map <Key<*>, Any ?>): ActionScope Starts the scope on a thread with the provided seed data","title":"enter - Misk"},{"location":"0.x/misk/misk.scope/-action-scope/enter.html#enter","text":"fun enter(seedData: Map <Key<*>, Any ?>): ActionScope Starts the scope on a thread with the provided seed data","title":"enter"},{"location":"0.x/misk/misk.scope/-action-scope/get.html","text":"misk / misk.scope / ActionScope / get get \u00b6 fun <T> get(key: Key< T >): T Returns the action scoped value for the given key","title":"get - Misk"},{"location":"0.x/misk/misk.scope/-action-scope/get.html#get","text":"fun <T> get(key: Key< T >): T Returns the action scoped value for the given key","title":"get"},{"location":"0.x/misk/misk.scope/-action-scope/in-scope.html","text":"misk / misk.scope / ActionScope / inScope inScope \u00b6 fun inScope(): Boolean Returns true if currently in the scope","title":"inScope - Misk"},{"location":"0.x/misk/misk.scope/-action-scope/in-scope.html#inscope","text":"fun inScope(): Boolean Returns true if currently in the scope","title":"inScope"},{"location":"0.x/misk/misk.scope/-action-scope/propagate.html","text":"misk / misk.scope / ActionScope / propagate propagate \u00b6 fun <T> propagate(c: Callable < T >): Callable < T > Wraps a Callable that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: KFunction < T >): KFunction < T > Wraps a KFunction that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: () -> T ): () -> T Wraps a function or lambda that will be called on another thread, propagating the current scoped data onto that thread","title":"propagate - Misk"},{"location":"0.x/misk/misk.scope/-action-scope/propagate.html#propagate","text":"fun <T> propagate(c: Callable < T >): Callable < T > Wraps a Callable that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: KFunction < T >): KFunction < T > Wraps a KFunction that will be called on another thread, propagating the current scoped data onto that thread fun <T> propagate(f: () -> T ): () -> T Wraps a function or lambda that will be called on another thread, propagating the current scoped data onto that thread","title":"propagate"},{"location":"0.x/misk/misk.scope/-action-scoped-provider/index.html","text":"misk / misk.scope / ActionScopedProvider ActionScopedProvider \u00b6 interface ActionScopedProvider<out T> An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc. Functions \u00b6 Name Summary get abstract fun get(): T Inheritors \u00b6 Name Summary MiskCallerProvider class MiskCallerProvider : ActionScopedProvider <MiskCaller?>","title":"ActionScopedProvider - Misk"},{"location":"0.x/misk/misk.scope/-action-scoped-provider/index.html#actionscopedprovider","text":"interface ActionScopedProvider<out T> An ActionScopedProvider is implemented by components and application code that wants provide contextual information based on an incoming request, job data, etc.","title":"ActionScopedProvider"},{"location":"0.x/misk/misk.scope/-action-scoped-provider/index.html#functions","text":"Name Summary get abstract fun get(): T","title":"Functions"},{"location":"0.x/misk/misk.scope/-action-scoped-provider/index.html#inheritors","text":"Name Summary MiskCallerProvider class MiskCallerProvider : ActionScopedProvider <MiskCaller?>","title":"Inheritors"},{"location":"0.x/misk/misk.scope/-action-scoped-provider/get.html","text":"misk / misk.scope / ActionScopedProvider / get get \u00b6 abstract fun get(): T","title":"get - Misk"},{"location":"0.x/misk/misk.scope/-action-scoped-provider/get.html#get","text":"abstract fun get(): T","title":"get"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/index.html","text":"misk / misk.scope / ActionScopedProviderModule ActionScopedProviderModule \u00b6 abstract class ActionScopedProviderModule : KAbstractModule Module used by components and applications to provide ActionScoped context objects Constructors \u00b6 Name Summary <init> ActionScopedProviderModule() Module used by components and applications to provide ActionScoped context objects Functions \u00b6 Name Summary bindProvider fun <T : Any > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T> bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T : Any , A : Annotation > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit fun <T, A : Annotation > bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit Binds an annotation qualified ActionScoped along with its provider bindSeedData fun <T : Any > bindSeedData(kclass: KClass < T >): Unit Binds an ActionScoped which only pulls from data seeded at the scope entry fun <T : Any > bindSeedData(kclass: KClass < T >, a: Annotation ): Unit fun <T : Any , A : Annotation > bindSeedData(kclass: KClass < T >, a: KClass < A >): Unit Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry configure open fun configure(): Unit configureProviders abstract fun configureProviders(): Unit Inheritors \u00b6 Name Summary AccessControlModule class AccessControlModule : ActionScopedProviderModule Install support for performing access control checks for actions based on the incoming caller.","title":"ActionScopedProviderModule - Misk"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/index.html#actionscopedprovidermodule","text":"abstract class ActionScopedProviderModule : KAbstractModule Module used by components and applications to provide ActionScoped context objects","title":"ActionScopedProviderModule"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/index.html#constructors","text":"Name Summary <init> ActionScopedProviderModule() Module used by components and applications to provide ActionScoped context objects","title":"Constructors"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/index.html#functions","text":"Name Summary bindProvider fun <T : Any > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T> bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T : Any , A : Annotation > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit fun <T, A : Annotation > bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit Binds an annotation qualified ActionScoped along with its provider bindSeedData fun <T : Any > bindSeedData(kclass: KClass < T >): Unit Binds an ActionScoped which only pulls from data seeded at the scope entry fun <T : Any > bindSeedData(kclass: KClass < T >, a: Annotation ): Unit fun <T : Any , A : Annotation > bindSeedData(kclass: KClass < T >, a: KClass < A >): Unit Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry configure open fun configure(): Unit configureProviders abstract fun configureProviders(): Unit","title":"Functions"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/index.html#inheritors","text":"Name Summary AccessControlModule class AccessControlModule : ActionScopedProviderModule Install support for performing access control checks for actions based on the incoming caller.","title":"Inheritors"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/-init-.html","text":"misk / misk.scope / ActionScopedProviderModule / <init> <init> \u00b6 ActionScopedProviderModule() Module used by components and applications to provide ActionScoped context objects","title":" init "},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/-init-.html#init","text":"ActionScopedProviderModule() Module used by components and applications to provide ActionScoped context objects","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/bind-provider.html","text":"misk / misk.scope / ActionScopedProviderModule / bindProvider bindProvider \u00b6 fun <T : Any > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T> bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T : Any , A : Annotation > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit fun <T, A : Annotation > bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit Binds an annotation qualified ActionScoped along with its provider","title":"bindProvider - Misk"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/bind-provider.html#bindprovider","text":"fun <T : Any > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T> bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T : Any , A : Annotation > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit fun <T, A : Annotation > bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit Binds an annotation qualified ActionScoped along with its provider","title":"bindProvider"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/bind-seed-data.html","text":"misk / misk.scope / ActionScopedProviderModule / bindSeedData bindSeedData \u00b6 fun <T : Any > bindSeedData(kclass: KClass < T >): Unit Binds an ActionScoped which only pulls from data seeded at the scope entry fun <T : Any > bindSeedData(kclass: KClass < T >, a: Annotation ): Unit fun <T : Any , A : Annotation > bindSeedData(kclass: KClass < T >, a: KClass < A >): Unit Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry","title":"bindSeedData - Misk"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/bind-seed-data.html#bindseeddata","text":"fun <T : Any > bindSeedData(kclass: KClass < T >): Unit Binds an ActionScoped which only pulls from data seeded at the scope entry fun <T : Any > bindSeedData(kclass: KClass < T >, a: Annotation ): Unit fun <T : Any , A : Annotation > bindSeedData(kclass: KClass < T >, a: KClass < A >): Unit Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry","title":"bindSeedData"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/configure-providers.html","text":"misk / misk.scope / ActionScopedProviderModule / configureProviders configureProviders \u00b6 abstract fun configureProviders(): Unit","title":"configureProviders - Misk"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/configure-providers.html#configureproviders","text":"abstract fun configureProviders(): Unit","title":"configureProviders"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/configure.html","text":"misk / misk.scope / ActionScopedProviderModule / configure configure \u00b6 protected open fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.scope/-action-scoped-provider-module/configure.html#configure","text":"protected open fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.scope.executor/index.html","text":"misk / misk.scope.executor Package misk.scope.executor \u00b6 Types \u00b6 Name Summary ActionScopedExecutorService class ActionScopedExecutorService : WrappingListeningExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":"Package misk.scope.executor - Misk"},{"location":"0.x/misk/misk.scope.executor/index.html#package-miskscopeexecutor","text":"","title":"Package misk.scope.executor"},{"location":"0.x/misk/misk.scope.executor/index.html#types","text":"Name Summary ActionScopedExecutorService class ActionScopedExecutorService : WrappingListeningExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":"Types"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/index.html","text":"misk / misk.scope.executor / ActionScopedExecutorService ActionScopedExecutorService \u00b6 class ActionScopedExecutorService : WrappingListeningExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread Constructors \u00b6 Name Summary <init> ActionScopedExecutorService(target: ExecutorService , scope: ActionScope ) Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread Functions \u00b6 Name Summary delegate fun delegate(): ListeningExecutorService wrap fun <T> wrap(callable: Callable < T >): Callable < T > Wraps the specified callable and returns the new wrapped one. Inherited Functions \u00b6 Name Summary execute open fun execute(runnable: Runnable ): Unit invokeAll open fun <T> invokeAll(callables: Collection < Callable < T >>): List < Future < T >> open fun <T> invokeAll(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): List < Future < T >> invokeAny open fun <T> invokeAny(callables: Collection < Callable < T >>): T open fun <T> invokeAny(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): T submit open fun <T> submit(callable: Callable < T >): ListenableFuture< T > open fun <T> submit(runnable: Runnable , result: T ): ListenableFuture< T > open fun submit(runnable: Runnable ): ListenableFuture<*>","title":"ActionScopedExecutorService - Misk"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/index.html#actionscopedexecutorservice","text":"class ActionScopedExecutorService : WrappingListeningExecutorService Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":"ActionScopedExecutorService"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/index.html#constructors","text":"Name Summary <init> ActionScopedExecutorService(target: ExecutorService , scope: ActionScope ) Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":"Constructors"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/index.html#functions","text":"Name Summary delegate fun delegate(): ListeningExecutorService wrap fun <T> wrap(callable: Callable < T >): Callable < T > Wraps the specified callable and returns the new wrapped one.","title":"Functions"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/index.html#inherited-functions","text":"Name Summary execute open fun execute(runnable: Runnable ): Unit invokeAll open fun <T> invokeAll(callables: Collection < Callable < T >>): List < Future < T >> open fun <T> invokeAll(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): List < Future < T >> invokeAny open fun <T> invokeAny(callables: Collection < Callable < T >>): T open fun <T> invokeAny(callables: Collection < Callable < T >>, timeout: Long , timeUnit: TimeUnit ): T submit open fun <T> submit(callable: Callable < T >): ListenableFuture< T > open fun <T> submit(runnable: Runnable , result: T ): ListenableFuture< T > open fun submit(runnable: Runnable ): ListenableFuture<*>","title":"Inherited Functions"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/-init-.html","text":"misk / misk.scope.executor / ActionScopedExecutorService / <init> <init> \u00b6 ActionScopedExecutorService(target: ExecutorService , scope: ActionScope ) Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":" init "},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/-init-.html#init","text":"ActionScopedExecutorService(target: ExecutorService , scope: ActionScope ) Wraps a ListeningExecutorService to propagate the current action scope to any tasks submitted by the current thread","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/delegate.html","text":"misk / misk.scope.executor / ActionScopedExecutorService / delegate delegate \u00b6 protected fun delegate(): ListeningExecutorService","title":"delegate - Misk"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/delegate.html#delegate","text":"protected fun delegate(): ListeningExecutorService","title":"delegate"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/wrap.html","text":"misk / misk.scope.executor / ActionScopedExecutorService / wrap wrap \u00b6 protected fun <T> wrap(callable: Callable < T >): Callable < T > Overrides WrappingListeningExecutorService.wrap Wraps the specified callable and returns the new wrapped one.","title":"wrap - Misk"},{"location":"0.x/misk/misk.scope.executor/-action-scoped-executor-service/wrap.html#wrap","text":"protected fun <T> wrap(callable: Callable < T >): Callable < T > Overrides WrappingListeningExecutorService.wrap Wraps the specified callable and returns the new wrapped one.","title":"wrap"},{"location":"0.x/misk/misk.security.authz/index.html","text":"misk / misk.security.authz Package misk.security.authz \u00b6 Types \u00b6 Name Summary AccessAnnotationEntry data class AccessAnnotationEntry Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. AccessControlModule class AccessControlModule : ActionScopedProviderModule Install support for performing access control checks for actions based on the incoming caller. AccessInterceptor class AccessInterceptor : ApplicationInterceptor FakeCallerAuthenticator class FakeCallerAuthenticator : MiskCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use. MiskCallerAuthenticator interface MiskCallerAuthenticator Interface for determining the current MiskCaller . Typically use an ActionScoped , ActionScoped , etc to determine the caller based on request headers or client certificate information. Annotations \u00b6 Name Summary DevelopmentOnly annotation class DevelopmentOnly Functions \u00b6 Name Summary AccessAnnotationEntry fun <T : Annotation > AccessAnnotationEntry(services: List < String > = listOf(), capabilities: List < String > = listOf()): AccessAnnotationEntry","title":"Package misk.security.authz - Misk"},{"location":"0.x/misk/misk.security.authz/index.html#package-misksecurityauthz","text":"","title":"Package misk.security.authz"},{"location":"0.x/misk/misk.security.authz/index.html#types","text":"Name Summary AccessAnnotationEntry data class AccessAnnotationEntry Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. AccessControlModule class AccessControlModule : ActionScopedProviderModule Install support for performing access control checks for actions based on the incoming caller. AccessInterceptor class AccessInterceptor : ApplicationInterceptor FakeCallerAuthenticator class FakeCallerAuthenticator : MiskCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use. MiskCallerAuthenticator interface MiskCallerAuthenticator Interface for determining the current MiskCaller . Typically use an ActionScoped , ActionScoped , etc to determine the caller based on request headers or client certificate information.","title":"Types"},{"location":"0.x/misk/misk.security.authz/index.html#annotations","text":"Name Summary DevelopmentOnly annotation class DevelopmentOnly","title":"Annotations"},{"location":"0.x/misk/misk.security.authz/index.html#functions","text":"Name Summary AccessAnnotationEntry fun <T : Annotation > AccessAnnotationEntry(services: List < String > = listOf(), capabilities: List < String > = listOf()): AccessAnnotationEntry","title":"Functions"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry.html","text":"misk / misk.security.authz / AccessAnnotationEntry AccessAnnotationEntry \u00b6 inline fun <reified T : Annotation > AccessAnnotationEntry(services: List < String > = listOf(), capabilities: List < String > = listOf()): AccessAnnotationEntry","title":"AccessAnnotationEntry - Misk"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry.html#accessannotationentry","text":"inline fun <reified T : Annotation > AccessAnnotationEntry(services: List < String > = listOf(), capabilities: List < String > = listOf()): AccessAnnotationEntry","title":"AccessAnnotationEntry"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/index.html","text":"misk / misk.security.authz / AccessAnnotationEntry AccessAnnotationEntry \u00b6 data class AccessAnnotationEntry Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. To demonstrate, let\u2019s define an access annotation. By convention these annotations are suffixed Access : @Retention(AnnotationRetention.RUNTIME) @Target(AnnotationTarget.FUNCTION) annotation class PaleontologistAccess Next we define actions that apply our annotation: class DiscoverDinosaurAction @Inject constructor() : WebAction { @Get(\"/discover\") @PaleontologistAccess fun discover() } class DigUpDinosaurAction @Inject constructor() : WebAction { @Get(\"/dig\") @PaleontologistAccess fun dig() } Finally we use multibindings to specify which services and capabilities are permitted: multibind<AccessAnnotationEntry>().toInstance( AccessAnnotationEntry<PaleontologistAccess>(capabilities = listOf(\"paleontologist\", \"intern\"))) Constructors \u00b6 Name Summary <init> AccessAnnotationEntry(annotation: KClass <out Annotation >, services: List < String > = listOf(), capabilities: List < String > = listOf()) Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. Properties \u00b6 Name Summary annotation val annotation: KClass <out Annotation > capabilities val capabilities: List < String > services val services: List < String >","title":"AccessAnnotationEntry - Misk"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/index.html#accessannotationentry","text":"data class AccessAnnotationEntry Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. To demonstrate, let\u2019s define an access annotation. By convention these annotations are suffixed Access : @Retention(AnnotationRetention.RUNTIME) @Target(AnnotationTarget.FUNCTION) annotation class PaleontologistAccess Next we define actions that apply our annotation: class DiscoverDinosaurAction @Inject constructor() : WebAction { @Get(\"/discover\") @PaleontologistAccess fun discover() } class DigUpDinosaurAction @Inject constructor() : WebAction { @Get(\"/dig\") @PaleontologistAccess fun dig() } Finally we use multibindings to specify which services and capabilities are permitted: multibind<AccessAnnotationEntry>().toInstance( AccessAnnotationEntry<PaleontologistAccess>(capabilities = listOf(\"paleontologist\", \"intern\")))","title":"AccessAnnotationEntry"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/index.html#constructors","text":"Name Summary <init> AccessAnnotationEntry(annotation: KClass <out Annotation >, services: List < String > = listOf(), capabilities: List < String > = listOf()) Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it.","title":"Constructors"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/index.html#properties","text":"Name Summary annotation val annotation: KClass <out Annotation > capabilities val capabilities: List < String > services val services: List < String >","title":"Properties"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/-init-.html","text":"misk / misk.security.authz / AccessAnnotationEntry / <init> <init> \u00b6 AccessAnnotationEntry(annotation: KClass <out Annotation >, services: List < String > = listOf(), capabilities: List < String > = listOf()) Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. To demonstrate, let\u2019s define an access annotation. By convention these annotations are suffixed Access : @Retention(AnnotationRetention.RUNTIME) @Target(AnnotationTarget.FUNCTION) annotation class PaleontologistAccess Next we define actions that apply our annotation: class DiscoverDinosaurAction @Inject constructor() : WebAction { @Get(\"/discover\") @PaleontologistAccess fun discover() } class DigUpDinosaurAction @Inject constructor() : WebAction { @Get(\"/dig\") @PaleontologistAccess fun dig() } Finally we use multibindings to specify which services and capabilities are permitted: multibind<AccessAnnotationEntry>().toInstance( AccessAnnotationEntry<PaleontologistAccess>(capabilities = listOf(\"paleontologist\", \"intern\")))","title":" init "},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/-init-.html#init","text":"AccessAnnotationEntry(annotation: KClass <out Annotation >, services: List < String > = listOf(), capabilities: List < String > = listOf()) Use this to alias an annotation to a set of services and capabilities. This can be used to decouple code that needs access control from the policy that defines it. To demonstrate, let\u2019s define an access annotation. By convention these annotations are suffixed Access : @Retention(AnnotationRetention.RUNTIME) @Target(AnnotationTarget.FUNCTION) annotation class PaleontologistAccess Next we define actions that apply our annotation: class DiscoverDinosaurAction @Inject constructor() : WebAction { @Get(\"/discover\") @PaleontologistAccess fun discover() } class DigUpDinosaurAction @Inject constructor() : WebAction { @Get(\"/dig\") @PaleontologistAccess fun dig() } Finally we use multibindings to specify which services and capabilities are permitted: multibind<AccessAnnotationEntry>().toInstance( AccessAnnotationEntry<PaleontologistAccess>(capabilities = listOf(\"paleontologist\", \"intern\")))","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/annotation.html","text":"misk / misk.security.authz / AccessAnnotationEntry / annotation annotation \u00b6 val annotation: KClass <out Annotation >","title":"annotation - Misk"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/annotation.html#annotation","text":"val annotation: KClass <out Annotation >","title":"annotation"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/capabilities.html","text":"misk / misk.security.authz / AccessAnnotationEntry / capabilities capabilities \u00b6 val capabilities: List < String >","title":"capabilities - Misk"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/capabilities.html#capabilities","text":"val capabilities: List < String >","title":"capabilities"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/services.html","text":"misk / misk.security.authz / AccessAnnotationEntry / services services \u00b6 val services: List < String >","title":"services - Misk"},{"location":"0.x/misk/misk.security.authz/-access-annotation-entry/services.html#services","text":"val services: List < String >","title":"services"},{"location":"0.x/misk/misk.security.authz/-access-control-module/index.html","text":"misk / misk.security.authz / AccessControlModule AccessControlModule \u00b6 class AccessControlModule : ActionScopedProviderModule Install support for performing access control checks for actions based on the incoming caller. Constructors \u00b6 Name Summary <init> AccessControlModule() Install support for performing access control checks for actions based on the incoming caller. Functions \u00b6 Name Summary configureProviders fun configureProviders(): Unit Inherited Functions \u00b6 Name Summary bindProvider fun <T : Any > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T> bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T : Any , A : Annotation > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit fun <T, A : Annotation > bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit Binds an annotation qualified ActionScoped along with its provider bindSeedData fun <T : Any > bindSeedData(kclass: KClass < T >): Unit Binds an ActionScoped which only pulls from data seeded at the scope entry fun <T : Any > bindSeedData(kclass: KClass < T >, a: Annotation ): Unit fun <T : Any , A : Annotation > bindSeedData(kclass: KClass < T >, a: KClass < A >): Unit Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry configure open fun configure(): Unit","title":"AccessControlModule - Misk"},{"location":"0.x/misk/misk.security.authz/-access-control-module/index.html#accesscontrolmodule","text":"class AccessControlModule : ActionScopedProviderModule Install support for performing access control checks for actions based on the incoming caller.","title":"AccessControlModule"},{"location":"0.x/misk/misk.security.authz/-access-control-module/index.html#constructors","text":"Name Summary <init> AccessControlModule() Install support for performing access control checks for actions based on the incoming caller.","title":"Constructors"},{"location":"0.x/misk/misk.security.authz/-access-control-module/index.html#functions","text":"Name Summary configureProviders fun configureProviders(): Unit","title":"Functions"},{"location":"0.x/misk/misk.security.authz/-access-control-module/index.html#inherited-functions","text":"Name Summary bindProvider fun <T : Any > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T> bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Annotation ? = null): Unit fun <T : Any , A : Annotation > bindProvider(kclass: KClass < T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit fun <T, A : Annotation > bindProvider(type: TypeLiteral< T >, providerType: KClass <out ActionScopedProvider < T >>, annotatedBy: Class < A >): Unit Binds an annotation qualified ActionScoped along with its provider bindSeedData fun <T : Any > bindSeedData(kclass: KClass < T >): Unit Binds an ActionScoped which only pulls from data seeded at the scope entry fun <T : Any > bindSeedData(kclass: KClass < T >, a: Annotation ): Unit fun <T : Any , A : Annotation > bindSeedData(kclass: KClass < T >, a: KClass < A >): Unit Binds an annotation qualified ActionScoped which only pulls from data seeded at the scope entry configure open fun configure(): Unit","title":"Inherited Functions"},{"location":"0.x/misk/misk.security.authz/-access-control-module/-init-.html","text":"misk / misk.security.authz / AccessControlModule / <init> <init> \u00b6 AccessControlModule() Install support for performing access control checks for actions based on the incoming caller.","title":" init "},{"location":"0.x/misk/misk.security.authz/-access-control-module/-init-.html#init","text":"AccessControlModule() Install support for performing access control checks for actions based on the incoming caller.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.authz/-access-control-module/configure-providers.html","text":"misk / misk.security.authz / AccessControlModule / configureProviders configureProviders \u00b6 fun configureProviders(): Unit Overrides ActionScopedProviderModule.configureProviders","title":"configureProviders - Misk"},{"location":"0.x/misk/misk.security.authz/-access-control-module/configure-providers.html#configureproviders","text":"fun configureProviders(): Unit Overrides ActionScopedProviderModule.configureProviders","title":"configureProviders"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/index.html","text":"misk / misk.security.authz / AccessInterceptor AccessInterceptor \u00b6 class AccessInterceptor : ApplicationInterceptor Properties \u00b6 Name Summary allowedCapabilities val allowedCapabilities: Set < String > allowedServices val allowedServices: Set < String > Functions \u00b6 Name Summary intercept fun intercept(chain: Chain ): Any Companion Object Properties \u00b6 Name Summary logger val logger: KLogger","title":"AccessInterceptor - Misk"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/index.html#accessinterceptor","text":"class AccessInterceptor : ApplicationInterceptor","title":"AccessInterceptor"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/index.html#properties","text":"Name Summary allowedCapabilities val allowedCapabilities: Set < String > allowedServices val allowedServices: Set < String >","title":"Properties"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/index.html#functions","text":"Name Summary intercept fun intercept(chain: Chain ): Any","title":"Functions"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/index.html#companion-object-properties","text":"Name Summary logger val logger: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/allowed-capabilities.html","text":"misk / misk.security.authz / AccessInterceptor / allowedCapabilities allowedCapabilities \u00b6 val allowedCapabilities: Set < String >","title":"allowedCapabilities - Misk"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/allowed-capabilities.html#allowedcapabilities","text":"val allowedCapabilities: Set < String >","title":"allowedCapabilities"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/allowed-services.html","text":"misk / misk.security.authz / AccessInterceptor / allowedServices allowedServices \u00b6 val allowedServices: Set < String >","title":"allowedServices - Misk"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/allowed-services.html#allowedservices","text":"val allowedServices: Set < String >","title":"allowedServices"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/intercept.html","text":"misk / misk.security.authz / AccessInterceptor / intercept intercept \u00b6 fun intercept(chain: Chain ): Any Overrides ApplicationInterceptor.intercept","title":"intercept - Misk"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/intercept.html#intercept","text":"fun intercept(chain: Chain ): Any Overrides ApplicationInterceptor.intercept","title":"intercept"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/logger.html","text":"misk / misk.security.authz / AccessInterceptor / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk/misk.security.authz/-access-interceptor/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk/misk.security.authz/-development-only/index.html","text":"misk / misk.security.authz / DevelopmentOnly DevelopmentOnly \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION]) annotation class DevelopmentOnly Constructors \u00b6 Name Summary <init> DevelopmentOnly()","title":"DevelopmentOnly - Misk"},{"location":"0.x/misk/misk.security.authz/-development-only/index.html#developmentonly","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION]) annotation class DevelopmentOnly","title":"DevelopmentOnly"},{"location":"0.x/misk/misk.security.authz/-development-only/index.html#constructors","text":"Name Summary <init> DevelopmentOnly()","title":"Constructors"},{"location":"0.x/misk/misk.security.authz/-development-only/-init-.html","text":"misk / misk.security.authz / DevelopmentOnly / <init> <init> \u00b6 DevelopmentOnly()","title":" init "},{"location":"0.x/misk/misk.security.authz/-development-only/-init-.html#init","text":"DevelopmentOnly()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/index.html","text":"misk / misk.security.authz / FakeCallerAuthenticator FakeCallerAuthenticator \u00b6 @Singleton class FakeCallerAuthenticator : MiskCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use. Constructors \u00b6 Name Summary <init> FakeCallerAuthenticator(currentHttpCall: ActionScoped< HttpCall >) A caller authenticator that blindly trusts HTTP headers. Unsafe for production use. Properties \u00b6 Name Summary developmentCaller var developmentCaller: MiskCaller? Functions \u00b6 Name Summary getAuthenticatedCaller fun getAuthenticatedCaller(): MiskCaller? Companion Object Properties \u00b6 Name Summary CAPABILITIES_HEADER const val CAPABILITIES_HEADER: String SERVICE_HEADER const val SERVICE_HEADER: String USER_HEADER const val USER_HEADER: String","title":"FakeCallerAuthenticator - Misk"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/index.html#fakecallerauthenticator","text":"@Singleton class FakeCallerAuthenticator : MiskCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use.","title":"FakeCallerAuthenticator"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/index.html#constructors","text":"Name Summary <init> FakeCallerAuthenticator(currentHttpCall: ActionScoped< HttpCall >) A caller authenticator that blindly trusts HTTP headers. Unsafe for production use.","title":"Constructors"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/index.html#properties","text":"Name Summary developmentCaller var developmentCaller: MiskCaller?","title":"Properties"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/index.html#functions","text":"Name Summary getAuthenticatedCaller fun getAuthenticatedCaller(): MiskCaller?","title":"Functions"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/index.html#companion-object-properties","text":"Name Summary CAPABILITIES_HEADER const val CAPABILITIES_HEADER: String SERVICE_HEADER const val SERVICE_HEADER: String USER_HEADER const val USER_HEADER: String","title":"Companion Object Properties"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-c-a-p-a-b-i-l-i-t-i-e-s_-h-e-a-d-e-r.html","text":"misk / misk.security.authz / FakeCallerAuthenticator / CAPABILITIES_HEADER CAPABILITIES_HEADER \u00b6 const val CAPABILITIES_HEADER: String","title":"CAPABILITIES_HEADER - Misk"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-c-a-p-a-b-i-l-i-t-i-e-s_-h-e-a-d-e-r.html#capabilities_header","text":"const val CAPABILITIES_HEADER: String","title":"CAPABILITIES_HEADER"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-init-.html","text":"misk / misk.security.authz / FakeCallerAuthenticator / <init> <init> \u00b6 FakeCallerAuthenticator(currentHttpCall: ActionScoped< HttpCall >) A caller authenticator that blindly trusts HTTP headers. Unsafe for production use.","title":" init "},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-init-.html#init","text":"FakeCallerAuthenticator(currentHttpCall: ActionScoped< HttpCall >) A caller authenticator that blindly trusts HTTP headers. Unsafe for production use.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-s-e-r-v-i-c-e_-h-e-a-d-e-r.html","text":"misk / misk.security.authz / FakeCallerAuthenticator / SERVICE_HEADER SERVICE_HEADER \u00b6 const val SERVICE_HEADER: String","title":"SERVICE_HEADER - Misk"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-s-e-r-v-i-c-e_-h-e-a-d-e-r.html#service_header","text":"const val SERVICE_HEADER: String","title":"SERVICE_HEADER"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-u-s-e-r_-h-e-a-d-e-r.html","text":"misk / misk.security.authz / FakeCallerAuthenticator / USER_HEADER USER_HEADER \u00b6 const val USER_HEADER: String","title":"USER_HEADER - Misk"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/-u-s-e-r_-h-e-a-d-e-r.html#user_header","text":"const val USER_HEADER: String","title":"USER_HEADER"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/development-caller.html","text":"misk / misk.security.authz / FakeCallerAuthenticator / developmentCaller developmentCaller \u00b6 var developmentCaller: MiskCaller?","title":"developmentCaller - Misk"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/development-caller.html#developmentcaller","text":"var developmentCaller: MiskCaller?","title":"developmentCaller"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/get-authenticated-caller.html","text":"misk / misk.security.authz / FakeCallerAuthenticator / getAuthenticatedCaller getAuthenticatedCaller \u00b6 fun getAuthenticatedCaller(): MiskCaller? Overrides MiskCallerAuthenticator.getAuthenticatedCaller","title":"getAuthenticatedCaller - Misk"},{"location":"0.x/misk/misk.security.authz/-fake-caller-authenticator/get-authenticated-caller.html#getauthenticatedcaller","text":"fun getAuthenticatedCaller(): MiskCaller? Overrides MiskCallerAuthenticator.getAuthenticatedCaller","title":"getAuthenticatedCaller"},{"location":"0.x/misk/misk.security.authz/-misk-caller-authenticator/index.html","text":"misk / misk.security.authz / MiskCallerAuthenticator MiskCallerAuthenticator \u00b6 interface MiskCallerAuthenticator Interface for determining the current MiskCaller . Typically use an ActionScoped , ActionScoped , etc to determine the caller based on request headers or client certificate information. This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<MiskCallerAuthenticator>().to<MyAuthenticator>() We allow binding up many authenticators in case applications would like to support alternative ways in which to authenticate requests. For example, one mechanism might leverage HTTP headers while another mechanism might leverage third party authentication services. Functions \u00b6 Name Summary getAuthenticatedCaller abstract fun getAuthenticatedCaller(): MiskCaller? Inheritors \u00b6 Name Summary FakeCallerAuthenticator class FakeCallerAuthenticator : MiskCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use.","title":"MiskCallerAuthenticator - Misk"},{"location":"0.x/misk/misk.security.authz/-misk-caller-authenticator/index.html#miskcallerauthenticator","text":"interface MiskCallerAuthenticator Interface for determining the current MiskCaller . Typically use an ActionScoped , ActionScoped , etc to determine the caller based on request headers or client certificate information. This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<MiskCallerAuthenticator>().to<MyAuthenticator>() We allow binding up many authenticators in case applications would like to support alternative ways in which to authenticate requests. For example, one mechanism might leverage HTTP headers while another mechanism might leverage third party authentication services.","title":"MiskCallerAuthenticator"},{"location":"0.x/misk/misk.security.authz/-misk-caller-authenticator/index.html#functions","text":"Name Summary getAuthenticatedCaller abstract fun getAuthenticatedCaller(): MiskCaller?","title":"Functions"},{"location":"0.x/misk/misk.security.authz/-misk-caller-authenticator/index.html#inheritors","text":"Name Summary FakeCallerAuthenticator class FakeCallerAuthenticator : MiskCallerAuthenticator A caller authenticator that blindly trusts HTTP headers. Unsafe for production use.","title":"Inheritors"},{"location":"0.x/misk/misk.security.authz/-misk-caller-authenticator/get-authenticated-caller.html","text":"misk / misk.security.authz / MiskCallerAuthenticator / getAuthenticatedCaller getAuthenticatedCaller \u00b6 abstract fun getAuthenticatedCaller(): MiskCaller?","title":"getAuthenticatedCaller - Misk"},{"location":"0.x/misk/misk.security.authz/-misk-caller-authenticator/get-authenticated-caller.html#getauthenticatedcaller","text":"abstract fun getAuthenticatedCaller(): MiskCaller?","title":"getAuthenticatedCaller"},{"location":"0.x/misk/misk.security.cert/index.html","text":"misk / misk.security.cert Package misk.security.cert \u00b6 Types \u00b6 Name Summary X500Name data class X500Name Extensions for External Classes \u00b6 Name Summary java.security.cert.X509Certificate","title":"Package misk.security.cert - Misk"},{"location":"0.x/misk/misk.security.cert/index.html#package-misksecuritycert","text":"","title":"Package misk.security.cert"},{"location":"0.x/misk/misk.security.cert/index.html#types","text":"Name Summary X500Name data class X500Name","title":"Types"},{"location":"0.x/misk/misk.security.cert/index.html#extensions-for-external-classes","text":"Name Summary java.security.cert.X509Certificate","title":"Extensions for External Classes"},{"location":"0.x/misk/misk.security.cert/-x500-name/index.html","text":"misk / misk.security.cert / X500Name X500Name \u00b6 data class X500Name Constructors \u00b6 Name Summary <init> X500Name(components: Map < String , String >) X500Name(commonName: String ?, organizationalUnit: String ?, organization: String ?, locality: String ?, state: String ?, country: String ?) Properties \u00b6 Name Summary commonName val commonName: String ? country val country: String ? locality val locality: String ? organization val organization: String ? organizationalUnit val organizationalUnit: String ? state val state: String ? Companion Object Functions \u00b6 Name Summary parse fun parse(dnString: String ): X500Name","title":"X500Name - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/index.html#x500name","text":"data class X500Name","title":"X500Name"},{"location":"0.x/misk/misk.security.cert/-x500-name/index.html#constructors","text":"Name Summary <init> X500Name(components: Map < String , String >) X500Name(commonName: String ?, organizationalUnit: String ?, organization: String ?, locality: String ?, state: String ?, country: String ?)","title":"Constructors"},{"location":"0.x/misk/misk.security.cert/-x500-name/index.html#properties","text":"Name Summary commonName val commonName: String ? country val country: String ? locality val locality: String ? organization val organization: String ? organizationalUnit val organizationalUnit: String ? state val state: String ?","title":"Properties"},{"location":"0.x/misk/misk.security.cert/-x500-name/index.html#companion-object-functions","text":"Name Summary parse fun parse(dnString: String ): X500Name","title":"Companion Object Functions"},{"location":"0.x/misk/misk.security.cert/-x500-name/-init-.html","text":"misk / misk.security.cert / X500Name / <init> <init> \u00b6 X500Name(components: Map < String , String >) X500Name(commonName: String ?, organizationalUnit: String ?, organization: String ?, locality: String ?, state: String ?, country: String ?)","title":" init "},{"location":"0.x/misk/misk.security.cert/-x500-name/-init-.html#init","text":"X500Name(components: Map < String , String >) X500Name(commonName: String ?, organizationalUnit: String ?, organization: String ?, locality: String ?, state: String ?, country: String ?)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.cert/-x500-name/common-name.html","text":"misk / misk.security.cert / X500Name / commonName commonName \u00b6 val commonName: String ?","title":"commonName - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/common-name.html#commonname","text":"val commonName: String ?","title":"commonName"},{"location":"0.x/misk/misk.security.cert/-x500-name/country.html","text":"misk / misk.security.cert / X500Name / country country \u00b6 val country: String ?","title":"country - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/country.html#country","text":"val country: String ?","title":"country"},{"location":"0.x/misk/misk.security.cert/-x500-name/locality.html","text":"misk / misk.security.cert / X500Name / locality locality \u00b6 val locality: String ?","title":"locality - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/locality.html#locality","text":"val locality: String ?","title":"locality"},{"location":"0.x/misk/misk.security.cert/-x500-name/organization.html","text":"misk / misk.security.cert / X500Name / organization organization \u00b6 val organization: String ?","title":"organization - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/organization.html#organization","text":"val organization: String ?","title":"organization"},{"location":"0.x/misk/misk.security.cert/-x500-name/organizational-unit.html","text":"misk / misk.security.cert / X500Name / organizationalUnit organizationalUnit \u00b6 val organizationalUnit: String ?","title":"organizationalUnit - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/organizational-unit.html#organizationalunit","text":"val organizationalUnit: String ?","title":"organizationalUnit"},{"location":"0.x/misk/misk.security.cert/-x500-name/parse.html","text":"misk / misk.security.cert / X500Name / parse parse \u00b6 fun parse(dnString: String ): X500Name","title":"parse - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/parse.html#parse","text":"fun parse(dnString: String ): X500Name","title":"parse"},{"location":"0.x/misk/misk.security.cert/-x500-name/state.html","text":"misk / misk.security.cert / X500Name / state state \u00b6 val state: String ?","title":"state - Misk"},{"location":"0.x/misk/misk.security.cert/-x500-name/state.html#state","text":"val state: String ?","title":"state"},{"location":"0.x/misk/misk.security.cert/java.security.cert.-x509-certificate/index.html","text":"misk / misk.security.cert / java.security.cert.X509Certificate Extensions for java.security.cert.X509Certificate \u00b6 Name Summary isSelfSigned val X509Certificate .isSelfSigned: Boolean isSignedBy fun X509Certificate .isSignedBy(cert: Certificate ): Boolean fun X509Certificate .isSignedBy(key: PublicKey ): Boolean","title":"Extensions for java.security.cert.X509Certificate - Misk"},{"location":"0.x/misk/misk.security.cert/java.security.cert.-x509-certificate/index.html#extensions-for-javasecuritycertx509certificate","text":"Name Summary isSelfSigned val X509Certificate .isSelfSigned: Boolean isSignedBy fun X509Certificate .isSignedBy(cert: Certificate ): Boolean fun X509Certificate .isSignedBy(key: PublicKey ): Boolean","title":"Extensions for java.security.cert.X509Certificate"},{"location":"0.x/misk/misk.security.cert/java.security.cert.-x509-certificate/is-self-signed.html","text":"misk / misk.security.cert / java.security.cert.X509Certificate / isSelfSigned isSelfSigned \u00b6 val X509Certificate .isSelfSigned: Boolean","title":"isSelfSigned - Misk"},{"location":"0.x/misk/misk.security.cert/java.security.cert.-x509-certificate/is-self-signed.html#isselfsigned","text":"val X509Certificate .isSelfSigned: Boolean","title":"isSelfSigned"},{"location":"0.x/misk/misk.security.cert/java.security.cert.-x509-certificate/is-signed-by.html","text":"misk / misk.security.cert / java.security.cert.X509Certificate / isSignedBy isSignedBy \u00b6 fun X509Certificate .isSignedBy(cert: Certificate ): Boolean fun X509Certificate .isSignedBy(key: PublicKey ): Boolean","title":"isSignedBy - Misk"},{"location":"0.x/misk/misk.security.cert/java.security.cert.-x509-certificate/is-signed-by.html#issignedby","text":"fun X509Certificate .isSignedBy(cert: Certificate ): Boolean fun X509Certificate .isSignedBy(key: PublicKey ): Boolean","title":"isSignedBy"},{"location":"0.x/misk/misk.security.keys/index.html","text":"misk / misk.security.keys Package misk.security.keys \u00b6 Types \u00b6 Name Summary KeyService interface KeyService Handles encryption and decryption using keys stored in a key management service","title":"Package misk.security.keys - Misk"},{"location":"0.x/misk/misk.security.keys/index.html#package-misksecuritykeys","text":"","title":"Package misk.security.keys"},{"location":"0.x/misk/misk.security.keys/index.html#types","text":"Name Summary KeyService interface KeyService Handles encryption and decryption using keys stored in a key management service","title":"Types"},{"location":"0.x/misk/misk.security.keys/-key-service/index.html","text":"misk / misk.security.keys / KeyService KeyService \u00b6 interface KeyService Handles encryption and decryption using keys stored in a key management service Functions \u00b6 Name Summary decrypt abstract fun decrypt(keyAlias: String , cipherText: ByteString): ByteString decrypts the provided cipher text using the given stored key encrypt abstract fun encrypt(keyAlias: String , plainText: ByteString): ByteString encrypts the provided plain text using the given stored key","title":"KeyService - Misk"},{"location":"0.x/misk/misk.security.keys/-key-service/index.html#keyservice","text":"interface KeyService Handles encryption and decryption using keys stored in a key management service","title":"KeyService"},{"location":"0.x/misk/misk.security.keys/-key-service/index.html#functions","text":"Name Summary decrypt abstract fun decrypt(keyAlias: String , cipherText: ByteString): ByteString decrypts the provided cipher text using the given stored key encrypt abstract fun encrypt(keyAlias: String , plainText: ByteString): ByteString encrypts the provided plain text using the given stored key","title":"Functions"},{"location":"0.x/misk/misk.security.keys/-key-service/decrypt.html","text":"misk / misk.security.keys / KeyService / decrypt decrypt \u00b6 abstract fun decrypt(keyAlias: String , cipherText: ByteString): ByteString decrypts the provided cipher text using the given stored key","title":"decrypt - Misk"},{"location":"0.x/misk/misk.security.keys/-key-service/decrypt.html#decrypt","text":"abstract fun decrypt(keyAlias: String , cipherText: ByteString): ByteString decrypts the provided cipher text using the given stored key","title":"decrypt"},{"location":"0.x/misk/misk.security.keys/-key-service/encrypt.html","text":"misk / misk.security.keys / KeyService / encrypt encrypt \u00b6 abstract fun encrypt(keyAlias: String , plainText: ByteString): ByteString encrypts the provided plain text using the given stored key","title":"encrypt - Misk"},{"location":"0.x/misk/misk.security.keys/-key-service/encrypt.html#encrypt","text":"abstract fun encrypt(keyAlias: String , plainText: ByteString): ByteString encrypts the provided plain text using the given stored key","title":"encrypt"},{"location":"0.x/misk/misk.security.ssl/index.html","text":"misk / misk.security.ssl Package misk.security.ssl \u00b6 Types \u00b6 Name Summary CipherSuites object CipherSuites TlsProtocols object TlsProtocols Annotations \u00b6 Name Summary ClientCertChain annotation class ClientCertChain Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any) ClientCertIssuer annotation class ClientCertIssuer Qualifier annotation for an ActionScoped containing the issuer of the client cert ClientCertSubject annotation class ClientCertSubject Qualifier annotation for an ActionScoped containing the subject of the client cert","title":"Package misk.security.ssl - Misk"},{"location":"0.x/misk/misk.security.ssl/index.html#package-misksecurityssl","text":"","title":"Package misk.security.ssl"},{"location":"0.x/misk/misk.security.ssl/index.html#types","text":"Name Summary CipherSuites object CipherSuites TlsProtocols object TlsProtocols","title":"Types"},{"location":"0.x/misk/misk.security.ssl/index.html#annotations","text":"Name Summary ClientCertChain annotation class ClientCertChain Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any) ClientCertIssuer annotation class ClientCertIssuer Qualifier annotation for an ActionScoped containing the issuer of the client cert ClientCertSubject annotation class ClientCertSubject Qualifier annotation for an ActionScoped containing the subject of the client cert","title":"Annotations"},{"location":"0.x/misk/misk.security.ssl/-cipher-suites/index.html","text":"misk / misk.security.ssl / CipherSuites CipherSuites \u00b6 object CipherSuites Properties \u00b6 Name Summary compatible val compatible: Array < String >","title":"CipherSuites - Misk"},{"location":"0.x/misk/misk.security.ssl/-cipher-suites/index.html#ciphersuites","text":"object CipherSuites","title":"CipherSuites"},{"location":"0.x/misk/misk.security.ssl/-cipher-suites/index.html#properties","text":"Name Summary compatible val compatible: Array < String >","title":"Properties"},{"location":"0.x/misk/misk.security.ssl/-cipher-suites/compatible.html","text":"misk / misk.security.ssl / CipherSuites / compatible compatible \u00b6 val compatible: Array < String >","title":"compatible - Misk"},{"location":"0.x/misk/misk.security.ssl/-cipher-suites/compatible.html#compatible","text":"val compatible: Array < String >","title":"compatible"},{"location":"0.x/misk/misk.security.ssl/-client-cert-chain/index.html","text":"misk / misk.security.ssl / ClientCertChain ClientCertChain \u00b6 @Qualifier @Target([AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE]) annotation class ClientCertChain Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any) Constructors \u00b6 Name Summary <init> ClientCertChain() Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any)","title":"ClientCertChain - Misk"},{"location":"0.x/misk/misk.security.ssl/-client-cert-chain/index.html#clientcertchain","text":"@Qualifier @Target([AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE]) annotation class ClientCertChain Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any)","title":"ClientCertChain"},{"location":"0.x/misk/misk.security.ssl/-client-cert-chain/index.html#constructors","text":"Name Summary <init> ClientCertChain() Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any)","title":"Constructors"},{"location":"0.x/misk/misk.security.ssl/-client-cert-chain/-init-.html","text":"misk / misk.security.ssl / ClientCertChain / <init> <init> \u00b6 ClientCertChain() Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any)","title":" init "},{"location":"0.x/misk/misk.security.ssl/-client-cert-chain/-init-.html#init","text":"ClientCertChain() Qualifier annotation for an ActionScoped array of X509Certificate s containing the certificate chain provided by the client (if any)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.ssl/-client-cert-issuer/index.html","text":"misk / misk.security.ssl / ClientCertIssuer ClientCertIssuer \u00b6 @Qualifier @Target([AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE]) annotation class ClientCertIssuer Qualifier annotation for an ActionScoped containing the issuer of the client cert Constructors \u00b6 Name Summary <init> ClientCertIssuer() Qualifier annotation for an ActionScoped containing the issuer of the client cert","title":"ClientCertIssuer - Misk"},{"location":"0.x/misk/misk.security.ssl/-client-cert-issuer/index.html#clientcertissuer","text":"@Qualifier @Target([AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE]) annotation class ClientCertIssuer Qualifier annotation for an ActionScoped containing the issuer of the client cert","title":"ClientCertIssuer"},{"location":"0.x/misk/misk.security.ssl/-client-cert-issuer/index.html#constructors","text":"Name Summary <init> ClientCertIssuer() Qualifier annotation for an ActionScoped containing the issuer of the client cert","title":"Constructors"},{"location":"0.x/misk/misk.security.ssl/-client-cert-issuer/-init-.html","text":"misk / misk.security.ssl / ClientCertIssuer / <init> <init> \u00b6 ClientCertIssuer() Qualifier annotation for an ActionScoped containing the issuer of the client cert","title":" init "},{"location":"0.x/misk/misk.security.ssl/-client-cert-issuer/-init-.html#init","text":"ClientCertIssuer() Qualifier annotation for an ActionScoped containing the issuer of the client cert","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.ssl/-client-cert-subject/index.html","text":"misk / misk.security.ssl / ClientCertSubject ClientCertSubject \u00b6 @Qualifier @Target([AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE]) annotation class ClientCertSubject Qualifier annotation for an ActionScoped containing the subject of the client cert Constructors \u00b6 Name Summary <init> ClientCertSubject() Qualifier annotation for an ActionScoped containing the subject of the client cert","title":"ClientCertSubject - Misk"},{"location":"0.x/misk/misk.security.ssl/-client-cert-subject/index.html#clientcertsubject","text":"@Qualifier @Target([AnnotationTarget.CLASS, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.FIELD, AnnotationTarget.TYPE]) annotation class ClientCertSubject Qualifier annotation for an ActionScoped containing the subject of the client cert","title":"ClientCertSubject"},{"location":"0.x/misk/misk.security.ssl/-client-cert-subject/index.html#constructors","text":"Name Summary <init> ClientCertSubject() Qualifier annotation for an ActionScoped containing the subject of the client cert","title":"Constructors"},{"location":"0.x/misk/misk.security.ssl/-client-cert-subject/-init-.html","text":"misk / misk.security.ssl / ClientCertSubject / <init> <init> \u00b6 ClientCertSubject() Qualifier annotation for an ActionScoped containing the subject of the client cert","title":" init "},{"location":"0.x/misk/misk.security.ssl/-client-cert-subject/-init-.html#init","text":"ClientCertSubject() Qualifier annotation for an ActionScoped containing the subject of the client cert","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.security.ssl/-tls-protocols/index.html","text":"misk / misk.security.ssl / TlsProtocols TlsProtocols \u00b6 object TlsProtocols Properties \u00b6 Name Summary compatible val compatible: Array < String > List of safe to use TLS protocols, in preferred order restricted val restricted: Array < String > List of modern TLS protocols for extra security, in preferred order","title":"TlsProtocols - Misk"},{"location":"0.x/misk/misk.security.ssl/-tls-protocols/index.html#tlsprotocols","text":"object TlsProtocols","title":"TlsProtocols"},{"location":"0.x/misk/misk.security.ssl/-tls-protocols/index.html#properties","text":"Name Summary compatible val compatible: Array < String > List of safe to use TLS protocols, in preferred order restricted val restricted: Array < String > List of modern TLS protocols for extra security, in preferred order","title":"Properties"},{"location":"0.x/misk/misk.security.ssl/-tls-protocols/compatible.html","text":"misk / misk.security.ssl / TlsProtocols / compatible compatible \u00b6 val compatible: Array < String > List of safe to use TLS protocols, in preferred order","title":"compatible - Misk"},{"location":"0.x/misk/misk.security.ssl/-tls-protocols/compatible.html#compatible","text":"val compatible: Array < String > List of safe to use TLS protocols, in preferred order","title":"compatible"},{"location":"0.x/misk/misk.security.ssl/-tls-protocols/restricted.html","text":"misk / misk.security.ssl / TlsProtocols / restricted restricted \u00b6 val restricted: Array < String > List of modern TLS protocols for extra security, in preferred order","title":"restricted - Misk"},{"location":"0.x/misk/misk.security.ssl/-tls-protocols/restricted.html#restricted","text":"val restricted: Array < String > List of modern TLS protocols for extra security, in preferred order","title":"restricted"},{"location":"0.x/misk/misk.tasks/index.html","text":"misk / misk.tasks Package misk.tasks \u00b6 Types \u00b6 Name Summary DelayedTask class DelayedTask : Delayed A DelayedTask is a task that runs in the future RepeatedTaskQueue class RepeatedTaskQueue : AbstractExecutionThreadService A RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution. RepeatedTaskQueueConfig data class RepeatedTaskQueueConfig RepeatedTaskQueueFactory class RepeatedTaskQueueFactory RepeatedTaskQueueMetrics class RepeatedTaskQueueMetrics Result data class Result Status enum class Status","title":"Package misk.tasks - Misk"},{"location":"0.x/misk/misk.tasks/index.html#package-misktasks","text":"","title":"Package misk.tasks"},{"location":"0.x/misk/misk.tasks/index.html#types","text":"Name Summary DelayedTask class DelayedTask : Delayed A DelayedTask is a task that runs in the future RepeatedTaskQueue class RepeatedTaskQueue : AbstractExecutionThreadService A RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution. RepeatedTaskQueueConfig data class RepeatedTaskQueueConfig RepeatedTaskQueueFactory class RepeatedTaskQueueFactory RepeatedTaskQueueMetrics class RepeatedTaskQueueMetrics Result data class Result Status enum class Status","title":"Types"},{"location":"0.x/misk/misk.tasks/-delayed-task/index.html","text":"misk / misk.tasks / DelayedTask DelayedTask \u00b6 class DelayedTask : Delayed A DelayedTask is a task that runs in the future Constructors \u00b6 Name Summary <init> DelayedTask(clock: Clock , executionTime: Instant , task: () -> Result ) A DelayedTask is a task that runs in the future Functions \u00b6 Name Summary compareTo fun compareTo(other: Delayed ): Int getDelay fun getDelay(unit: TimeUnit ): Long","title":"DelayedTask - Misk"},{"location":"0.x/misk/misk.tasks/-delayed-task/index.html#delayedtask","text":"class DelayedTask : Delayed A DelayedTask is a task that runs in the future","title":"DelayedTask"},{"location":"0.x/misk/misk.tasks/-delayed-task/index.html#constructors","text":"Name Summary <init> DelayedTask(clock: Clock , executionTime: Instant , task: () -> Result ) A DelayedTask is a task that runs in the future","title":"Constructors"},{"location":"0.x/misk/misk.tasks/-delayed-task/index.html#functions","text":"Name Summary compareTo fun compareTo(other: Delayed ): Int getDelay fun getDelay(unit: TimeUnit ): Long","title":"Functions"},{"location":"0.x/misk/misk.tasks/-delayed-task/-init-.html","text":"misk / misk.tasks / DelayedTask / <init> <init> \u00b6 DelayedTask(clock: Clock , executionTime: Instant , task: () -> Result ) A DelayedTask is a task that runs in the future","title":" init "},{"location":"0.x/misk/misk.tasks/-delayed-task/-init-.html#init","text":"DelayedTask(clock: Clock , executionTime: Instant , task: () -> Result ) A DelayedTask is a task that runs in the future","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.tasks/-delayed-task/compare-to.html","text":"misk / misk.tasks / DelayedTask / compareTo compareTo \u00b6 fun compareTo(other: Delayed ): Int","title":"compareTo - Misk"},{"location":"0.x/misk/misk.tasks/-delayed-task/compare-to.html#compareto","text":"fun compareTo(other: Delayed ): Int","title":"compareTo"},{"location":"0.x/misk/misk.tasks/-delayed-task/get-delay.html","text":"misk / misk.tasks / DelayedTask / getDelay getDelay \u00b6 fun getDelay(unit: TimeUnit ): Long","title":"getDelay - Misk"},{"location":"0.x/misk/misk.tasks/-delayed-task/get-delay.html#getdelay","text":"fun getDelay(unit: TimeUnit ): Long","title":"getDelay"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/index.html","text":"misk / misk.tasks / RepeatedTaskQueue RepeatedTaskQueue \u00b6 class RepeatedTaskQueue : AbstractExecutionThreadService A RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution. RepeatedTaskQueue implements the Service interface, which requires proper startup and shutdown. Alternatively, you can add new instances to the Service multibind. Properties \u00b6 Name Summary name val name: String Functions \u00b6 Name Summary executor fun executor(): Executor run fun run(): Unit runs the main event loop, pulling the next task from the queue and handing it off to the executor for dispatching schedule fun schedule(delay: Duration , retryDelayOnFailure: Duration ? = null, task: () -> Result ): Unit Schedules a task to run repeatedly after an initial delay. The task itself determines the next execution time. Provide an optional retryDelayOnFailure parameter to determine when the job should be retried in the case of an unhandled exception by the client scheduleWithBackoff fun scheduleWithBackoff(timeBetweenRuns: Duration , initialDelay: Duration = timeBetweenRuns, noWorkBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), failureBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), task: () -> Status ): Unit Schedules a task to run repeatedly at a fixed delay, with back-off for errors and lack of available work serviceName fun serviceName(): String startUp fun startUp(): Unit triggerShutdown fun triggerShutdown(): Unit","title":"RepeatedTaskQueue - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/index.html#repeatedtaskqueue","text":"class RepeatedTaskQueue : AbstractExecutionThreadService A RepeatedTaskQueue runs repeated tasks at a user controlled rate. Internally it uses a DelayQueue to hold the pending tasks; a background thread pulls the next task from the DelayQueue and hands it off to an executor service for execution. RepeatedTaskQueue implements the Service interface, which requires proper startup and shutdown. Alternatively, you can add new instances to the Service multibind.","title":"RepeatedTaskQueue"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/index.html#functions","text":"Name Summary executor fun executor(): Executor run fun run(): Unit runs the main event loop, pulling the next task from the queue and handing it off to the executor for dispatching schedule fun schedule(delay: Duration , retryDelayOnFailure: Duration ? = null, task: () -> Result ): Unit Schedules a task to run repeatedly after an initial delay. The task itself determines the next execution time. Provide an optional retryDelayOnFailure parameter to determine when the job should be retried in the case of an unhandled exception by the client scheduleWithBackoff fun scheduleWithBackoff(timeBetweenRuns: Duration , initialDelay: Duration = timeBetweenRuns, noWorkBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), failureBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), task: () -> Status ): Unit Schedules a task to run repeatedly at a fixed delay, with back-off for errors and lack of available work serviceName fun serviceName(): String startUp fun startUp(): Unit triggerShutdown fun triggerShutdown(): Unit","title":"Functions"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/executor.html","text":"misk / misk.tasks / RepeatedTaskQueue / executor executor \u00b6 protected fun executor(): Executor","title":"executor - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/executor.html#executor","text":"protected fun executor(): Executor","title":"executor"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/name.html","text":"misk / misk.tasks / RepeatedTaskQueue / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/run.html","text":"misk / misk.tasks / RepeatedTaskQueue / run run \u00b6 protected fun run(): Unit runs the main event loop, pulling the next task from the queue and handing it off to the executor for dispatching","title":"run - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/run.html#run","text":"protected fun run(): Unit runs the main event loop, pulling the next task from the queue and handing it off to the executor for dispatching","title":"run"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/schedule-with-backoff.html","text":"misk / misk.tasks / RepeatedTaskQueue / scheduleWithBackoff scheduleWithBackoff \u00b6 fun scheduleWithBackoff(timeBetweenRuns: Duration , initialDelay: Duration = timeBetweenRuns, noWorkBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), failureBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), task: () -> Status ): Unit Schedules a task to run repeatedly at a fixed delay, with back-off for errors and lack of available work","title":"scheduleWithBackoff - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/schedule-with-backoff.html#schedulewithbackoff","text":"fun scheduleWithBackoff(timeBetweenRuns: Duration , initialDelay: Duration = timeBetweenRuns, noWorkBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), failureBackoff: Backoff = config.defaultBackoff(timeBetweenRuns), task: () -> Status ): Unit Schedules a task to run repeatedly at a fixed delay, with back-off for errors and lack of available work","title":"scheduleWithBackoff"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/schedule.html","text":"misk / misk.tasks / RepeatedTaskQueue / schedule schedule \u00b6 fun schedule(delay: Duration , retryDelayOnFailure: Duration ? = null, task: () -> Result ): Unit Schedules a task to run repeatedly after an initial delay. The task itself determines the next execution time. Provide an optional retryDelayOnFailure parameter to determine when the job should be retried in the case of an unhandled exception by the client","title":"schedule - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/schedule.html#schedule","text":"fun schedule(delay: Duration , retryDelayOnFailure: Duration ? = null, task: () -> Result ): Unit Schedules a task to run repeatedly after an initial delay. The task itself determines the next execution time. Provide an optional retryDelayOnFailure parameter to determine when the job should be retried in the case of an unhandled exception by the client","title":"schedule"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/service-name.html","text":"misk / misk.tasks / RepeatedTaskQueue / serviceName serviceName \u00b6 protected fun serviceName(): String","title":"serviceName - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/service-name.html#servicename","text":"protected fun serviceName(): String","title":"serviceName"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/start-up.html","text":"misk / misk.tasks / RepeatedTaskQueue / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/trigger-shutdown.html","text":"misk / misk.tasks / RepeatedTaskQueue / triggerShutdown triggerShutdown \u00b6 protected fun triggerShutdown(): Unit","title":"triggerShutdown - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue/trigger-shutdown.html#triggershutdown","text":"protected fun triggerShutdown(): Unit","title":"triggerShutdown"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/index.html","text":"misk / misk.tasks / RepeatedTaskQueueConfig RepeatedTaskQueueConfig \u00b6 data class RepeatedTaskQueueConfig Constructors \u00b6 Name Summary <init> RepeatedTaskQueueConfig(default_jitter_ms: Long = 50, default_max_delay_sec: Long = 60, num_parallel_tasks: Int = 1) Properties \u00b6 Name Summary default_jitter_ms val default_jitter_ms: Long The default amount of jitter to use when scheduling backoffs. default_max_delay_sec val default_max_delay_sec: Long The default maximum backoff time. num_parallel_tasks val num_parallel_tasks: Int The fixed number of parallel tasks to run. Functions \u00b6 Name Summary defaultBackoff fun defaultBackoff(initialDelay: Duration ): Backoff Construct an ExponentialBackoff from the initial delay using the default configs.","title":"RepeatedTaskQueueConfig - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/index.html#repeatedtaskqueueconfig","text":"data class RepeatedTaskQueueConfig","title":"RepeatedTaskQueueConfig"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/index.html#constructors","text":"Name Summary <init> RepeatedTaskQueueConfig(default_jitter_ms: Long = 50, default_max_delay_sec: Long = 60, num_parallel_tasks: Int = 1)","title":"Constructors"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/index.html#properties","text":"Name Summary default_jitter_ms val default_jitter_ms: Long The default amount of jitter to use when scheduling backoffs. default_max_delay_sec val default_max_delay_sec: Long The default maximum backoff time. num_parallel_tasks val num_parallel_tasks: Int The fixed number of parallel tasks to run.","title":"Properties"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/index.html#functions","text":"Name Summary defaultBackoff fun defaultBackoff(initialDelay: Duration ): Backoff Construct an ExponentialBackoff from the initial delay using the default configs.","title":"Functions"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/-init-.html","text":"misk / misk.tasks / RepeatedTaskQueueConfig / <init> <init> \u00b6 RepeatedTaskQueueConfig(default_jitter_ms: Long = 50, default_max_delay_sec: Long = 60, num_parallel_tasks: Int = 1)","title":" init "},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/-init-.html#init","text":"RepeatedTaskQueueConfig(default_jitter_ms: Long = 50, default_max_delay_sec: Long = 60, num_parallel_tasks: Int = 1)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/default-backoff.html","text":"misk / misk.tasks / RepeatedTaskQueueConfig / defaultBackoff defaultBackoff \u00b6 fun defaultBackoff(initialDelay: Duration ): Backoff Construct an ExponentialBackoff from the initial delay using the default configs.","title":"defaultBackoff - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/default-backoff.html#defaultbackoff","text":"fun defaultBackoff(initialDelay: Duration ): Backoff Construct an ExponentialBackoff from the initial delay using the default configs.","title":"defaultBackoff"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/default_jitter_ms.html","text":"misk / misk.tasks / RepeatedTaskQueueConfig / default_jitter_ms default_jitter_ms \u00b6 val default_jitter_ms: Long The default amount of jitter to use when scheduling backoffs. Can be overridden when scheduling a tasks.","title":"default_jitter_ms - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/default_jitter_ms.html#default_jitter_ms","text":"val default_jitter_ms: Long The default amount of jitter to use when scheduling backoffs. Can be overridden when scheduling a tasks.","title":"default_jitter_ms"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/default_max_delay_sec.html","text":"misk / misk.tasks / RepeatedTaskQueueConfig / default_max_delay_sec default_max_delay_sec \u00b6 val default_max_delay_sec: Long The default maximum backoff time. Can be overridden when scheduling a task.","title":"default_max_delay_sec - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/default_max_delay_sec.html#default_max_delay_sec","text":"val default_max_delay_sec: Long The default maximum backoff time. Can be overridden when scheduling a task.","title":"default_max_delay_sec"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/num_parallel_tasks.html","text":"misk / misk.tasks / RepeatedTaskQueueConfig / num_parallel_tasks num_parallel_tasks \u00b6 val num_parallel_tasks: Int The fixed number of parallel tasks to run. If -1 then an unbounded number of parallel tasks are allowed. An unbounded number of tasks can be useful for an App that needs to dynamically compute the number of tasks at runtime. However, the App is then responsible for ensuring an upper bound for the number of tasks submitted.","title":"num_parallel_tasks - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-config/num_parallel_tasks.html#num_parallel_tasks","text":"val num_parallel_tasks: Int The fixed number of parallel tasks to run. If -1 then an unbounded number of parallel tasks are allowed. An unbounded number of tasks can be useful for an App that needs to dynamically compute the number of tasks at runtime. However, the App is then responsible for ensuring an upper bound for the number of tasks submitted.","title":"num_parallel_tasks"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/index.html","text":"misk / misk.tasks / RepeatedTaskQueueFactory RepeatedTaskQueueFactory \u00b6 @Singleton class RepeatedTaskQueueFactory Constructors \u00b6 Name Summary <init> RepeatedTaskQueueFactory(clock: Clock , metrics: RepeatedTaskQueueMetrics , executorServiceFactory: ExecutorServiceFactory) Functions \u00b6 Name Summary forTesting fun forTesting(name: String , backingStorage: ExplicitReleaseDelayQueue < DelayedTask >, pollingTimeout: Duration = Duration.ofMillis(50)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue for testing new fun new(name: String , config: RepeatedTaskQueueConfig = RepeatedTaskQueueConfig(), pollingTimeout: Duration = Duration.ofMillis(250)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue","title":"RepeatedTaskQueueFactory - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/index.html#repeatedtaskqueuefactory","text":"@Singleton class RepeatedTaskQueueFactory","title":"RepeatedTaskQueueFactory"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/index.html#constructors","text":"Name Summary <init> RepeatedTaskQueueFactory(clock: Clock , metrics: RepeatedTaskQueueMetrics , executorServiceFactory: ExecutorServiceFactory)","title":"Constructors"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/index.html#functions","text":"Name Summary forTesting fun forTesting(name: String , backingStorage: ExplicitReleaseDelayQueue < DelayedTask >, pollingTimeout: Duration = Duration.ofMillis(50)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue for testing new fun new(name: String , config: RepeatedTaskQueueConfig = RepeatedTaskQueueConfig(), pollingTimeout: Duration = Duration.ofMillis(250)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue","title":"Functions"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/-init-.html","text":"misk / misk.tasks / RepeatedTaskQueueFactory / <init> <init> \u00b6 RepeatedTaskQueueFactory(clock: Clock , metrics: RepeatedTaskQueueMetrics , executorServiceFactory: ExecutorServiceFactory)","title":" init "},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/-init-.html#init","text":"RepeatedTaskQueueFactory(clock: Clock , metrics: RepeatedTaskQueueMetrics , executorServiceFactory: ExecutorServiceFactory)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/for-testing.html","text":"misk / misk.tasks / RepeatedTaskQueueFactory / forTesting forTesting \u00b6 fun forTesting(name: String , backingStorage: ExplicitReleaseDelayQueue < DelayedTask >, pollingTimeout: Duration = Duration.ofMillis(50)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue for testing","title":"forTesting - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/for-testing.html#fortesting","text":"fun forTesting(name: String , backingStorage: ExplicitReleaseDelayQueue < DelayedTask >, pollingTimeout: Duration = Duration.ofMillis(50)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue for testing","title":"forTesting"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/new.html","text":"misk / misk.tasks / RepeatedTaskQueueFactory / new new \u00b6 fun new(name: String , config: RepeatedTaskQueueConfig = RepeatedTaskQueueConfig(), pollingTimeout: Duration = Duration.ofMillis(250)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue","title":"new - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-factory/new.html#new","text":"fun new(name: String , config: RepeatedTaskQueueConfig = RepeatedTaskQueueConfig(), pollingTimeout: Duration = Duration.ofMillis(250)): RepeatedTaskQueue Builds a new instance of a RepeatedTaskQueue","title":"new"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-metrics/index.html","text":"misk / misk.tasks / RepeatedTaskQueueMetrics RepeatedTaskQueueMetrics \u00b6 @Singleton class RepeatedTaskQueueMetrics Constructors \u00b6 Name Summary <init> RepeatedTaskQueueMetrics(metrics: Metrics)","title":"RepeatedTaskQueueMetrics - Misk"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-metrics/index.html#repeatedtaskqueuemetrics","text":"@Singleton class RepeatedTaskQueueMetrics","title":"RepeatedTaskQueueMetrics"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-metrics/index.html#constructors","text":"Name Summary <init> RepeatedTaskQueueMetrics(metrics: Metrics)","title":"Constructors"},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-metrics/-init-.html","text":"misk / misk.tasks / RepeatedTaskQueueMetrics / <init> <init> \u00b6 RepeatedTaskQueueMetrics(metrics: Metrics)","title":" init "},{"location":"0.x/misk/misk.tasks/-repeated-task-queue-metrics/-init-.html#init","text":"RepeatedTaskQueueMetrics(metrics: Metrics)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.tasks/-result/index.html","text":"misk / misk.tasks / Result Result \u00b6 data class Result Constructors \u00b6 Name Summary <init> Result(status: Status , nextDelay: Duration ) Properties \u00b6 Name Summary nextDelay val nextDelay: Duration status val status: Status","title":"Result - Misk"},{"location":"0.x/misk/misk.tasks/-result/index.html#result","text":"data class Result","title":"Result"},{"location":"0.x/misk/misk.tasks/-result/index.html#constructors","text":"Name Summary <init> Result(status: Status , nextDelay: Duration )","title":"Constructors"},{"location":"0.x/misk/misk.tasks/-result/index.html#properties","text":"Name Summary nextDelay val nextDelay: Duration status val status: Status","title":"Properties"},{"location":"0.x/misk/misk.tasks/-result/-init-.html","text":"misk / misk.tasks / Result / <init> <init> \u00b6 Result(status: Status , nextDelay: Duration )","title":" init "},{"location":"0.x/misk/misk.tasks/-result/-init-.html#init","text":"Result(status: Status , nextDelay: Duration )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.tasks/-result/next-delay.html","text":"misk / misk.tasks / Result / nextDelay nextDelay \u00b6 val nextDelay: Duration","title":"nextDelay - Misk"},{"location":"0.x/misk/misk.tasks/-result/next-delay.html#nextdelay","text":"val nextDelay: Duration","title":"nextDelay"},{"location":"0.x/misk/misk.tasks/-result/status.html","text":"misk / misk.tasks / Result / status status \u00b6 val status: Status","title":"status - Misk"},{"location":"0.x/misk/misk.tasks/-result/status.html#status","text":"val status: Status","title":"status"},{"location":"0.x/misk/misk.tasks/-status/index.html","text":"misk / misk.tasks / Status Status \u00b6 enum class Status Enum Values \u00b6 Name Summary OK The task completed successfully and processed work NO_WORK The task had no work to complete FAILED The task resulted in an error NO_RESCHEDULE The task should not be rescheduled Functions \u00b6 Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"Status - Misk"},{"location":"0.x/misk/misk.tasks/-status/index.html#status","text":"enum class Status","title":"Status"},{"location":"0.x/misk/misk.tasks/-status/index.html#enum-values","text":"Name Summary OK The task completed successfully and processed work NO_WORK The task had no work to complete FAILED The task resulted in an error NO_RESCHEDULE The task should not be rescheduled","title":"Enum Values"},{"location":"0.x/misk/misk.tasks/-status/index.html#functions","text":"Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"Functions"},{"location":"0.x/misk/misk.tasks/-status/-f-a-i-l-e-d.html","text":"misk / misk.tasks / Status / FAILED FAILED \u00b6 FAILED The task resulted in an error Inherited Functions \u00b6 Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"FAILED - Misk"},{"location":"0.x/misk/misk.tasks/-status/-f-a-i-l-e-d.html#failed","text":"FAILED The task resulted in an error","title":"FAILED"},{"location":"0.x/misk/misk.tasks/-status/-f-a-i-l-e-d.html#inherited-functions","text":"Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"Inherited Functions"},{"location":"0.x/misk/misk.tasks/-status/-n-o_-r-e-s-c-h-e-d-u-l-e.html","text":"misk / misk.tasks / Status / NO_RESCHEDULE NO_RESCHEDULE \u00b6 NO_RESCHEDULE The task should not be rescheduled Inherited Functions \u00b6 Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"NO_RESCHEDULE - Misk"},{"location":"0.x/misk/misk.tasks/-status/-n-o_-r-e-s-c-h-e-d-u-l-e.html#no_reschedule","text":"NO_RESCHEDULE The task should not be rescheduled","title":"NO_RESCHEDULE"},{"location":"0.x/misk/misk.tasks/-status/-n-o_-r-e-s-c-h-e-d-u-l-e.html#inherited-functions","text":"Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"Inherited Functions"},{"location":"0.x/misk/misk.tasks/-status/-n-o_-w-o-r-k.html","text":"misk / misk.tasks / Status / NO_WORK NO_WORK \u00b6 NO_WORK The task had no work to complete Inherited Functions \u00b6 Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"NO_WORK - Misk"},{"location":"0.x/misk/misk.tasks/-status/-n-o_-w-o-r-k.html#no_work","text":"NO_WORK The task had no work to complete","title":"NO_WORK"},{"location":"0.x/misk/misk.tasks/-status/-n-o_-w-o-r-k.html#inherited-functions","text":"Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"Inherited Functions"},{"location":"0.x/misk/misk.tasks/-status/-o-k.html","text":"misk / misk.tasks / Status / OK OK \u00b6 OK The task completed successfully and processed work Inherited Functions \u00b6 Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"OK - Misk"},{"location":"0.x/misk/misk.tasks/-status/-o-k.html#ok","text":"OK The task completed successfully and processed work","title":"OK"},{"location":"0.x/misk/misk.tasks/-status/-o-k.html#inherited-functions","text":"Name Summary metricLabel fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"Inherited Functions"},{"location":"0.x/misk/misk.tasks/-status/metric-label.html","text":"misk / misk.tasks / Status / metricLabel metricLabel \u00b6 fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"metricLabel - Misk"},{"location":"0.x/misk/misk.tasks/-status/metric-label.html#metriclabel","text":"fun metricLabel(): String The metric label for the status. This is used instead of name() in case the code is refactored.","title":"metricLabel"},{"location":"0.x/misk/misk.time/index.html","text":"misk / misk.time Package misk.time \u00b6 Types \u00b6 Name Summary ForceUtcTimeZoneService class ForceUtcTimeZoneService : AbstractIdleService Forces the default JVM timezone to UTC. Functions \u00b6 Name Summary timed fun <T> timed(f: () -> T ): Pair < Duration , T > fun <T> timed(ticker: Ticker, f: () -> T ): Pair < Duration , T >","title":"Package misk.time - Misk"},{"location":"0.x/misk/misk.time/index.html#package-misktime","text":"","title":"Package misk.time"},{"location":"0.x/misk/misk.time/index.html#types","text":"Name Summary ForceUtcTimeZoneService class ForceUtcTimeZoneService : AbstractIdleService Forces the default JVM timezone to UTC.","title":"Types"},{"location":"0.x/misk/misk.time/index.html#functions","text":"Name Summary timed fun <T> timed(f: () -> T ): Pair < Duration , T > fun <T> timed(ticker: Ticker, f: () -> T ): Pair < Duration , T >","title":"Functions"},{"location":"0.x/misk/misk.time/timed.html","text":"misk / misk.time / timed timed \u00b6 fun <T> timed(f: () -> T ): Pair < Duration , T > fun <T> timed(ticker: Ticker, f: () -> T ): Pair < Duration , T >","title":"timed - Misk"},{"location":"0.x/misk/misk.time/timed.html#timed","text":"fun <T> timed(f: () -> T ): Pair < Duration , T > fun <T> timed(ticker: Ticker, f: () -> T ): Pair < Duration , T >","title":"timed"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/index.html","text":"misk / misk.time / ForceUtcTimeZoneService ForceUtcTimeZoneService \u00b6 @Singleton class ForceUtcTimeZoneService : AbstractIdleService Forces the default JVM timezone to UTC. This is useful when running Misk applications on machines that don\u2019t have UTC set as the system timezone (eg. development machines). Constructors \u00b6 Name Summary <init> ForceUtcTimeZoneService() Forces the default JVM timezone to UTC. Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"ForceUtcTimeZoneService - Misk"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/index.html#forceutctimezoneservice","text":"@Singleton class ForceUtcTimeZoneService : AbstractIdleService Forces the default JVM timezone to UTC. This is useful when running Misk applications on machines that don\u2019t have UTC set as the system timezone (eg. development machines).","title":"ForceUtcTimeZoneService"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/index.html#constructors","text":"Name Summary <init> ForceUtcTimeZoneService() Forces the default JVM timezone to UTC.","title":"Constructors"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/-init-.html","text":"misk / misk.time / ForceUtcTimeZoneService / <init> <init> \u00b6 ForceUtcTimeZoneService() Forces the default JVM timezone to UTC. This is useful when running Misk applications on machines that don\u2019t have UTC set as the system timezone (eg. development machines).","title":" init "},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/-init-.html#init","text":"ForceUtcTimeZoneService() Forces the default JVM timezone to UTC. This is useful when running Misk applications on machines that don\u2019t have UTC set as the system timezone (eg. development machines).","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/shut-down.html","text":"misk / misk.time / ForceUtcTimeZoneService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/start-up.html","text":"misk / misk.time / ForceUtcTimeZoneService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk/misk.time/-force-utc-time-zone-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk/misk.tracing/index.html","text":"misk / misk.tracing Package misk.tracing \u00b6 Extensions for External Classes \u00b6 Name Summary io.opentracing.Tracer","title":"Package misk.tracing - Misk"},{"location":"0.x/misk/misk.tracing/index.html#package-misktracing","text":"","title":"Package misk.tracing"},{"location":"0.x/misk/misk.tracing/index.html#extensions-for-external-classes","text":"Name Summary io.opentracing.Tracer","title":"Extensions for External Classes"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/index.html","text":"misk / misk.tracing / io.opentracing.Tracer Extensions for io.opentracing.Tracer \u00b6 Name Summary trace fun <T> Tracer.trace(spanName: String , tags: Map < String , String > = mapOf(), f: () -> T ): T trace traces the given function with the specific span name and optional tags traceWithNewRootSpan fun <T> Tracer.traceWithNewRootSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithNewRootSpan traces the given function, always starting a new root span traceWithSpan fun <T> Tracer.traceWithSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithSpan traces the given function, passing the span into the function. If a span is already active, the new span is made a child of the existing.","title":"Extensions for io.opentracing.Tracer - Misk"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/index.html#extensions-for-ioopentracingtracer","text":"Name Summary trace fun <T> Tracer.trace(spanName: String , tags: Map < String , String > = mapOf(), f: () -> T ): T trace traces the given function with the specific span name and optional tags traceWithNewRootSpan fun <T> Tracer.traceWithNewRootSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithNewRootSpan traces the given function, always starting a new root span traceWithSpan fun <T> Tracer.traceWithSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithSpan traces the given function, passing the span into the function. If a span is already active, the new span is made a child of the existing.","title":"Extensions for io.opentracing.Tracer"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/trace-with-new-root-span.html","text":"misk / misk.tracing / io.opentracing.Tracer / traceWithNewRootSpan traceWithNewRootSpan \u00b6 fun <T> Tracer.traceWithNewRootSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithNewRootSpan traces the given function, always starting a new root span","title":"traceWithNewRootSpan - Misk"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/trace-with-new-root-span.html#tracewithnewrootspan","text":"fun <T> Tracer.traceWithNewRootSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithNewRootSpan traces the given function, always starting a new root span","title":"traceWithNewRootSpan"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/trace-with-span.html","text":"misk / misk.tracing / io.opentracing.Tracer / traceWithSpan traceWithSpan \u00b6 fun <T> Tracer.traceWithSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithSpan traces the given function, passing the span into the function. If a span is already active, the new span is made a child of the existing.","title":"traceWithSpan - Misk"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/trace-with-span.html#tracewithspan","text":"fun <T> Tracer.traceWithSpan(spanName: String , tags: Map < String , String > = mapOf(), f: (Span) -> T ): T traceWithSpan traces the given function, passing the span into the function. If a span is already active, the new span is made a child of the existing.","title":"traceWithSpan"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/trace.html","text":"misk / misk.tracing / io.opentracing.Tracer / trace trace \u00b6 fun <T> Tracer.trace(spanName: String , tags: Map < String , String > = mapOf(), f: () -> T ): T trace traces the given function with the specific span name and optional tags","title":"trace - Misk"},{"location":"0.x/misk/misk.tracing/io.opentracing.-tracer/trace.html#trace","text":"fun <T> Tracer.trace(spanName: String , tags: Map < String , String > = mapOf(), f: () -> T ): T trace traces the given function with the specific span name and optional tags","title":"trace"},{"location":"0.x/misk/misk.web/index.html","text":"misk / misk.web Package misk.web \u00b6 Types \u00b6 Name Summary CorsConfig data class CorsConfig DispatchMechanism enum class DispatchMechanism Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics. FeatureBinding interface FeatureBinding Binds an HTTP call to a WebAction function. HttpCall interface HttpCall A live HTTP call from a client for use by a chain of network interceptors. MiskWebFormBuilder class MiskWebFormBuilder Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping. MiskWebModule class MiskWebModule : KAbstractModule NetworkChain interface NetworkChain NetworkInterceptor interface NetworkInterceptor PathPattern class PathPattern : Comparable < PathPattern > A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters. SocketAddress sealed class SocketAddress Information about the socket on which a HTTP call arrived. WebActionModule class WebActionModule<A : WebAction> : KAbstractModule WebConfig data class WebConfig : Config WebSslConfig data class WebSslConfig WebUnixDomainSocketConfig data class WebUnixDomainSocketConfig Extensions for External Classes \u00b6 Name Summary kotlin.String okhttp3.Response Functions \u00b6 Name Summary readUtf8 fun Response<*>.readUtf8(): String","title":"Package misk.web - Misk"},{"location":"0.x/misk/misk.web/index.html#package-miskweb","text":"","title":"Package misk.web"},{"location":"0.x/misk/misk.web/index.html#types","text":"Name Summary CorsConfig data class CorsConfig DispatchMechanism enum class DispatchMechanism Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics. FeatureBinding interface FeatureBinding Binds an HTTP call to a WebAction function. HttpCall interface HttpCall A live HTTP call from a client for use by a chain of network interceptors. MiskWebFormBuilder class MiskWebFormBuilder Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping. MiskWebModule class MiskWebModule : KAbstractModule NetworkChain interface NetworkChain NetworkInterceptor interface NetworkInterceptor PathPattern class PathPattern : Comparable < PathPattern > A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters. SocketAddress sealed class SocketAddress Information about the socket on which a HTTP call arrived. WebActionModule class WebActionModule<A : WebAction> : KAbstractModule WebConfig data class WebConfig : Config WebSslConfig data class WebSslConfig WebUnixDomainSocketConfig data class WebUnixDomainSocketConfig","title":"Types"},{"location":"0.x/misk/misk.web/index.html#extensions-for-external-classes","text":"Name Summary kotlin.String okhttp3.Response","title":"Extensions for External Classes"},{"location":"0.x/misk/misk.web/index.html#functions","text":"Name Summary readUtf8 fun Response<*>.readUtf8(): String","title":"Functions"},{"location":"0.x/misk/misk.web/read-utf8.html","text":"misk / misk.web / readUtf8 readUtf8 \u00b6 fun Response<*>.readUtf8(): String","title":"readUtf8 - Misk"},{"location":"0.x/misk/misk.web/read-utf8.html#readutf8","text":"fun Response<*>.readUtf8(): String","title":"readUtf8"},{"location":"0.x/misk/misk.web/-cors-config/index.html","text":"misk / misk.web / CorsConfig CorsConfig \u00b6 data class CorsConfig Constructors \u00b6 Name Summary <init> CorsConfig(allowedOrigins: Array < String > = arrayOf(\"*\"), allowedMethods: Array < String > = arrayOf(\"GET\", \"POST\", \"HEAD\"), allowedHeaders: Array < String `> = arrayOf( \u201cX-Requested-With\u201d, \u201cContent-Type\u201d, \u201cAccept\u201d, \u201cOrigin\u201d ), allowCredentials: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) = true, preflightMaxAge: [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) = \u201c1800\u201d, chainPreflight: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) = true, exposedHeaders: [ Array ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-array/index.html) < [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) > = arrayOf())` Properties \u00b6 Name Summary allowCredentials val allowCredentials: Boolean A boolean indicating if the resource allows requests with credentials. allowedHeaders val allowedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be specified when accessing the resources. allowedMethods val allowedMethods: Array < String > A comma separated list of HTTP methods that are allowed to be used when accessing the resources. allowedOrigins val allowedOrigins: Array < String > A comma separated list of origins that are allowed to access the resources. chainPreflight val chainPreflight: Boolean True if preflight requests are chained to their target resource for normal handling (as an OPTION request). exposedHeaders val exposedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be exposed on the client. preflightMaxAge val preflightMaxAge: String The number of seconds that preflight requests can be cached by the client.","title":"CorsConfig - Misk"},{"location":"0.x/misk/misk.web/-cors-config/index.html#corsconfig","text":"data class CorsConfig","title":"CorsConfig"},{"location":"0.x/misk/misk.web/-cors-config/index.html#constructors","text":"Name Summary <init> CorsConfig(allowedOrigins: Array < String > = arrayOf(\"*\"), allowedMethods: Array < String > = arrayOf(\"GET\", \"POST\", \"HEAD\"), allowedHeaders: Array < String `> = arrayOf( \u201cX-Requested-With\u201d, \u201cContent-Type\u201d, \u201cAccept\u201d, \u201cOrigin\u201d ), allowCredentials: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) = true, preflightMaxAge: [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) = \u201c1800\u201d, chainPreflight: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) = true, exposedHeaders: [ Array ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-array/index.html) < [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) > = arrayOf())`","title":"Constructors"},{"location":"0.x/misk/misk.web/-cors-config/index.html#properties","text":"Name Summary allowCredentials val allowCredentials: Boolean A boolean indicating if the resource allows requests with credentials. allowedHeaders val allowedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be specified when accessing the resources. allowedMethods val allowedMethods: Array < String > A comma separated list of HTTP methods that are allowed to be used when accessing the resources. allowedOrigins val allowedOrigins: Array < String > A comma separated list of origins that are allowed to access the resources. chainPreflight val chainPreflight: Boolean True if preflight requests are chained to their target resource for normal handling (as an OPTION request). exposedHeaders val exposedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be exposed on the client. preflightMaxAge val preflightMaxAge: String The number of seconds that preflight requests can be cached by the client.","title":"Properties"},{"location":"0.x/misk/misk.web/-cors-config/-init-.html","text":"misk / misk.web / CorsConfig / <init> <init> \u00b6 CorsConfig(allowedOrigins: Array < String > = arrayOf(\"*\"), allowedMethods: Array < String > = arrayOf(\"GET\", \"POST\", \"HEAD\"), allowedHeaders: Array < String > = arrayOf( \"X-Requested-With\", \"Content-Type\", \"Accept\", \"Origin\" ), allowCredentials: Boolean = true, preflightMaxAge: String = \"1800\", chainPreflight: Boolean = true, exposedHeaders: Array < String > = arrayOf())","title":" init "},{"location":"0.x/misk/misk.web/-cors-config/-init-.html#init","text":"CorsConfig(allowedOrigins: Array < String > = arrayOf(\"*\"), allowedMethods: Array < String > = arrayOf(\"GET\", \"POST\", \"HEAD\"), allowedHeaders: Array < String > = arrayOf( \"X-Requested-With\", \"Content-Type\", \"Accept\", \"Origin\" ), allowCredentials: Boolean = true, preflightMaxAge: String = \"1800\", chainPreflight: Boolean = true, exposedHeaders: Array < String > = arrayOf())","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-cors-config/allow-credentials.html","text":"misk / misk.web / CorsConfig / allowCredentials allowCredentials \u00b6 val allowCredentials: Boolean A boolean indicating if the resource allows requests with credentials.","title":"allowCredentials - Misk"},{"location":"0.x/misk/misk.web/-cors-config/allow-credentials.html#allowcredentials","text":"val allowCredentials: Boolean A boolean indicating if the resource allows requests with credentials.","title":"allowCredentials"},{"location":"0.x/misk/misk.web/-cors-config/allowed-headers.html","text":"misk / misk.web / CorsConfig / allowedHeaders allowedHeaders \u00b6 val allowedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be specified when accessing the resources.","title":"allowedHeaders - Misk"},{"location":"0.x/misk/misk.web/-cors-config/allowed-headers.html#allowedheaders","text":"val allowedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be specified when accessing the resources.","title":"allowedHeaders"},{"location":"0.x/misk/misk.web/-cors-config/allowed-methods.html","text":"misk / misk.web / CorsConfig / allowedMethods allowedMethods \u00b6 val allowedMethods: Array < String > A comma separated list of HTTP methods that are allowed to be used when accessing the resources.","title":"allowedMethods - Misk"},{"location":"0.x/misk/misk.web/-cors-config/allowed-methods.html#allowedmethods","text":"val allowedMethods: Array < String > A comma separated list of HTTP methods that are allowed to be used when accessing the resources.","title":"allowedMethods"},{"location":"0.x/misk/misk.web/-cors-config/allowed-origins.html","text":"misk / misk.web / CorsConfig / allowedOrigins allowedOrigins \u00b6 val allowedOrigins: Array < String > A comma separated list of origins that are allowed to access the resources.","title":"allowedOrigins - Misk"},{"location":"0.x/misk/misk.web/-cors-config/allowed-origins.html#allowedorigins","text":"val allowedOrigins: Array < String > A comma separated list of origins that are allowed to access the resources.","title":"allowedOrigins"},{"location":"0.x/misk/misk.web/-cors-config/chain-preflight.html","text":"misk / misk.web / CorsConfig / chainPreflight chainPreflight \u00b6 val chainPreflight: Boolean True if preflight requests are chained to their target resource for normal handling (as an OPTION request).","title":"chainPreflight - Misk"},{"location":"0.x/misk/misk.web/-cors-config/chain-preflight.html#chainpreflight","text":"val chainPreflight: Boolean True if preflight requests are chained to their target resource for normal handling (as an OPTION request).","title":"chainPreflight"},{"location":"0.x/misk/misk.web/-cors-config/exposed-headers.html","text":"misk / misk.web / CorsConfig / exposedHeaders exposedHeaders \u00b6 val exposedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be exposed on the client.","title":"exposedHeaders - Misk"},{"location":"0.x/misk/misk.web/-cors-config/exposed-headers.html#exposedheaders","text":"val exposedHeaders: Array < String > A comma separated list of HTTP headers that are allowed to be exposed on the client.","title":"exposedHeaders"},{"location":"0.x/misk/misk.web/-cors-config/preflight-max-age.html","text":"misk / misk.web / CorsConfig / preflightMaxAge preflightMaxAge \u00b6 val preflightMaxAge: String The number of seconds that preflight requests can be cached by the client.","title":"preflightMaxAge - Misk"},{"location":"0.x/misk/misk.web/-cors-config/preflight-max-age.html#preflightmaxage","text":"val preflightMaxAge: String The number of seconds that preflight requests can be cached by the client.","title":"preflightMaxAge"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/index.html","text":"misk / misk.web / DispatchMechanism DispatchMechanism \u00b6 enum class DispatchMechanism Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics. Enum Values \u00b6 Name Summary GET POST PATCH PUT DELETE GRPC WEBSOCKET Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"DispatchMechanism - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/index.html#dispatchmechanism","text":"enum class DispatchMechanism Describes how an action is processed. This is like the HTTP method but has special cases for web sockets and gRPC. These protocols layer on top of HTTP methods and have different semantics.","title":"DispatchMechanism"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/index.html#enum-values","text":"Name Summary GET POST PATCH PUT DELETE GRPC WEBSOCKET","title":"Enum Values"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/index.html#properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-d-e-l-e-t-e.html","text":"misk / misk.web / DispatchMechanism / DELETE DELETE \u00b6 DELETE Inherited Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"DELETE - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-d-e-l-e-t-e.html#delete","text":"DELETE","title":"DELETE"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-d-e-l-e-t-e.html#inherited-properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Inherited Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-g-e-t.html","text":"misk / misk.web / DispatchMechanism / GET GET \u00b6 GET Inherited Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"GET - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-g-e-t.html#get","text":"GET","title":"GET"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-g-e-t.html#inherited-properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Inherited Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-g-r-p-c.html","text":"misk / misk.web / DispatchMechanism / GRPC GRPC \u00b6 GRPC Inherited Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"GRPC - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-g-r-p-c.html#grpc","text":"GRPC","title":"GRPC"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-g-r-p-c.html#inherited-properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Inherited Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-a-t-c-h.html","text":"misk / misk.web / DispatchMechanism / PATCH PATCH \u00b6 PATCH Inherited Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"PATCH - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-a-t-c-h.html#patch","text":"PATCH","title":"PATCH"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-a-t-c-h.html#inherited-properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Inherited Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-o-s-t.html","text":"misk / misk.web / DispatchMechanism / POST POST \u00b6 POST Inherited Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"POST - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-o-s-t.html#post","text":"POST","title":"POST"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-o-s-t.html#inherited-properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Inherited Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-u-t.html","text":"misk / misk.web / DispatchMechanism / PUT PUT \u00b6 PUT Inherited Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"PUT - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-u-t.html#put","text":"PUT","title":"PUT"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-p-u-t.html#inherited-properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Inherited Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-w-e-b-s-o-c-k-e-t.html","text":"misk / misk.web / DispatchMechanism / WEBSOCKET WEBSOCKET \u00b6 WEBSOCKET Inherited Properties \u00b6 Name Summary method val method: String Returns the method used when a call entered the service.","title":"WEBSOCKET - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-w-e-b-s-o-c-k-e-t.html#websocket","text":"WEBSOCKET","title":"WEBSOCKET"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/-w-e-b-s-o-c-k-e-t.html#inherited-properties","text":"Name Summary method val method: String Returns the method used when a call entered the service.","title":"Inherited Properties"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/method.html","text":"misk / misk.web / DispatchMechanism / method method \u00b6 val method: String Returns the method used when a call entered the service. This can be misleading: web sockets don\u2019t behave like normal GETs (they are upgraded), and GRPC calls don\u2019t behave like normal POSTS (they are duplex).","title":"method - Misk"},{"location":"0.x/misk/misk.web/-dispatch-mechanism/method.html#method","text":"val method: String Returns the method used when a call entered the service. This can be misleading: web sockets don\u2019t behave like normal GETs (they are upgraded), and GRPC calls don\u2019t behave like normal POSTS (they are duplex).","title":"method"},{"location":"0.x/misk/misk.web/-feature-binding/index.html","text":"misk / misk.web / FeatureBinding FeatureBinding \u00b6 interface FeatureBinding Binds an HTTP call to a WebAction function. Each web action has several features: An optional HTTP request body. Some HTTP methods (GET, HEAD) don\u2019t have a request body. An HTTP response body. Always present but possibly empty. Zero or more function parameters. An optional function return value. Functions that return Unit do not have a return value. Each bindings claims one or more features that it is responsible for. Some examples: A path parameter binding sets parameters 1 and 2 by parsing the request path. The request marshaller decodes the request body and sets it as @RequestBody parameter 3. The response marshaller takes the return value and encodes it as the response stream. A binding can claim multiple features. beforeCall is invoked if any features are claimed, and afterCall is only invoked if the return value is claimed. Creating Bindings \u00b6 Each factory is executed once for each endpoint at service startup time. Factories should interrogate the function and claim whichever features that intend to bind. This happens early so Misk can validate that every feature is bound exactly once. Factories that return null must make no claims. If no claims are made then no binding is executed. Misk will validate that every feature is claimed exactly once. If a feature is unclaimed that is a fatal error and the service will not be started. Binding Execution \u00b6 Once a functions bindings have been created and validated, each binding will be executed once before and once after every each HTTP call. In this method it must bind the features it claimed by providing parameters, reading the request body, writing the response body, or taking the return value. Types \u00b6 Name Summary Claimer interface Claimer Factory interface Factory Subject interface Subject Functions \u00b6 Name Summary afterCall open fun afterCall(subject: FeatureBinding.Subject ): Unit beforeCall open fun beforeCall(subject: FeatureBinding.Subject ): Unit","title":"FeatureBinding - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/index.html#featurebinding","text":"interface FeatureBinding Binds an HTTP call to a WebAction function. Each web action has several features: An optional HTTP request body. Some HTTP methods (GET, HEAD) don\u2019t have a request body. An HTTP response body. Always present but possibly empty. Zero or more function parameters. An optional function return value. Functions that return Unit do not have a return value. Each bindings claims one or more features that it is responsible for. Some examples: A path parameter binding sets parameters 1 and 2 by parsing the request path. The request marshaller decodes the request body and sets it as @RequestBody parameter 3. The response marshaller takes the return value and encodes it as the response stream. A binding can claim multiple features. beforeCall is invoked if any features are claimed, and afterCall is only invoked if the return value is claimed.","title":"FeatureBinding"},{"location":"0.x/misk/misk.web/-feature-binding/index.html#creating-bindings","text":"Each factory is executed once for each endpoint at service startup time. Factories should interrogate the function and claim whichever features that intend to bind. This happens early so Misk can validate that every feature is bound exactly once. Factories that return null must make no claims. If no claims are made then no binding is executed. Misk will validate that every feature is claimed exactly once. If a feature is unclaimed that is a fatal error and the service will not be started.","title":"Creating Bindings"},{"location":"0.x/misk/misk.web/-feature-binding/index.html#binding-execution","text":"Once a functions bindings have been created and validated, each binding will be executed once before and once after every each HTTP call. In this method it must bind the features it claimed by providing parameters, reading the request body, writing the response body, or taking the return value.","title":"Binding Execution"},{"location":"0.x/misk/misk.web/-feature-binding/index.html#types","text":"Name Summary Claimer interface Claimer Factory interface Factory Subject interface Subject","title":"Types"},{"location":"0.x/misk/misk.web/-feature-binding/index.html#functions","text":"Name Summary afterCall open fun afterCall(subject: FeatureBinding.Subject ): Unit beforeCall open fun beforeCall(subject: FeatureBinding.Subject ): Unit","title":"Functions"},{"location":"0.x/misk/misk.web/-feature-binding/after-call.html","text":"misk / misk.web / FeatureBinding / afterCall afterCall \u00b6 open fun afterCall(subject: FeatureBinding.Subject ): Unit","title":"afterCall - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/after-call.html#aftercall","text":"open fun afterCall(subject: FeatureBinding.Subject ): Unit","title":"afterCall"},{"location":"0.x/misk/misk.web/-feature-binding/before-call.html","text":"misk / misk.web / FeatureBinding / beforeCall beforeCall \u00b6 open fun beforeCall(subject: FeatureBinding.Subject ): Unit","title":"beforeCall - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/before-call.html#beforecall","text":"open fun beforeCall(subject: FeatureBinding.Subject ): Unit","title":"beforeCall"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/index.html","text":"misk / misk.web / FeatureBinding / Claimer Claimer \u00b6 interface Claimer Functions \u00b6 Name Summary claimParameter abstract fun claimParameter(index: Int ): Unit abstract fun claimParameter(parameter: KParameter ): Unit claimRequestBody abstract fun claimRequestBody(): Unit claimResponseBody abstract fun claimResponseBody(): Unit claimReturnValue abstract fun claimReturnValue(): Unit","title":"Claimer - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/index.html#claimer","text":"interface Claimer","title":"Claimer"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/index.html#functions","text":"Name Summary claimParameter abstract fun claimParameter(index: Int ): Unit abstract fun claimParameter(parameter: KParameter ): Unit claimRequestBody abstract fun claimRequestBody(): Unit claimResponseBody abstract fun claimResponseBody(): Unit claimReturnValue abstract fun claimReturnValue(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-parameter.html","text":"misk / misk.web / FeatureBinding / Claimer / claimParameter claimParameter \u00b6 abstract fun claimParameter(index: Int ): Unit abstract fun claimParameter(parameter: KParameter ): Unit","title":"claimParameter - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-parameter.html#claimparameter","text":"abstract fun claimParameter(index: Int ): Unit abstract fun claimParameter(parameter: KParameter ): Unit","title":"claimParameter"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-request-body.html","text":"misk / misk.web / FeatureBinding / Claimer / claimRequestBody claimRequestBody \u00b6 abstract fun claimRequestBody(): Unit","title":"claimRequestBody - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-request-body.html#claimrequestbody","text":"abstract fun claimRequestBody(): Unit","title":"claimRequestBody"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-response-body.html","text":"misk / misk.web / FeatureBinding / Claimer / claimResponseBody claimResponseBody \u00b6 abstract fun claimResponseBody(): Unit","title":"claimResponseBody - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-response-body.html#claimresponsebody","text":"abstract fun claimResponseBody(): Unit","title":"claimResponseBody"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-return-value.html","text":"misk / misk.web / FeatureBinding / Claimer / claimReturnValue claimReturnValue \u00b6 abstract fun claimReturnValue(): Unit","title":"claimReturnValue - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-claimer/claim-return-value.html#claimreturnvalue","text":"abstract fun claimReturnValue(): Unit","title":"claimReturnValue"},{"location":"0.x/misk/misk.web/-feature-binding/-factory/index.html","text":"misk / misk.web / FeatureBinding / Factory Factory \u00b6 interface Factory Functions \u00b6 Name Summary create abstract fun create(action: Action , pathPattern: PathPattern , claimer: FeatureBinding.Claimer ): FeatureBinding ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-factory/index.html#factory","text":"interface Factory","title":"Factory"},{"location":"0.x/misk/misk.web/-feature-binding/-factory/index.html#functions","text":"Name Summary create abstract fun create(action: Action , pathPattern: PathPattern , claimer: FeatureBinding.Claimer ): FeatureBinding ?","title":"Functions"},{"location":"0.x/misk/misk.web/-feature-binding/-factory/create.html","text":"misk / misk.web / FeatureBinding / Factory / create create \u00b6 abstract fun create(action: Action , pathPattern: PathPattern , claimer: FeatureBinding.Claimer ): FeatureBinding ?","title":"create - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-factory/create.html#create","text":"abstract fun create(action: Action , pathPattern: PathPattern , claimer: FeatureBinding.Claimer ): FeatureBinding ?","title":"create"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/index.html","text":"misk / misk.web / FeatureBinding / Subject Subject \u00b6 interface Subject Properties \u00b6 Name Summary httpCall abstract val httpCall: HttpCall pathMatcher abstract val pathMatcher: Matcher webAction abstract val webAction: WebAction Functions \u00b6 Name Summary setParameter abstract fun setParameter(parameter: KParameter , value: Any ?): Unit abstract fun setParameter(index: Int , value: Any ?): Unit takeRequestBody abstract fun takeRequestBody(): BufferedSource takeResponseBody abstract fun takeResponseBody(): BufferedSink takeReturnValue abstract fun takeReturnValue(): Any ?","title":"Subject - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/index.html#subject","text":"interface Subject","title":"Subject"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/index.html#properties","text":"Name Summary httpCall abstract val httpCall: HttpCall pathMatcher abstract val pathMatcher: Matcher webAction abstract val webAction: WebAction","title":"Properties"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/index.html#functions","text":"Name Summary setParameter abstract fun setParameter(parameter: KParameter , value: Any ?): Unit abstract fun setParameter(index: Int , value: Any ?): Unit takeRequestBody abstract fun takeRequestBody(): BufferedSource takeResponseBody abstract fun takeResponseBody(): BufferedSink takeReturnValue abstract fun takeReturnValue(): Any ?","title":"Functions"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/http-call.html","text":"misk / misk.web / FeatureBinding / Subject / httpCall httpCall \u00b6 abstract val httpCall: HttpCall","title":"httpCall - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/http-call.html#httpcall","text":"abstract val httpCall: HttpCall","title":"httpCall"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/path-matcher.html","text":"misk / misk.web / FeatureBinding / Subject / pathMatcher pathMatcher \u00b6 abstract val pathMatcher: Matcher","title":"pathMatcher - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/path-matcher.html#pathmatcher","text":"abstract val pathMatcher: Matcher","title":"pathMatcher"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/set-parameter.html","text":"misk / misk.web / FeatureBinding / Subject / setParameter setParameter \u00b6 abstract fun setParameter(parameter: KParameter , value: Any ?): Unit abstract fun setParameter(index: Int , value: Any ?): Unit","title":"setParameter - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/set-parameter.html#setparameter","text":"abstract fun setParameter(parameter: KParameter , value: Any ?): Unit abstract fun setParameter(index: Int , value: Any ?): Unit","title":"setParameter"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/take-request-body.html","text":"misk / misk.web / FeatureBinding / Subject / takeRequestBody takeRequestBody \u00b6 abstract fun takeRequestBody(): BufferedSource","title":"takeRequestBody - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/take-request-body.html#takerequestbody","text":"abstract fun takeRequestBody(): BufferedSource","title":"takeRequestBody"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/take-response-body.html","text":"misk / misk.web / FeatureBinding / Subject / takeResponseBody takeResponseBody \u00b6 abstract fun takeResponseBody(): BufferedSink","title":"takeResponseBody - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/take-response-body.html#takeresponsebody","text":"abstract fun takeResponseBody(): BufferedSink","title":"takeResponseBody"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/take-return-value.html","text":"misk / misk.web / FeatureBinding / Subject / takeReturnValue takeReturnValue \u00b6 abstract fun takeReturnValue(): Any ?","title":"takeReturnValue - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/take-return-value.html#takereturnvalue","text":"abstract fun takeReturnValue(): Any ?","title":"takeReturnValue"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/web-action.html","text":"misk / misk.web / FeatureBinding / Subject / webAction webAction \u00b6 abstract val webAction: WebAction","title":"webAction - Misk"},{"location":"0.x/misk/misk.web/-feature-binding/-subject/web-action.html#webaction","text":"abstract val webAction: WebAction","title":"webAction"},{"location":"0.x/misk/misk.web/-http-call/index.html","text":"misk / misk.web / HttpCall HttpCall \u00b6 interface HttpCall A live HTTP call from a client for use by a chain of network interceptors. Properties \u00b6 Name Summary dispatchMechanism abstract val dispatchMechanism: DispatchMechanism linkLayerLocalAddress abstract val linkLayerLocalAddress: SocketAddress ? requestHeaders abstract val requestHeaders: Headers responseHeaders abstract val responseHeaders: Headers statusCode abstract var statusCode: Int The HTTP response under construction. url abstract val url: HttpUrl Immutable information about the incoming HTTP request. Functions \u00b6 Name Summary accepts open fun accepts(): List <MediaRange> addResponseHeaders abstract fun addResponseHeaders(headers: Headers): Unit asOkHttpRequest open fun asOkHttpRequest(): Request contentType open fun contentType(): MediaType? initWebSocketListener abstract fun initWebSocketListener(webSocketListener: WebSocketListener): Unit Set the call\u2019s web socket listener. This should only be called once, and only for web socket calls. putRequestBody abstract fun putRequestBody(requestBody: BufferedSource): Unit Changes this call so that the next call to takeRequestBody returns requestBody . Use this to apply filters such as decompression or metrics. putResponseBody abstract fun putResponseBody(responseBody: BufferedSink): Unit Changes this call so that the next call to takeResponseBody returns responseBody . Use this to apply filters such as decompression or metrics. putWebSocket abstract fun putWebSocket(webSocket: WebSocket): Unit Changes this call so that the next call to takeWebSocket returns webSocket . Use this to apply filters such as decompression or metrics. requireTrailers abstract fun requireTrailers(): Unit Call this before the response body is written to make sure it is encoded in a way that\u2019ll permit trailers to be sent. This will do chunked encoding for HTTP/1. For HTTP/2 trailers are always permitted. It is an error to call this for web socket calls. setResponseHeader abstract fun setResponseHeader(name: String , value: String ): Unit setResponseTrailer abstract fun setResponseTrailer(name: String , value: String ): Unit Add a trailer. This requires that requireTrailers was called before the response body is written. takeRequestBody abstract fun takeRequestBody(): BufferedSource? Claim ownership of the request body stream. Returns null if the stream has already been claimed. Callers should read the HTTP request body or call putRequestBody to create a new chain with a request body that is unclaimed. takeResponseBody abstract fun takeResponseBody(): BufferedSink? Claim ownership of the response body stream. Returns null if the stream has already been claimed. Callers should write the HTTP response body or call putRequestBody to create a new chain with a response body that is unclaimed. takeWebSocket abstract fun takeWebSocket(): WebSocket? Claim ownership of the call\u2019s web socket.","title":"HttpCall - Misk"},{"location":"0.x/misk/misk.web/-http-call/index.html#httpcall","text":"interface HttpCall A live HTTP call from a client for use by a chain of network interceptors.","title":"HttpCall"},{"location":"0.x/misk/misk.web/-http-call/index.html#properties","text":"Name Summary dispatchMechanism abstract val dispatchMechanism: DispatchMechanism linkLayerLocalAddress abstract val linkLayerLocalAddress: SocketAddress ? requestHeaders abstract val requestHeaders: Headers responseHeaders abstract val responseHeaders: Headers statusCode abstract var statusCode: Int The HTTP response under construction. url abstract val url: HttpUrl Immutable information about the incoming HTTP request.","title":"Properties"},{"location":"0.x/misk/misk.web/-http-call/index.html#functions","text":"Name Summary accepts open fun accepts(): List <MediaRange> addResponseHeaders abstract fun addResponseHeaders(headers: Headers): Unit asOkHttpRequest open fun asOkHttpRequest(): Request contentType open fun contentType(): MediaType? initWebSocketListener abstract fun initWebSocketListener(webSocketListener: WebSocketListener): Unit Set the call\u2019s web socket listener. This should only be called once, and only for web socket calls. putRequestBody abstract fun putRequestBody(requestBody: BufferedSource): Unit Changes this call so that the next call to takeRequestBody returns requestBody . Use this to apply filters such as decompression or metrics. putResponseBody abstract fun putResponseBody(responseBody: BufferedSink): Unit Changes this call so that the next call to takeResponseBody returns responseBody . Use this to apply filters such as decompression or metrics. putWebSocket abstract fun putWebSocket(webSocket: WebSocket): Unit Changes this call so that the next call to takeWebSocket returns webSocket . Use this to apply filters such as decompression or metrics. requireTrailers abstract fun requireTrailers(): Unit Call this before the response body is written to make sure it is encoded in a way that\u2019ll permit trailers to be sent. This will do chunked encoding for HTTP/1. For HTTP/2 trailers are always permitted. It is an error to call this for web socket calls. setResponseHeader abstract fun setResponseHeader(name: String , value: String ): Unit setResponseTrailer abstract fun setResponseTrailer(name: String , value: String ): Unit Add a trailer. This requires that requireTrailers was called before the response body is written. takeRequestBody abstract fun takeRequestBody(): BufferedSource? Claim ownership of the request body stream. Returns null if the stream has already been claimed. Callers should read the HTTP request body or call putRequestBody to create a new chain with a request body that is unclaimed. takeResponseBody abstract fun takeResponseBody(): BufferedSink? Claim ownership of the response body stream. Returns null if the stream has already been claimed. Callers should write the HTTP response body or call putRequestBody to create a new chain with a response body that is unclaimed. takeWebSocket abstract fun takeWebSocket(): WebSocket? Claim ownership of the call\u2019s web socket.","title":"Functions"},{"location":"0.x/misk/misk.web/-http-call/accepts.html","text":"misk / misk.web / HttpCall / accepts accepts \u00b6 open fun accepts(): List <MediaRange>","title":"accepts - Misk"},{"location":"0.x/misk/misk.web/-http-call/accepts.html#accepts","text":"open fun accepts(): List <MediaRange>","title":"accepts"},{"location":"0.x/misk/misk.web/-http-call/add-response-headers.html","text":"misk / misk.web / HttpCall / addResponseHeaders addResponseHeaders \u00b6 abstract fun addResponseHeaders(headers: Headers): Unit","title":"addResponseHeaders - Misk"},{"location":"0.x/misk/misk.web/-http-call/add-response-headers.html#addresponseheaders","text":"abstract fun addResponseHeaders(headers: Headers): Unit","title":"addResponseHeaders"},{"location":"0.x/misk/misk.web/-http-call/as-ok-http-request.html","text":"misk / misk.web / HttpCall / asOkHttpRequest asOkHttpRequest \u00b6 open fun asOkHttpRequest(): Request","title":"asOkHttpRequest - Misk"},{"location":"0.x/misk/misk.web/-http-call/as-ok-http-request.html#asokhttprequest","text":"open fun asOkHttpRequest(): Request","title":"asOkHttpRequest"},{"location":"0.x/misk/misk.web/-http-call/content-type.html","text":"misk / misk.web / HttpCall / contentType contentType \u00b6 open fun contentType(): MediaType?","title":"contentType - Misk"},{"location":"0.x/misk/misk.web/-http-call/content-type.html#contenttype","text":"open fun contentType(): MediaType?","title":"contentType"},{"location":"0.x/misk/misk.web/-http-call/dispatch-mechanism.html","text":"misk / misk.web / HttpCall / dispatchMechanism dispatchMechanism \u00b6 abstract val dispatchMechanism: DispatchMechanism","title":"dispatchMechanism - Misk"},{"location":"0.x/misk/misk.web/-http-call/dispatch-mechanism.html#dispatchmechanism","text":"abstract val dispatchMechanism: DispatchMechanism","title":"dispatchMechanism"},{"location":"0.x/misk/misk.web/-http-call/init-web-socket-listener.html","text":"misk / misk.web / HttpCall / initWebSocketListener initWebSocketListener \u00b6 abstract fun initWebSocketListener(webSocketListener: WebSocketListener): Unit Set the call\u2019s web socket listener. This should only be called once, and only for web socket calls.","title":"initWebSocketListener - Misk"},{"location":"0.x/misk/misk.web/-http-call/init-web-socket-listener.html#initwebsocketlistener","text":"abstract fun initWebSocketListener(webSocketListener: WebSocketListener): Unit Set the call\u2019s web socket listener. This should only be called once, and only for web socket calls.","title":"initWebSocketListener"},{"location":"0.x/misk/misk.web/-http-call/link-layer-local-address.html","text":"misk / misk.web / HttpCall / linkLayerLocalAddress linkLayerLocalAddress \u00b6 abstract val linkLayerLocalAddress: SocketAddress ?","title":"linkLayerLocalAddress - Misk"},{"location":"0.x/misk/misk.web/-http-call/link-layer-local-address.html#linklayerlocaladdress","text":"abstract val linkLayerLocalAddress: SocketAddress ?","title":"linkLayerLocalAddress"},{"location":"0.x/misk/misk.web/-http-call/put-request-body.html","text":"misk / misk.web / HttpCall / putRequestBody putRequestBody \u00b6 abstract fun putRequestBody(requestBody: BufferedSource): Unit Changes this call so that the next call to takeRequestBody returns requestBody . Use this to apply filters such as decompression or metrics. This may only be called on calls whose request body has been taken. Otherwise that would be leaked.","title":"putRequestBody - Misk"},{"location":"0.x/misk/misk.web/-http-call/put-request-body.html#putrequestbody","text":"abstract fun putRequestBody(requestBody: BufferedSource): Unit Changes this call so that the next call to takeRequestBody returns requestBody . Use this to apply filters such as decompression or metrics. This may only be called on calls whose request body has been taken. Otherwise that would be leaked.","title":"putRequestBody"},{"location":"0.x/misk/misk.web/-http-call/put-response-body.html","text":"misk / misk.web / HttpCall / putResponseBody putResponseBody \u00b6 abstract fun putResponseBody(responseBody: BufferedSink): Unit Changes this call so that the next call to takeResponseBody returns responseBody . Use this to apply filters such as decompression or metrics. This may only be called on calls whose response body has been taken. Otherwise that would be leaked.","title":"putResponseBody - Misk"},{"location":"0.x/misk/misk.web/-http-call/put-response-body.html#putresponsebody","text":"abstract fun putResponseBody(responseBody: BufferedSink): Unit Changes this call so that the next call to takeResponseBody returns responseBody . Use this to apply filters such as decompression or metrics. This may only be called on calls whose response body has been taken. Otherwise that would be leaked.","title":"putResponseBody"},{"location":"0.x/misk/misk.web/-http-call/put-web-socket.html","text":"misk / misk.web / HttpCall / putWebSocket putWebSocket \u00b6 abstract fun putWebSocket(webSocket: WebSocket): Unit Changes this call so that the next call to takeWebSocket returns webSocket . Use this to apply filters such as decompression or metrics. This may only be called on calls whose web socket has been taken. Otherwise that would be leaked.","title":"putWebSocket - Misk"},{"location":"0.x/misk/misk.web/-http-call/put-web-socket.html#putwebsocket","text":"abstract fun putWebSocket(webSocket: WebSocket): Unit Changes this call so that the next call to takeWebSocket returns webSocket . Use this to apply filters such as decompression or metrics. This may only be called on calls whose web socket has been taken. Otherwise that would be leaked.","title":"putWebSocket"},{"location":"0.x/misk/misk.web/-http-call/request-headers.html","text":"misk / misk.web / HttpCall / requestHeaders requestHeaders \u00b6 abstract val requestHeaders: Headers","title":"requestHeaders - Misk"},{"location":"0.x/misk/misk.web/-http-call/request-headers.html#requestheaders","text":"abstract val requestHeaders: Headers","title":"requestHeaders"},{"location":"0.x/misk/misk.web/-http-call/require-trailers.html","text":"misk / misk.web / HttpCall / requireTrailers requireTrailers \u00b6 abstract fun requireTrailers(): Unit Call this before the response body is written to make sure it is encoded in a way that\u2019ll permit trailers to be sent. This will do chunked encoding for HTTP/1. For HTTP/2 trailers are always permitted. It is an error to call this for web socket calls.","title":"requireTrailers - Misk"},{"location":"0.x/misk/misk.web/-http-call/require-trailers.html#requiretrailers","text":"abstract fun requireTrailers(): Unit Call this before the response body is written to make sure it is encoded in a way that\u2019ll permit trailers to be sent. This will do chunked encoding for HTTP/1. For HTTP/2 trailers are always permitted. It is an error to call this for web socket calls.","title":"requireTrailers"},{"location":"0.x/misk/misk.web/-http-call/response-headers.html","text":"misk / misk.web / HttpCall / responseHeaders responseHeaders \u00b6 abstract val responseHeaders: Headers","title":"responseHeaders - Misk"},{"location":"0.x/misk/misk.web/-http-call/response-headers.html#responseheaders","text":"abstract val responseHeaders: Headers","title":"responseHeaders"},{"location":"0.x/misk/misk.web/-http-call/set-response-header.html","text":"misk / misk.web / HttpCall / setResponseHeader setResponseHeader \u00b6 abstract fun setResponseHeader(name: String , value: String ): Unit","title":"setResponseHeader - Misk"},{"location":"0.x/misk/misk.web/-http-call/set-response-header.html#setresponseheader","text":"abstract fun setResponseHeader(name: String , value: String ): Unit","title":"setResponseHeader"},{"location":"0.x/misk/misk.web/-http-call/set-response-trailer.html","text":"misk / misk.web / HttpCall / setResponseTrailer setResponseTrailer \u00b6 abstract fun setResponseTrailer(name: String , value: String ): Unit Add a trailer. This requires that requireTrailers was called before the response body is written.","title":"setResponseTrailer - Misk"},{"location":"0.x/misk/misk.web/-http-call/set-response-trailer.html#setresponsetrailer","text":"abstract fun setResponseTrailer(name: String , value: String ): Unit Add a trailer. This requires that requireTrailers was called before the response body is written.","title":"setResponseTrailer"},{"location":"0.x/misk/misk.web/-http-call/status-code.html","text":"misk / misk.web / HttpCall / statusCode statusCode \u00b6 abstract var statusCode: Int The HTTP response under construction.","title":"statusCode - Misk"},{"location":"0.x/misk/misk.web/-http-call/status-code.html#statuscode","text":"abstract var statusCode: Int The HTTP response under construction.","title":"statusCode"},{"location":"0.x/misk/misk.web/-http-call/take-request-body.html","text":"misk / misk.web / HttpCall / takeRequestBody takeRequestBody \u00b6 abstract fun takeRequestBody(): BufferedSource? Claim ownership of the request body stream. Returns null if the stream has already been claimed. Callers should read the HTTP request body or call putRequestBody to create a new chain with a request body that is unclaimed.","title":"takeRequestBody - Misk"},{"location":"0.x/misk/misk.web/-http-call/take-request-body.html#takerequestbody","text":"abstract fun takeRequestBody(): BufferedSource? Claim ownership of the request body stream. Returns null if the stream has already been claimed. Callers should read the HTTP request body or call putRequestBody to create a new chain with a request body that is unclaimed.","title":"takeRequestBody"},{"location":"0.x/misk/misk.web/-http-call/take-response-body.html","text":"misk / misk.web / HttpCall / takeResponseBody takeResponseBody \u00b6 abstract fun takeResponseBody(): BufferedSink? Claim ownership of the response body stream. Returns null if the stream has already been claimed. Callers should write the HTTP response body or call putRequestBody to create a new chain with a response body that is unclaimed.","title":"takeResponseBody - Misk"},{"location":"0.x/misk/misk.web/-http-call/take-response-body.html#takeresponsebody","text":"abstract fun takeResponseBody(): BufferedSink? Claim ownership of the response body stream. Returns null if the stream has already been claimed. Callers should write the HTTP response body or call putRequestBody to create a new chain with a response body that is unclaimed.","title":"takeResponseBody"},{"location":"0.x/misk/misk.web/-http-call/take-web-socket.html","text":"misk / misk.web / HttpCall / takeWebSocket takeWebSocket \u00b6 abstract fun takeWebSocket(): WebSocket? Claim ownership of the call\u2019s web socket.","title":"takeWebSocket - Misk"},{"location":"0.x/misk/misk.web/-http-call/take-web-socket.html#takewebsocket","text":"abstract fun takeWebSocket(): WebSocket? Claim ownership of the call\u2019s web socket.","title":"takeWebSocket"},{"location":"0.x/misk/misk.web/-http-call/url.html","text":"misk / misk.web / HttpCall / url url \u00b6 abstract val url: HttpUrl Immutable information about the incoming HTTP request.","title":"url - Misk"},{"location":"0.x/misk/misk.web/-http-call/url.html#url","text":"abstract val url: HttpUrl Immutable information about the incoming HTTP request.","title":"url"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/index.html","text":"misk / misk.web / MiskWebFormBuilder MiskWebFormBuilder \u00b6 class MiskWebFormBuilder Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping. Types \u00b6 Name Summary Field data class Field Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Type data class Type Akin to a Proto Message, a Type has a list of fields Constructors \u00b6 Name Summary <init> MiskWebFormBuilder() Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping. Functions \u00b6 Name Summary calculateTypes fun calculateTypes(requestType: KType ?): Map < String , MiskWebFormBuilder.Type > Companion Object Functions \u00b6 Name Summary createEnumField fun createEnumField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c createSyntheticEnumField fun createSyntheticEnumField(fieldClassName: String , fieldName: String , enumValues: List < String >, repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c maybeCreatePrimitiveField fun maybeCreatePrimitiveField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field ? Create misk-web Field s for primitives and enum types. Returns null if the type cannot be mapped.","title":"MiskWebFormBuilder - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/index.html#miskwebformbuilder","text":"class MiskWebFormBuilder Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping.","title":"MiskWebFormBuilder"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/index.html#types","text":"Name Summary Field data class Field Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Type data class Type Akin to a Proto Message, a Type has a list of fields","title":"Types"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/index.html#constructors","text":"Name Summary <init> MiskWebFormBuilder() Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping.","title":"Constructors"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/index.html#functions","text":"Name Summary calculateTypes fun calculateTypes(requestType: KType ?): Map < String , MiskWebFormBuilder.Type >","title":"Functions"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/index.html#companion-object-functions","text":"Name Summary createEnumField fun createEnumField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c createSyntheticEnumField fun createSyntheticEnumField(fieldClassName: String , fieldName: String , enumValues: List < String >, repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c maybeCreatePrimitiveField fun maybeCreatePrimitiveField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field ? Create misk-web Field s for primitives and enum types. Returns null if the type cannot be mapped.","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-init-.html","text":"misk / misk.web / MiskWebFormBuilder / <init> <init> \u00b6 MiskWebFormBuilder() Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping.","title":" init "},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-init-.html#init","text":"MiskWebFormBuilder() Provides a mapping from field name to Type definition given a KType. Useful for processes that want to have a schema definition of a type. For example: used by the WebActions admin dashboard tab to show a statically typed form containing request fields for developers to fill out. Currently only supports Wire request type messages; non-Wire messages return an empty mapping.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/calculate-types.html","text":"misk / misk.web / MiskWebFormBuilder / calculateTypes calculateTypes \u00b6 fun calculateTypes(requestType: KType ?): Map < String , MiskWebFormBuilder.Type >","title":"calculateTypes - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/calculate-types.html#calculatetypes","text":"fun calculateTypes(requestType: KType ?): Map < String , MiskWebFormBuilder.Type >","title":"calculateTypes"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/create-enum-field.html","text":"misk / misk.web / MiskWebFormBuilder / createEnumField createEnumField \u00b6 fun createEnumField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c","title":"createEnumField - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/create-enum-field.html#createenumfield","text":"fun createEnumField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c","title":"createEnumField"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/create-synthetic-enum-field.html","text":"misk / misk.web / MiskWebFormBuilder / createSyntheticEnumField createSyntheticEnumField \u00b6 fun createSyntheticEnumField(fieldClassName: String , fieldName: String , enumValues: List < String >, repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c","title":"createSyntheticEnumField - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/create-synthetic-enum-field.html#createsyntheticenumfield","text":"fun createSyntheticEnumField(fieldClassName: String , fieldName: String , enumValues: List < String >, repeated: Boolean ): MiskWebFormBuilder.Field Adds a field with a type that has the class name and enum values embedded Example: \u201cEnum<app.cash.backfila.BackfillType,ISOLATED,PARALLEL>\u201c","title":"createSyntheticEnumField"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/maybe-create-primitive-field.html","text":"misk / misk.web / MiskWebFormBuilder / maybeCreatePrimitiveField maybeCreatePrimitiveField \u00b6 fun maybeCreatePrimitiveField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field ? Create misk-web Field s for primitives and enum types. Returns null if the type cannot be mapped.","title":"maybeCreatePrimitiveField - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/maybe-create-primitive-field.html#maybecreateprimitivefield","text":"fun maybeCreatePrimitiveField(fieldClass: Class <*>, fieldName: String , repeated: Boolean ): MiskWebFormBuilder.Field ? Create misk-web Field s for primitives and enum types. Returns null if the type cannot be mapped.","title":"maybeCreatePrimitiveField"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/index.html","text":"misk / misk.web / MiskWebFormBuilder / Field Field \u00b6 data class Field Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Enums are encoded to contain their values within their Type definition as opposed to a unique Type. Constructors \u00b6 Name Summary <init> Field(name: String , type: String , repeated: Boolean ) Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Properties \u00b6 Name Summary name val name: String repeated val repeated: Boolean type val type: String","title":"Field - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/index.html#field","text":"data class Field Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Enums are encoded to contain their values within their Type definition as opposed to a unique Type.","title":"Field"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/index.html#constructors","text":"Name Summary <init> Field(name: String , type: String , repeated: Boolean ) Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list.","title":"Constructors"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/index.html#properties","text":"Name Summary name val name: String repeated val repeated: Boolean type val type: String","title":"Properties"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/-init-.html","text":"misk / misk.web / MiskWebFormBuilder / Field / <init> <init> \u00b6 Field(name: String , type: String , repeated: Boolean ) Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Enums are encoded to contain their values within their Type definition as opposed to a unique Type.","title":" init "},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/-init-.html#init","text":"Field(name: String , type: String , repeated: Boolean ) Akin to a Proto field, a field can be of primitive or another Message type, and can be repeated to become a list. Enums are encoded to contain their values within their Type definition as opposed to a unique Type.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/name.html","text":"misk / misk.web / MiskWebFormBuilder / Field / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/repeated.html","text":"misk / misk.web / MiskWebFormBuilder / Field / repeated repeated \u00b6 val repeated: Boolean","title":"repeated - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/repeated.html#repeated","text":"val repeated: Boolean","title":"repeated"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/type.html","text":"misk / misk.web / MiskWebFormBuilder / Field / type type \u00b6 val type: String","title":"type - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-field/type.html#type","text":"val type: String","title":"type"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/index.html","text":"misk / misk.web / MiskWebFormBuilder / Type Type \u00b6 data class Type Akin to a Proto Message, a Type has a list of fields Constructors \u00b6 Name Summary <init> Type(fields: List < MiskWebFormBuilder.Field >) Akin to a Proto Message, a Type has a list of fields Properties \u00b6 Name Summary fields val fields: List < MiskWebFormBuilder.Field >","title":"Type - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/index.html#type","text":"data class Type Akin to a Proto Message, a Type has a list of fields","title":"Type"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/index.html#constructors","text":"Name Summary <init> Type(fields: List < MiskWebFormBuilder.Field >) Akin to a Proto Message, a Type has a list of fields","title":"Constructors"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/index.html#properties","text":"Name Summary fields val fields: List < MiskWebFormBuilder.Field >","title":"Properties"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/-init-.html","text":"misk / misk.web / MiskWebFormBuilder / Type / <init> <init> \u00b6 Type(fields: List < MiskWebFormBuilder.Field >) Akin to a Proto Message, a Type has a list of fields","title":" init "},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/-init-.html#init","text":"Type(fields: List < MiskWebFormBuilder.Field >) Akin to a Proto Message, a Type has a list of fields","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/fields.html","text":"misk / misk.web / MiskWebFormBuilder / Type / fields fields \u00b6 val fields: List < MiskWebFormBuilder.Field >","title":"fields - Misk"},{"location":"0.x/misk/misk.web/-misk-web-form-builder/-type/fields.html#fields","text":"val fields: List < MiskWebFormBuilder.Field >","title":"fields"},{"location":"0.x/misk/misk.web/-misk-web-module/index.html","text":"misk / misk.web / MiskWebModule MiskWebModule \u00b6 class MiskWebModule : KAbstractModule Types \u00b6 Name Summary MiskCallerProvider class MiskCallerProvider : ActionScopedProvider <MiskCaller?> Constructors \u00b6 Name Summary <init> MiskWebModule(config: WebConfig ) Functions \u00b6 Name Summary configure fun configure(): Unit provideGzipHandler fun provideGzipHandler(): GzipHandler provideStatisticsHandler fun provideStatisticsHandler(): StatisticsHandler","title":"MiskWebModule - Misk"},{"location":"0.x/misk/misk.web/-misk-web-module/index.html#miskwebmodule","text":"class MiskWebModule : KAbstractModule","title":"MiskWebModule"},{"location":"0.x/misk/misk.web/-misk-web-module/index.html#types","text":"Name Summary MiskCallerProvider class MiskCallerProvider : ActionScopedProvider <MiskCaller?>","title":"Types"},{"location":"0.x/misk/misk.web/-misk-web-module/index.html#constructors","text":"Name Summary <init> MiskWebModule(config: WebConfig )","title":"Constructors"},{"location":"0.x/misk/misk.web/-misk-web-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideGzipHandler fun provideGzipHandler(): GzipHandler provideStatisticsHandler fun provideStatisticsHandler(): StatisticsHandler","title":"Functions"},{"location":"0.x/misk/misk.web/-misk-web-module/-init-.html","text":"misk / misk.web / MiskWebModule / <init> <init> \u00b6 MiskWebModule(config: WebConfig )","title":" init "},{"location":"0.x/misk/misk.web/-misk-web-module/-init-.html#init","text":"MiskWebModule(config: WebConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-misk-web-module/configure.html","text":"misk / misk.web / MiskWebModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web/-misk-web-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web/-misk-web-module/provide-gzip-handler.html","text":"misk / misk.web / MiskWebModule / provideGzipHandler provideGzipHandler \u00b6 @Provides @Singleton fun provideGzipHandler(): GzipHandler","title":"provideGzipHandler - Misk"},{"location":"0.x/misk/misk.web/-misk-web-module/provide-gzip-handler.html#providegziphandler","text":"@Provides @Singleton fun provideGzipHandler(): GzipHandler","title":"provideGzipHandler"},{"location":"0.x/misk/misk.web/-misk-web-module/provide-statistics-handler.html","text":"misk / misk.web / MiskWebModule / provideStatisticsHandler provideStatisticsHandler \u00b6 @Provides @Singleton fun provideStatisticsHandler(): StatisticsHandler","title":"provideStatisticsHandler - Misk"},{"location":"0.x/misk/misk.web/-misk-web-module/provide-statistics-handler.html#providestatisticshandler","text":"@Provides @Singleton fun provideStatisticsHandler(): StatisticsHandler","title":"provideStatisticsHandler"},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/index.html","text":"misk / misk.web / MiskWebModule / MiskCallerProvider MiskCallerProvider \u00b6 class MiskCallerProvider : ActionScopedProvider <MiskCaller?> Constructors \u00b6 Name Summary <init> MiskCallerProvider(authenticators: List < MiskCallerAuthenticator >) Functions \u00b6 Name Summary get fun get(): MiskCaller?","title":"MiskCallerProvider - Misk"},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/index.html#miskcallerprovider","text":"class MiskCallerProvider : ActionScopedProvider <MiskCaller?>","title":"MiskCallerProvider"},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/index.html#constructors","text":"Name Summary <init> MiskCallerProvider(authenticators: List < MiskCallerAuthenticator >)","title":"Constructors"},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/index.html#functions","text":"Name Summary get fun get(): MiskCaller?","title":"Functions"},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/-init-.html","text":"misk / misk.web / MiskWebModule / MiskCallerProvider / <init> <init> \u00b6 MiskCallerProvider(authenticators: List < MiskCallerAuthenticator >)","title":" init "},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/-init-.html#init","text":"MiskCallerProvider(authenticators: List < MiskCallerAuthenticator >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/get.html","text":"misk / misk.web / MiskWebModule / MiskCallerProvider / get get \u00b6 fun get(): MiskCaller? Overrides ActionScopedProvider.get","title":"get - Misk"},{"location":"0.x/misk/misk.web/-misk-web-module/-misk-caller-provider/get.html#get","text":"fun get(): MiskCaller? Overrides ActionScopedProvider.get","title":"get"},{"location":"0.x/misk/misk.web/-network-chain/index.html","text":"misk / misk.web / NetworkChain NetworkChain \u00b6 interface NetworkChain Properties \u00b6 Name Summary action abstract val action: Action The action for this call. httpCall abstract val httpCall: HttpCall The live HTTP call. You can access hot streams on this call. webAction abstract val webAction: WebAction The action instance this call is routing to. Functions \u00b6 Name Summary proceed abstract fun proceed(httpCall: HttpCall ): Unit Invoke the next call in the interceptor chain.","title":"NetworkChain - Misk"},{"location":"0.x/misk/misk.web/-network-chain/index.html#networkchain","text":"interface NetworkChain","title":"NetworkChain"},{"location":"0.x/misk/misk.web/-network-chain/index.html#properties","text":"Name Summary action abstract val action: Action The action for this call. httpCall abstract val httpCall: HttpCall The live HTTP call. You can access hot streams on this call. webAction abstract val webAction: WebAction The action instance this call is routing to.","title":"Properties"},{"location":"0.x/misk/misk.web/-network-chain/index.html#functions","text":"Name Summary proceed abstract fun proceed(httpCall: HttpCall ): Unit Invoke the next call in the interceptor chain.","title":"Functions"},{"location":"0.x/misk/misk.web/-network-chain/action.html","text":"misk / misk.web / NetworkChain / action action \u00b6 abstract val action: Action The action for this call.","title":"action - Misk"},{"location":"0.x/misk/misk.web/-network-chain/action.html#action","text":"abstract val action: Action The action for this call.","title":"action"},{"location":"0.x/misk/misk.web/-network-chain/http-call.html","text":"misk / misk.web / NetworkChain / httpCall httpCall \u00b6 abstract val httpCall: HttpCall The live HTTP call. You can access hot streams on this call.","title":"httpCall - Misk"},{"location":"0.x/misk/misk.web/-network-chain/http-call.html#httpcall","text":"abstract val httpCall: HttpCall The live HTTP call. You can access hot streams on this call.","title":"httpCall"},{"location":"0.x/misk/misk.web/-network-chain/proceed.html","text":"misk / misk.web / NetworkChain / proceed proceed \u00b6 abstract fun proceed(httpCall: HttpCall ): Unit Invoke the next call in the interceptor chain.","title":"proceed - Misk"},{"location":"0.x/misk/misk.web/-network-chain/proceed.html#proceed","text":"abstract fun proceed(httpCall: HttpCall ): Unit Invoke the next call in the interceptor chain.","title":"proceed"},{"location":"0.x/misk/misk.web/-network-chain/web-action.html","text":"misk / misk.web / NetworkChain / webAction webAction \u00b6 abstract val webAction: WebAction The action instance this call is routing to.","title":"webAction - Misk"},{"location":"0.x/misk/misk.web/-network-chain/web-action.html#webaction","text":"abstract val webAction: WebAction The action instance this call is routing to.","title":"webAction"},{"location":"0.x/misk/misk.web/-network-interceptor/index.html","text":"misk / misk.web / NetworkInterceptor NetworkInterceptor \u00b6 interface NetworkInterceptor Types \u00b6 Name Summary Factory interface Factory Functions \u00b6 Name Summary intercept abstract fun intercept(chain: NetworkChain ): Unit Inheritors \u00b6 Name Summary ExceptionHandlingInterceptor class ExceptionHandlingInterceptor : NetworkInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule RebalancingInterceptor class RebalancingInterceptor : NetworkInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. RequestLoggingInterceptor class RequestLoggingInterceptor : NetworkInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client.","title":"NetworkInterceptor - Misk"},{"location":"0.x/misk/misk.web/-network-interceptor/index.html#networkinterceptor","text":"interface NetworkInterceptor","title":"NetworkInterceptor"},{"location":"0.x/misk/misk.web/-network-interceptor/index.html#types","text":"Name Summary Factory interface Factory","title":"Types"},{"location":"0.x/misk/misk.web/-network-interceptor/index.html#functions","text":"Name Summary intercept abstract fun intercept(chain: NetworkChain ): Unit","title":"Functions"},{"location":"0.x/misk/misk.web/-network-interceptor/index.html#inheritors","text":"Name Summary ExceptionHandlingInterceptor class ExceptionHandlingInterceptor : NetworkInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule RebalancingInterceptor class RebalancingInterceptor : NetworkInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. RequestLoggingInterceptor class RequestLoggingInterceptor : NetworkInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client.","title":"Inheritors"},{"location":"0.x/misk/misk.web/-network-interceptor/intercept.html","text":"misk / misk.web / NetworkInterceptor / intercept intercept \u00b6 abstract fun intercept(chain: NetworkChain ): Unit","title":"intercept - Misk"},{"location":"0.x/misk/misk.web/-network-interceptor/intercept.html#intercept","text":"abstract fun intercept(chain: NetworkChain ): Unit","title":"intercept"},{"location":"0.x/misk/misk.web/-network-interceptor/-factory/index.html","text":"misk / misk.web / NetworkInterceptor / Factory Factory \u00b6 interface Factory Functions \u00b6 Name Summary create abstract fun create(action: Action ): NetworkInterceptor ? Inheritors \u00b6 Name Summary Factory class Factory : NetworkInterceptor.Factory Factory class Factory : NetworkInterceptor.Factory Factory class Factory : NetworkInterceptor.Factory InternalErrorInterceptorFactory class InternalErrorInterceptorFactory : NetworkInterceptor.Factory","title":"Factory - Misk"},{"location":"0.x/misk/misk.web/-network-interceptor/-factory/index.html#factory","text":"interface Factory","title":"Factory"},{"location":"0.x/misk/misk.web/-network-interceptor/-factory/index.html#functions","text":"Name Summary create abstract fun create(action: Action ): NetworkInterceptor ?","title":"Functions"},{"location":"0.x/misk/misk.web/-network-interceptor/-factory/index.html#inheritors","text":"Name Summary Factory class Factory : NetworkInterceptor.Factory Factory class Factory : NetworkInterceptor.Factory Factory class Factory : NetworkInterceptor.Factory InternalErrorInterceptorFactory class InternalErrorInterceptorFactory : NetworkInterceptor.Factory","title":"Inheritors"},{"location":"0.x/misk/misk.web/-network-interceptor/-factory/create.html","text":"misk / misk.web / NetworkInterceptor / Factory / create create \u00b6 abstract fun create(action: Action ): NetworkInterceptor ?","title":"create - Misk"},{"location":"0.x/misk/misk.web/-network-interceptor/-factory/create.html#create","text":"abstract fun create(action: Action ): NetworkInterceptor ?","title":"create"},{"location":"0.x/misk/misk.web/-path-pattern/index.html","text":"misk / misk.web / PathPattern PathPattern \u00b6 class PathPattern : Comparable < PathPattern > A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters. Constructors \u00b6 Name Summary <init> PathPattern(pattern: String , regex: Pattern , variableNames: List < String >, numRegexVariables: Int , numSegments: Int , matchesWildcardPath: Boolean ) A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters. Properties \u00b6 Name Summary matchesWildcardPath val matchesWildcardPath: Boolean numRegexVariables val numRegexVariables: Int numSegments val numSegments: Int pattern val pattern: String regex val regex: Pattern variableNames val variableNames: List < String > Functions \u00b6 Name Summary compareTo fun compareTo(other: PathPattern ): Int Compares path patterns by specificity with the more specific pattern ordered first. equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int matcher fun matcher(requestUrl: HttpUrl): Matcher ? Returns a Matcher if requestUrl can be matched, else null toString fun toString(): String Companion Object Functions \u00b6 Name Summary parse fun parse(pattern: String ): PathPattern","title":"PathPattern - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/index.html#pathpattern","text":"class PathPattern : Comparable < PathPattern > A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters.","title":"PathPattern"},{"location":"0.x/misk/misk.web/-path-pattern/index.html#constructors","text":"Name Summary <init> PathPattern(pattern: String , regex: Pattern , variableNames: List < String >, numRegexVariables: Int , numSegments: Int , matchesWildcardPath: Boolean ) A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters.","title":"Constructors"},{"location":"0.x/misk/misk.web/-path-pattern/index.html#properties","text":"Name Summary matchesWildcardPath val matchesWildcardPath: Boolean numRegexVariables val numRegexVariables: Int numSegments val numSegments: Int pattern val pattern: String regex val regex: Pattern variableNames val variableNames: List < String >","title":"Properties"},{"location":"0.x/misk/misk.web/-path-pattern/index.html#functions","text":"Name Summary compareTo fun compareTo(other: PathPattern ): Int Compares path patterns by specificity with the more specific pattern ordered first. equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int matcher fun matcher(requestUrl: HttpUrl): Matcher ? Returns a Matcher if requestUrl can be matched, else null toString fun toString(): String","title":"Functions"},{"location":"0.x/misk/misk.web/-path-pattern/index.html#companion-object-functions","text":"Name Summary parse fun parse(pattern: String ): PathPattern","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web/-path-pattern/-init-.html","text":"misk / misk.web / PathPattern / <init> <init> \u00b6 PathPattern(pattern: String , regex: Pattern , variableNames: List < String >, numRegexVariables: Int , numSegments: Int , matchesWildcardPath: Boolean ) A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters.","title":" init "},{"location":"0.x/misk/misk.web/-path-pattern/-init-.html#init","text":"PathPattern(pattern: String , regex: Pattern , variableNames: List < String >, numRegexVariables: Int , numSegments: Int , matchesWildcardPath: Boolean ) A path with placeholders for variables. Paths may be constant like /app/home/ or dynamic like /user/{username} . Variables are delimited by curly braces and may specify an optional regex like this: {username:[a-z]+} . If no regex is specified the variable is a sequence of non-\u2018/\u2019 characters.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-path-pattern/compare-to.html","text":"misk / misk.web / PathPattern / compareTo compareTo \u00b6 fun compareTo(other: PathPattern ): Int Compares path patterns by specificity with the more specific pattern ordered first.","title":"compareTo - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/compare-to.html#compareto","text":"fun compareTo(other: PathPattern ): Int Compares path patterns by specificity with the more specific pattern ordered first.","title":"compareTo"},{"location":"0.x/misk/misk.web/-path-pattern/equals.html","text":"misk / misk.web / PathPattern / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk/misk.web/-path-pattern/hash-code.html","text":"misk / misk.web / PathPattern / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk/misk.web/-path-pattern/matcher.html","text":"misk / misk.web / PathPattern / matcher matcher \u00b6 fun matcher(requestUrl: HttpUrl): Matcher ? Returns a Matcher if requestUrl can be matched, else null","title":"matcher - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/matcher.html#matcher","text":"fun matcher(requestUrl: HttpUrl): Matcher ? Returns a Matcher if requestUrl can be matched, else null","title":"matcher"},{"location":"0.x/misk/misk.web/-path-pattern/matches-wildcard-path.html","text":"misk / misk.web / PathPattern / matchesWildcardPath matchesWildcardPath \u00b6 val matchesWildcardPath: Boolean","title":"matchesWildcardPath - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/matches-wildcard-path.html#matcheswildcardpath","text":"val matchesWildcardPath: Boolean","title":"matchesWildcardPath"},{"location":"0.x/misk/misk.web/-path-pattern/num-regex-variables.html","text":"misk / misk.web / PathPattern / numRegexVariables numRegexVariables \u00b6 val numRegexVariables: Int","title":"numRegexVariables - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/num-regex-variables.html#numregexvariables","text":"val numRegexVariables: Int","title":"numRegexVariables"},{"location":"0.x/misk/misk.web/-path-pattern/num-segments.html","text":"misk / misk.web / PathPattern / numSegments numSegments \u00b6 val numSegments: Int","title":"numSegments - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/num-segments.html#numsegments","text":"val numSegments: Int","title":"numSegments"},{"location":"0.x/misk/misk.web/-path-pattern/parse.html","text":"misk / misk.web / PathPattern / parse parse \u00b6 fun parse(pattern: String ): PathPattern","title":"parse - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/parse.html#parse","text":"fun parse(pattern: String ): PathPattern","title":"parse"},{"location":"0.x/misk/misk.web/-path-pattern/pattern.html","text":"misk / misk.web / PathPattern / pattern pattern \u00b6 val pattern: String","title":"pattern - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/pattern.html#pattern","text":"val pattern: String","title":"pattern"},{"location":"0.x/misk/misk.web/-path-pattern/regex.html","text":"misk / misk.web / PathPattern / regex regex \u00b6 val regex: Pattern","title":"regex - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/regex.html#regex","text":"val regex: Pattern","title":"regex"},{"location":"0.x/misk/misk.web/-path-pattern/to-string.html","text":"misk / misk.web / PathPattern / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk/misk.web/-path-pattern/variable-names.html","text":"misk / misk.web / PathPattern / variableNames variableNames \u00b6 val variableNames: List < String >","title":"variableNames - Misk"},{"location":"0.x/misk/misk.web/-path-pattern/variable-names.html#variablenames","text":"val variableNames: List < String >","title":"variableNames"},{"location":"0.x/misk/misk.web/-socket-address/index.html","text":"misk / misk.web / SocketAddress SocketAddress \u00b6 sealed class SocketAddress Information about the socket on which a HTTP call arrived. Types \u00b6 Name Summary Network class Network : SocketAddress Unix class Unix : SocketAddress Inheritors \u00b6 Name Summary Network class Network : SocketAddress Unix class Unix : SocketAddress","title":"SocketAddress - Misk"},{"location":"0.x/misk/misk.web/-socket-address/index.html#socketaddress","text":"sealed class SocketAddress Information about the socket on which a HTTP call arrived.","title":"SocketAddress"},{"location":"0.x/misk/misk.web/-socket-address/index.html#types","text":"Name Summary Network class Network : SocketAddress Unix class Unix : SocketAddress","title":"Types"},{"location":"0.x/misk/misk.web/-socket-address/index.html#inheritors","text":"Name Summary Network class Network : SocketAddress Unix class Unix : SocketAddress","title":"Inheritors"},{"location":"0.x/misk/misk.web/-socket-address/-network/index.html","text":"misk / misk.web / SocketAddress / Network Network \u00b6 class Network : SocketAddress Constructors \u00b6 Name Summary <init> Network(ipAddress: String , port: Int ) Properties \u00b6 Name Summary ipAddress val ipAddress: String port val port: Int","title":"Network - Misk"},{"location":"0.x/misk/misk.web/-socket-address/-network/index.html#network","text":"class Network : SocketAddress","title":"Network"},{"location":"0.x/misk/misk.web/-socket-address/-network/index.html#constructors","text":"Name Summary <init> Network(ipAddress: String , port: Int )","title":"Constructors"},{"location":"0.x/misk/misk.web/-socket-address/-network/index.html#properties","text":"Name Summary ipAddress val ipAddress: String port val port: Int","title":"Properties"},{"location":"0.x/misk/misk.web/-socket-address/-network/-init-.html","text":"misk / misk.web / SocketAddress / Network / <init> <init> \u00b6 Network(ipAddress: String , port: Int )","title":" init "},{"location":"0.x/misk/misk.web/-socket-address/-network/-init-.html#init","text":"Network(ipAddress: String , port: Int )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-socket-address/-network/ip-address.html","text":"misk / misk.web / SocketAddress / Network / ipAddress ipAddress \u00b6 val ipAddress: String","title":"ipAddress - Misk"},{"location":"0.x/misk/misk.web/-socket-address/-network/ip-address.html#ipaddress","text":"val ipAddress: String","title":"ipAddress"},{"location":"0.x/misk/misk.web/-socket-address/-network/port.html","text":"misk / misk.web / SocketAddress / Network / port port \u00b6 val port: Int","title":"port - Misk"},{"location":"0.x/misk/misk.web/-socket-address/-network/port.html#port","text":"val port: Int","title":"port"},{"location":"0.x/misk/misk.web/-socket-address/-unix/index.html","text":"misk / misk.web / SocketAddress / Unix Unix \u00b6 class Unix : SocketAddress Constructors \u00b6 Name Summary <init> Unix(path: String ) Properties \u00b6 Name Summary path val path: String","title":"Unix - Misk"},{"location":"0.x/misk/misk.web/-socket-address/-unix/index.html#unix","text":"class Unix : SocketAddress","title":"Unix"},{"location":"0.x/misk/misk.web/-socket-address/-unix/index.html#constructors","text":"Name Summary <init> Unix(path: String )","title":"Constructors"},{"location":"0.x/misk/misk.web/-socket-address/-unix/index.html#properties","text":"Name Summary path val path: String","title":"Properties"},{"location":"0.x/misk/misk.web/-socket-address/-unix/-init-.html","text":"misk / misk.web / SocketAddress / Unix / <init> <init> \u00b6 Unix(path: String )","title":" init "},{"location":"0.x/misk/misk.web/-socket-address/-unix/-init-.html#init","text":"Unix(path: String )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-socket-address/-unix/path.html","text":"misk / misk.web / SocketAddress / Unix / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk/misk.web/-socket-address/-unix/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk/misk.web/-web-action-module/index.html","text":"misk / misk.web / WebActionModule WebActionModule \u00b6 class WebActionModule<A : WebAction> : KAbstractModule Properties \u00b6 Name Summary actionClass val actionClass: KClass < A > url_path_prefix val url_path_prefix: String Functions \u00b6 Name Summary binder fun binder(): Binder configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <A : WebAction> create(): WebActionModule < A > fun <A : WebAction> create(actionClass: Class < A >): WebActionModule < A >``fun <A : WebAction> create(actionClass: KClass < A >): WebActionModule < A > Registers a web action. createWithPrefix fun <A : WebAction> createWithPrefix(url_path_prefix: String ): WebActionModule < A > fun <A : WebAction> createWithPrefix(actionClass: Class < A >, url_path_prefix: String ): WebActionModule < A >``fun <A : WebAction> createWithPrefix(actionClass: KClass < A >, url_path_prefix: String ): WebActionModule < A > Registers a web action with a path prefix.","title":"WebActionModule - Misk"},{"location":"0.x/misk/misk.web/-web-action-module/index.html#webactionmodule","text":"class WebActionModule<A : WebAction> : KAbstractModule","title":"WebActionModule"},{"location":"0.x/misk/misk.web/-web-action-module/index.html#properties","text":"Name Summary actionClass val actionClass: KClass < A > url_path_prefix val url_path_prefix: String","title":"Properties"},{"location":"0.x/misk/misk.web/-web-action-module/index.html#functions","text":"Name Summary binder fun binder(): Binder configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web/-web-action-module/index.html#companion-object-functions","text":"Name Summary create fun <A : WebAction> create(): WebActionModule < A > fun <A : WebAction> create(actionClass: Class < A >): WebActionModule < A >``fun <A : WebAction> create(actionClass: KClass < A >): WebActionModule < A > Registers a web action. createWithPrefix fun <A : WebAction> createWithPrefix(url_path_prefix: String ): WebActionModule < A > fun <A : WebAction> createWithPrefix(actionClass: Class < A >, url_path_prefix: String ): WebActionModule < A >``fun <A : WebAction> createWithPrefix(actionClass: KClass < A >, url_path_prefix: String ): WebActionModule < A > Registers a web action with a path prefix.","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web/-web-action-module/action-class.html","text":"misk / misk.web / WebActionModule / actionClass actionClass \u00b6 val actionClass: KClass < A >","title":"actionClass - Misk"},{"location":"0.x/misk/misk.web/-web-action-module/action-class.html#actionclass","text":"val actionClass: KClass < A >","title":"actionClass"},{"location":"0.x/misk/misk.web/-web-action-module/binder.html","text":"misk / misk.web / WebActionModule / binder binder \u00b6 protected fun binder(): Binder","title":"binder - Misk"},{"location":"0.x/misk/misk.web/-web-action-module/binder.html#binder","text":"protected fun binder(): Binder","title":"binder"},{"location":"0.x/misk/misk.web/-web-action-module/configure.html","text":"misk / misk.web / WebActionModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web/-web-action-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web/-web-action-module/create-with-prefix.html","text":"misk / misk.web / WebActionModule / createWithPrefix createWithPrefix \u00b6 inline fun <reified A : WebAction> createWithPrefix(url_path_prefix: String ): WebActionModule < A > @JvmStatic fun <A : WebAction> createWithPrefix(actionClass: Class < A >, url_path_prefix: String ): WebActionModule < A >``fun <A : WebAction> createWithPrefix(actionClass: KClass < A >, url_path_prefix: String ): WebActionModule < A > Registers a web action with a path prefix. Parameters \u00b6 actionClass - : The web action to register. url_path_prefix - : Defaults to \u201c/\u201d. If not empty, must match pattern requirements:","title":"createWithPrefix - Misk"},{"location":"0.x/misk/misk.web/-web-action-module/create-with-prefix.html#createwithprefix","text":"inline fun <reified A : WebAction> createWithPrefix(url_path_prefix: String ): WebActionModule < A > @JvmStatic fun <A : WebAction> createWithPrefix(actionClass: Class < A >, url_path_prefix: String ): WebActionModule < A >``fun <A : WebAction> createWithPrefix(actionClass: KClass < A >, url_path_prefix: String ): WebActionModule < A > Registers a web action with a path prefix.","title":"createWithPrefix"},{"location":"0.x/misk/misk.web/-web-action-module/create-with-prefix.html#parameters","text":"actionClass - : The web action to register. url_path_prefix - : Defaults to \u201c/\u201d. If not empty, must match pattern requirements:","title":"Parameters"},{"location":"0.x/misk/misk.web/-web-action-module/create.html","text":"misk / misk.web / WebActionModule / create create \u00b6 inline fun <reified A : WebAction> create(): WebActionModule < A > @JvmStatic fun <A : WebAction> create(actionClass: Class < A >): WebActionModule < A >``fun <A : WebAction> create(actionClass: KClass < A >): WebActionModule < A > Registers a web action. Parameters \u00b6 actionClass - : The web action to register.","title":"create - Misk"},{"location":"0.x/misk/misk.web/-web-action-module/create.html#create","text":"inline fun <reified A : WebAction> create(): WebActionModule < A > @JvmStatic fun <A : WebAction> create(actionClass: Class < A >): WebActionModule < A >``fun <A : WebAction> create(actionClass: KClass < A >): WebActionModule < A > Registers a web action.","title":"create"},{"location":"0.x/misk/misk.web/-web-action-module/create.html#parameters","text":"actionClass - : The web action to register.","title":"Parameters"},{"location":"0.x/misk/misk.web/-web-action-module/url_path_prefix.html","text":"misk / misk.web / WebActionModule / url_path_prefix url_path_prefix \u00b6 val url_path_prefix: String","title":"url_path_prefix - Misk"},{"location":"0.x/misk/misk.web/-web-action-module/url_path_prefix.html#url_path_prefix","text":"val url_path_prefix: String","title":"url_path_prefix"},{"location":"0.x/misk/misk.web/-web-config/index.html","text":"misk / misk.web / WebConfig WebConfig \u00b6 data class WebConfig : Config Constructors \u00b6 Name Summary <init> WebConfig(port: Int , idle_timeout: Long , health_port: Int = -1, host: String ? = null, ssl: WebSslConfig ? = null, unix_domain_socket: WebUnixDomainSocketConfig ? = null, http2: Boolean = false, selectors: Int ? = null, acceptors: Int ? = null, queue_size: Int ? = null, jetty_max_thread_pool_size: Int = 200, jetty_max_thread_pool_queue_size: Int = 300, enable_thread_pool_queue_metrics: Boolean = false, action_exception_log_level: ActionExceptionLogLevelConfig = ActionExceptionLogLevelConfig(), jetty_max_concurrent_streams: Int ? = null, close_connection_percent: Double = 0.01, gzip: Boolean = true, minGzipSize: Int = 1024, cors: Map < String , CorsConfig > = mapOf(), concurrency_limiter_disabled: Boolean = false) Properties \u00b6 Name Summary acceptors val acceptors: Int ? Number of acceptor threads. action_exception_log_level val action_exception_log_level: ActionExceptionLogLevelConfig close_connection_percent val close_connection_percent: Double A value in 0.0..100.0 . Include \u2018Connection: close\u2019 in this percentage of responses. concurrency_limiter_disabled val concurrency_limiter_disabled: Boolean If true, disables automatic load shedding when degraded. cors val cors: Map < String , CorsConfig > enable_thread_pool_queue_metrics val enable_thread_pool_queue_metrics: Boolean Flag to enable thread pool queue metrics gzip val gzip: Boolean If true responses which are larger than the minGzipSize will be compressed. Gzip compression always enabled for requests and cannot be turned off. health_port val health_port: Int If >= 0, use a dedicated jetty thread pool for health checking. host val host: String ? The network interface to bind to. Null or 0.0.0.0 to bind to all interfaces. http2 val http2: Boolean HTTP/2 support is currently opt-in because we can\u2019t load balance it dynamically. idle_timeout val idle_timeout: Long If a connection is unused for this many milliseconds, it is closed. jetty_max_concurrent_streams val jetty_max_concurrent_streams: Int ? The maximum number of streams per HTTP/2 connection. jetty_max_thread_pool_queue_size val jetty_max_thread_pool_queue_size: Int Maximum number of items in the queue for Jetty\u2019s thread pool. jetty_max_thread_pool_size val jetty_max_thread_pool_size: Int Maximum number of threads in Jetty\u2019s thread pool. minGzipSize val minGzipSize: Int The minimum size in bytes before the response body will be compressed. port val port: Int HTTP port to listen on, or 0 for any available port. queue_size val queue_size: Int ? The accept backlog. selectors val selectors: Int ? Number of NIO selector threads. ssl val ssl: WebSslConfig ? unix_domain_socket val unix_domain_socket: WebUnixDomainSocketConfig ? Configuration to enable Jetty to listen for traffic on a unix domain socket being proxied through a sidecar (like Envoy).","title":"WebConfig - Misk"},{"location":"0.x/misk/misk.web/-web-config/index.html#webconfig","text":"data class WebConfig : Config","title":"WebConfig"},{"location":"0.x/misk/misk.web/-web-config/index.html#constructors","text":"Name Summary <init> WebConfig(port: Int , idle_timeout: Long , health_port: Int = -1, host: String ? = null, ssl: WebSslConfig ? = null, unix_domain_socket: WebUnixDomainSocketConfig ? = null, http2: Boolean = false, selectors: Int ? = null, acceptors: Int ? = null, queue_size: Int ? = null, jetty_max_thread_pool_size: Int = 200, jetty_max_thread_pool_queue_size: Int = 300, enable_thread_pool_queue_metrics: Boolean = false, action_exception_log_level: ActionExceptionLogLevelConfig = ActionExceptionLogLevelConfig(), jetty_max_concurrent_streams: Int ? = null, close_connection_percent: Double = 0.01, gzip: Boolean = true, minGzipSize: Int = 1024, cors: Map < String , CorsConfig > = mapOf(), concurrency_limiter_disabled: Boolean = false)","title":"Constructors"},{"location":"0.x/misk/misk.web/-web-config/index.html#properties","text":"Name Summary acceptors val acceptors: Int ? Number of acceptor threads. action_exception_log_level val action_exception_log_level: ActionExceptionLogLevelConfig close_connection_percent val close_connection_percent: Double A value in 0.0..100.0 . Include \u2018Connection: close\u2019 in this percentage of responses. concurrency_limiter_disabled val concurrency_limiter_disabled: Boolean If true, disables automatic load shedding when degraded. cors val cors: Map < String , CorsConfig > enable_thread_pool_queue_metrics val enable_thread_pool_queue_metrics: Boolean Flag to enable thread pool queue metrics gzip val gzip: Boolean If true responses which are larger than the minGzipSize will be compressed. Gzip compression always enabled for requests and cannot be turned off. health_port val health_port: Int If >= 0, use a dedicated jetty thread pool for health checking. host val host: String ? The network interface to bind to. Null or 0.0.0.0 to bind to all interfaces. http2 val http2: Boolean HTTP/2 support is currently opt-in because we can\u2019t load balance it dynamically. idle_timeout val idle_timeout: Long If a connection is unused for this many milliseconds, it is closed. jetty_max_concurrent_streams val jetty_max_concurrent_streams: Int ? The maximum number of streams per HTTP/2 connection. jetty_max_thread_pool_queue_size val jetty_max_thread_pool_queue_size: Int Maximum number of items in the queue for Jetty\u2019s thread pool. jetty_max_thread_pool_size val jetty_max_thread_pool_size: Int Maximum number of threads in Jetty\u2019s thread pool. minGzipSize val minGzipSize: Int The minimum size in bytes before the response body will be compressed. port val port: Int HTTP port to listen on, or 0 for any available port. queue_size val queue_size: Int ? The accept backlog. selectors val selectors: Int ? Number of NIO selector threads. ssl val ssl: WebSslConfig ? unix_domain_socket val unix_domain_socket: WebUnixDomainSocketConfig ? Configuration to enable Jetty to listen for traffic on a unix domain socket being proxied through a sidecar (like Envoy).","title":"Properties"},{"location":"0.x/misk/misk.web/-web-config/-init-.html","text":"misk / misk.web / WebConfig / <init> <init> \u00b6 WebConfig(port: Int , idle_timeout: Long , health_port: Int = -1, host: String ? = null, ssl: WebSslConfig ? = null, unix_domain_socket: WebUnixDomainSocketConfig ? = null, http2: Boolean = false, selectors: Int ? = null, acceptors: Int ? = null, queue_size: Int ? = null, jetty_max_thread_pool_size: Int = 200, jetty_max_thread_pool_queue_size: Int = 300, enable_thread_pool_queue_metrics: Boolean = false, action_exception_log_level: ActionExceptionLogLevelConfig = ActionExceptionLogLevelConfig(), jetty_max_concurrent_streams: Int ? = null, close_connection_percent: Double = 0.01, gzip: Boolean = true, minGzipSize: Int = 1024, cors: Map < String , CorsConfig > = mapOf(), concurrency_limiter_disabled: Boolean = false)","title":" init "},{"location":"0.x/misk/misk.web/-web-config/-init-.html#init","text":"WebConfig(port: Int , idle_timeout: Long , health_port: Int = -1, host: String ? = null, ssl: WebSslConfig ? = null, unix_domain_socket: WebUnixDomainSocketConfig ? = null, http2: Boolean = false, selectors: Int ? = null, acceptors: Int ? = null, queue_size: Int ? = null, jetty_max_thread_pool_size: Int = 200, jetty_max_thread_pool_queue_size: Int = 300, enable_thread_pool_queue_metrics: Boolean = false, action_exception_log_level: ActionExceptionLogLevelConfig = ActionExceptionLogLevelConfig(), jetty_max_concurrent_streams: Int ? = null, close_connection_percent: Double = 0.01, gzip: Boolean = true, minGzipSize: Int = 1024, cors: Map < String , CorsConfig > = mapOf(), concurrency_limiter_disabled: Boolean = false)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-web-config/acceptors.html","text":"misk / misk.web / WebConfig / acceptors acceptors \u00b6 val acceptors: Int ? Number of acceptor threads.","title":"acceptors - Misk"},{"location":"0.x/misk/misk.web/-web-config/acceptors.html#acceptors","text":"val acceptors: Int ? Number of acceptor threads.","title":"acceptors"},{"location":"0.x/misk/misk.web/-web-config/action_exception_log_level.html","text":"misk / misk.web / WebConfig / action_exception_log_level action_exception_log_level \u00b6 val action_exception_log_level: ActionExceptionLogLevelConfig","title":"action_exception_log_level - Misk"},{"location":"0.x/misk/misk.web/-web-config/action_exception_log_level.html#action_exception_log_level","text":"val action_exception_log_level: ActionExceptionLogLevelConfig","title":"action_exception_log_level"},{"location":"0.x/misk/misk.web/-web-config/close_connection_percent.html","text":"misk / misk.web / WebConfig / close_connection_percent close_connection_percent \u00b6 val close_connection_percent: Double A value in 0.0..100.0 . Include \u2018Connection: close\u2019 in this percentage of responses.","title":"close_connection_percent - Misk"},{"location":"0.x/misk/misk.web/-web-config/close_connection_percent.html#close_connection_percent","text":"val close_connection_percent: Double A value in 0.0..100.0 . Include \u2018Connection: close\u2019 in this percentage of responses.","title":"close_connection_percent"},{"location":"0.x/misk/misk.web/-web-config/concurrency_limiter_disabled.html","text":"misk / misk.web / WebConfig / concurrency_limiter_disabled concurrency_limiter_disabled \u00b6 val concurrency_limiter_disabled: Boolean If true, disables automatic load shedding when degraded.","title":"concurrency_limiter_disabled - Misk"},{"location":"0.x/misk/misk.web/-web-config/concurrency_limiter_disabled.html#concurrency_limiter_disabled","text":"val concurrency_limiter_disabled: Boolean If true, disables automatic load shedding when degraded.","title":"concurrency_limiter_disabled"},{"location":"0.x/misk/misk.web/-web-config/cors.html","text":"misk / misk.web / WebConfig / cors cors \u00b6 val cors: Map < String , CorsConfig >","title":"cors - Misk"},{"location":"0.x/misk/misk.web/-web-config/cors.html#cors","text":"val cors: Map < String , CorsConfig >","title":"cors"},{"location":"0.x/misk/misk.web/-web-config/enable_thread_pool_queue_metrics.html","text":"misk / misk.web / WebConfig / enable_thread_pool_queue_metrics enable_thread_pool_queue_metrics \u00b6 val enable_thread_pool_queue_metrics: Boolean Flag to enable thread pool queue metrics","title":"enable_thread_pool_queue_metrics - Misk"},{"location":"0.x/misk/misk.web/-web-config/enable_thread_pool_queue_metrics.html#enable_thread_pool_queue_metrics","text":"val enable_thread_pool_queue_metrics: Boolean Flag to enable thread pool queue metrics","title":"enable_thread_pool_queue_metrics"},{"location":"0.x/misk/misk.web/-web-config/gzip.html","text":"misk / misk.web / WebConfig / gzip gzip \u00b6 val gzip: Boolean If true responses which are larger than the minGzipSize will be compressed. Gzip compression always enabled for requests and cannot be turned off.","title":"gzip - Misk"},{"location":"0.x/misk/misk.web/-web-config/gzip.html#gzip","text":"val gzip: Boolean If true responses which are larger than the minGzipSize will be compressed. Gzip compression always enabled for requests and cannot be turned off.","title":"gzip"},{"location":"0.x/misk/misk.web/-web-config/health_port.html","text":"misk / misk.web / WebConfig / health_port health_port \u00b6 val health_port: Int If >= 0, use a dedicated jetty thread pool for health checking. A dedicated thread pool ensures that health checks are not queued or rejected when the service is saturated and queueing requests. If health checks are rejected and/or queued, the health checks may fail and k8s will kill the container, even though it might be perfectly healthy. This can cause cascading failures by sending more requests to other containers, resulting in longer queues and more health checks failures. TODO(rhall): make this required","title":"health_port - Misk"},{"location":"0.x/misk/misk.web/-web-config/health_port.html#health_port","text":"val health_port: Int If >= 0, use a dedicated jetty thread pool for health checking. A dedicated thread pool ensures that health checks are not queued or rejected when the service is saturated and queueing requests. If health checks are rejected and/or queued, the health checks may fail and k8s will kill the container, even though it might be perfectly healthy. This can cause cascading failures by sending more requests to other containers, resulting in longer queues and more health checks failures. TODO(rhall): make this required","title":"health_port"},{"location":"0.x/misk/misk.web/-web-config/host.html","text":"misk / misk.web / WebConfig / host host \u00b6 val host: String ? The network interface to bind to. Null or 0.0.0.0 to bind to all interfaces.","title":"host - Misk"},{"location":"0.x/misk/misk.web/-web-config/host.html#host","text":"val host: String ? The network interface to bind to. Null or 0.0.0.0 to bind to all interfaces.","title":"host"},{"location":"0.x/misk/misk.web/-web-config/http2.html","text":"misk / misk.web / WebConfig / http2 http2 \u00b6 val http2: Boolean HTTP/2 support is currently opt-in because we can\u2019t load balance it dynamically.","title":"http2 - Misk"},{"location":"0.x/misk/misk.web/-web-config/http2.html#http2","text":"val http2: Boolean HTTP/2 support is currently opt-in because we can\u2019t load balance it dynamically.","title":"http2"},{"location":"0.x/misk/misk.web/-web-config/idle_timeout.html","text":"misk / misk.web / WebConfig / idle_timeout idle_timeout \u00b6 val idle_timeout: Long If a connection is unused for this many milliseconds, it is closed.","title":"idle_timeout - Misk"},{"location":"0.x/misk/misk.web/-web-config/idle_timeout.html#idle_timeout","text":"val idle_timeout: Long If a connection is unused for this many milliseconds, it is closed.","title":"idle_timeout"},{"location":"0.x/misk/misk.web/-web-config/jetty_max_concurrent_streams.html","text":"misk / misk.web / WebConfig / jetty_max_concurrent_streams jetty_max_concurrent_streams \u00b6 val jetty_max_concurrent_streams: Int ? The maximum number of streams per HTTP/2 connection.","title":"jetty_max_concurrent_streams - Misk"},{"location":"0.x/misk/misk.web/-web-config/jetty_max_concurrent_streams.html#jetty_max_concurrent_streams","text":"val jetty_max_concurrent_streams: Int ? The maximum number of streams per HTTP/2 connection.","title":"jetty_max_concurrent_streams"},{"location":"0.x/misk/misk.web/-web-config/jetty_max_thread_pool_queue_size.html","text":"misk / misk.web / WebConfig / jetty_max_thread_pool_queue_size jetty_max_thread_pool_queue_size \u00b6 val jetty_max_thread_pool_queue_size: Int Maximum number of items in the queue for Jetty\u2019s thread pool. If 0, no queueing is used and requests are directly handed off to the thread pool. If a thread is not available (i.e max threads in use) the request is rejected. Unfortunately Jetty rejects requests by closing the socket instead of returning a 429. This can lead to confusing EOFExceptions for the client.","title":"jetty_max_thread_pool_queue_size - Misk"},{"location":"0.x/misk/misk.web/-web-config/jetty_max_thread_pool_queue_size.html#jetty_max_thread_pool_queue_size","text":"val jetty_max_thread_pool_queue_size: Int Maximum number of items in the queue for Jetty\u2019s thread pool. If 0, no queueing is used and requests are directly handed off to the thread pool. If a thread is not available (i.e max threads in use) the request is rejected. Unfortunately Jetty rejects requests by closing the socket instead of returning a 429. This can lead to confusing EOFExceptions for the client.","title":"jetty_max_thread_pool_queue_size"},{"location":"0.x/misk/misk.web/-web-config/jetty_max_thread_pool_size.html","text":"misk / misk.web / WebConfig / jetty_max_thread_pool_size jetty_max_thread_pool_size \u00b6 val jetty_max_thread_pool_size: Int Maximum number of threads in Jetty\u2019s thread pool.","title":"jetty_max_thread_pool_size - Misk"},{"location":"0.x/misk/misk.web/-web-config/jetty_max_thread_pool_size.html#jetty_max_thread_pool_size","text":"val jetty_max_thread_pool_size: Int Maximum number of threads in Jetty\u2019s thread pool.","title":"jetty_max_thread_pool_size"},{"location":"0.x/misk/misk.web/-web-config/min-gzip-size.html","text":"misk / misk.web / WebConfig / minGzipSize minGzipSize \u00b6 val minGzipSize: Int The minimum size in bytes before the response body will be compressed.","title":"minGzipSize - Misk"},{"location":"0.x/misk/misk.web/-web-config/min-gzip-size.html#mingzipsize","text":"val minGzipSize: Int The minimum size in bytes before the response body will be compressed.","title":"minGzipSize"},{"location":"0.x/misk/misk.web/-web-config/port.html","text":"misk / misk.web / WebConfig / port port \u00b6 val port: Int HTTP port to listen on, or 0 for any available port.","title":"port - Misk"},{"location":"0.x/misk/misk.web/-web-config/port.html#port","text":"val port: Int HTTP port to listen on, or 0 for any available port.","title":"port"},{"location":"0.x/misk/misk.web/-web-config/queue_size.html","text":"misk / misk.web / WebConfig / queue_size queue_size \u00b6 val queue_size: Int ? The accept backlog.","title":"queue_size - Misk"},{"location":"0.x/misk/misk.web/-web-config/queue_size.html#queue_size","text":"val queue_size: Int ? The accept backlog.","title":"queue_size"},{"location":"0.x/misk/misk.web/-web-config/selectors.html","text":"misk / misk.web / WebConfig / selectors selectors \u00b6 val selectors: Int ? Number of NIO selector threads.","title":"selectors - Misk"},{"location":"0.x/misk/misk.web/-web-config/selectors.html#selectors","text":"val selectors: Int ? Number of NIO selector threads.","title":"selectors"},{"location":"0.x/misk/misk.web/-web-config/ssl.html","text":"misk / misk.web / WebConfig / ssl ssl \u00b6 val ssl: WebSslConfig ?","title":"ssl - Misk"},{"location":"0.x/misk/misk.web/-web-config/ssl.html#ssl","text":"val ssl: WebSslConfig ?","title":"ssl"},{"location":"0.x/misk/misk.web/-web-config/unix_domain_socket.html","text":"misk / misk.web / WebConfig / unix_domain_socket unix_domain_socket \u00b6 val unix_domain_socket: WebUnixDomainSocketConfig ? Configuration to enable Jetty to listen for traffic on a unix domain socket being proxied through a sidecar (like Envoy).","title":"unix_domain_socket - Misk"},{"location":"0.x/misk/misk.web/-web-config/unix_domain_socket.html#unix_domain_socket","text":"val unix_domain_socket: WebUnixDomainSocketConfig ? Configuration to enable Jetty to listen for traffic on a unix domain socket being proxied through a sidecar (like Envoy).","title":"unix_domain_socket"},{"location":"0.x/misk/misk.web/-web-ssl-config/index.html","text":"misk / misk.web / WebSslConfig WebSslConfig \u00b6 data class WebSslConfig Types \u00b6 Name Summary CipherCompatibility enum class CipherCompatibility MutualAuth enum class MutualAuth Constructors \u00b6 Name Summary <init> WebSslConfig(port: Int , cert_store: CertStoreConfig, trust_store: TrustStoreConfig? = null, mutual_auth: WebSslConfig.MutualAuth = MutualAuth.REQUIRED, cipher_compatibility: WebSslConfig.CipherCompatibility = CipherCompatibility.COMPATIBLE) Properties \u00b6 Name Summary cert_store val cert_store: CertStoreConfig cipher_compatibility val cipher_compatibility: WebSslConfig.CipherCompatibility mutual_auth val mutual_auth: WebSslConfig.MutualAuth port val port: Int HTTPS port to listen on, or 0 for any available port. trust_store val trust_store: TrustStoreConfig?","title":"WebSslConfig - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/index.html#websslconfig","text":"data class WebSslConfig","title":"WebSslConfig"},{"location":"0.x/misk/misk.web/-web-ssl-config/index.html#types","text":"Name Summary CipherCompatibility enum class CipherCompatibility MutualAuth enum class MutualAuth","title":"Types"},{"location":"0.x/misk/misk.web/-web-ssl-config/index.html#constructors","text":"Name Summary <init> WebSslConfig(port: Int , cert_store: CertStoreConfig, trust_store: TrustStoreConfig? = null, mutual_auth: WebSslConfig.MutualAuth = MutualAuth.REQUIRED, cipher_compatibility: WebSslConfig.CipherCompatibility = CipherCompatibility.COMPATIBLE)","title":"Constructors"},{"location":"0.x/misk/misk.web/-web-ssl-config/index.html#properties","text":"Name Summary cert_store val cert_store: CertStoreConfig cipher_compatibility val cipher_compatibility: WebSslConfig.CipherCompatibility mutual_auth val mutual_auth: WebSslConfig.MutualAuth port val port: Int HTTPS port to listen on, or 0 for any available port. trust_store val trust_store: TrustStoreConfig?","title":"Properties"},{"location":"0.x/misk/misk.web/-web-ssl-config/-init-.html","text":"misk / misk.web / WebSslConfig / <init> <init> \u00b6 WebSslConfig(port: Int , cert_store: CertStoreConfig, trust_store: TrustStoreConfig? = null, mutual_auth: WebSslConfig.MutualAuth = MutualAuth.REQUIRED, cipher_compatibility: WebSslConfig.CipherCompatibility = CipherCompatibility.COMPATIBLE)","title":" init "},{"location":"0.x/misk/misk.web/-web-ssl-config/-init-.html#init","text":"WebSslConfig(port: Int , cert_store: CertStoreConfig, trust_store: TrustStoreConfig? = null, mutual_auth: WebSslConfig.MutualAuth = MutualAuth.REQUIRED, cipher_compatibility: WebSslConfig.CipherCompatibility = CipherCompatibility.COMPATIBLE)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-web-ssl-config/cert_store.html","text":"misk / misk.web / WebSslConfig / cert_store cert_store \u00b6 val cert_store: CertStoreConfig","title":"cert_store - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/cert_store.html#cert_store","text":"val cert_store: CertStoreConfig","title":"cert_store"},{"location":"0.x/misk/misk.web/-web-ssl-config/cipher_compatibility.html","text":"misk / misk.web / WebSslConfig / cipher_compatibility cipher_compatibility \u00b6 val cipher_compatibility: WebSslConfig.CipherCompatibility","title":"cipher_compatibility - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/cipher_compatibility.html#cipher_compatibility","text":"val cipher_compatibility: WebSslConfig.CipherCompatibility","title":"cipher_compatibility"},{"location":"0.x/misk/misk.web/-web-ssl-config/mutual_auth.html","text":"misk / misk.web / WebSslConfig / mutual_auth mutual_auth \u00b6 val mutual_auth: WebSslConfig.MutualAuth","title":"mutual_auth - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/mutual_auth.html#mutual_auth","text":"val mutual_auth: WebSslConfig.MutualAuth","title":"mutual_auth"},{"location":"0.x/misk/misk.web/-web-ssl-config/port.html","text":"misk / misk.web / WebSslConfig / port port \u00b6 val port: Int HTTPS port to listen on, or 0 for any available port.","title":"port - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/port.html#port","text":"val port: Int HTTPS port to listen on, or 0 for any available port.","title":"port"},{"location":"0.x/misk/misk.web/-web-ssl-config/trust_store.html","text":"misk / misk.web / WebSslConfig / trust_store trust_store \u00b6 val trust_store: TrustStoreConfig?","title":"trust_store - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/trust_store.html#trust_store","text":"val trust_store: TrustStoreConfig?","title":"trust_store"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/index.html","text":"misk / misk.web / WebSslConfig / CipherCompatibility CipherCompatibility \u00b6 enum class CipherCompatibility Enum Values \u00b6 Name Summary COMPATIBLE Allows the broadest set of clients, including clients that support only out-of-date SSL features. MODERN Supports a wide set of SSL features, allowing modern clients to negotiate SSL. RESTRICTED Supports a reduced set of SSL features, intended to meet stricter compliance requirements.","title":"CipherCompatibility - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/index.html#ciphercompatibility","text":"enum class CipherCompatibility","title":"CipherCompatibility"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/index.html#enum-values","text":"Name Summary COMPATIBLE Allows the broadest set of clients, including clients that support only out-of-date SSL features. MODERN Supports a wide set of SSL features, allowing modern clients to negotiate SSL. RESTRICTED Supports a reduced set of SSL features, intended to meet stricter compliance requirements.","title":"Enum Values"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/-c-o-m-p-a-t-i-b-l-e.html","text":"misk / misk.web / WebSslConfig / CipherCompatibility / COMPATIBLE COMPATIBLE \u00b6 COMPATIBLE Allows the broadest set of clients, including clients that support only out-of-date SSL features.","title":"COMPATIBLE - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/-c-o-m-p-a-t-i-b-l-e.html#compatible","text":"COMPATIBLE Allows the broadest set of clients, including clients that support only out-of-date SSL features.","title":"COMPATIBLE"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/-m-o-d-e-r-n.html","text":"misk / misk.web / WebSslConfig / CipherCompatibility / MODERN MODERN \u00b6 MODERN Supports a wide set of SSL features, allowing modern clients to negotiate SSL.","title":"MODERN - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/-m-o-d-e-r-n.html#modern","text":"MODERN Supports a wide set of SSL features, allowing modern clients to negotiate SSL.","title":"MODERN"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/-r-e-s-t-r-i-c-t-e-d.html","text":"misk / misk.web / WebSslConfig / CipherCompatibility / RESTRICTED RESTRICTED \u00b6 RESTRICTED Supports a reduced set of SSL features, intended to meet stricter compliance requirements.","title":"RESTRICTED - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-cipher-compatibility/-r-e-s-t-r-i-c-t-e-d.html#restricted","text":"RESTRICTED Supports a reduced set of SSL features, intended to meet stricter compliance requirements.","title":"RESTRICTED"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/index.html","text":"misk / misk.web / WebSslConfig / MutualAuth MutualAuth \u00b6 enum class MutualAuth Enum Values \u00b6 Name Summary NONE REQUIRED DESIRED","title":"MutualAuth - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/index.html#mutualauth","text":"enum class MutualAuth","title":"MutualAuth"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/index.html#enum-values","text":"Name Summary NONE REQUIRED DESIRED","title":"Enum Values"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/-d-e-s-i-r-e-d.html","text":"misk / misk.web / WebSslConfig / MutualAuth / DESIRED DESIRED \u00b6 DESIRED","title":"DESIRED - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/-d-e-s-i-r-e-d.html#desired","text":"DESIRED","title":"DESIRED"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/-n-o-n-e.html","text":"misk / misk.web / WebSslConfig / MutualAuth / NONE NONE \u00b6 NONE","title":"NONE - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/-n-o-n-e.html#none","text":"NONE","title":"NONE"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/-r-e-q-u-i-r-e-d.html","text":"misk / misk.web / WebSslConfig / MutualAuth / REQUIRED REQUIRED \u00b6 REQUIRED","title":"REQUIRED - Misk"},{"location":"0.x/misk/misk.web/-web-ssl-config/-mutual-auth/-r-e-q-u-i-r-e-d.html#required","text":"REQUIRED","title":"REQUIRED"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/index.html","text":"misk / misk.web / WebUnixDomainSocketConfig WebUnixDomainSocketConfig \u00b6 data class WebUnixDomainSocketConfig Constructors \u00b6 Name Summary <init> WebUnixDomainSocketConfig(path: String , h2c: Boolean ? = true) Properties \u00b6 Name Summary h2c val h2c: Boolean ? If true, the listener will support H2C. path val path: String The Unix Domain Socket to listen on.","title":"WebUnixDomainSocketConfig - Misk"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/index.html#webunixdomainsocketconfig","text":"data class WebUnixDomainSocketConfig","title":"WebUnixDomainSocketConfig"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/index.html#constructors","text":"Name Summary <init> WebUnixDomainSocketConfig(path: String , h2c: Boolean ? = true)","title":"Constructors"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/index.html#properties","text":"Name Summary h2c val h2c: Boolean ? If true, the listener will support H2C. path val path: String The Unix Domain Socket to listen on.","title":"Properties"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/-init-.html","text":"misk / misk.web / WebUnixDomainSocketConfig / <init> <init> \u00b6 WebUnixDomainSocketConfig(path: String , h2c: Boolean ? = true)","title":" init "},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/-init-.html#init","text":"WebUnixDomainSocketConfig(path: String , h2c: Boolean ? = true)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/h2c.html","text":"misk / misk.web / WebUnixDomainSocketConfig / h2c h2c \u00b6 val h2c: Boolean ? If true, the listener will support H2C.","title":"h2c - Misk"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/h2c.html#h2c","text":"val h2c: Boolean ? If true, the listener will support H2C.","title":"h2c"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/path.html","text":"misk / misk.web / WebUnixDomainSocketConfig / path path \u00b6 val path: String The Unix Domain Socket to listen on.","title":"path - Misk"},{"location":"0.x/misk/misk.web/-web-unix-domain-socket-config/path.html#path","text":"val path: String The Unix Domain Socket to listen on.","title":"path"},{"location":"0.x/misk/misk.web/kotlin.-string/index.html","text":"misk / misk.web / kotlin.String Extensions for kotlin.String \u00b6 Name Summary toResponseBody fun String .toResponseBody(): ResponseBody Returns a ResponseBody that writes this out as UTF-8.","title":"Extensions for kotlin.String - Misk"},{"location":"0.x/misk/misk.web/kotlin.-string/index.html#extensions-for-kotlinstring","text":"Name Summary toResponseBody fun String .toResponseBody(): ResponseBody Returns a ResponseBody that writes this out as UTF-8.","title":"Extensions for kotlin.String"},{"location":"0.x/misk/misk.web/kotlin.-string/to-response-body.html","text":"misk / misk.web / kotlin.String / toResponseBody toResponseBody \u00b6 fun String .toResponseBody(): ResponseBody Returns a ResponseBody that writes this out as UTF-8.","title":"toResponseBody - Misk"},{"location":"0.x/misk/misk.web/kotlin.-string/to-response-body.html#toresponsebody","text":"fun String .toResponseBody(): ResponseBody Returns a ResponseBody that writes this out as UTF-8.","title":"toResponseBody"},{"location":"0.x/misk/misk.web/okhttp3.-response/index.html","text":"misk / misk.web / okhttp3.Response Extensions for okhttp3.Response \u00b6 Name Summary toMisk fun Response.toMisk(): Response<ResponseBody>","title":"Extensions for okhttp3.Response - Misk"},{"location":"0.x/misk/misk.web/okhttp3.-response/index.html#extensions-for-okhttp3response","text":"Name Summary toMisk fun Response.toMisk(): Response<ResponseBody>","title":"Extensions for okhttp3.Response"},{"location":"0.x/misk/misk.web/okhttp3.-response/to-misk.html","text":"misk / misk.web / okhttp3.Response / toMisk toMisk \u00b6 fun Response.toMisk(): Response<ResponseBody>","title":"toMisk - Misk"},{"location":"0.x/misk/misk.web/okhttp3.-response/to-misk.html#tomisk","text":"fun Response.toMisk(): Response<ResponseBody>","title":"toMisk"},{"location":"0.x/misk/misk.web.actions/index.html","text":"misk / misk.web.actions Package misk.web.actions \u00b6 Types \u00b6 Name Summary FakeWebSocket class FakeWebSocket : WebSocket InternalErrorAction class InternalErrorAction : WebAction LivenessCheckAction class LivenessCheckAction : WebAction NotFoundAction class NotFoundAction : WebAction ReadinessCheckAction class ReadinessCheckAction : WebAction StatusAction class StatusAction : WebAction Returns the current status of the service for programmatic tools that want to query for the current state of the server WebActionEntry class WebActionEntry : ValidWebEntry WebActionEntry Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Package misk.web.actions - Misk"},{"location":"0.x/misk/misk.web.actions/index.html#package-miskwebactions","text":"","title":"Package misk.web.actions"},{"location":"0.x/misk/misk.web.actions/index.html#types","text":"Name Summary FakeWebSocket class FakeWebSocket : WebSocket InternalErrorAction class InternalErrorAction : WebAction LivenessCheckAction class LivenessCheckAction : WebAction NotFoundAction class NotFoundAction : WebAction ReadinessCheckAction class ReadinessCheckAction : WebAction StatusAction class StatusAction : WebAction Returns the current status of the service for programmatic tools that want to query for the current state of the server WebActionEntry class WebActionEntry : ValidWebEntry WebActionEntry","title":"Types"},{"location":"0.x/misk/misk.web.actions/index.html#functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Functions"},{"location":"0.x/misk/misk.web.actions/as-chain.html","text":"misk / misk.web.actions / asChain asChain \u00b6 fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"asChain - Misk"},{"location":"0.x/misk/misk.web.actions/as-chain.html#aschain","text":"fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"asChain"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/index.html","text":"misk / misk.web.actions / FakeWebSocket FakeWebSocket \u00b6 class FakeWebSocket : WebSocket Constructors \u00b6 Name Summary <init> FakeWebSocket() Functions \u00b6 Name Summary cancel fun cancel(): Unit close fun close(code: Int , reason: String ?): Boolean queueSize fun queueSize(): Long send fun send(bytes: ByteString): Boolean fun send(text: String ): Boolean takeLog fun takeLog(): List < String >","title":"FakeWebSocket - Misk"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/index.html#fakewebsocket","text":"class FakeWebSocket : WebSocket","title":"FakeWebSocket"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/index.html#constructors","text":"Name Summary <init> FakeWebSocket()","title":"Constructors"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/index.html#functions","text":"Name Summary cancel fun cancel(): Unit close fun close(code: Int , reason: String ?): Boolean queueSize fun queueSize(): Long send fun send(bytes: ByteString): Boolean fun send(text: String ): Boolean takeLog fun takeLog(): List < String >","title":"Functions"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/-init-.html","text":"misk / misk.web.actions / FakeWebSocket / <init> <init> \u00b6 FakeWebSocket()","title":" init "},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/-init-.html#init","text":"FakeWebSocket()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/cancel.html","text":"misk / misk.web.actions / FakeWebSocket / cancel cancel \u00b6 fun cancel(): Unit","title":"cancel - Misk"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/cancel.html#cancel","text":"fun cancel(): Unit","title":"cancel"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/close.html","text":"misk / misk.web.actions / FakeWebSocket / close close \u00b6 fun close(code: Int , reason: String ?): Boolean","title":"close - Misk"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/close.html#close","text":"fun close(code: Int , reason: String ?): Boolean","title":"close"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/queue-size.html","text":"misk / misk.web.actions / FakeWebSocket / queueSize queueSize \u00b6 fun queueSize(): Long","title":"queueSize - Misk"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/queue-size.html#queuesize","text":"fun queueSize(): Long","title":"queueSize"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/send.html","text":"misk / misk.web.actions / FakeWebSocket / send send \u00b6 fun send(bytes: ByteString): Boolean fun send(text: String ): Boolean","title":"send - Misk"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/send.html#send","text":"fun send(bytes: ByteString): Boolean fun send(text: String ): Boolean","title":"send"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/take-log.html","text":"misk / misk.web.actions / FakeWebSocket / takeLog takeLog \u00b6 fun takeLog(): List < String >","title":"takeLog - Misk"},{"location":"0.x/misk/misk.web.actions/-fake-web-socket/take-log.html#takelog","text":"fun takeLog(): List < String >","title":"takeLog"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/index.html","text":"misk / misk.web.actions / InternalErrorAction InternalErrorAction \u00b6 @Singleton class InternalErrorAction : WebAction Constructors \u00b6 Name Summary <init> InternalErrorAction() Functions \u00b6 Name Summary error fun error(): Nothing Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"InternalErrorAction - Misk"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/index.html#internalerroraction","text":"@Singleton class InternalErrorAction : WebAction","title":"InternalErrorAction"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/index.html#constructors","text":"Name Summary <init> InternalErrorAction()","title":"Constructors"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/index.html#functions","text":"Name Summary error fun error(): Nothing","title":"Functions"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/-init-.html","text":"misk / misk.web.actions / InternalErrorAction / <init> <init> \u00b6 InternalErrorAction()","title":" init "},{"location":"0.x/misk/misk.web.actions/-internal-error-action/-init-.html#init","text":"InternalErrorAction()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/error.html","text":"misk / misk.web.actions / InternalErrorAction / error error \u00b6 fun error(): Nothing","title":"error - Misk"},{"location":"0.x/misk/misk.web.actions/-internal-error-action/error.html#error","text":"fun error(): Nothing","title":"error"},{"location":"0.x/misk/misk.web.actions/-liveness-check-action/index.html","text":"misk / misk.web.actions / LivenessCheckAction LivenessCheckAction \u00b6 @Singleton class LivenessCheckAction : WebAction Functions \u00b6 Name Summary livenessCheck fun livenessCheck(): Response< String > Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"LivenessCheckAction - Misk"},{"location":"0.x/misk/misk.web.actions/-liveness-check-action/index.html#livenesscheckaction","text":"@Singleton class LivenessCheckAction : WebAction","title":"LivenessCheckAction"},{"location":"0.x/misk/misk.web.actions/-liveness-check-action/index.html#functions","text":"Name Summary livenessCheck fun livenessCheck(): Response< String >","title":"Functions"},{"location":"0.x/misk/misk.web.actions/-liveness-check-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.actions/-liveness-check-action/liveness-check.html","text":"misk / misk.web.actions / LivenessCheckAction / livenessCheck livenessCheck \u00b6 fun livenessCheck(): Response< String >","title":"livenessCheck - Misk"},{"location":"0.x/misk/misk.web.actions/-liveness-check-action/liveness-check.html#livenesscheck","text":"fun livenessCheck(): Response< String >","title":"livenessCheck"},{"location":"0.x/misk/misk.web.actions/-not-found-action/index.html","text":"misk / misk.web.actions / NotFoundAction NotFoundAction \u00b6 @Singleton class NotFoundAction : WebAction Constructors \u00b6 Name Summary <init> NotFoundAction(clientHttpCall: ActionScoped< HttpCall >) Functions \u00b6 Name Summary notFound fun notFound(path: String ): Response<ResponseBody> Companion Object Functions \u00b6 Name Summary response fun response(path: String ): Response<ResponseBody> Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"NotFoundAction - Misk"},{"location":"0.x/misk/misk.web.actions/-not-found-action/index.html#notfoundaction","text":"@Singleton class NotFoundAction : WebAction","title":"NotFoundAction"},{"location":"0.x/misk/misk.web.actions/-not-found-action/index.html#constructors","text":"Name Summary <init> NotFoundAction(clientHttpCall: ActionScoped< HttpCall >)","title":"Constructors"},{"location":"0.x/misk/misk.web.actions/-not-found-action/index.html#functions","text":"Name Summary notFound fun notFound(path: String ): Response<ResponseBody>","title":"Functions"},{"location":"0.x/misk/misk.web.actions/-not-found-action/index.html#companion-object-functions","text":"Name Summary response fun response(path: String ): Response<ResponseBody>","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web.actions/-not-found-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.actions/-not-found-action/-init-.html","text":"misk / misk.web.actions / NotFoundAction / <init> <init> \u00b6 NotFoundAction(clientHttpCall: ActionScoped< HttpCall >)","title":" init "},{"location":"0.x/misk/misk.web.actions/-not-found-action/-init-.html#init","text":"NotFoundAction(clientHttpCall: ActionScoped< HttpCall >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.actions/-not-found-action/not-found.html","text":"misk / misk.web.actions / NotFoundAction / notFound notFound \u00b6 fun notFound(path: String ): Response<ResponseBody>","title":"notFound - Misk"},{"location":"0.x/misk/misk.web.actions/-not-found-action/not-found.html#notfound","text":"fun notFound(path: String ): Response<ResponseBody>","title":"notFound"},{"location":"0.x/misk/misk.web.actions/-not-found-action/response.html","text":"misk / misk.web.actions / NotFoundAction / response response \u00b6 fun response(path: String ): Response<ResponseBody>","title":"response - Misk"},{"location":"0.x/misk/misk.web.actions/-not-found-action/response.html#response","text":"fun response(path: String ): Response<ResponseBody>","title":"response"},{"location":"0.x/misk/misk.web.actions/-readiness-check-action/index.html","text":"misk / misk.web.actions / ReadinessCheckAction ReadinessCheckAction \u00b6 @Singleton class ReadinessCheckAction : WebAction Functions \u00b6 Name Summary readinessCheck fun readinessCheck(): Response< String > Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"ReadinessCheckAction - Misk"},{"location":"0.x/misk/misk.web.actions/-readiness-check-action/index.html#readinesscheckaction","text":"@Singleton class ReadinessCheckAction : WebAction","title":"ReadinessCheckAction"},{"location":"0.x/misk/misk.web.actions/-readiness-check-action/index.html#functions","text":"Name Summary readinessCheck fun readinessCheck(): Response< String >","title":"Functions"},{"location":"0.x/misk/misk.web.actions/-readiness-check-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.actions/-readiness-check-action/readiness-check.html","text":"misk / misk.web.actions / ReadinessCheckAction / readinessCheck readinessCheck \u00b6 fun readinessCheck(): Response< String >","title":"readinessCheck - Misk"},{"location":"0.x/misk/misk.web.actions/-readiness-check-action/readiness-check.html#readinesscheck","text":"fun readinessCheck(): Response< String >","title":"readinessCheck"},{"location":"0.x/misk/misk.web.actions/-status-action/index.html","text":"misk / misk.web.actions / StatusAction StatusAction \u00b6 @Singleton class StatusAction : WebAction Returns the current status of the service for programmatic tools that want to query for the current state of the server Types \u00b6 Name Summary ServerStatus data class ServerStatus Functions \u00b6 Name Summary getStatus fun getStatus(): StatusAction.ServerStatus Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"StatusAction - Misk"},{"location":"0.x/misk/misk.web.actions/-status-action/index.html#statusaction","text":"@Singleton class StatusAction : WebAction Returns the current status of the service for programmatic tools that want to query for the current state of the server","title":"StatusAction"},{"location":"0.x/misk/misk.web.actions/-status-action/index.html#types","text":"Name Summary ServerStatus data class ServerStatus","title":"Types"},{"location":"0.x/misk/misk.web.actions/-status-action/index.html#functions","text":"Name Summary getStatus fun getStatus(): StatusAction.ServerStatus","title":"Functions"},{"location":"0.x/misk/misk.web.actions/-status-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.actions/-status-action/get-status.html","text":"misk / misk.web.actions / StatusAction / getStatus getStatus \u00b6 fun getStatus(): StatusAction.ServerStatus","title":"getStatus - Misk"},{"location":"0.x/misk/misk.web.actions/-status-action/get-status.html#getstatus","text":"fun getStatus(): StatusAction.ServerStatus","title":"getStatus"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/index.html","text":"misk / misk.web.actions / StatusAction / ServerStatus ServerStatus \u00b6 data class ServerStatus Constructors \u00b6 Name Summary <init> ServerStatus(serviceStatus: Map < String , State>, healthCheckStatus: Map < String , HealthStatus>) Properties \u00b6 Name Summary healthCheckStatus val healthCheckStatus: Map < String , HealthStatus> serviceStatus val serviceStatus: Map < String , State>","title":"ServerStatus - Misk"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/index.html#serverstatus","text":"data class ServerStatus","title":"ServerStatus"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/index.html#constructors","text":"Name Summary <init> ServerStatus(serviceStatus: Map < String , State>, healthCheckStatus: Map < String , HealthStatus>)","title":"Constructors"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/index.html#properties","text":"Name Summary healthCheckStatus val healthCheckStatus: Map < String , HealthStatus> serviceStatus val serviceStatus: Map < String , State>","title":"Properties"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/-init-.html","text":"misk / misk.web.actions / StatusAction / ServerStatus / <init> <init> \u00b6 ServerStatus(serviceStatus: Map < String , State>, healthCheckStatus: Map < String , HealthStatus>)","title":" init "},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/-init-.html#init","text":"ServerStatus(serviceStatus: Map < String , State>, healthCheckStatus: Map < String , HealthStatus>)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/health-check-status.html","text":"misk / misk.web.actions / StatusAction / ServerStatus / healthCheckStatus healthCheckStatus \u00b6 val healthCheckStatus: Map < String , HealthStatus>","title":"healthCheckStatus - Misk"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/health-check-status.html#healthcheckstatus","text":"val healthCheckStatus: Map < String , HealthStatus>","title":"healthCheckStatus"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/service-status.html","text":"misk / misk.web.actions / StatusAction / ServerStatus / serviceStatus serviceStatus \u00b6 val serviceStatus: Map < String , State>","title":"serviceStatus - Misk"},{"location":"0.x/misk/misk.web.actions/-status-action/-server-status/service-status.html#servicestatus","text":"val serviceStatus: Map < String , State>","title":"serviceStatus"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/index.html","text":"misk / misk.web.actions / WebActionEntry WebActionEntry \u00b6 class WebActionEntry : ValidWebEntry WebActionEntry A registration of a web action with optional configuration to customize. Parameters \u00b6 actionClass - : WebAction to multibind to WebServlet url_path_prefix - : Must match pattern requirements: Constructors \u00b6 Name Summary <init> WebActionEntry(actionClass: KClass <out WebAction>, url_path_prefix: String ) WebActionEntry Properties \u00b6 Name Summary actionClass val actionClass: KClass <out WebAction> : WebAction to multibind to WebServlet Inherited Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"WebActionEntry - Misk"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/index.html#webactionentry","text":"class WebActionEntry : ValidWebEntry WebActionEntry A registration of a web action with optional configuration to customize.","title":"WebActionEntry"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/index.html#parameters","text":"actionClass - : WebAction to multibind to WebServlet url_path_prefix - : Must match pattern requirements:","title":"Parameters"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/index.html#constructors","text":"Name Summary <init> WebActionEntry(actionClass: KClass <out WebAction>, url_path_prefix: String ) WebActionEntry","title":"Constructors"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/index.html#properties","text":"Name Summary actionClass val actionClass: KClass <out WebAction> : WebAction to multibind to WebServlet","title":"Properties"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/index.html#inherited-properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/-init-.html","text":"misk / misk.web.actions / WebActionEntry / <init> <init> \u00b6 WebActionEntry(actionClass: KClass <out WebAction>, url_path_prefix: String ) WebActionEntry A registration of a web action with optional configuration to customize. Parameters \u00b6 actionClass - : WebAction to multibind to WebServlet url_path_prefix - : Must match pattern requirements:","title":" init "},{"location":"0.x/misk/misk.web.actions/-web-action-entry/-init-.html#init","text":"WebActionEntry(actionClass: KClass <out WebAction>, url_path_prefix: String ) WebActionEntry A registration of a web action with optional configuration to customize.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/-init-.html#parameters","text":"actionClass - : WebAction to multibind to WebServlet url_path_prefix - : Must match pattern requirements:","title":"Parameters"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/action-class.html","text":"misk / misk.web.actions / WebActionEntry / actionClass actionClass \u00b6 val actionClass: KClass <out WebAction> : WebAction to multibind to WebServlet","title":"actionClass - Misk"},{"location":"0.x/misk/misk.web.actions/-web-action-entry/action-class.html#actionclass","text":"val actionClass: KClass <out WebAction> : WebAction to multibind to WebServlet","title":"actionClass"},{"location":"0.x/misk/misk.web.dashboard/index.html","text":"misk / misk.web.dashboard Package misk.web.dashboard \u00b6 Types \u00b6 Name Summary AdminDashboardModule class AdminDashboardModule : KAbstractModule Installs default Admin Dashboard that runs at multibound DashboardHomeUrl AdminDashboardTestingModule class AdminDashboardTestingModule : KAbstractModule ConfigDashboardTabModule class ConfigDashboardTabModule : KAbstractModule Installs Config tab for the Misk Admin Dashboard DashboardHomeUrl data class DashboardHomeUrl : ValidWebEntry Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard DashboardModule class DashboardModule : KAbstractModule Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps DashboardNavbarItem data class DashboardNavbarItem : ValidWebEntry A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu DashboardNavbarStatus data class DashboardNavbarStatus : ValidWebEntry Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard DashboardTab class DashboardTab : WebTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu DashboardTabProvider class DashboardTabProvider : Provider< DashboardTab > Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry DashboardTheme data class DashboardTheme Per dashboard customization of the navbar theme EnvironmentToColorLookup data class EnvironmentToColorLookup MiskWebColor enum class MiskWebColor Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts MiskWebTheme data class MiskWebTheme Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts ValidWebEntry abstract class ValidWebEntry WebTab abstract class WebTab : ValidWebEntry WebTabResourceModule class WebTabResourceModule : KAbstractModule Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) Annotations \u00b6 Name Summary AdminDashboard annotation class AdminDashboard Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard AdminDashboardAccess annotation class AdminDashboardAccess Functions \u00b6 Name Summary DashboardHomeUrl fun <DA : Annotation > DashboardHomeUrl(urlPathPrefix: String ): DashboardHomeUrl DashboardNavbarItem fun <DA : Annotation > DashboardNavbarItem(item: String , order: Int ): DashboardNavbarItem DashboardNavbarStatus fun <DA : Annotation > DashboardNavbarStatus(status: String ): DashboardNavbarStatus DashboardTabProvider fun <DA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()): DashboardTabProvider Binds a DashboardTab for Dashboard DA with optional access capabilities and services fun <DA : Annotation , AA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\"): DashboardTabProvider Binds a DashboardTab for Dashboard DA with access annotation AA DashboardTheme fun <DA : Annotation > DashboardTheme(theme: MiskWebTheme ): DashboardTheme","title":"Package misk.web.dashboard - Misk"},{"location":"0.x/misk/misk.web.dashboard/index.html#package-miskwebdashboard","text":"","title":"Package misk.web.dashboard"},{"location":"0.x/misk/misk.web.dashboard/index.html#types","text":"Name Summary AdminDashboardModule class AdminDashboardModule : KAbstractModule Installs default Admin Dashboard that runs at multibound DashboardHomeUrl AdminDashboardTestingModule class AdminDashboardTestingModule : KAbstractModule ConfigDashboardTabModule class ConfigDashboardTabModule : KAbstractModule Installs Config tab for the Misk Admin Dashboard DashboardHomeUrl data class DashboardHomeUrl : ValidWebEntry Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard DashboardModule class DashboardModule : KAbstractModule Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps DashboardNavbarItem data class DashboardNavbarItem : ValidWebEntry A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu DashboardNavbarStatus data class DashboardNavbarStatus : ValidWebEntry Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard DashboardTab class DashboardTab : WebTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu DashboardTabProvider class DashboardTabProvider : Provider< DashboardTab > Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry DashboardTheme data class DashboardTheme Per dashboard customization of the navbar theme EnvironmentToColorLookup data class EnvironmentToColorLookup MiskWebColor enum class MiskWebColor Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts MiskWebTheme data class MiskWebTheme Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts ValidWebEntry abstract class ValidWebEntry WebTab abstract class WebTab : ValidWebEntry WebTabResourceModule class WebTabResourceModule : KAbstractModule Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026)","title":"Types"},{"location":"0.x/misk/misk.web.dashboard/index.html#annotations","text":"Name Summary AdminDashboard annotation class AdminDashboard Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard AdminDashboardAccess annotation class AdminDashboardAccess","title":"Annotations"},{"location":"0.x/misk/misk.web.dashboard/index.html#functions","text":"Name Summary DashboardHomeUrl fun <DA : Annotation > DashboardHomeUrl(urlPathPrefix: String ): DashboardHomeUrl DashboardNavbarItem fun <DA : Annotation > DashboardNavbarItem(item: String , order: Int ): DashboardNavbarItem DashboardNavbarStatus fun <DA : Annotation > DashboardNavbarStatus(status: String ): DashboardNavbarStatus DashboardTabProvider fun <DA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()): DashboardTabProvider Binds a DashboardTab for Dashboard DA with optional access capabilities and services fun <DA : Annotation , AA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\"): DashboardTabProvider Binds a DashboardTab for Dashboard DA with access annotation AA DashboardTheme fun <DA : Annotation > DashboardTheme(theme: MiskWebTheme ): DashboardTheme","title":"Functions"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url.html","text":"misk / misk.web.dashboard / DashboardHomeUrl DashboardHomeUrl \u00b6 inline fun <reified DA : Annotation > DashboardHomeUrl(urlPathPrefix: String ): DashboardHomeUrl","title":"DashboardHomeUrl - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url.html#dashboardhomeurl","text":"inline fun <reified DA : Annotation > DashboardHomeUrl(urlPathPrefix: String ): DashboardHomeUrl","title":"DashboardHomeUrl"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item.html","text":"misk / misk.web.dashboard / DashboardNavbarItem DashboardNavbarItem \u00b6 inline fun <reified DA : Annotation > DashboardNavbarItem(item: String , order: Int ): DashboardNavbarItem","title":"DashboardNavbarItem - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item.html#dashboardnavbaritem","text":"inline fun <reified DA : Annotation > DashboardNavbarItem(item: String , order: Int ): DashboardNavbarItem","title":"DashboardNavbarItem"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status.html","text":"misk / misk.web.dashboard / DashboardNavbarStatus DashboardNavbarStatus \u00b6 inline fun <reified DA : Annotation > DashboardNavbarStatus(status: String ): DashboardNavbarStatus","title":"DashboardNavbarStatus - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status.html#dashboardnavbarstatus","text":"inline fun <reified DA : Annotation > DashboardNavbarStatus(status: String ): DashboardNavbarStatus","title":"DashboardNavbarStatus"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider.html","text":"misk / misk.web.dashboard / DashboardTabProvider DashboardTabProvider \u00b6 inline fun <reified DA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()): DashboardTabProvider Binds a DashboardTab for Dashboard DA with optional access capabilities and services inline fun <reified DA : Annotation , reified AA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\"): DashboardTabProvider Binds a DashboardTab for Dashboard DA with access annotation AA","title":"DashboardTabProvider - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider.html#dashboardtabprovider","text":"inline fun <reified DA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()): DashboardTabProvider Binds a DashboardTab for Dashboard DA with optional access capabilities and services inline fun <reified DA : Annotation , reified AA : Annotation > DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\"): DashboardTabProvider Binds a DashboardTab for Dashboard DA with access annotation AA","title":"DashboardTabProvider"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme.html","text":"misk / misk.web.dashboard / DashboardTheme DashboardTheme \u00b6 inline fun <reified DA : Annotation > DashboardTheme(theme: MiskWebTheme ): DashboardTheme","title":"DashboardTheme - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme.html#dashboardtheme","text":"inline fun <reified DA : Annotation > DashboardTheme(theme: MiskWebTheme ): DashboardTheme","title":"DashboardTheme"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard/index.html","text":"misk / misk.web.dashboard / AdminDashboard AdminDashboard \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION]) annotation class AdminDashboard Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard Constructors \u00b6 Name Summary <init> AdminDashboard() Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard","title":"AdminDashboard - Misk"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard/index.html#admindashboard","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION]) annotation class AdminDashboard Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard","title":"AdminDashboard"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard/index.html#constructors","text":"Name Summary <init> AdminDashboard() Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard/-init-.html","text":"misk / misk.web.dashboard / AdminDashboard / <init> <init> \u00b6 AdminDashboard() Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard/-init-.html#init","text":"AdminDashboard() Dashboard Annotation used for all tabs bound in the Misk Admin Dashboard","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-access/index.html","text":"misk / misk.web.dashboard / AdminDashboardAccess AdminDashboardAccess \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class AdminDashboardAccess Constructors \u00b6 Name Summary <init> AdminDashboardAccess()","title":"AdminDashboardAccess - Misk"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-access/index.html#admindashboardaccess","text":"@Target([AnnotationTarget.FUNCTION]) annotation class AdminDashboardAccess","title":"AdminDashboardAccess"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-access/index.html#constructors","text":"Name Summary <init> AdminDashboardAccess()","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-access/-init-.html","text":"misk / misk.web.dashboard / AdminDashboardAccess / <init> <init> \u00b6 AdminDashboardAccess()","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-access/-init-.html#init","text":"AdminDashboardAccess()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/index.html","text":"misk / misk.web.dashboard / AdminDashboardModule AdminDashboardModule \u00b6 class AdminDashboardModule : KAbstractModule Installs default Admin Dashboard that runs at multibound DashboardHomeUrl Each Misk included tab in dashboard is installed with the respective: Multibindings for API endpoints Multibindings for Dashboard Tab registration WebTabResourceModule that configures location of the tab compiled web code (classpath and web proxy) To add tabs to the Misk Admin Dashboard, bind the DashboardTab with the Dashboard Annotation AdminDashboard . Tabs are then included in the admin dashboard menu grouping according to the DashboardTab .category field and sorting by DashboardTab .name Constructors \u00b6 Name Summary <init> AdminDashboardModule(isDevelopment: Boolean ) Installs default Admin Dashboard that runs at multibound DashboardHomeUrl Functions \u00b6 Name Summary configure fun configure(): Unit","title":"AdminDashboardModule - Misk"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/index.html#admindashboardmodule","text":"class AdminDashboardModule : KAbstractModule Installs default Admin Dashboard that runs at multibound DashboardHomeUrl Each Misk included tab in dashboard is installed with the respective: Multibindings for API endpoints Multibindings for Dashboard Tab registration WebTabResourceModule that configures location of the tab compiled web code (classpath and web proxy) To add tabs to the Misk Admin Dashboard, bind the DashboardTab with the Dashboard Annotation AdminDashboard . Tabs are then included in the admin dashboard menu grouping according to the DashboardTab .category field and sorting by DashboardTab .name","title":"AdminDashboardModule"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/index.html#constructors","text":"Name Summary <init> AdminDashboardModule(isDevelopment: Boolean ) Installs default Admin Dashboard that runs at multibound DashboardHomeUrl","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/-init-.html","text":"misk / misk.web.dashboard / AdminDashboardModule / <init> <init> \u00b6 AdminDashboardModule(isDevelopment: Boolean ) Installs default Admin Dashboard that runs at multibound DashboardHomeUrl Each Misk included tab in dashboard is installed with the respective: Multibindings for API endpoints Multibindings for Dashboard Tab registration WebTabResourceModule that configures location of the tab compiled web code (classpath and web proxy) To add tabs to the Misk Admin Dashboard, bind the DashboardTab with the Dashboard Annotation AdminDashboard . Tabs are then included in the admin dashboard menu grouping according to the DashboardTab .category field and sorting by DashboardTab .name","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/-init-.html#init","text":"AdminDashboardModule(isDevelopment: Boolean ) Installs default Admin Dashboard that runs at multibound DashboardHomeUrl Each Misk included tab in dashboard is installed with the respective: Multibindings for API endpoints Multibindings for Dashboard Tab registration WebTabResourceModule that configures location of the tab compiled web code (classpath and web proxy) To add tabs to the Misk Admin Dashboard, bind the DashboardTab with the Dashboard Annotation AdminDashboard . Tabs are then included in the admin dashboard menu grouping according to the DashboardTab .category field and sorting by DashboardTab .name","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/configure.html","text":"misk / misk.web.dashboard / AdminDashboardModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/index.html","text":"misk / misk.web.dashboard / AdminDashboardTestingModule AdminDashboardTestingModule \u00b6 class AdminDashboardTestingModule : KAbstractModule Constructors \u00b6 Name Summary <init> AdminDashboardTestingModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"AdminDashboardTestingModule - Misk"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/index.html#admindashboardtestingmodule","text":"class AdminDashboardTestingModule : KAbstractModule","title":"AdminDashboardTestingModule"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/index.html#constructors","text":"Name Summary <init> AdminDashboardTestingModule()","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/-init-.html","text":"misk / misk.web.dashboard / AdminDashboardTestingModule / <init> <init> \u00b6 AdminDashboardTestingModule()","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/-init-.html#init","text":"AdminDashboardTestingModule()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/configure.html","text":"misk / misk.web.dashboard / AdminDashboardTestingModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web.dashboard/-admin-dashboard-testing-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/index.html","text":"misk / misk.web.dashboard / ConfigDashboardTabModule ConfigDashboardTabModule \u00b6 class ConfigDashboardTabModule : KAbstractModule Installs Config tab for the Misk Admin Dashboard The Config tab shows the raw config inputs and the merged runtime config for a given service If you have config parameters that include secrets, you should NOT install this tab because the secrets will be visible at runtime in the admin dashboard. TODO There is insufficient secrets redaction that doesn\u2019t allow flexibility in secret names when redaction is run Constructors \u00b6 Name Summary <init> ConfigDashboardTabModule(isDevelopment: Boolean ) Installs Config tab for the Misk Admin Dashboard Functions \u00b6 Name Summary configure fun configure(): Unit","title":"ConfigDashboardTabModule - Misk"},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/index.html#configdashboardtabmodule","text":"class ConfigDashboardTabModule : KAbstractModule Installs Config tab for the Misk Admin Dashboard The Config tab shows the raw config inputs and the merged runtime config for a given service If you have config parameters that include secrets, you should NOT install this tab because the secrets will be visible at runtime in the admin dashboard. TODO There is insufficient secrets redaction that doesn\u2019t allow flexibility in secret names when redaction is run","title":"ConfigDashboardTabModule"},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/index.html#constructors","text":"Name Summary <init> ConfigDashboardTabModule(isDevelopment: Boolean ) Installs Config tab for the Misk Admin Dashboard","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/-init-.html","text":"misk / misk.web.dashboard / ConfigDashboardTabModule / <init> <init> \u00b6 ConfigDashboardTabModule(isDevelopment: Boolean ) Installs Config tab for the Misk Admin Dashboard The Config tab shows the raw config inputs and the merged runtime config for a given service If you have config parameters that include secrets, you should NOT install this tab because the secrets will be visible at runtime in the admin dashboard. TODO There is insufficient secrets redaction that doesn\u2019t allow flexibility in secret names when redaction is run","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/-init-.html#init","text":"ConfigDashboardTabModule(isDevelopment: Boolean ) Installs Config tab for the Misk Admin Dashboard The Config tab shows the raw config inputs and the merged runtime config for a given service If you have config parameters that include secrets, you should NOT install this tab because the secrets will be visible at runtime in the admin dashboard. TODO There is insufficient secrets redaction that doesn\u2019t allow flexibility in secret names when redaction is run","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/configure.html","text":"misk / misk.web.dashboard / ConfigDashboardTabModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web.dashboard/-config-dashboard-tab-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/index.html","text":"misk / misk.web.dashboard / DashboardHomeUrl DashboardHomeUrl \u00b6 data class DashboardHomeUrl : ValidWebEntry Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard Constructors \u00b6 Name Summary <init> DashboardHomeUrl(dashboard_slug: String , url: String ) Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard Properties \u00b6 Name Summary dashboard_slug val dashboard_slug: String url val url: String Inherited Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"DashboardHomeUrl - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/index.html#dashboardhomeurl","text":"data class DashboardHomeUrl : ValidWebEntry Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard","title":"DashboardHomeUrl"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/index.html#constructors","text":"Name Summary <init> DashboardHomeUrl(dashboard_slug: String , url: String ) Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/index.html#properties","text":"Name Summary dashboard_slug val dashboard_slug: String url val url: String","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/index.html#inherited-properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/-init-.html","text":"misk / misk.web.dashboard / DashboardHomeUrl / <init> <init> \u00b6 DashboardHomeUrl(dashboard_slug: String , url: String ) Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/-init-.html#init","text":"DashboardHomeUrl(dashboard_slug: String , url: String ) Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/dashboard_slug.html","text":"misk / misk.web.dashboard / DashboardHomeUrl / dashboard_slug dashboard_slug \u00b6 val dashboard_slug: String","title":"dashboard_slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/dashboard_slug.html#dashboard_slug","text":"val dashboard_slug: String","title":"dashboard_slug"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/url.html","text":"misk / misk.web.dashboard / DashboardHomeUrl / url url \u00b6 val url: String","title":"url - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-home-url/url.html#url","text":"val url: String","title":"url"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/index.html","text":"misk / misk.web.dashboard / DashboardModule DashboardModule \u00b6 class DashboardModule : KAbstractModule Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps Constructors \u00b6 Name Summary <init> DashboardModule() Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps Functions \u00b6 Name Summary configure fun configure(): Unit","title":"DashboardModule - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/index.html#dashboardmodule","text":"class DashboardModule : KAbstractModule Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps","title":"DashboardModule"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/index.html#constructors","text":"Name Summary <init> DashboardModule() Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/-init-.html","text":"misk / misk.web.dashboard / DashboardModule / <init> <init> \u00b6 DashboardModule() Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/-init-.html#init","text":"DashboardModule() Support Misk-Web Dashboards including the Misk AdminDashboard and service specific front end apps","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/configure.html","text":"misk / misk.web.dashboard / DashboardModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/index.html","text":"misk / misk.web.dashboard / DashboardNavbarItem DashboardNavbarItem \u00b6 data class DashboardNavbarItem : ValidWebEntry A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu Constructors \u00b6 Name Summary <init> DashboardNavbarItem(dashboard_slug: String , item: String , order: Int ) A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu Properties \u00b6 Name Summary dashboard_slug val dashboard_slug: String item val item: String order val order: Int Inherited Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"DashboardNavbarItem - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/index.html#dashboardnavbaritem","text":"data class DashboardNavbarItem : ValidWebEntry A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu","title":"DashboardNavbarItem"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/index.html#constructors","text":"Name Summary <init> DashboardNavbarItem(dashboard_slug: String , item: String , order: Int ) A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/index.html#properties","text":"Name Summary dashboard_slug val dashboard_slug: String item val item: String order val order: Int","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/index.html#inherited-properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/-init-.html","text":"misk / misk.web.dashboard / DashboardNavbarItem / <init> <init> \u00b6 DashboardNavbarItem(dashboard_slug: String , item: String , order: Int ) A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/-init-.html#init","text":"DashboardNavbarItem(dashboard_slug: String , item: String , order: Int ) A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/dashboard_slug.html","text":"misk / misk.web.dashboard / DashboardNavbarItem / dashboard_slug dashboard_slug \u00b6 val dashboard_slug: String","title":"dashboard_slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/dashboard_slug.html#dashboard_slug","text":"val dashboard_slug: String","title":"dashboard_slug"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/item.html","text":"misk / misk.web.dashboard / DashboardNavbarItem / item item \u00b6 val item: String","title":"item - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/item.html#item","text":"val item: String","title":"item"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/order.html","text":"misk / misk.web.dashboard / DashboardNavbarItem / order order \u00b6 val order: Int","title":"order - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-item/order.html#order","text":"val order: Int","title":"order"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/index.html","text":"misk / misk.web.dashboard / DashboardNavbarStatus DashboardNavbarStatus \u00b6 data class DashboardNavbarStatus : ValidWebEntry Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard Constructors \u00b6 Name Summary <init> DashboardNavbarStatus(dashboard_slug: String , status: String ) Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard Properties \u00b6 Name Summary dashboard_slug val dashboard_slug: String status val status: String Inherited Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"DashboardNavbarStatus - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/index.html#dashboardnavbarstatus","text":"data class DashboardNavbarStatus : ValidWebEntry Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard","title":"DashboardNavbarStatus"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/index.html#constructors","text":"Name Summary <init> DashboardNavbarStatus(dashboard_slug: String , status: String ) Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/index.html#properties","text":"Name Summary dashboard_slug val dashboard_slug: String status val status: String","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/index.html#inherited-properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/-init-.html","text":"misk / misk.web.dashboard / DashboardNavbarStatus / <init> <init> \u00b6 DashboardNavbarStatus(dashboard_slug: String , status: String ) Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/-init-.html#init","text":"DashboardNavbarStatus(dashboard_slug: String , status: String ) Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/dashboard_slug.html","text":"misk / misk.web.dashboard / DashboardNavbarStatus / dashboard_slug dashboard_slug \u00b6 val dashboard_slug: String","title":"dashboard_slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/dashboard_slug.html#dashboard_slug","text":"val dashboard_slug: String","title":"dashboard_slug"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/status.html","text":"misk / misk.web.dashboard / DashboardNavbarStatus / status status \u00b6 val status: String","title":"status - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-navbar-status/status.html#status","text":"val status: String","title":"status"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/index.html","text":"misk / misk.web.dashboard / DashboardTab DashboardTab \u00b6 class DashboardTab : WebTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu Constructors \u00b6 Name Summary <init> DashboardTab(slug: String , url_path_prefix: String , dashboard_slug: String , name: String , category: String = \"\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()) A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu Properties \u00b6 Name Summary category val category: String A title case category used to group tabs in the dashboard menu dashboard_slug val dashboard_slug: String A slug that identifies which dashboard the tab is installed to, generated from a slugified Dashboard Annotation class simple name name val name: String A title case name used in the dashboard menu for the link to the tab Inherited Properties \u00b6 Name Summary capabilities val capabilities: Set < String > services val services: Set < String >","title":"DashboardTab - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/index.html#dashboardtab","text":"class DashboardTab : WebTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu","title":"DashboardTab"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/index.html#constructors","text":"Name Summary <init> DashboardTab(slug: String , url_path_prefix: String , dashboard_slug: String , name: String , category: String = \"\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()) A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/index.html#properties","text":"Name Summary category val category: String A title case category used to group tabs in the dashboard menu dashboard_slug val dashboard_slug: String A slug that identifies which dashboard the tab is installed to, generated from a slugified Dashboard Annotation class simple name name val name: String A title case name used in the dashboard menu for the link to the tab","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/index.html#inherited-properties","text":"Name Summary capabilities val capabilities: Set < String > services val services: Set < String >","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/-init-.html","text":"misk / misk.web.dashboard / DashboardTab / <init> <init> \u00b6 DashboardTab(slug: String , url_path_prefix: String , dashboard_slug: String , name: String , category: String = \"\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()) A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/-init-.html#init","text":"DashboardTab(slug: String , url_path_prefix: String , dashboard_slug: String , name: String , category: String = \"\", capabilities: Set < String > = setOf(), services: Set < String > = setOf()) A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/category.html","text":"misk / misk.web.dashboard / DashboardTab / category category \u00b6 val category: String A title case category used to group tabs in the dashboard menu Property \u00b6 category - A title case category used to group tabs in the dashboard menu","title":"category - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/category.html#category","text":"val category: String A title case category used to group tabs in the dashboard menu","title":"category"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/category.html#property","text":"category - A title case category used to group tabs in the dashboard menu","title":"Property"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/dashboard_slug.html","text":"misk / misk.web.dashboard / DashboardTab / dashboard_slug dashboard_slug \u00b6 val dashboard_slug: String A slug that identifies which dashboard the tab is installed to, generated from a slugified Dashboard Annotation class simple name Property \u00b6 dashboard_slug - A slug that identifies which dashboard the tab is installed to, generated from a slugified Dashboard Annotation class simple name","title":"dashboard_slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/dashboard_slug.html#dashboard_slug","text":"val dashboard_slug: String A slug that identifies which dashboard the tab is installed to, generated from a slugified Dashboard Annotation class simple name","title":"dashboard_slug"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/dashboard_slug.html#property","text":"dashboard_slug - A slug that identifies which dashboard the tab is installed to, generated from a slugified Dashboard Annotation class simple name","title":"Property"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/name.html","text":"misk / misk.web.dashboard / DashboardTab / name name \u00b6 val name: String A title case name used in the dashboard menu for the link to the tab Property \u00b6 name - A title case name used in the dashboard menu for the link to the tab","title":"name - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/name.html#name","text":"val name: String A title case name used in the dashboard menu for the link to the tab","title":"name"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab/name.html#property","text":"name - A title case name used in the dashboard menu for the link to the tab","title":"Property"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/index.html","text":"misk / misk.web.dashboard / DashboardTabProvider DashboardTabProvider \u00b6 class DashboardTabProvider : Provider< DashboardTab > Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry Constructors \u00b6 Name Summary <init> DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", dashboard_slug: String , accessAnnotation: KClass <out Annotation >? = null, capabilities: Set < String > = setOf(), services: Set < String > = setOf()) Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry Properties \u00b6 Name Summary accessAnnotation val accessAnnotation: KClass <out Annotation >? accessAnnotationEntries lateinit var accessAnnotationEntries: List < AccessAnnotationEntry > capabilities val capabilities: Set < String > category val category: String dashboard_slug val dashboard_slug: String name val name: String services val services: Set < String > slug val slug: String url_path_prefix val url_path_prefix: String Functions \u00b6 Name Summary get fun get(): DashboardTab","title":"DashboardTabProvider - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/index.html#dashboardtabprovider","text":"class DashboardTabProvider : Provider< DashboardTab > Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry","title":"DashboardTabProvider"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/index.html#constructors","text":"Name Summary <init> DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", dashboard_slug: String , accessAnnotation: KClass <out Annotation >? = null, capabilities: Set < String > = setOf(), services: Set < String > = setOf()) Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/index.html#properties","text":"Name Summary accessAnnotation val accessAnnotation: KClass <out Annotation >? accessAnnotationEntries lateinit var accessAnnotationEntries: List < AccessAnnotationEntry > capabilities val capabilities: Set < String > category val category: String dashboard_slug val dashboard_slug: String name val name: String services val services: Set < String > slug val slug: String url_path_prefix val url_path_prefix: String","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/index.html#functions","text":"Name Summary get fun get(): DashboardTab","title":"Functions"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/-init-.html","text":"misk / misk.web.dashboard / DashboardTabProvider / <init> <init> \u00b6 DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", dashboard_slug: String , accessAnnotation: KClass <out Annotation >? = null, capabilities: Set < String > = setOf(), services: Set < String > = setOf()) Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/-init-.html#init","text":"DashboardTabProvider(slug: String , url_path_prefix: String , name: String , category: String = \"Admin\", dashboard_slug: String , accessAnnotation: KClass <out Annotation >? = null, capabilities: Set < String > = setOf(), services: Set < String > = setOf()) Sets the tab\u2019s authentication capabilities/services by the multibound AccessAnnotationEntry","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/access-annotation-entries.html","text":"misk / misk.web.dashboard / DashboardTabProvider / accessAnnotationEntries accessAnnotationEntries \u00b6 lateinit var accessAnnotationEntries: List < AccessAnnotationEntry >","title":"accessAnnotationEntries - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/access-annotation-entries.html#accessannotationentries","text":"lateinit var accessAnnotationEntries: List < AccessAnnotationEntry >","title":"accessAnnotationEntries"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/access-annotation.html","text":"misk / misk.web.dashboard / DashboardTabProvider / accessAnnotation accessAnnotation \u00b6 val accessAnnotation: KClass <out Annotation >?","title":"accessAnnotation - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/access-annotation.html#accessannotation","text":"val accessAnnotation: KClass <out Annotation >?","title":"accessAnnotation"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/capabilities.html","text":"misk / misk.web.dashboard / DashboardTabProvider / capabilities capabilities \u00b6 val capabilities: Set < String >","title":"capabilities - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/capabilities.html#capabilities","text":"val capabilities: Set < String >","title":"capabilities"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/category.html","text":"misk / misk.web.dashboard / DashboardTabProvider / category category \u00b6 val category: String","title":"category - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/category.html#category","text":"val category: String","title":"category"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/dashboard_slug.html","text":"misk / misk.web.dashboard / DashboardTabProvider / dashboard_slug dashboard_slug \u00b6 val dashboard_slug: String","title":"dashboard_slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/dashboard_slug.html#dashboard_slug","text":"val dashboard_slug: String","title":"dashboard_slug"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/get.html","text":"misk / misk.web.dashboard / DashboardTabProvider / get get \u00b6 fun get(): DashboardTab","title":"get - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/get.html#get","text":"fun get(): DashboardTab","title":"get"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/name.html","text":"misk / misk.web.dashboard / DashboardTabProvider / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/services.html","text":"misk / misk.web.dashboard / DashboardTabProvider / services services \u00b6 val services: Set < String >","title":"services - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/services.html#services","text":"val services: Set < String >","title":"services"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/slug.html","text":"misk / misk.web.dashboard / DashboardTabProvider / slug slug \u00b6 val slug: String","title":"slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/slug.html#slug","text":"val slug: String","title":"slug"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/url_path_prefix.html","text":"misk / misk.web.dashboard / DashboardTabProvider / url_path_prefix url_path_prefix \u00b6 val url_path_prefix: String","title":"url_path_prefix - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-tab-provider/url_path_prefix.html#url_path_prefix","text":"val url_path_prefix: String","title":"url_path_prefix"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/index.html","text":"misk / misk.web.dashboard / DashboardTheme DashboardTheme \u00b6 data class DashboardTheme Per dashboard customization of the navbar theme Constructors \u00b6 Name Summary <init> DashboardTheme(dashboard_slug: String , theme: MiskWebTheme ) Per dashboard customization of the navbar theme Properties \u00b6 Name Summary dashboard_slug val dashboard_slug: String theme val theme: MiskWebTheme","title":"DashboardTheme - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/index.html#dashboardtheme","text":"data class DashboardTheme Per dashboard customization of the navbar theme","title":"DashboardTheme"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/index.html#constructors","text":"Name Summary <init> DashboardTheme(dashboard_slug: String , theme: MiskWebTheme ) Per dashboard customization of the navbar theme","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/index.html#properties","text":"Name Summary dashboard_slug val dashboard_slug: String theme val theme: MiskWebTheme","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/-init-.html","text":"misk / misk.web.dashboard / DashboardTheme / <init> <init> \u00b6 DashboardTheme(dashboard_slug: String , theme: MiskWebTheme ) Per dashboard customization of the navbar theme","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/-init-.html#init","text":"DashboardTheme(dashboard_slug: String , theme: MiskWebTheme ) Per dashboard customization of the navbar theme","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/dashboard_slug.html","text":"misk / misk.web.dashboard / DashboardTheme / dashboard_slug dashboard_slug \u00b6 val dashboard_slug: String","title":"dashboard_slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/dashboard_slug.html#dashboard_slug","text":"val dashboard_slug: String","title":"dashboard_slug"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/theme.html","text":"misk / misk.web.dashboard / DashboardTheme / theme theme \u00b6 val theme: MiskWebTheme","title":"theme - Misk"},{"location":"0.x/misk/misk.web.dashboard/-dashboard-theme/theme.html#theme","text":"val theme: MiskWebTheme","title":"theme"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/index.html","text":"misk / misk.web.dashboard / EnvironmentToColorLookup EnvironmentToColorLookup \u00b6 data class EnvironmentToColorLookup Constructors \u00b6 Name Summary <init> EnvironmentToColorLookup(default: String , DEVELOPMENT: String , TESTING: String , STAGING: String , PRODUCTION: String ) Properties \u00b6 Name Summary default val default: String DEVELOPMENT val DEVELOPMENT: String PRODUCTION val PRODUCTION: String STAGING val STAGING: String TESTING val TESTING: String","title":"EnvironmentToColorLookup - Misk"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/index.html#environmenttocolorlookup","text":"data class EnvironmentToColorLookup","title":"EnvironmentToColorLookup"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/index.html#constructors","text":"Name Summary <init> EnvironmentToColorLookup(default: String , DEVELOPMENT: String , TESTING: String , STAGING: String , PRODUCTION: String )","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/index.html#properties","text":"Name Summary default val default: String DEVELOPMENT val DEVELOPMENT: String PRODUCTION val PRODUCTION: String STAGING val STAGING: String TESTING val TESTING: String","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-d-e-v-e-l-o-p-m-e-n-t.html","text":"misk / misk.web.dashboard / EnvironmentToColorLookup / DEVELOPMENT DEVELOPMENT \u00b6 val DEVELOPMENT: String","title":"DEVELOPMENT - Misk"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-d-e-v-e-l-o-p-m-e-n-t.html#development","text":"val DEVELOPMENT: String","title":"DEVELOPMENT"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-init-.html","text":"misk / misk.web.dashboard / EnvironmentToColorLookup / <init> <init> \u00b6 EnvironmentToColorLookup(default: String , DEVELOPMENT: String , TESTING: String , STAGING: String , PRODUCTION: String )","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-init-.html#init","text":"EnvironmentToColorLookup(default: String , DEVELOPMENT: String , TESTING: String , STAGING: String , PRODUCTION: String )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-p-r-o-d-u-c-t-i-o-n.html","text":"misk / misk.web.dashboard / EnvironmentToColorLookup / PRODUCTION PRODUCTION \u00b6 val PRODUCTION: String","title":"PRODUCTION - Misk"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-p-r-o-d-u-c-t-i-o-n.html#production","text":"val PRODUCTION: String","title":"PRODUCTION"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-s-t-a-g-i-n-g.html","text":"misk / misk.web.dashboard / EnvironmentToColorLookup / STAGING STAGING \u00b6 val STAGING: String","title":"STAGING - Misk"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-s-t-a-g-i-n-g.html#staging","text":"val STAGING: String","title":"STAGING"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-t-e-s-t-i-n-g.html","text":"misk / misk.web.dashboard / EnvironmentToColorLookup / TESTING TESTING \u00b6 val TESTING: String","title":"TESTING - Misk"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/-t-e-s-t-i-n-g.html#testing","text":"val TESTING: String","title":"TESTING"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/default.html","text":"misk / misk.web.dashboard / EnvironmentToColorLookup / default default \u00b6 val default: String","title":"default - Misk"},{"location":"0.x/misk/misk.web.dashboard/-environment-to-color-lookup/default.html#default","text":"val default: String","title":"default"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/index.html","text":"misk / misk.web.dashboard / MiskWebColor MiskWebColor \u00b6 enum class MiskWebColor Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts Enum Values \u00b6 Name Summary RED ORANGE YELLOW LIME GREEN TEAL BLUE INDIGO PURPLE PLUM ROSE CHARCOAL TEXT GRAY ACCENT WHITE CADET SILVER PLATINUM Properties \u00b6 Name Summary hexColor val hexColor: String","title":"MiskWebColor - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/index.html#miskwebcolor","text":"enum class MiskWebColor Matches the Misk-Web Color enum in @misk/core/src/utilities/css.ts","title":"MiskWebColor"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/index.html#enum-values","text":"Name Summary RED ORANGE YELLOW LIME GREEN TEAL BLUE INDIGO PURPLE PLUM ROSE CHARCOAL TEXT GRAY ACCENT WHITE CADET SILVER PLATINUM","title":"Enum Values"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/index.html#properties","text":"Name Summary hexColor val hexColor: String","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-a-c-c-e-n-t.html","text":"misk / misk.web.dashboard / MiskWebColor / ACCENT ACCENT \u00b6 ACCENT Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"ACCENT - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-a-c-c-e-n-t.html#accent","text":"ACCENT","title":"ACCENT"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-a-c-c-e-n-t.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-b-l-u-e.html","text":"misk / misk.web.dashboard / MiskWebColor / BLUE BLUE \u00b6 BLUE Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"BLUE - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-b-l-u-e.html#blue","text":"BLUE","title":"BLUE"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-b-l-u-e.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-c-a-d-e-t.html","text":"misk / misk.web.dashboard / MiskWebColor / CADET CADET \u00b6 CADET Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"CADET - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-c-a-d-e-t.html#cadet","text":"CADET","title":"CADET"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-c-a-d-e-t.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-c-h-a-r-c-o-a-l.html","text":"misk / misk.web.dashboard / MiskWebColor / CHARCOAL CHARCOAL \u00b6 CHARCOAL Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"CHARCOAL - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-c-h-a-r-c-o-a-l.html#charcoal","text":"CHARCOAL","title":"CHARCOAL"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-c-h-a-r-c-o-a-l.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-g-r-a-y.html","text":"misk / misk.web.dashboard / MiskWebColor / GRAY GRAY \u00b6 GRAY Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"GRAY - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-g-r-a-y.html#gray","text":"GRAY","title":"GRAY"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-g-r-a-y.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-g-r-e-e-n.html","text":"misk / misk.web.dashboard / MiskWebColor / GREEN GREEN \u00b6 GREEN Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"GREEN - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-g-r-e-e-n.html#green","text":"GREEN","title":"GREEN"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-g-r-e-e-n.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-i-n-d-i-g-o.html","text":"misk / misk.web.dashboard / MiskWebColor / INDIGO INDIGO \u00b6 INDIGO Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"INDIGO - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-i-n-d-i-g-o.html#indigo","text":"INDIGO","title":"INDIGO"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-i-n-d-i-g-o.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-l-i-m-e.html","text":"misk / misk.web.dashboard / MiskWebColor / LIME LIME \u00b6 LIME Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"LIME - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-l-i-m-e.html#lime","text":"LIME","title":"LIME"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-l-i-m-e.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-o-r-a-n-g-e.html","text":"misk / misk.web.dashboard / MiskWebColor / ORANGE ORANGE \u00b6 ORANGE Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"ORANGE - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-o-r-a-n-g-e.html#orange","text":"ORANGE","title":"ORANGE"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-o-r-a-n-g-e.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-l-a-t-i-n-u-m.html","text":"misk / misk.web.dashboard / MiskWebColor / PLATINUM PLATINUM \u00b6 PLATINUM Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"PLATINUM - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-l-a-t-i-n-u-m.html#platinum","text":"PLATINUM","title":"PLATINUM"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-l-a-t-i-n-u-m.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-l-u-m.html","text":"misk / misk.web.dashboard / MiskWebColor / PLUM PLUM \u00b6 PLUM Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"PLUM - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-l-u-m.html#plum","text":"PLUM","title":"PLUM"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-l-u-m.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-u-r-p-l-e.html","text":"misk / misk.web.dashboard / MiskWebColor / PURPLE PURPLE \u00b6 PURPLE Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"PURPLE - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-u-r-p-l-e.html#purple","text":"PURPLE","title":"PURPLE"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-p-u-r-p-l-e.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-r-e-d.html","text":"misk / misk.web.dashboard / MiskWebColor / RED RED \u00b6 RED Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"RED - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-r-e-d.html#red","text":"RED","title":"RED"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-r-e-d.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-r-o-s-e.html","text":"misk / misk.web.dashboard / MiskWebColor / ROSE ROSE \u00b6 ROSE Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"ROSE - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-r-o-s-e.html#rose","text":"ROSE","title":"ROSE"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-r-o-s-e.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-s-i-l-v-e-r.html","text":"misk / misk.web.dashboard / MiskWebColor / SILVER SILVER \u00b6 SILVER Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"SILVER - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-s-i-l-v-e-r.html#silver","text":"SILVER","title":"SILVER"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-s-i-l-v-e-r.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-t-e-a-l.html","text":"misk / misk.web.dashboard / MiskWebColor / TEAL TEAL \u00b6 TEAL Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"TEAL - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-t-e-a-l.html#teal","text":"TEAL","title":"TEAL"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-t-e-a-l.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-t-e-x-t.html","text":"misk / misk.web.dashboard / MiskWebColor / TEXT TEXT \u00b6 TEXT Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"TEXT - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-t-e-x-t.html#text","text":"TEXT","title":"TEXT"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-t-e-x-t.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-w-h-i-t-e.html","text":"misk / misk.web.dashboard / MiskWebColor / WHITE WHITE \u00b6 WHITE Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"WHITE - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-w-h-i-t-e.html#white","text":"WHITE","title":"WHITE"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-w-h-i-t-e.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-y-e-l-l-o-w.html","text":"misk / misk.web.dashboard / MiskWebColor / YELLOW YELLOW \u00b6 YELLOW Inherited Properties \u00b6 Name Summary hexColor val hexColor: String","title":"YELLOW - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-y-e-l-l-o-w.html#yellow","text":"YELLOW","title":"YELLOW"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/-y-e-l-l-o-w.html#inherited-properties","text":"Name Summary hexColor val hexColor: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/hex-color.html","text":"misk / misk.web.dashboard / MiskWebColor / hexColor hexColor \u00b6 val hexColor: String","title":"hexColor - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-color/hex-color.html#hexcolor","text":"val hexColor: String","title":"hexColor"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/index.html","text":"misk / misk.web.dashboard / MiskWebTheme MiskWebTheme \u00b6 data class MiskWebTheme Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts Constructors \u00b6 Name Summary <init> MiskWebTheme(bannerLinkHover: String , bannerText: String , button: String , buttonHover: String , categoryText: String , environmentToColor: EnvironmentToColorLookup , navbarBackground: String , navbarLinkHover: String , navbarText: String ) Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts Properties \u00b6 Name Summary bannerLinkHover val bannerLinkHover: String bannerText val bannerText: String button val button: String buttonHover val buttonHover: String categoryText val categoryText: String environmentToColor val environmentToColor: EnvironmentToColorLookup navbarBackground val navbarBackground: String navbarLinkHover val navbarLinkHover: String navbarText val navbarText: String Companion Object Properties \u00b6 Name Summary DEFAULT_THEME val DEFAULT_THEME: MiskWebTheme","title":"MiskWebTheme - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/index.html#miskwebtheme","text":"data class MiskWebTheme Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts","title":"MiskWebTheme"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/index.html#constructors","text":"Name Summary <init> MiskWebTheme(bannerLinkHover: String , bannerText: String , button: String , buttonHover: String , categoryText: String , environmentToColor: EnvironmentToColorLookup , navbarBackground: String , navbarLinkHover: String , navbarText: String ) Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/index.html#properties","text":"Name Summary bannerLinkHover val bannerLinkHover: String bannerText val bannerText: String button val button: String buttonHover val buttonHover: String categoryText val categoryText: String environmentToColor val environmentToColor: EnvironmentToColorLookup navbarBackground val navbarBackground: String navbarLinkHover val navbarLinkHover: String navbarText val navbarText: String","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/index.html#companion-object-properties","text":"Name Summary DEFAULT_THEME val DEFAULT_THEME: MiskWebTheme","title":"Companion Object Properties"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/-d-e-f-a-u-l-t_-t-h-e-m-e.html","text":"misk / misk.web.dashboard / MiskWebTheme / DEFAULT_THEME DEFAULT_THEME \u00b6 val DEFAULT_THEME: MiskWebTheme","title":"DEFAULT_THEME - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/-d-e-f-a-u-l-t_-t-h-e-m-e.html#default_theme","text":"val DEFAULT_THEME: MiskWebTheme","title":"DEFAULT_THEME"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/-init-.html","text":"misk / misk.web.dashboard / MiskWebTheme / <init> <init> \u00b6 MiskWebTheme(bannerLinkHover: String , bannerText: String , button: String , buttonHover: String , categoryText: String , environmentToColor: EnvironmentToColorLookup , navbarBackground: String , navbarLinkHover: String , navbarText: String ) Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/-init-.html#init","text":"MiskWebTheme(bannerLinkHover: String , bannerText: String , button: String , buttonHover: String , categoryText: String , environmentToColor: EnvironmentToColorLookup , navbarBackground: String , navbarLinkHover: String , navbarText: String ) Matches the Misk-Web Theme interface in @misk/core/src/utilities/theme.ts","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/banner-link-hover.html","text":"misk / misk.web.dashboard / MiskWebTheme / bannerLinkHover bannerLinkHover \u00b6 val bannerLinkHover: String","title":"bannerLinkHover - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/banner-link-hover.html#bannerlinkhover","text":"val bannerLinkHover: String","title":"bannerLinkHover"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/banner-text.html","text":"misk / misk.web.dashboard / MiskWebTheme / bannerText bannerText \u00b6 val bannerText: String","title":"bannerText - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/banner-text.html#bannertext","text":"val bannerText: String","title":"bannerText"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/button-hover.html","text":"misk / misk.web.dashboard / MiskWebTheme / buttonHover buttonHover \u00b6 val buttonHover: String","title":"buttonHover - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/button-hover.html#buttonhover","text":"val buttonHover: String","title":"buttonHover"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/button.html","text":"misk / misk.web.dashboard / MiskWebTheme / button button \u00b6 val button: String","title":"button - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/button.html#button","text":"val button: String","title":"button"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/category-text.html","text":"misk / misk.web.dashboard / MiskWebTheme / categoryText categoryText \u00b6 val categoryText: String","title":"categoryText - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/category-text.html#categorytext","text":"val categoryText: String","title":"categoryText"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/environment-to-color.html","text":"misk / misk.web.dashboard / MiskWebTheme / environmentToColor environmentToColor \u00b6 val environmentToColor: EnvironmentToColorLookup","title":"environmentToColor - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/environment-to-color.html#environmenttocolor","text":"val environmentToColor: EnvironmentToColorLookup","title":"environmentToColor"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/navbar-background.html","text":"misk / misk.web.dashboard / MiskWebTheme / navbarBackground navbarBackground \u00b6 val navbarBackground: String","title":"navbarBackground - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/navbar-background.html#navbarbackground","text":"val navbarBackground: String","title":"navbarBackground"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/navbar-link-hover.html","text":"misk / misk.web.dashboard / MiskWebTheme / navbarLinkHover navbarLinkHover \u00b6 val navbarLinkHover: String","title":"navbarLinkHover - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/navbar-link-hover.html#navbarlinkhover","text":"val navbarLinkHover: String","title":"navbarLinkHover"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/navbar-text.html","text":"misk / misk.web.dashboard / MiskWebTheme / navbarText navbarText \u00b6 val navbarText: String","title":"navbarText - Misk"},{"location":"0.x/misk/misk.web.dashboard/-misk-web-theme/navbar-text.html#navbartext","text":"val navbarText: String","title":"navbarText"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/index.html","text":"misk / misk.web.dashboard / ValidWebEntry ValidWebEntry \u00b6 abstract class ValidWebEntry Constructors \u00b6 Name Summary <init> ValidWebEntry(slug: String = \"\", url_path_prefix: String = \"/\") Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String Companion Object Functions \u00b6 Name Summary slugify fun <A : Annotation > slugify(): String Generate a valid slug from an Annotation class fun String .slugify(): String Generate a valid slug from a String Inheritors \u00b6 Name Summary DashboardHomeUrl data class DashboardHomeUrl : ValidWebEntry Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard DashboardNavbarItem data class DashboardNavbarItem : ValidWebEntry A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu DashboardNavbarStatus data class DashboardNavbarStatus : ValidWebEntry Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard StaticResourceEntry class StaticResourceEntry : ValidWebEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : WebActionEntry class WebActionEntry : ValidWebEntry WebActionEntry WebProxyEntry class WebProxyEntry : ValidWebEntry Maps URLs requested against this server to URLs of servers to delegate to WebTab abstract class WebTab : ValidWebEntry","title":"ValidWebEntry - Misk"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/index.html#validwebentry","text":"abstract class ValidWebEntry","title":"ValidWebEntry"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/index.html#constructors","text":"Name Summary <init> ValidWebEntry(slug: String = \"\", url_path_prefix: String = \"/\")","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/index.html#properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/index.html#companion-object-functions","text":"Name Summary slugify fun <A : Annotation > slugify(): String Generate a valid slug from an Annotation class fun String .slugify(): String Generate a valid slug from a String","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/index.html#inheritors","text":"Name Summary DashboardHomeUrl data class DashboardHomeUrl : ValidWebEntry Url to link to for the home button in the dashboard navbar 1 DashboardHomeUrl should be bound per dashboard DashboardNavbarItem data class DashboardNavbarItem : ValidWebEntry A list of elements to add to the dashboard navbar Misk-Web\u2019s default navbar handles responsive layout of these items so overflow navbar items are included in the drop down menu DashboardNavbarStatus data class DashboardNavbarStatus : ValidWebEntry Banner text to show below the dashboard navbar 0 or 1 DashboardNavbarStatus should be bound per dashboard StaticResourceEntry class StaticResourceEntry : ValidWebEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : WebActionEntry class WebActionEntry : ValidWebEntry WebActionEntry WebProxyEntry class WebProxyEntry : ValidWebEntry Maps URLs requested against this server to URLs of servers to delegate to WebTab abstract class WebTab : ValidWebEntry","title":"Inheritors"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/-init-.html","text":"misk / misk.web.dashboard / ValidWebEntry / <init> <init> \u00b6 ValidWebEntry(slug: String = \"\", url_path_prefix: String = \"/\")","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/-init-.html#init","text":"ValidWebEntry(slug: String = \"\", url_path_prefix: String = \"/\")","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/slug.html","text":"misk / misk.web.dashboard / ValidWebEntry / slug slug \u00b6 val slug: String","title":"slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/slug.html#slug","text":"val slug: String","title":"slug"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/slugify.html","text":"misk / misk.web.dashboard / ValidWebEntry / slugify slugify \u00b6 inline fun <reified A : Annotation > slugify(): String Generate a valid slug from an Annotation class fun String .slugify(): String Generate a valid slug from a String","title":"slugify - Misk"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/slugify.html#slugify","text":"inline fun <reified A : Annotation > slugify(): String Generate a valid slug from an Annotation class fun String .slugify(): String Generate a valid slug from a String","title":"slugify"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/url_path_prefix.html","text":"misk / misk.web.dashboard / ValidWebEntry / url_path_prefix url_path_prefix \u00b6 val url_path_prefix: String","title":"url_path_prefix - Misk"},{"location":"0.x/misk/misk.web.dashboard/-valid-web-entry/url_path_prefix.html#url_path_prefix","text":"val url_path_prefix: String","title":"url_path_prefix"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/index.html","text":"misk / misk.web.dashboard / WebTab WebTab \u00b6 abstract class WebTab : ValidWebEntry Constructors \u00b6 Name Summary <init> WebTab(slug: String , url_path_prefix: String , capabilities: Set < String > = setOf(), services: Set < String > = setOf()) Properties \u00b6 Name Summary capabilities val capabilities: Set < String > services val services: Set < String > Inherited Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String Inheritors \u00b6 Name Summary DashboardTab class DashboardTab : WebTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu","title":"WebTab - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/index.html#webtab","text":"abstract class WebTab : ValidWebEntry","title":"WebTab"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/index.html#constructors","text":"Name Summary <init> WebTab(slug: String , url_path_prefix: String , capabilities: Set < String > = setOf(), services: Set < String > = setOf())","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/index.html#properties","text":"Name Summary capabilities val capabilities: Set < String > services val services: Set < String >","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/index.html#inherited-properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/index.html#inheritors","text":"Name Summary DashboardTab class DashboardTab : WebTab A WebTab with additional fields to bind to a specific Dashboard that has a tabs menu","title":"Inheritors"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/-init-.html","text":"misk / misk.web.dashboard / WebTab / <init> <init> \u00b6 WebTab(slug: String , url_path_prefix: String , capabilities: Set < String > = setOf(), services: Set < String > = setOf())","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-web-tab/-init-.html#init","text":"WebTab(slug: String , url_path_prefix: String , capabilities: Set < String > = setOf(), services: Set < String > = setOf())","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/capabilities.html","text":"misk / misk.web.dashboard / WebTab / capabilities capabilities \u00b6 val capabilities: Set < String >","title":"capabilities - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/capabilities.html#capabilities","text":"val capabilities: Set < String >","title":"capabilities"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/services.html","text":"misk / misk.web.dashboard / WebTab / services services \u00b6 val services: Set < String >","title":"services - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab/services.html#services","text":"val services: Set < String >","title":"services"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/index.html","text":"misk / misk.web.dashboard / WebTabResourceModule WebTabResourceModule \u00b6 class WebTabResourceModule : KAbstractModule Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) In Development environment, requests are proxied through to a local running build server. In all other environments, resource requests are served from the classpath. Constructors \u00b6 Name Summary <init> WebTabResourceModule(deployment: Deployment, slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\")``WebTabResourceModule(isDevelopment: Boolean , slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\") Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) Properties \u00b6 Name Summary resourcePath val resourcePath: String JVM path for non-Development environment static resources (includes classpath:/ prefix) slug val slug: String A unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding url_path_prefix val url_path_prefix: String URL namespace used to determine where to route requests with that url prefix By Misk-Web convention, the prefix for tabs is /_tab/{slug}/ to prevent namespace collisions with dashboard urls such as /_admin/ or /app/ since path routing is by url prefix. web_proxy_url val web_proxy_url: String a fully qualified url for the development build server (includes http:// prefix) Functions \u00b6 Name Summary configure fun configure(): Unit","title":"WebTabResourceModule - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/index.html#webtabresourcemodule","text":"class WebTabResourceModule : KAbstractModule Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) In Development environment, requests are proxied through to a local running build server. In all other environments, resource requests are served from the classpath.","title":"WebTabResourceModule"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/index.html#constructors","text":"Name Summary <init> WebTabResourceModule(deployment: Deployment, slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\")``WebTabResourceModule(isDevelopment: Boolean , slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\") Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026)","title":"Constructors"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/index.html#properties","text":"Name Summary resourcePath val resourcePath: String JVM path for non-Development environment static resources (includes classpath:/ prefix) slug val slug: String A unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding url_path_prefix val url_path_prefix: String URL namespace used to determine where to route requests with that url prefix By Misk-Web convention, the prefix for tabs is /_tab/{slug}/ to prevent namespace collisions with dashboard urls such as /_admin/ or /app/ since path routing is by url prefix. web_proxy_url val web_proxy_url: String a fully qualified url for the development build server (includes http:// prefix)","title":"Properties"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/-init-.html","text":"misk / misk.web.dashboard / WebTabResourceModule / <init> <init> \u00b6 WebTabResourceModule(deployment: Deployment, slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\")``WebTabResourceModule(isDevelopment: Boolean , slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\") Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) In Development environment, requests are proxied through to a local running build server. In all other environments, resource requests are served from the classpath.","title":" init "},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/-init-.html#init","text":"WebTabResourceModule(deployment: Deployment, slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\")``WebTabResourceModule(isDevelopment: Boolean , slug: String , web_proxy_url: String , url_path_prefix: String = \"/_tab/$slug/\", resourcePath: String = \"classpath:/web/_tab/$slug/\") Declare how to serve the resources for a WebTab (JS, HTML, CSS\u2026) In Development environment, requests are proxied through to a local running build server. In all other environments, resource requests are served from the classpath.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/configure.html","text":"misk / misk.web.dashboard / WebTabResourceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/resource-path.html","text":"misk / misk.web.dashboard / WebTabResourceModule / resourcePath resourcePath \u00b6 val resourcePath: String JVM path for non-Development environment static resources (includes classpath:/ prefix) Property \u00b6 resourcePath - JVM path for non-Development environment static resources (includes classpath:/ prefix)","title":"resourcePath - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/resource-path.html#resourcepath","text":"val resourcePath: String JVM path for non-Development environment static resources (includes classpath:/ prefix)","title":"resourcePath"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/resource-path.html#property","text":"resourcePath - JVM path for non-Development environment static resources (includes classpath:/ prefix)","title":"Property"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/slug.html","text":"misk / misk.web.dashboard / WebTabResourceModule / slug slug \u00b6 val slug: String A unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding Property \u00b6 slug - A unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding","title":"slug - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/slug.html#slug","text":"val slug: String A unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding","title":"slug"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/slug.html#property","text":"slug - A unique slug to identify the tab namespace, it must match the tab\u2019s corresponding DashboardTab multibinding","title":"Property"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/url_path_prefix.html","text":"misk / misk.web.dashboard / WebTabResourceModule / url_path_prefix url_path_prefix \u00b6 val url_path_prefix: String URL namespace used to determine where to route requests with that url prefix By Misk-Web convention, the prefix for tabs is /_tab/{slug}/ to prevent namespace collisions with dashboard urls such as /_admin/ or /app/ since path routing is by url prefix. Property \u00b6 url_path_prefix - URL namespace used to determine where to route requests with that url prefix By Misk-Web convention, the prefix for tabs is /_tab/{slug}/ to prevent namespace collisions with dashboard urls such as /_admin/ or /app/ since path routing is by url prefix.","title":"url_path_prefix - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/url_path_prefix.html#url_path_prefix","text":"val url_path_prefix: String URL namespace used to determine where to route requests with that url prefix By Misk-Web convention, the prefix for tabs is /_tab/{slug}/ to prevent namespace collisions with dashboard urls such as /_admin/ or /app/ since path routing is by url prefix.","title":"url_path_prefix"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/url_path_prefix.html#property","text":"url_path_prefix - URL namespace used to determine where to route requests with that url prefix By Misk-Web convention, the prefix for tabs is /_tab/{slug}/ to prevent namespace collisions with dashboard urls such as /_admin/ or /app/ since path routing is by url prefix.","title":"Property"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/web_proxy_url.html","text":"misk / misk.web.dashboard / WebTabResourceModule / web_proxy_url web_proxy_url \u00b6 val web_proxy_url: String a fully qualified url for the development build server (includes http:// prefix) Property \u00b6 web_proxy_url - a fully qualified url for the development build server (includes http:// prefix)","title":"web_proxy_url - Misk"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/web_proxy_url.html#web_proxy_url","text":"val web_proxy_url: String a fully qualified url for the development build server (includes http:// prefix)","title":"web_proxy_url"},{"location":"0.x/misk/misk.web.dashboard/-web-tab-resource-module/web_proxy_url.html#property","text":"web_proxy_url - a fully qualified url for the development build server (includes http:// prefix)","title":"Property"},{"location":"0.x/misk/misk.web.exceptions/index.html","text":"misk / misk.web.exceptions Package misk.web.exceptions \u00b6 Types \u00b6 Name Summary ActionExceptionLogLevelConfig data class ActionExceptionLogLevelConfig : Config Configures the log Level for an ActionException. ExceptionHandlingInterceptor class ExceptionHandlingInterceptor : NetworkInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule ExceptionMapper interface ExceptionMapper<in T : Throwable > Maps an exception to a Response ExceptionMapperModule class ExceptionMapperModule<M : ExceptionMapper < T >, in T : Throwable > : KAbstractModule Binds a Throwable to an ExceptionMapper . ExceptionMapperResolver class ExceptionMapperResolver","title":"Package misk.web.exceptions - Misk"},{"location":"0.x/misk/misk.web.exceptions/index.html#package-miskwebexceptions","text":"","title":"Package misk.web.exceptions"},{"location":"0.x/misk/misk.web.exceptions/index.html#types","text":"Name Summary ActionExceptionLogLevelConfig data class ActionExceptionLogLevelConfig : Config Configures the log Level for an ActionException. ExceptionHandlingInterceptor class ExceptionHandlingInterceptor : NetworkInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule ExceptionMapper interface ExceptionMapper<in T : Throwable > Maps an exception to a Response ExceptionMapperModule class ExceptionMapperModule<M : ExceptionMapper < T >, in T : Throwable > : KAbstractModule Binds a Throwable to an ExceptionMapper . ExceptionMapperResolver class ExceptionMapperResolver","title":"Types"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/index.html","text":"misk / misk.web.exceptions / ActionExceptionLogLevelConfig ActionExceptionLogLevelConfig \u00b6 data class ActionExceptionLogLevelConfig : Config Configures the log Level for an ActionException. Constructors \u00b6 Name Summary <init> ActionExceptionLogLevelConfig(client_error_level: Level = Level.WARN, server_error_level: Level = Level.ERROR) Configures the log Level for an ActionException. Properties \u00b6 Name Summary client_error_level val client_error_level: Level the level used for 4xx error codes server_error_level val server_error_level: Level the level used for 5xx error codes","title":"ActionExceptionLogLevelConfig - Misk"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/index.html#actionexceptionloglevelconfig","text":"data class ActionExceptionLogLevelConfig : Config Configures the log Level for an ActionException.","title":"ActionExceptionLogLevelConfig"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/index.html#constructors","text":"Name Summary <init> ActionExceptionLogLevelConfig(client_error_level: Level = Level.WARN, server_error_level: Level = Level.ERROR) Configures the log Level for an ActionException.","title":"Constructors"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/index.html#properties","text":"Name Summary client_error_level val client_error_level: Level the level used for 4xx error codes server_error_level val server_error_level: Level the level used for 5xx error codes","title":"Properties"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/-init-.html","text":"misk / misk.web.exceptions / ActionExceptionLogLevelConfig / <init> <init> \u00b6 ActionExceptionLogLevelConfig(client_error_level: Level = Level.WARN, server_error_level: Level = Level.ERROR) Configures the log Level for an ActionException.","title":" init "},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/-init-.html#init","text":"ActionExceptionLogLevelConfig(client_error_level: Level = Level.WARN, server_error_level: Level = Level.ERROR) Configures the log Level for an ActionException.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/client_error_level.html","text":"misk / misk.web.exceptions / ActionExceptionLogLevelConfig / client_error_level client_error_level \u00b6 val client_error_level: Level the level used for 4xx error codes Property \u00b6 client_error_level - the level used for 4xx error codes","title":"client_error_level - Misk"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/client_error_level.html#client_error_level","text":"val client_error_level: Level the level used for 4xx error codes","title":"client_error_level"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/client_error_level.html#property","text":"client_error_level - the level used for 4xx error codes","title":"Property"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/server_error_level.html","text":"misk / misk.web.exceptions / ActionExceptionLogLevelConfig / server_error_level server_error_level \u00b6 val server_error_level: Level the level used for 5xx error codes Property \u00b6 server_error_level - the level used for 5xx error codes","title":"server_error_level - Misk"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/server_error_level.html#server_error_level","text":"val server_error_level: Level the level used for 5xx error codes","title":"server_error_level"},{"location":"0.x/misk/misk.web.exceptions/-action-exception-log-level-config/server_error_level.html#property","text":"server_error_level - the level used for 5xx error codes","title":"Property"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/index.html","text":"misk / misk.web.exceptions / ExceptionHandlingInterceptor ExceptionHandlingInterceptor \u00b6 class ExceptionHandlingInterceptor : NetworkInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule TODO(isabel): Set the response body in a ThreadLocal to log in RequestLoggingInterceptor Types \u00b6 Name Summary Factory class Factory : NetworkInterceptor.Factory Constructors \u00b6 Name Summary <init> ExceptionHandlingInterceptor(actionName: String , mapperResolver: ExceptionMapperResolver ) Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule Functions \u00b6 Name Summary intercept fun intercept(chain: NetworkChain ): Unit","title":"ExceptionHandlingInterceptor - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/index.html#exceptionhandlinginterceptor","text":"class ExceptionHandlingInterceptor : NetworkInterceptor Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule TODO(isabel): Set the response body in a ThreadLocal to log in RequestLoggingInterceptor","title":"ExceptionHandlingInterceptor"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/index.html#types","text":"Name Summary Factory class Factory : NetworkInterceptor.Factory","title":"Types"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/index.html#constructors","text":"Name Summary <init> ExceptionHandlingInterceptor(actionName: String , mapperResolver: ExceptionMapperResolver ) Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule","title":"Constructors"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/index.html#functions","text":"Name Summary intercept fun intercept(chain: NetworkChain ): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/-init-.html","text":"misk / misk.web.exceptions / ExceptionHandlingInterceptor / <init> <init> \u00b6 ExceptionHandlingInterceptor(actionName: String , mapperResolver: ExceptionMapperResolver ) Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule TODO(isabel): Set the response body in a ThreadLocal to log in RequestLoggingInterceptor","title":" init "},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/-init-.html#init","text":"ExceptionHandlingInterceptor(actionName: String , mapperResolver: ExceptionMapperResolver ) Converts and logs application and component level dispatch exceptions into the appropriate response format. Allows application and component code to control how exceptions are represented to clients; for example by setting the status code appropriately, or by returning a specialized response format specific to the error. Components can control how exceptions are mapped by installing ExceptionMapper via the ExceptionMapperModule TODO(isabel): Set the response body in a ThreadLocal to log in RequestLoggingInterceptor","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/intercept.html","text":"misk / misk.web.exceptions / ExceptionHandlingInterceptor / intercept intercept \u00b6 fun intercept(chain: NetworkChain ): Unit Overrides NetworkInterceptor.intercept","title":"intercept - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/intercept.html#intercept","text":"fun intercept(chain: NetworkChain ): Unit Overrides NetworkInterceptor.intercept","title":"intercept"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/index.html","text":"misk / misk.web.exceptions / ExceptionHandlingInterceptor / Factory Factory \u00b6 class Factory : NetworkInterceptor.Factory Functions \u00b6 Name Summary create fun create(action: Action ): ExceptionHandlingInterceptor","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/index.html#factory","text":"class Factory : NetworkInterceptor.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/index.html#functions","text":"Name Summary create fun create(action: Action ): ExceptionHandlingInterceptor","title":"Functions"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/create.html","text":"misk / misk.web.exceptions / ExceptionHandlingInterceptor / Factory / create create \u00b6 fun create(action: Action ): ExceptionHandlingInterceptor Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-handling-interceptor/-factory/create.html#create","text":"fun create(action: Action ): ExceptionHandlingInterceptor Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/index.html","text":"misk / misk.web.exceptions / ExceptionMapper ExceptionMapper \u00b6 interface ExceptionMapper<in T : Throwable > Maps an exception to a Response Functions \u00b6 Name Summary canHandle abstract fun canHandle(th: Throwable ): Boolean loggingLevel open fun loggingLevel(th: T ): Level toResponse abstract fun toResponse(th: T ): Response<ResponseBody>","title":"ExceptionMapper - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/index.html#exceptionmapper","text":"interface ExceptionMapper<in T : Throwable > Maps an exception to a Response","title":"ExceptionMapper"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/index.html#functions","text":"Name Summary canHandle abstract fun canHandle(th: Throwable ): Boolean loggingLevel open fun loggingLevel(th: T ): Level toResponse abstract fun toResponse(th: T ): Response<ResponseBody>","title":"Functions"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/can-handle.html","text":"misk / misk.web.exceptions / ExceptionMapper / canHandle canHandle \u00b6 abstract fun canHandle(th: Throwable ): Boolean Return true if the ExceptionMapper can handle the given exception","title":"canHandle - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/can-handle.html#canhandle","text":"abstract fun canHandle(th: Throwable ): Boolean Return true if the ExceptionMapper can handle the given exception","title":"canHandle"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/logging-level.html","text":"misk / misk.web.exceptions / ExceptionMapper / loggingLevel loggingLevel \u00b6 open fun loggingLevel(th: T ): Level Return the level at which the given exception should be logged. defaults to ERROR but can be overridden by the mapper for the given exception","title":"loggingLevel - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/logging-level.html#logginglevel","text":"open fun loggingLevel(th: T ): Level Return the level at which the given exception should be logged. defaults to ERROR but can be overridden by the mapper for the given exception","title":"loggingLevel"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/to-response.html","text":"misk / misk.web.exceptions / ExceptionMapper / toResponse toResponse \u00b6 abstract fun toResponse(th: T ): Response<ResponseBody> Return the Response corresponding to the exception.","title":"toResponse - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper/to-response.html#toresponse","text":"abstract fun toResponse(th: T ): Response<ResponseBody> Return the Response corresponding to the exception.","title":"toResponse"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/index.html","text":"misk / misk.web.exceptions / ExceptionMapperModule ExceptionMapperModule \u00b6 class ExceptionMapperModule<M : ExceptionMapper < T >, in T : Throwable > : KAbstractModule Binds a Throwable to an ExceptionMapper . When an Exception occurs dispatching an Action, the bound ExceptionMapper is called to handle the Exception. If there is not an explicit binding for the thrown Exception, the mapper for the closest superclass is used. Given the example code install(ExceptionMapperModule.create<ActionException, ActionExceptionMapper>()) install(ExceptionMapperModule.create<MyActionException, MyActionExceptionMapper>()) class MyActionException : ActionException {} class MyOtherActionException : ActionException {} MyActionException maps to the specific MyActionExceptionMapper and MyOtherActionException maps to the ActionExceptionMapper since uses the binding of the closest bound superclass. Constructors \u00b6 Name Summary <init> ExceptionMapperModule(exceptionClass: KClass < T >, mapperClass: KClass < M >) Binds a Throwable to an ExceptionMapper . Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <T : Throwable , M : ExceptionMapper < T >> create(): ExceptionMapperModule < M , T >","title":"ExceptionMapperModule - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/index.html#exceptionmappermodule","text":"class ExceptionMapperModule<M : ExceptionMapper < T >, in T : Throwable > : KAbstractModule Binds a Throwable to an ExceptionMapper . When an Exception occurs dispatching an Action, the bound ExceptionMapper is called to handle the Exception. If there is not an explicit binding for the thrown Exception, the mapper for the closest superclass is used. Given the example code install(ExceptionMapperModule.create<ActionException, ActionExceptionMapper>()) install(ExceptionMapperModule.create<MyActionException, MyActionExceptionMapper>()) class MyActionException : ActionException {} class MyOtherActionException : ActionException {} MyActionException maps to the specific MyActionExceptionMapper and MyOtherActionException maps to the ActionExceptionMapper since uses the binding of the closest bound superclass.","title":"ExceptionMapperModule"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/index.html#constructors","text":"Name Summary <init> ExceptionMapperModule(exceptionClass: KClass < T >, mapperClass: KClass < M >) Binds a Throwable to an ExceptionMapper .","title":"Constructors"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/index.html#companion-object-functions","text":"Name Summary create fun <T : Throwable , M : ExceptionMapper < T >> create(): ExceptionMapperModule < M , T >","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/-init-.html","text":"misk / misk.web.exceptions / ExceptionMapperModule / <init> <init> \u00b6 ExceptionMapperModule(exceptionClass: KClass < T >, mapperClass: KClass < M >) Binds a Throwable to an ExceptionMapper . When an Exception occurs dispatching an Action, the bound ExceptionMapper is called to handle the Exception. If there is not an explicit binding for the thrown Exception, the mapper for the closest superclass is used. Given the example code install(ExceptionMapperModule.create<ActionException, ActionExceptionMapper>()) install(ExceptionMapperModule.create<MyActionException, MyActionExceptionMapper>()) class MyActionException : ActionException {} class MyOtherActionException : ActionException {} MyActionException maps to the specific MyActionExceptionMapper and MyOtherActionException maps to the ActionExceptionMapper since uses the binding of the closest bound superclass.","title":" init "},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/-init-.html#init","text":"ExceptionMapperModule(exceptionClass: KClass < T >, mapperClass: KClass < M >) Binds a Throwable to an ExceptionMapper . When an Exception occurs dispatching an Action, the bound ExceptionMapper is called to handle the Exception. If there is not an explicit binding for the thrown Exception, the mapper for the closest superclass is used. Given the example code install(ExceptionMapperModule.create<ActionException, ActionExceptionMapper>()) install(ExceptionMapperModule.create<MyActionException, MyActionExceptionMapper>()) class MyActionException : ActionException {} class MyOtherActionException : ActionException {} MyActionException maps to the specific MyActionExceptionMapper and MyOtherActionException maps to the ActionExceptionMapper since uses the binding of the closest bound superclass.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/configure.html","text":"misk / misk.web.exceptions / ExceptionMapperModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/create.html","text":"misk / misk.web.exceptions / ExceptionMapperModule / create create \u00b6 inline fun <reified T : Throwable , reified M : ExceptionMapper < T >> create(): ExceptionMapperModule < M , T >","title":"create - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-module/create.html#create","text":"inline fun <reified T : Throwable , reified M : ExceptionMapper < T >> create(): ExceptionMapperModule < M , T >","title":"create"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-resolver/index.html","text":"misk / misk.web.exceptions / ExceptionMapperResolver ExceptionMapperResolver \u00b6 @Singleton class ExceptionMapperResolver Functions \u00b6 Name Summary mapperFor fun mapperFor(th: Throwable ): ExceptionMapper < Throwable >?","title":"ExceptionMapperResolver - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-resolver/index.html#exceptionmapperresolver","text":"@Singleton class ExceptionMapperResolver","title":"ExceptionMapperResolver"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-resolver/index.html#functions","text":"Name Summary mapperFor fun mapperFor(th: Throwable ): ExceptionMapper < Throwable >?","title":"Functions"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-resolver/mapper-for.html","text":"misk / misk.web.exceptions / ExceptionMapperResolver / mapperFor mapperFor \u00b6 fun mapperFor(th: Throwable ): ExceptionMapper < Throwable >?","title":"mapperFor - Misk"},{"location":"0.x/misk/misk.web.exceptions/-exception-mapper-resolver/mapper-for.html#mapperfor","text":"fun mapperFor(th: Throwable ): ExceptionMapper < Throwable >?","title":"mapperFor"},{"location":"0.x/misk/misk.web.formatter/index.html","text":"misk / misk.web.formatter Package misk.web.formatter \u00b6 Types \u00b6 Name Summary ClassNameFormatter class ClassNameFormatter","title":"Package misk.web.formatter - Misk"},{"location":"0.x/misk/misk.web.formatter/index.html#package-miskwebformatter","text":"","title":"Package misk.web.formatter"},{"location":"0.x/misk/misk.web.formatter/index.html#types","text":"Name Summary ClassNameFormatter class ClassNameFormatter","title":"Types"},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/index.html","text":"misk / misk.web.formatter / ClassNameFormatter ClassNameFormatter \u00b6 class ClassNameFormatter Constructors \u00b6 Name Summary <init> ClassNameFormatter() Companion Object Functions \u00b6 Name Summary format fun <T : Any > format(kclass: KClass < T >): String","title":"ClassNameFormatter - Misk"},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/index.html#classnameformatter","text":"class ClassNameFormatter","title":"ClassNameFormatter"},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/index.html#constructors","text":"Name Summary <init> ClassNameFormatter()","title":"Constructors"},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/index.html#companion-object-functions","text":"Name Summary format fun <T : Any > format(kclass: KClass < T >): String","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/-init-.html","text":"misk / misk.web.formatter / ClassNameFormatter / <init> <init> \u00b6 ClassNameFormatter()","title":" init "},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/-init-.html#init","text":"ClassNameFormatter()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/format.html","text":"misk / misk.web.formatter / ClassNameFormatter / format format \u00b6 fun <T : Any > format(kclass: KClass < T >): String","title":"format - Misk"},{"location":"0.x/misk/misk.web.formatter/-class-name-formatter/format.html#format","text":"fun <T : Any > format(kclass: KClass < T >): String","title":"format"},{"location":"0.x/misk/misk.web.interceptors/index.html","text":"misk / misk.web.interceptors Package misk.web.interceptors \u00b6 Types \u00b6 Name Summary ConcurrencyLimiterFactory interface ConcurrencyLimiterFactory Multibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used. InternalErrorInterceptorFactory class InternalErrorInterceptorFactory : NetworkInterceptor.Factory LogRateLimiter class LogRateLimiter Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation. RebalancingInterceptor class RebalancingInterceptor : NetworkInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. RequestBodyLoggingInterceptor class RequestBodyLoggingInterceptor : ApplicationInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor RequestLoggingInterceptor class RequestLoggingInterceptor : NetworkInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client. ResponseBodyMarshallerFactory class ResponseBodyMarshallerFactory","title":"Package misk.web.interceptors - Misk"},{"location":"0.x/misk/misk.web.interceptors/index.html#package-miskwebinterceptors","text":"","title":"Package misk.web.interceptors"},{"location":"0.x/misk/misk.web.interceptors/index.html#types","text":"Name Summary ConcurrencyLimiterFactory interface ConcurrencyLimiterFactory Multibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used. InternalErrorInterceptorFactory class InternalErrorInterceptorFactory : NetworkInterceptor.Factory LogRateLimiter class LogRateLimiter Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation. RebalancingInterceptor class RebalancingInterceptor : NetworkInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. RequestBodyLoggingInterceptor class RequestBodyLoggingInterceptor : ApplicationInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor RequestLoggingInterceptor class RequestLoggingInterceptor : NetworkInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client. ResponseBodyMarshallerFactory class ResponseBodyMarshallerFactory","title":"Types"},{"location":"0.x/misk/misk.web.interceptors/-concurrency-limiter-factory/index.html","text":"misk / misk.web.interceptors / ConcurrencyLimiterFactory ConcurrencyLimiterFactory \u00b6 interface ConcurrencyLimiterFactory Multibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used. Misk\u2019s ConcurrencyLimitsInterceptor honors the Quota-Path HTTP header to give callers control of how their calls are aggregated when computing system throughput. The create function will be called for each unique Quota-Path received from an application. If the same Quota-Path header is used on different actions, create is only called for the first action that uses the header. Functions \u00b6 Name Summary create abstract fun create(action: Action ): Limiter< String >?","title":"ConcurrencyLimiterFactory - Misk"},{"location":"0.x/misk/misk.web.interceptors/-concurrency-limiter-factory/index.html#concurrencylimiterfactory","text":"interface ConcurrencyLimiterFactory Multibind an instance to provide a custom Limiter for concurrency shedding. The first instance to return non-null is used. Misk\u2019s ConcurrencyLimitsInterceptor honors the Quota-Path HTTP header to give callers control of how their calls are aggregated when computing system throughput. The create function will be called for each unique Quota-Path received from an application. If the same Quota-Path header is used on different actions, create is only called for the first action that uses the header.","title":"ConcurrencyLimiterFactory"},{"location":"0.x/misk/misk.web.interceptors/-concurrency-limiter-factory/index.html#functions","text":"Name Summary create abstract fun create(action: Action ): Limiter< String >?","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-concurrency-limiter-factory/create.html","text":"misk / misk.web.interceptors / ConcurrencyLimiterFactory / create create \u00b6 abstract fun create(action: Action ): Limiter< String >?","title":"create - Misk"},{"location":"0.x/misk/misk.web.interceptors/-concurrency-limiter-factory/create.html#create","text":"abstract fun create(action: Action ): Limiter< String >?","title":"create"},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/index.html","text":"misk / misk.web.interceptors / InternalErrorInterceptorFactory InternalErrorInterceptorFactory \u00b6 @Singleton class InternalErrorInterceptorFactory : NetworkInterceptor.Factory Constructors \u00b6 Name Summary <init> InternalErrorInterceptorFactory() Functions \u00b6 Name Summary create fun create(action: Action ): NetworkInterceptor ?","title":"InternalErrorInterceptorFactory - Misk"},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/index.html#internalerrorinterceptorfactory","text":"@Singleton class InternalErrorInterceptorFactory : NetworkInterceptor.Factory","title":"InternalErrorInterceptorFactory"},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/index.html#constructors","text":"Name Summary <init> InternalErrorInterceptorFactory()","title":"Constructors"},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/index.html#functions","text":"Name Summary create fun create(action: Action ): NetworkInterceptor ?","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/-init-.html","text":"misk / misk.web.interceptors / InternalErrorInterceptorFactory / <init> <init> \u00b6 InternalErrorInterceptorFactory()","title":" init "},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/-init-.html#init","text":"InternalErrorInterceptorFactory()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/create.html","text":"misk / misk.web.interceptors / InternalErrorInterceptorFactory / create create \u00b6 fun create(action: Action ): NetworkInterceptor ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.interceptors/-internal-error-interceptor-factory/create.html#create","text":"fun create(action: Action ): NetworkInterceptor ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/index.html","text":"misk / misk.web.interceptors / LogRateLimiter LogRateLimiter \u00b6 @Singleton class LogRateLimiter Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation. Types \u00b6 Name Summary LogBucketId data class LogBucketId : Comparable < LogRateLimiter.LogBucketId > Constructors \u00b6 Name Summary <init> LogRateLimiter(rateLimiterFactory: Factory) Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation. Functions \u00b6 Name Summary tryAcquire fun tryAcquire(bucketId: LogRateLimiter.LogBucketId , ratePerSecond: Long ): Boolean","title":"LogRateLimiter - Misk"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/index.html#logratelimiter","text":"@Singleton class LogRateLimiter Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation.","title":"LogRateLimiter"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/index.html#types","text":"Name Summary LogBucketId data class LogBucketId : Comparable < LogRateLimiter.LogBucketId >","title":"Types"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/index.html#constructors","text":"Name Summary <init> LogRateLimiter(rateLimiterFactory: Factory) Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation.","title":"Constructors"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/index.html#functions","text":"Name Summary tryAcquire fun tryAcquire(bucketId: LogRateLimiter.LogBucketId , ratePerSecond: Long ): Boolean","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-init-.html","text":"misk / misk.web.interceptors / LogRateLimiter / <init> <init> \u00b6 LogRateLimiter(rateLimiterFactory: Factory) Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation.","title":" init "},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-init-.html#init","text":"LogRateLimiter(rateLimiterFactory: Factory) Holds rate limiters for logging success and error responses. There is a rate limiter for every action and service that calls it, for both success and error. The rate limiters are created according to the value set in LogRequestResponse annotation.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/try-acquire.html","text":"misk / misk.web.interceptors / LogRateLimiter / tryAcquire tryAcquire \u00b6 fun tryAcquire(bucketId: LogRateLimiter.LogBucketId , ratePerSecond: Long ): Boolean","title":"tryAcquire - Misk"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/try-acquire.html#tryacquire","text":"fun tryAcquire(bucketId: LogRateLimiter.LogBucketId , ratePerSecond: Long ): Boolean","title":"tryAcquire"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/index.html","text":"misk / misk.web.interceptors / LogRateLimiter / LogBucketId LogBucketId \u00b6 data class LogBucketId : Comparable < LogRateLimiter.LogBucketId > Constructors \u00b6 Name Summary <init> LogBucketId(actionClass: String , isError: Boolean ) Properties \u00b6 Name Summary actionClass val actionClass: String ActionClass from which we can grab the LogRequestResponse isError val isError: Boolean If the response code is error, we look up the errorRateLimiter Functions \u00b6 Name Summary compareTo fun compareTo(other: LogRateLimiter.LogBucketId ): Int toString fun toString(): String","title":"LogBucketId - Misk"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/index.html#logbucketid","text":"data class LogBucketId : Comparable < LogRateLimiter.LogBucketId >","title":"LogBucketId"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/index.html#constructors","text":"Name Summary <init> LogBucketId(actionClass: String , isError: Boolean )","title":"Constructors"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/index.html#properties","text":"Name Summary actionClass val actionClass: String ActionClass from which we can grab the LogRequestResponse isError val isError: Boolean If the response code is error, we look up the errorRateLimiter","title":"Properties"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/index.html#functions","text":"Name Summary compareTo fun compareTo(other: LogRateLimiter.LogBucketId ): Int toString fun toString(): String","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/-init-.html","text":"misk / misk.web.interceptors / LogRateLimiter / LogBucketId / <init> <init> \u00b6 LogBucketId(actionClass: String , isError: Boolean )","title":" init "},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/-init-.html#init","text":"LogBucketId(actionClass: String , isError: Boolean )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/action-class.html","text":"misk / misk.web.interceptors / LogRateLimiter / LogBucketId / actionClass actionClass \u00b6 val actionClass: String ActionClass from which we can grab the LogRequestResponse","title":"actionClass - Misk"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/action-class.html#actionclass","text":"val actionClass: String ActionClass from which we can grab the LogRequestResponse","title":"actionClass"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/compare-to.html","text":"misk / misk.web.interceptors / LogRateLimiter / LogBucketId / compareTo compareTo \u00b6 fun compareTo(other: LogRateLimiter.LogBucketId ): Int","title":"compareTo - Misk"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/compare-to.html#compareto","text":"fun compareTo(other: LogRateLimiter.LogBucketId ): Int","title":"compareTo"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/is-error.html","text":"misk / misk.web.interceptors / LogRateLimiter / LogBucketId / isError isError \u00b6 val isError: Boolean If the response code is error, we look up the errorRateLimiter","title":"isError - Misk"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/is-error.html#iserror","text":"val isError: Boolean If the response code is error, we look up the errorRateLimiter","title":"isError"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/to-string.html","text":"misk / misk.web.interceptors / LogRateLimiter / LogBucketId / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk/misk.web.interceptors/-log-rate-limiter/-log-bucket-id/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/index.html","text":"misk / misk.web.interceptors / RebalancingInterceptor RebalancingInterceptor \u00b6 class RebalancingInterceptor : NetworkInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. This does not close Unix domain socket connections. This interceptor is intended to mitigate imbalanced load from long-lived client connections maintained from client apps. Connections over UDS are oriented towards service mesh sidecars that employ sufficient client-side load balancing. Types \u00b6 Name Summary Factory class Factory : NetworkInterceptor.Factory Constructors \u00b6 Name Summary <init> RebalancingInterceptor(random: ThreadLocalRandom, probability: Double ) When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. Functions \u00b6 Name Summary intercept fun intercept(chain: NetworkChain ): Unit","title":"RebalancingInterceptor - Misk"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/index.html#rebalancinginterceptor","text":"class RebalancingInterceptor : NetworkInterceptor When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. This does not close Unix domain socket connections. This interceptor is intended to mitigate imbalanced load from long-lived client connections maintained from client apps. Connections over UDS are oriented towards service mesh sidecars that employ sufficient client-side load balancing.","title":"RebalancingInterceptor"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/index.html#types","text":"Name Summary Factory class Factory : NetworkInterceptor.Factory","title":"Types"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/index.html#constructors","text":"Name Summary <init> RebalancingInterceptor(random: ThreadLocalRandom, probability: Double ) When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods.","title":"Constructors"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/index.html#functions","text":"Name Summary intercept fun intercept(chain: NetworkChain ): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/-init-.html","text":"misk / misk.web.interceptors / RebalancingInterceptor / <init> <init> \u00b6 RebalancingInterceptor(random: ThreadLocalRandom, probability: Double ) When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. This does not close Unix domain socket connections. This interceptor is intended to mitigate imbalanced load from long-lived client connections maintained from client apps. Connections over UDS are oriented towards service mesh sidecars that employ sufficient client-side load balancing.","title":" init "},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/-init-.html#init","text":"RebalancingInterceptor(random: ThreadLocalRandom, probability: Double ) When we\u2019re deploying and redeploying our pods, we want to make sure that clients rebalance onto the new pods. This randomly closes connections so they will be recreated, naturally balancing connections across pods. This does not close Unix domain socket connections. This interceptor is intended to mitigate imbalanced load from long-lived client connections maintained from client apps. Connections over UDS are oriented towards service mesh sidecars that employ sufficient client-side load balancing.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/intercept.html","text":"misk / misk.web.interceptors / RebalancingInterceptor / intercept intercept \u00b6 fun intercept(chain: NetworkChain ): Unit Overrides NetworkInterceptor.intercept","title":"intercept - Misk"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/intercept.html#intercept","text":"fun intercept(chain: NetworkChain ): Unit Overrides NetworkInterceptor.intercept","title":"intercept"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/index.html","text":"misk / misk.web.interceptors / RebalancingInterceptor / Factory Factory \u00b6 @Singleton class Factory : NetworkInterceptor.Factory Functions \u00b6 Name Summary create fun create(action: Action ): NetworkInterceptor ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/index.html#factory","text":"@Singleton class Factory : NetworkInterceptor.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/index.html#functions","text":"Name Summary create fun create(action: Action ): NetworkInterceptor ?","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/create.html","text":"misk / misk.web.interceptors / RebalancingInterceptor / Factory / create create \u00b6 fun create(action: Action ): NetworkInterceptor ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.interceptors/-rebalancing-interceptor/-factory/create.html#create","text":"fun create(action: Action ): NetworkInterceptor ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/index.html","text":"misk / misk.web.interceptors / RequestBodyLoggingInterceptor RequestBodyLoggingInterceptor \u00b6 class RequestBodyLoggingInterceptor : ApplicationInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor Timing information doesn\u2019t count time writing the response to the remote client. Types \u00b6 Name Summary Factory class Factory : ApplicationInterceptor.Factory Functions \u00b6 Name Summary intercept fun intercept(chain: Chain ): Any","title":"RequestBodyLoggingInterceptor - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/index.html#requestbodylogginginterceptor","text":"class RequestBodyLoggingInterceptor : ApplicationInterceptor Stores request and response information for an action in a ThreadLocal, to be logged in RequestLoggingInterceptor Timing information doesn\u2019t count time writing the response to the remote client.","title":"RequestBodyLoggingInterceptor"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/index.html#types","text":"Name Summary Factory class Factory : ApplicationInterceptor.Factory","title":"Types"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/index.html#functions","text":"Name Summary intercept fun intercept(chain: Chain ): Any","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/intercept.html","text":"misk / misk.web.interceptors / RequestBodyLoggingInterceptor / intercept intercept \u00b6 fun intercept(chain: Chain ): Any Overrides ApplicationInterceptor.intercept","title":"intercept - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/intercept.html#intercept","text":"fun intercept(chain: Chain ): Any Overrides ApplicationInterceptor.intercept","title":"intercept"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/index.html","text":"misk / misk.web.interceptors / RequestBodyLoggingInterceptor / Factory Factory \u00b6 @Singleton class Factory : ApplicationInterceptor.Factory Functions \u00b6 Name Summary create fun create(action: Action ): ApplicationInterceptor ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/index.html#factory","text":"@Singleton class Factory : ApplicationInterceptor.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/index.html#functions","text":"Name Summary create fun create(action: Action ): ApplicationInterceptor ?","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/create.html","text":"misk / misk.web.interceptors / RequestBodyLoggingInterceptor / Factory / create create \u00b6 fun create(action: Action ): ApplicationInterceptor ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-body-logging-interceptor/-factory/create.html#create","text":"fun create(action: Action ): ApplicationInterceptor ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/index.html","text":"misk / misk.web.interceptors / RequestLoggingInterceptor RequestLoggingInterceptor \u00b6 class RequestLoggingInterceptor : NetworkInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client. Types \u00b6 Name Summary Factory class Factory : NetworkInterceptor.Factory Functions \u00b6 Name Summary intercept fun intercept(chain: NetworkChain ): Unit maybeLog fun maybeLog(httpCall: HttpCall , stopwatch: Stopwatch, error: Throwable ?): Unit","title":"RequestLoggingInterceptor - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/index.html#requestlogginginterceptor","text":"class RequestLoggingInterceptor : NetworkInterceptor Logs request and response information for an action. Timing information doesn\u2019t count time writing the response to the remote client.","title":"RequestLoggingInterceptor"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/index.html#types","text":"Name Summary Factory class Factory : NetworkInterceptor.Factory","title":"Types"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/index.html#functions","text":"Name Summary intercept fun intercept(chain: NetworkChain ): Unit maybeLog fun maybeLog(httpCall: HttpCall , stopwatch: Stopwatch, error: Throwable ?): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/intercept.html","text":"misk / misk.web.interceptors / RequestLoggingInterceptor / intercept intercept \u00b6 fun intercept(chain: NetworkChain ): Unit Overrides NetworkInterceptor.intercept","title":"intercept - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/intercept.html#intercept","text":"fun intercept(chain: NetworkChain ): Unit Overrides NetworkInterceptor.intercept","title":"intercept"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/maybe-log.html","text":"misk / misk.web.interceptors / RequestLoggingInterceptor / maybeLog maybeLog \u00b6 fun maybeLog(httpCall: HttpCall , stopwatch: Stopwatch, error: Throwable ?): Unit","title":"maybeLog - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/maybe-log.html#maybelog","text":"fun maybeLog(httpCall: HttpCall , stopwatch: Stopwatch, error: Throwable ?): Unit","title":"maybeLog"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/-factory/index.html","text":"misk / misk.web.interceptors / RequestLoggingInterceptor / Factory Factory \u00b6 @Singleton class Factory : NetworkInterceptor.Factory Functions \u00b6 Name Summary create fun create(action: Action ): NetworkInterceptor ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/-factory/index.html#factory","text":"@Singleton class Factory : NetworkInterceptor.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/-factory/index.html#functions","text":"Name Summary create fun create(action: Action ): NetworkInterceptor ?","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/-factory/create.html","text":"misk / misk.web.interceptors / RequestLoggingInterceptor / Factory / create create \u00b6 fun create(action: Action ): NetworkInterceptor ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.interceptors/-request-logging-interceptor/-factory/create.html#create","text":"fun create(action: Action ): NetworkInterceptor ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.interceptors/-response-body-marshaller-factory/index.html","text":"misk / misk.web.interceptors / ResponseBodyMarshallerFactory ResponseBodyMarshallerFactory \u00b6 @Singleton class ResponseBodyMarshallerFactory Functions \u00b6 Name Summary create fun create(action: Action ): Marshaller < Any > Returns a marshaller for action , or null if it has no response to marshal.","title":"ResponseBodyMarshallerFactory - Misk"},{"location":"0.x/misk/misk.web.interceptors/-response-body-marshaller-factory/index.html#responsebodymarshallerfactory","text":"@Singleton class ResponseBodyMarshallerFactory","title":"ResponseBodyMarshallerFactory"},{"location":"0.x/misk/misk.web.interceptors/-response-body-marshaller-factory/index.html#functions","text":"Name Summary create fun create(action: Action ): Marshaller < Any > Returns a marshaller for action , or null if it has no response to marshal.","title":"Functions"},{"location":"0.x/misk/misk.web.interceptors/-response-body-marshaller-factory/create.html","text":"misk / misk.web.interceptors / ResponseBodyMarshallerFactory / create create \u00b6 fun create(action: Action ): Marshaller < Any > Returns a marshaller for action , or null if it has no response to marshal.","title":"create - Misk"},{"location":"0.x/misk/misk.web.interceptors/-response-body-marshaller-factory/create.html#create","text":"fun create(action: Action ): Marshaller < Any > Returns a marshaller for action , or null if it has no response to marshal.","title":"create"},{"location":"0.x/misk/misk.web.jetty/index.html","text":"misk / misk.web.jetty Package misk.web.jetty \u00b6 Types \u00b6 Name Summary JettyService class JettyService : AbstractIdleService MeasuredQueuedThreadPool class MeasuredQueuedThreadPool : MeasuredThreadPool A MeasuredThreadPool for a QueuedThreadPool MeasuredThreadPool interface MeasuredThreadPool A common interface that can emit metrics about a thread pool. MeasuredThreadPoolExecutor class MeasuredThreadPoolExecutor : MeasuredThreadPool A MeasuredThreadPool for a ThreadPoolExecutor ThreadPoolQueueMetrics class ThreadPoolQueueMetrics","title":"Package misk.web.jetty - Misk"},{"location":"0.x/misk/misk.web.jetty/index.html#package-miskwebjetty","text":"","title":"Package misk.web.jetty"},{"location":"0.x/misk/misk.web.jetty/index.html#types","text":"Name Summary JettyService class JettyService : AbstractIdleService MeasuredQueuedThreadPool class MeasuredQueuedThreadPool : MeasuredThreadPool A MeasuredThreadPool for a QueuedThreadPool MeasuredThreadPool interface MeasuredThreadPool A common interface that can emit metrics about a thread pool. MeasuredThreadPoolExecutor class MeasuredThreadPoolExecutor : MeasuredThreadPool A MeasuredThreadPool for a ThreadPoolExecutor ThreadPoolQueueMetrics class ThreadPoolQueueMetrics","title":"Types"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/index.html","text":"misk / misk.web.jetty / JettyService JettyService \u00b6 @Singleton class JettyService : AbstractIdleService Properties \u00b6 Name Summary healthServerUrl val healthServerUrl: HttpUrl? httpServerUrl val httpServerUrl: HttpUrl httpsServerUrl val httpsServerUrl: HttpUrl? Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"JettyService - Misk"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/index.html#jettyservice","text":"@Singleton class JettyService : AbstractIdleService","title":"JettyService"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/index.html#properties","text":"Name Summary healthServerUrl val healthServerUrl: HttpUrl? httpServerUrl val httpServerUrl: HttpUrl httpsServerUrl val httpsServerUrl: HttpUrl?","title":"Properties"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/health-server-url.html","text":"misk / misk.web.jetty / JettyService / healthServerUrl healthServerUrl \u00b6 val healthServerUrl: HttpUrl?","title":"healthServerUrl - Misk"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/health-server-url.html#healthserverurl","text":"val healthServerUrl: HttpUrl?","title":"healthServerUrl"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/http-server-url.html","text":"misk / misk.web.jetty / JettyService / httpServerUrl httpServerUrl \u00b6 val httpServerUrl: HttpUrl","title":"httpServerUrl - Misk"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/http-server-url.html#httpserverurl","text":"val httpServerUrl: HttpUrl","title":"httpServerUrl"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/https-server-url.html","text":"misk / misk.web.jetty / JettyService / httpsServerUrl httpsServerUrl \u00b6 val httpsServerUrl: HttpUrl?","title":"httpsServerUrl - Misk"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/https-server-url.html#httpsserverurl","text":"val httpsServerUrl: HttpUrl?","title":"httpsServerUrl"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/shut-down.html","text":"misk / misk.web.jetty / JettyService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/start-up.html","text":"misk / misk.web.jetty / JettyService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk/misk.web.jetty/-jetty-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/index.html","text":"misk / misk.web.jetty / MeasuredQueuedThreadPool MeasuredQueuedThreadPool \u00b6 class MeasuredQueuedThreadPool : MeasuredThreadPool A MeasuredThreadPool for a QueuedThreadPool Constructors \u00b6 Name Summary <init> MeasuredQueuedThreadPool(threadPool: QueuedThreadPool) A MeasuredThreadPool for a QueuedThreadPool Functions \u00b6 Name Summary activeCount fun activeCount(): Int The number of active threads. maxPoolSize fun maxPoolSize(): Int The maximum size the pool can grow to. poolSize fun poolSize(): Int The current size of the thread pool. queueSize fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool.","title":"MeasuredQueuedThreadPool - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/index.html#measuredqueuedthreadpool","text":"class MeasuredQueuedThreadPool : MeasuredThreadPool A MeasuredThreadPool for a QueuedThreadPool","title":"MeasuredQueuedThreadPool"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/index.html#constructors","text":"Name Summary <init> MeasuredQueuedThreadPool(threadPool: QueuedThreadPool) A MeasuredThreadPool for a QueuedThreadPool","title":"Constructors"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/index.html#functions","text":"Name Summary activeCount fun activeCount(): Int The number of active threads. maxPoolSize fun maxPoolSize(): Int The maximum size the pool can grow to. poolSize fun poolSize(): Int The current size of the thread pool. queueSize fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool.","title":"Functions"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/-init-.html","text":"misk / misk.web.jetty / MeasuredQueuedThreadPool / <init> <init> \u00b6 MeasuredQueuedThreadPool(threadPool: QueuedThreadPool) A MeasuredThreadPool for a QueuedThreadPool","title":" init "},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/-init-.html#init","text":"MeasuredQueuedThreadPool(threadPool: QueuedThreadPool) A MeasuredThreadPool for a QueuedThreadPool","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/active-count.html","text":"misk / misk.web.jetty / MeasuredQueuedThreadPool / activeCount activeCount \u00b6 fun activeCount(): Int Overrides MeasuredThreadPool.activeCount The number of active threads.","title":"activeCount - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/active-count.html#activecount","text":"fun activeCount(): Int Overrides MeasuredThreadPool.activeCount The number of active threads.","title":"activeCount"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/max-pool-size.html","text":"misk / misk.web.jetty / MeasuredQueuedThreadPool / maxPoolSize maxPoolSize \u00b6 fun maxPoolSize(): Int Overrides MeasuredThreadPool.maxPoolSize The maximum size the pool can grow to.","title":"maxPoolSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/max-pool-size.html#maxpoolsize","text":"fun maxPoolSize(): Int Overrides MeasuredThreadPool.maxPoolSize The maximum size the pool can grow to.","title":"maxPoolSize"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/pool-size.html","text":"misk / misk.web.jetty / MeasuredQueuedThreadPool / poolSize poolSize \u00b6 fun poolSize(): Int Overrides MeasuredThreadPool.poolSize The current size of the thread pool.","title":"poolSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/pool-size.html#poolsize","text":"fun poolSize(): Int Overrides MeasuredThreadPool.poolSize The current size of the thread pool.","title":"poolSize"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/queue-size.html","text":"misk / misk.web.jetty / MeasuredQueuedThreadPool / queueSize queueSize \u00b6 fun queueSize(): Int Overrides MeasuredThreadPool.queueSize The current number of tasks in the queue waiting to be processed by the thread pool.","title":"queueSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-queued-thread-pool/queue-size.html#queuesize","text":"fun queueSize(): Int Overrides MeasuredThreadPool.queueSize The current number of tasks in the queue waiting to be processed by the thread pool.","title":"queueSize"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/index.html","text":"misk / misk.web.jetty / MeasuredThreadPool MeasuredThreadPool \u00b6 interface MeasuredThreadPool A common interface that can emit metrics about a thread pool. Functions \u00b6 Name Summary activeCount abstract fun activeCount(): Int The number of active threads. maxPoolSize abstract fun maxPoolSize(): Int The maximum size the pool can grow to. poolSize abstract fun poolSize(): Int The current size of the thread pool. queueSize abstract fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool. Inheritors \u00b6 Name Summary MeasuredQueuedThreadPool class MeasuredQueuedThreadPool : MeasuredThreadPool A MeasuredThreadPool for a QueuedThreadPool MeasuredThreadPoolExecutor class MeasuredThreadPoolExecutor : MeasuredThreadPool A MeasuredThreadPool for a ThreadPoolExecutor","title":"MeasuredThreadPool - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/index.html#measuredthreadpool","text":"interface MeasuredThreadPool A common interface that can emit metrics about a thread pool.","title":"MeasuredThreadPool"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/index.html#functions","text":"Name Summary activeCount abstract fun activeCount(): Int The number of active threads. maxPoolSize abstract fun maxPoolSize(): Int The maximum size the pool can grow to. poolSize abstract fun poolSize(): Int The current size of the thread pool. queueSize abstract fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool.","title":"Functions"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/index.html#inheritors","text":"Name Summary MeasuredQueuedThreadPool class MeasuredQueuedThreadPool : MeasuredThreadPool A MeasuredThreadPool for a QueuedThreadPool MeasuredThreadPoolExecutor class MeasuredThreadPoolExecutor : MeasuredThreadPool A MeasuredThreadPool for a ThreadPoolExecutor","title":"Inheritors"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/active-count.html","text":"misk / misk.web.jetty / MeasuredThreadPool / activeCount activeCount \u00b6 abstract fun activeCount(): Int The number of active threads.","title":"activeCount - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/active-count.html#activecount","text":"abstract fun activeCount(): Int The number of active threads.","title":"activeCount"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/max-pool-size.html","text":"misk / misk.web.jetty / MeasuredThreadPool / maxPoolSize maxPoolSize \u00b6 abstract fun maxPoolSize(): Int The maximum size the pool can grow to.","title":"maxPoolSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/max-pool-size.html#maxpoolsize","text":"abstract fun maxPoolSize(): Int The maximum size the pool can grow to.","title":"maxPoolSize"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/pool-size.html","text":"misk / misk.web.jetty / MeasuredThreadPool / poolSize poolSize \u00b6 abstract fun poolSize(): Int The current size of the thread pool.","title":"poolSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/pool-size.html#poolsize","text":"abstract fun poolSize(): Int The current size of the thread pool.","title":"poolSize"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/queue-size.html","text":"misk / misk.web.jetty / MeasuredThreadPool / queueSize queueSize \u00b6 abstract fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool.","title":"queueSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool/queue-size.html#queuesize","text":"abstract fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool.","title":"queueSize"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/index.html","text":"misk / misk.web.jetty / MeasuredThreadPoolExecutor MeasuredThreadPoolExecutor \u00b6 class MeasuredThreadPoolExecutor : MeasuredThreadPool A MeasuredThreadPool for a ThreadPoolExecutor Constructors \u00b6 Name Summary <init> MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor ) A MeasuredThreadPool for a ThreadPoolExecutor Functions \u00b6 Name Summary activeCount fun activeCount(): Int The number of active threads. maxPoolSize fun maxPoolSize(): Int The maximum size the pool can grow to. poolSize fun poolSize(): Int The current size of the thread pool. queueSize fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool.","title":"MeasuredThreadPoolExecutor - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/index.html#measuredthreadpoolexecutor","text":"class MeasuredThreadPoolExecutor : MeasuredThreadPool A MeasuredThreadPool for a ThreadPoolExecutor","title":"MeasuredThreadPoolExecutor"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/index.html#constructors","text":"Name Summary <init> MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor ) A MeasuredThreadPool for a ThreadPoolExecutor","title":"Constructors"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/index.html#functions","text":"Name Summary activeCount fun activeCount(): Int The number of active threads. maxPoolSize fun maxPoolSize(): Int The maximum size the pool can grow to. poolSize fun poolSize(): Int The current size of the thread pool. queueSize fun queueSize(): Int The current number of tasks in the queue waiting to be processed by the thread pool.","title":"Functions"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/-init-.html","text":"misk / misk.web.jetty / MeasuredThreadPoolExecutor / <init> <init> \u00b6 MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor ) A MeasuredThreadPool for a ThreadPoolExecutor","title":" init "},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/-init-.html#init","text":"MeasuredThreadPoolExecutor(threadPool: ThreadPoolExecutor ) A MeasuredThreadPool for a ThreadPoolExecutor","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/active-count.html","text":"misk / misk.web.jetty / MeasuredThreadPoolExecutor / activeCount activeCount \u00b6 fun activeCount(): Int Overrides MeasuredThreadPool.activeCount The number of active threads.","title":"activeCount - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/active-count.html#activecount","text":"fun activeCount(): Int Overrides MeasuredThreadPool.activeCount The number of active threads.","title":"activeCount"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/max-pool-size.html","text":"misk / misk.web.jetty / MeasuredThreadPoolExecutor / maxPoolSize maxPoolSize \u00b6 fun maxPoolSize(): Int Overrides MeasuredThreadPool.maxPoolSize The maximum size the pool can grow to.","title":"maxPoolSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/max-pool-size.html#maxpoolsize","text":"fun maxPoolSize(): Int Overrides MeasuredThreadPool.maxPoolSize The maximum size the pool can grow to.","title":"maxPoolSize"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/pool-size.html","text":"misk / misk.web.jetty / MeasuredThreadPoolExecutor / poolSize poolSize \u00b6 fun poolSize(): Int Overrides MeasuredThreadPool.poolSize The current size of the thread pool.","title":"poolSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/pool-size.html#poolsize","text":"fun poolSize(): Int Overrides MeasuredThreadPool.poolSize The current size of the thread pool.","title":"poolSize"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/queue-size.html","text":"misk / misk.web.jetty / MeasuredThreadPoolExecutor / queueSize queueSize \u00b6 fun queueSize(): Int Overrides MeasuredThreadPool.queueSize The current number of tasks in the queue waiting to be processed by the thread pool.","title":"queueSize - Misk"},{"location":"0.x/misk/misk.web.jetty/-measured-thread-pool-executor/queue-size.html#queuesize","text":"fun queueSize(): Int Overrides MeasuredThreadPool.queueSize The current number of tasks in the queue waiting to be processed by the thread pool.","title":"queueSize"},{"location":"0.x/misk/misk.web.jetty/-thread-pool-queue-metrics/index.html","text":"misk / misk.web.jetty / ThreadPoolQueueMetrics ThreadPoolQueueMetrics \u00b6 @Singleton class ThreadPoolQueueMetrics Functions \u00b6 Name Summary recordQueueLatency fun recordQueueLatency(latency: Duration ): Unit","title":"ThreadPoolQueueMetrics - Misk"},{"location":"0.x/misk/misk.web.jetty/-thread-pool-queue-metrics/index.html#threadpoolqueuemetrics","text":"@Singleton class ThreadPoolQueueMetrics","title":"ThreadPoolQueueMetrics"},{"location":"0.x/misk/misk.web.jetty/-thread-pool-queue-metrics/index.html#functions","text":"Name Summary recordQueueLatency fun recordQueueLatency(latency: Duration ): Unit","title":"Functions"},{"location":"0.x/misk/misk.web.jetty/-thread-pool-queue-metrics/record-queue-latency.html","text":"misk / misk.web.jetty / ThreadPoolQueueMetrics / recordQueueLatency recordQueueLatency \u00b6 fun recordQueueLatency(latency: Duration ): Unit","title":"recordQueueLatency - Misk"},{"location":"0.x/misk/misk.web.jetty/-thread-pool-queue-metrics/record-queue-latency.html#recordqueuelatency","text":"fun recordQueueLatency(latency: Duration ): Unit","title":"recordQueueLatency"},{"location":"0.x/misk/misk.web.marshal/index.html","text":"misk / misk.web.marshal Package misk.web.marshal \u00b6 Types \u00b6 Name Summary GenericMarshallers object GenericMarshallers Handles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content GenericUnmarshallers object GenericUnmarshallers Handles generic unmarshalling, for cases where the action can accept anything JsonMarshaller class JsonMarshaller<T> : Marshaller < T > JsonUnmarshaller class JsonUnmarshaller : Unmarshaller Marshaller interface Marshaller<in T> Marshalls typed kotlin objects into a ResponseBody MultipartUnmarshaller object MultipartUnmarshaller : Unmarshaller PlainTextMarshaller object PlainTextMarshaller : Marshaller < Any > PlainTextUnmarshaller object PlainTextUnmarshaller ProtobufMarshaller class ProtobufMarshaller<T> : Marshaller < T > ProtobufUnmarshaller class ProtobufUnmarshaller : Unmarshaller Unmarshaller interface Unmarshaller Unmarshalls a typed object from an incoming source","title":"Package misk.web.marshal - Misk"},{"location":"0.x/misk/misk.web.marshal/index.html#package-miskwebmarshal","text":"","title":"Package misk.web.marshal"},{"location":"0.x/misk/misk.web.marshal/index.html#types","text":"Name Summary GenericMarshallers object GenericMarshallers Handles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content GenericUnmarshallers object GenericUnmarshallers Handles generic unmarshalling, for cases where the action can accept anything JsonMarshaller class JsonMarshaller<T> : Marshaller < T > JsonUnmarshaller class JsonUnmarshaller : Unmarshaller Marshaller interface Marshaller<in T> Marshalls typed kotlin objects into a ResponseBody MultipartUnmarshaller object MultipartUnmarshaller : Unmarshaller PlainTextMarshaller object PlainTextMarshaller : Marshaller < Any > PlainTextUnmarshaller object PlainTextUnmarshaller ProtobufMarshaller class ProtobufMarshaller<T> : Marshaller < T > ProtobufUnmarshaller class ProtobufUnmarshaller : Unmarshaller Unmarshaller interface Unmarshaller Unmarshalls a typed object from an incoming source","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/index.html","text":"misk / misk.web.marshal / GenericMarshallers GenericMarshallers \u00b6 object GenericMarshallers Handles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content Types \u00b6 Name Summary FromByteString class FromByteString : Marshaller <ByteString> ToNothing class ToNothing : Marshaller < Nothing > Functions \u00b6 Name Summary canHandle fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean from fun from(contentType: MediaType?, returnType: KType ): Marshaller < Any >?","title":"GenericMarshallers - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/index.html#genericmarshallers","text":"object GenericMarshallers Handles generic marshalling, for cases where the action doesn\u2019t explicitly specify return content","title":"GenericMarshallers"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/index.html#types","text":"Name Summary FromByteString class FromByteString : Marshaller <ByteString> ToNothing class ToNothing : Marshaller < Nothing >","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/index.html#functions","text":"Name Summary canHandle fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean from fun from(contentType: MediaType?, returnType: KType ): Marshaller < Any >?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/can-handle.html","text":"misk / misk.web.marshal / GenericMarshallers / canHandle canHandle \u00b6 fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean","title":"canHandle - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/can-handle.html#canhandle","text":"fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean","title":"canHandle"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/from.html","text":"misk / misk.web.marshal / GenericMarshallers / from from \u00b6 fun from(contentType: MediaType?, returnType: KType ): Marshaller < Any >?","title":"from - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/from.html#from","text":"fun from(contentType: MediaType?, returnType: KType ): Marshaller < Any >?","title":"from"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/index.html","text":"misk / misk.web.marshal / GenericMarshallers / FromByteString FromByteString \u00b6 class FromByteString : Marshaller <ByteString> Constructors \u00b6 Name Summary <init> FromByteString(contentType: MediaType?) Functions \u00b6 Name Summary contentType fun contentType(): MediaType? responseBody fun responseBody(o: ByteString): ResponseBody","title":"FromByteString - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/index.html#frombytestring","text":"class FromByteString : Marshaller <ByteString>","title":"FromByteString"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/index.html#constructors","text":"Name Summary <init> FromByteString(contentType: MediaType?)","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/index.html#functions","text":"Name Summary contentType fun contentType(): MediaType? responseBody fun responseBody(o: ByteString): ResponseBody","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/-init-.html","text":"misk / misk.web.marshal / GenericMarshallers / FromByteString / <init> <init> \u00b6 FromByteString(contentType: MediaType?)","title":" init "},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/-init-.html#init","text":"FromByteString(contentType: MediaType?)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/content-type.html","text":"misk / misk.web.marshal / GenericMarshallers / FromByteString / contentType contentType \u00b6 fun contentType(): MediaType? Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/content-type.html#contenttype","text":"fun contentType(): MediaType? Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/response-body.html","text":"misk / misk.web.marshal / GenericMarshallers / FromByteString / responseBody responseBody \u00b6 fun responseBody(o: ByteString): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-from-byte-string/response-body.html#responsebody","text":"fun responseBody(o: ByteString): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/index.html","text":"misk / misk.web.marshal / GenericMarshallers / ToNothing ToNothing \u00b6 class ToNothing : Marshaller < Nothing > Constructors \u00b6 Name Summary <init> ToNothing(contentType: MediaType?) Functions \u00b6 Name Summary contentType fun contentType(): MediaType? responseBody fun responseBody(o: Nothing ): ResponseBody","title":"ToNothing - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/index.html#tonothing","text":"class ToNothing : Marshaller < Nothing >","title":"ToNothing"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/index.html#constructors","text":"Name Summary <init> ToNothing(contentType: MediaType?)","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/index.html#functions","text":"Name Summary contentType fun contentType(): MediaType? responseBody fun responseBody(o: Nothing ): ResponseBody","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/-init-.html","text":"misk / misk.web.marshal / GenericMarshallers / ToNothing / <init> <init> \u00b6 ToNothing(contentType: MediaType?)","title":" init "},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/-init-.html#init","text":"ToNothing(contentType: MediaType?)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/content-type.html","text":"misk / misk.web.marshal / GenericMarshallers / ToNothing / contentType contentType \u00b6 fun contentType(): MediaType? Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/content-type.html#contenttype","text":"fun contentType(): MediaType? Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/response-body.html","text":"misk / misk.web.marshal / GenericMarshallers / ToNothing / responseBody responseBody \u00b6 fun responseBody(o: Nothing ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-marshallers/-to-nothing/response-body.html#responsebody","text":"fun responseBody(o: Nothing ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody"},{"location":"0.x/misk/misk.web.marshal/-generic-unmarshallers/index.html","text":"misk / misk.web.marshal / GenericUnmarshallers GenericUnmarshallers \u00b6 object GenericUnmarshallers Handles generic unmarshalling, for cases where the action can accept anything Functions \u00b6 Name Summary canHandle fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean into fun into(parameter: KParameter ): Unmarshaller ?","title":"GenericUnmarshallers - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-unmarshallers/index.html#genericunmarshallers","text":"object GenericUnmarshallers Handles generic unmarshalling, for cases where the action can accept anything","title":"GenericUnmarshallers"},{"location":"0.x/misk/misk.web.marshal/-generic-unmarshallers/index.html#functions","text":"Name Summary canHandle fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean into fun into(parameter: KParameter ): Unmarshaller ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-generic-unmarshallers/can-handle.html","text":"misk / misk.web.marshal / GenericUnmarshallers / canHandle canHandle \u00b6 fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean","title":"canHandle - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-unmarshallers/can-handle.html#canhandle","text":"fun canHandle(type: KType ): Boolean fun canHandle(type: Type ): Boolean","title":"canHandle"},{"location":"0.x/misk/misk.web.marshal/-generic-unmarshallers/into.html","text":"misk / misk.web.marshal / GenericUnmarshallers / into into \u00b6 fun into(parameter: KParameter ): Unmarshaller ?","title":"into - Misk"},{"location":"0.x/misk/misk.web.marshal/-generic-unmarshallers/into.html#into","text":"fun into(parameter: KParameter ): Unmarshaller ?","title":"into"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/index.html","text":"misk / misk.web.marshal / JsonMarshaller JsonMarshaller \u00b6 class JsonMarshaller<T> : Marshaller < T > Types \u00b6 Name Summary Factory class Factory : Marshaller.Factory Constructors \u00b6 Name Summary <init> JsonMarshaller(adapter: JsonAdapter< T >) Properties \u00b6 Name Summary adapter val adapter: JsonAdapter< T > Functions \u00b6 Name Summary contentType fun contentType(): MediaType responseBody fun responseBody(o: T ): ResponseBody","title":"JsonMarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/index.html#jsonmarshaller","text":"class JsonMarshaller<T> : Marshaller < T >","title":"JsonMarshaller"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/index.html#types","text":"Name Summary Factory class Factory : Marshaller.Factory","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/index.html#constructors","text":"Name Summary <init> JsonMarshaller(adapter: JsonAdapter< T >)","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/index.html#properties","text":"Name Summary adapter val adapter: JsonAdapter< T >","title":"Properties"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/index.html#functions","text":"Name Summary contentType fun contentType(): MediaType responseBody fun responseBody(o: T ): ResponseBody","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-init-.html","text":"misk / misk.web.marshal / JsonMarshaller / <init> <init> \u00b6 JsonMarshaller(adapter: JsonAdapter< T >)","title":" init "},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-init-.html#init","text":"JsonMarshaller(adapter: JsonAdapter< T >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/adapter.html","text":"misk / misk.web.marshal / JsonMarshaller / adapter adapter \u00b6 val adapter: JsonAdapter< T >","title":"adapter - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/adapter.html#adapter","text":"val adapter: JsonAdapter< T >","title":"adapter"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/content-type.html","text":"misk / misk.web.marshal / JsonMarshaller / contentType contentType \u00b6 fun contentType(): MediaType Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/content-type.html#contenttype","text":"fun contentType(): MediaType Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/response-body.html","text":"misk / misk.web.marshal / JsonMarshaller / responseBody responseBody \u00b6 fun responseBody(o: T ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/response-body.html#responsebody","text":"fun responseBody(o: T ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/index.html","text":"misk / misk.web.marshal / JsonMarshaller / Factory Factory \u00b6 @Singleton class Factory : Marshaller.Factory Properties \u00b6 Name Summary moshi val moshi: Moshi Functions \u00b6 Name Summary create fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/index.html#factory","text":"@Singleton class Factory : Marshaller.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/index.html#properties","text":"Name Summary moshi val moshi: Moshi","title":"Properties"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/index.html#functions","text":"Name Summary create fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/create.html","text":"misk / misk.web.marshal / JsonMarshaller / Factory / create create \u00b6 fun create(mediaType: MediaType, type: KType ): Marshaller < Any >? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/create.html#create","text":"fun create(mediaType: MediaType, type: KType ): Marshaller < Any >? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/moshi.html","text":"misk / misk.web.marshal / JsonMarshaller / Factory / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-marshaller/-factory/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/index.html","text":"misk / misk.web.marshal / JsonUnmarshaller JsonUnmarshaller \u00b6 class JsonUnmarshaller : Unmarshaller Types \u00b6 Name Summary Factory class Factory : Unmarshaller.Factory Constructors \u00b6 Name Summary <init> JsonUnmarshaller(adapter: JsonAdapter< Any >) Properties \u00b6 Name Summary adapter val adapter: JsonAdapter< Any > Functions \u00b6 Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ?","title":"JsonUnmarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/index.html#jsonunmarshaller","text":"class JsonUnmarshaller : Unmarshaller","title":"JsonUnmarshaller"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/index.html#types","text":"Name Summary Factory class Factory : Unmarshaller.Factory","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/index.html#constructors","text":"Name Summary <init> JsonUnmarshaller(adapter: JsonAdapter< Any >)","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/index.html#properties","text":"Name Summary adapter val adapter: JsonAdapter< Any >","title":"Properties"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/index.html#functions","text":"Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-init-.html","text":"misk / misk.web.marshal / JsonUnmarshaller / <init> <init> \u00b6 JsonUnmarshaller(adapter: JsonAdapter< Any >)","title":" init "},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-init-.html#init","text":"JsonUnmarshaller(adapter: JsonAdapter< Any >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/adapter.html","text":"misk / misk.web.marshal / JsonUnmarshaller / adapter adapter \u00b6 val adapter: JsonAdapter< Any >","title":"adapter - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/adapter.html#adapter","text":"val adapter: JsonAdapter< Any >","title":"adapter"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/unmarshal.html","text":"misk / misk.web.marshal / JsonUnmarshaller / unmarshal unmarshal \u00b6 fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ? Overrides Unmarshaller.unmarshal","title":"unmarshal - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/unmarshal.html#unmarshal","text":"fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ? Overrides Unmarshaller.unmarshal","title":"unmarshal"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/index.html","text":"misk / misk.web.marshal / JsonUnmarshaller / Factory Factory \u00b6 @Singleton class Factory : Unmarshaller.Factory Properties \u00b6 Name Summary moshi val moshi: Moshi Functions \u00b6 Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/index.html#factory","text":"@Singleton class Factory : Unmarshaller.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/index.html#properties","text":"Name Summary moshi val moshi: Moshi","title":"Properties"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/index.html#functions","text":"Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/create.html","text":"misk / misk.web.marshal / JsonUnmarshaller / Factory / create create \u00b6 fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/create.html#create","text":"fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/moshi.html","text":"misk / misk.web.marshal / JsonUnmarshaller / Factory / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk/misk.web.marshal/-json-unmarshaller/-factory/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk/misk.web.marshal/-marshaller/index.html","text":"misk / misk.web.marshal / Marshaller Marshaller \u00b6 interface Marshaller<in T> Marshalls typed kotlin objects into a ResponseBody Types \u00b6 Name Summary Factory interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : Functions \u00b6 Name Summary contentType abstract fun contentType(): MediaType? responseBody abstract fun responseBody(o: T ): ResponseBody Companion Object Functions \u00b6 Name Summary actualResponseType fun actualResponseType(type: KType ): Type Inheritors \u00b6 Name Summary FromByteString class FromByteString : Marshaller <ByteString> JsonMarshaller class JsonMarshaller<T> : Marshaller < T > PlainTextMarshaller object PlainTextMarshaller : Marshaller < Any > ProtobufMarshaller class ProtobufMarshaller<T> : Marshaller < T > ToNothing class ToNothing : Marshaller < Nothing >","title":"Marshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-marshaller/index.html#marshaller","text":"interface Marshaller<in T> Marshalls typed kotlin objects into a ResponseBody","title":"Marshaller"},{"location":"0.x/misk/misk.web.marshal/-marshaller/index.html#types","text":"Name Summary Factory interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule :","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-marshaller/index.html#functions","text":"Name Summary contentType abstract fun contentType(): MediaType? responseBody abstract fun responseBody(o: T ): ResponseBody","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-marshaller/index.html#companion-object-functions","text":"Name Summary actualResponseType fun actualResponseType(type: KType ): Type","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web.marshal/-marshaller/index.html#inheritors","text":"Name Summary FromByteString class FromByteString : Marshaller <ByteString> JsonMarshaller class JsonMarshaller<T> : Marshaller < T > PlainTextMarshaller object PlainTextMarshaller : Marshaller < Any > ProtobufMarshaller class ProtobufMarshaller<T> : Marshaller < T > ToNothing class ToNothing : Marshaller < Nothing >","title":"Inheritors"},{"location":"0.x/misk/misk.web.marshal/-marshaller/actual-response-type.html","text":"misk / misk.web.marshal / Marshaller / actualResponseType actualResponseType \u00b6 fun actualResponseType(type: KType ): Type","title":"actualResponseType - Misk"},{"location":"0.x/misk/misk.web.marshal/-marshaller/actual-response-type.html#actualresponsetype","text":"fun actualResponseType(type: KType ): Type","title":"actualResponseType"},{"location":"0.x/misk/misk.web.marshal/-marshaller/content-type.html","text":"misk / misk.web.marshal / Marshaller / contentType contentType \u00b6 abstract fun contentType(): MediaType? Return the media type of the marshalled content, if known to the Marshaller","title":"contentType - Misk"},{"location":"0.x/misk/misk.web.marshal/-marshaller/content-type.html#contenttype","text":"abstract fun contentType(): MediaType? Return the media type of the marshalled content, if known to the Marshaller","title":"contentType"},{"location":"0.x/misk/misk.web.marshal/-marshaller/response-body.html","text":"misk / misk.web.marshal / Marshaller / responseBody responseBody \u00b6 abstract fun responseBody(o: T ): ResponseBody Return The object marshalled into a ResponseBody","title":"responseBody - Misk"},{"location":"0.x/misk/misk.web.marshal/-marshaller/response-body.html#responsebody","text":"abstract fun responseBody(o: T ): ResponseBody Return The object marshalled into a ResponseBody","title":"responseBody"},{"location":"0.x/misk/misk.web.marshal/-marshaller/-factory/index.html","text":"misk / misk.web.marshal / Marshaller / Factory Factory \u00b6 interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<Marshaller.Factory>().to<MyFactory>() Functions \u00b6 Name Summary create abstract fun create(mediaType: MediaType, type: KType ): Marshaller < Any >? Inheritors \u00b6 Name Summary Factory class Factory : Marshaller.Factory Factory class Factory : Marshaller.Factory Factory class Factory : Marshaller.Factory","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-marshaller/-factory/index.html#factory","text":"interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<Marshaller.Factory>().to<MyFactory>()","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-marshaller/-factory/index.html#functions","text":"Name Summary create abstract fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-marshaller/-factory/index.html#inheritors","text":"Name Summary Factory class Factory : Marshaller.Factory Factory class Factory : Marshaller.Factory Factory class Factory : Marshaller.Factory","title":"Inheritors"},{"location":"0.x/misk/misk.web.marshal/-marshaller/-factory/create.html","text":"misk / misk.web.marshal / Marshaller / Factory / create create \u00b6 abstract fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-marshaller/-factory/create.html#create","text":"abstract fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"create"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/index.html","text":"misk / misk.web.marshal / MultipartUnmarshaller MultipartUnmarshaller \u00b6 object MultipartUnmarshaller : Unmarshaller Types \u00b6 Name Summary Factory class Factory : Unmarshaller.Factory Functions \u00b6 Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): MultipartReader","title":"MultipartUnmarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/index.html#multipartunmarshaller","text":"object MultipartUnmarshaller : Unmarshaller","title":"MultipartUnmarshaller"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/index.html#types","text":"Name Summary Factory class Factory : Unmarshaller.Factory","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/index.html#functions","text":"Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): MultipartReader","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/unmarshal.html","text":"misk / misk.web.marshal / MultipartUnmarshaller / unmarshal unmarshal \u00b6 fun unmarshal(requestHeaders: Headers, source: BufferedSource): MultipartReader Overrides Unmarshaller.unmarshal","title":"unmarshal - Misk"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/unmarshal.html#unmarshal","text":"fun unmarshal(requestHeaders: Headers, source: BufferedSource): MultipartReader Overrides Unmarshaller.unmarshal","title":"unmarshal"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/index.html","text":"misk / misk.web.marshal / MultipartUnmarshaller / Factory Factory \u00b6 @Singleton class Factory : Unmarshaller.Factory Properties \u00b6 Name Summary moshi val moshi: Moshi Functions \u00b6 Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/index.html#factory","text":"@Singleton class Factory : Unmarshaller.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/index.html#properties","text":"Name Summary moshi val moshi: Moshi","title":"Properties"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/index.html#functions","text":"Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/create.html","text":"misk / misk.web.marshal / MultipartUnmarshaller / Factory / create create \u00b6 fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/create.html#create","text":"fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/moshi.html","text":"misk / misk.web.marshal / MultipartUnmarshaller / Factory / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk/misk.web.marshal/-multipart-unmarshaller/-factory/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/index.html","text":"misk / misk.web.marshal / PlainTextMarshaller PlainTextMarshaller \u00b6 object PlainTextMarshaller : Marshaller < Any > Types \u00b6 Name Summary Factory class Factory : Marshaller.Factory Functions \u00b6 Name Summary contentType fun contentType(): MediaType responseBody fun responseBody(o: Any ): ResponseBody","title":"PlainTextMarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/index.html#plaintextmarshaller","text":"object PlainTextMarshaller : Marshaller < Any >","title":"PlainTextMarshaller"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/index.html#types","text":"Name Summary Factory class Factory : Marshaller.Factory","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/index.html#functions","text":"Name Summary contentType fun contentType(): MediaType responseBody fun responseBody(o: Any ): ResponseBody","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/content-type.html","text":"misk / misk.web.marshal / PlainTextMarshaller / contentType contentType \u00b6 fun contentType(): MediaType Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/content-type.html#contenttype","text":"fun contentType(): MediaType Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/response-body.html","text":"misk / misk.web.marshal / PlainTextMarshaller / responseBody responseBody \u00b6 fun responseBody(o: Any ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/response-body.html#responsebody","text":"fun responseBody(o: Any ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/index.html","text":"misk / misk.web.marshal / PlainTextMarshaller / Factory Factory \u00b6 @Singleton class Factory : Marshaller.Factory Constructors \u00b6 Name Summary <init> Factory() Functions \u00b6 Name Summary create fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/index.html#factory","text":"@Singleton class Factory : Marshaller.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/index.html#constructors","text":"Name Summary <init> Factory()","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/index.html#functions","text":"Name Summary create fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/-init-.html","text":"misk / misk.web.marshal / PlainTextMarshaller / Factory / <init> <init> \u00b6 Factory()","title":" init "},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/-init-.html#init","text":"Factory()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/create.html","text":"misk / misk.web.marshal / PlainTextMarshaller / Factory / create create \u00b6 fun create(mediaType: MediaType, type: KType ): Marshaller < Any >? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-marshaller/-factory/create.html#create","text":"fun create(mediaType: MediaType, type: KType ): Marshaller < Any >? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/index.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller PlainTextUnmarshaller \u00b6 object PlainTextUnmarshaller Types \u00b6 Name Summary Factory class Factory : Unmarshaller.Factory ToByteString object ToByteString : Unmarshaller ToString object ToString : Unmarshaller","title":"PlainTextUnmarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/index.html#plaintextunmarshaller","text":"object PlainTextUnmarshaller","title":"PlainTextUnmarshaller"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/index.html#types","text":"Name Summary Factory class Factory : Unmarshaller.Factory ToByteString object ToByteString : Unmarshaller ToString object ToString : Unmarshaller","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/index.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller / Factory Factory \u00b6 class Factory : Unmarshaller.Factory Constructors \u00b6 Name Summary <init> Factory() Functions \u00b6 Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/index.html#factory","text":"class Factory : Unmarshaller.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/index.html#constructors","text":"Name Summary <init> Factory()","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/index.html#functions","text":"Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/-init-.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller / Factory / <init> <init> \u00b6 Factory()","title":" init "},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/-init-.html#init","text":"Factory()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/create.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller / Factory / create create \u00b6 fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-factory/create.html#create","text":"fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/index.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller / ToByteString ToByteString \u00b6 object ToByteString : Unmarshaller Functions \u00b6 Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): ByteString","title":"ToByteString - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/index.html#tobytestring","text":"object ToByteString : Unmarshaller","title":"ToByteString"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/index.html#functions","text":"Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): ByteString","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/unmarshal.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller / ToByteString / unmarshal unmarshal \u00b6 fun unmarshal(requestHeaders: Headers, source: BufferedSource): ByteString Overrides Unmarshaller.unmarshal","title":"unmarshal - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-byte-string/unmarshal.html#unmarshal","text":"fun unmarshal(requestHeaders: Headers, source: BufferedSource): ByteString Overrides Unmarshaller.unmarshal","title":"unmarshal"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/index.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller / ToString ToString \u00b6 object ToString : Unmarshaller Functions \u00b6 Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): String","title":"ToString - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/index.html#tostring","text":"object ToString : Unmarshaller","title":"ToString"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/index.html#functions","text":"Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): String","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/unmarshal.html","text":"misk / misk.web.marshal / PlainTextUnmarshaller / ToString / unmarshal unmarshal \u00b6 fun unmarshal(requestHeaders: Headers, source: BufferedSource): String Overrides Unmarshaller.unmarshal","title":"unmarshal - Misk"},{"location":"0.x/misk/misk.web.marshal/-plain-text-unmarshaller/-to-string/unmarshal.html#unmarshal","text":"fun unmarshal(requestHeaders: Headers, source: BufferedSource): String Overrides Unmarshaller.unmarshal","title":"unmarshal"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/index.html","text":"misk / misk.web.marshal / ProtobufMarshaller ProtobufMarshaller \u00b6 class ProtobufMarshaller<T> : Marshaller < T > Types \u00b6 Name Summary Factory class Factory : Marshaller.Factory Constructors \u00b6 Name Summary <init> ProtobufMarshaller(adapter: ProtoAdapter< T >) Properties \u00b6 Name Summary adapter val adapter: ProtoAdapter< T > Functions \u00b6 Name Summary contentType fun contentType(): MediaType responseBody fun responseBody(o: T ): ResponseBody","title":"ProtobufMarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/index.html#protobufmarshaller","text":"class ProtobufMarshaller<T> : Marshaller < T >","title":"ProtobufMarshaller"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/index.html#types","text":"Name Summary Factory class Factory : Marshaller.Factory","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/index.html#constructors","text":"Name Summary <init> ProtobufMarshaller(adapter: ProtoAdapter< T >)","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/index.html#properties","text":"Name Summary adapter val adapter: ProtoAdapter< T >","title":"Properties"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/index.html#functions","text":"Name Summary contentType fun contentType(): MediaType responseBody fun responseBody(o: T ): ResponseBody","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-init-.html","text":"misk / misk.web.marshal / ProtobufMarshaller / <init> <init> \u00b6 ProtobufMarshaller(adapter: ProtoAdapter< T >)","title":" init "},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-init-.html#init","text":"ProtobufMarshaller(adapter: ProtoAdapter< T >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/adapter.html","text":"misk / misk.web.marshal / ProtobufMarshaller / adapter adapter \u00b6 val adapter: ProtoAdapter< T >","title":"adapter - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/adapter.html#adapter","text":"val adapter: ProtoAdapter< T >","title":"adapter"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/content-type.html","text":"misk / misk.web.marshal / ProtobufMarshaller / contentType contentType \u00b6 fun contentType(): MediaType Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/content-type.html#contenttype","text":"fun contentType(): MediaType Overrides Marshaller.contentType Return the media type of the marshalled content, if known to the Marshaller","title":"contentType"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/response-body.html","text":"misk / misk.web.marshal / ProtobufMarshaller / responseBody responseBody \u00b6 fun responseBody(o: T ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/response-body.html#responsebody","text":"fun responseBody(o: T ): ResponseBody Overrides Marshaller.responseBody Return The object marshalled into a ResponseBody","title":"responseBody"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/index.html","text":"misk / misk.web.marshal / ProtobufMarshaller / Factory Factory \u00b6 @Singleton class Factory : Marshaller.Factory Constructors \u00b6 Name Summary <init> Factory() Functions \u00b6 Name Summary create fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/index.html#factory","text":"@Singleton class Factory : Marshaller.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/index.html#constructors","text":"Name Summary <init> Factory()","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/index.html#functions","text":"Name Summary create fun create(mediaType: MediaType, type: KType ): Marshaller < Any >?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/-init-.html","text":"misk / misk.web.marshal / ProtobufMarshaller / Factory / <init> <init> \u00b6 Factory()","title":" init "},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/-init-.html#init","text":"Factory()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/create.html","text":"misk / misk.web.marshal / ProtobufMarshaller / Factory / create create \u00b6 fun create(mediaType: MediaType, type: KType ): Marshaller < Any >? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-marshaller/-factory/create.html#create","text":"fun create(mediaType: MediaType, type: KType ): Marshaller < Any >? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/index.html","text":"misk / misk.web.marshal / ProtobufUnmarshaller ProtobufUnmarshaller \u00b6 class ProtobufUnmarshaller : Unmarshaller Types \u00b6 Name Summary Factory class Factory : Unmarshaller.Factory Constructors \u00b6 Name Summary <init> ProtobufUnmarshaller(adapter: ProtoAdapter< Any >) Properties \u00b6 Name Summary adapter val adapter: ProtoAdapter< Any > Functions \u00b6 Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any","title":"ProtobufUnmarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/index.html#protobufunmarshaller","text":"class ProtobufUnmarshaller : Unmarshaller","title":"ProtobufUnmarshaller"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/index.html#types","text":"Name Summary Factory class Factory : Unmarshaller.Factory","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/index.html#constructors","text":"Name Summary <init> ProtobufUnmarshaller(adapter: ProtoAdapter< Any >)","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/index.html#properties","text":"Name Summary adapter val adapter: ProtoAdapter< Any >","title":"Properties"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/index.html#functions","text":"Name Summary unmarshal fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-init-.html","text":"misk / misk.web.marshal / ProtobufUnmarshaller / <init> <init> \u00b6 ProtobufUnmarshaller(adapter: ProtoAdapter< Any >)","title":" init "},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-init-.html#init","text":"ProtobufUnmarshaller(adapter: ProtoAdapter< Any >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/adapter.html","text":"misk / misk.web.marshal / ProtobufUnmarshaller / adapter adapter \u00b6 val adapter: ProtoAdapter< Any >","title":"adapter - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/adapter.html#adapter","text":"val adapter: ProtoAdapter< Any >","title":"adapter"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/unmarshal.html","text":"misk / misk.web.marshal / ProtobufUnmarshaller / unmarshal unmarshal \u00b6 fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any Overrides Unmarshaller.unmarshal","title":"unmarshal - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/unmarshal.html#unmarshal","text":"fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any Overrides Unmarshaller.unmarshal","title":"unmarshal"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/index.html","text":"misk / misk.web.marshal / ProtobufUnmarshaller / Factory Factory \u00b6 @Singleton class Factory : Unmarshaller.Factory Constructors \u00b6 Name Summary <init> Factory() Functions \u00b6 Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/index.html#factory","text":"@Singleton class Factory : Unmarshaller.Factory","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/index.html#constructors","text":"Name Summary <init> Factory()","title":"Constructors"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/index.html#functions","text":"Name Summary create fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/-init-.html","text":"misk / misk.web.marshal / ProtobufUnmarshaller / Factory / <init> <init> \u00b6 Factory()","title":" init "},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/-init-.html#init","text":"Factory()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/create.html","text":"misk / misk.web.marshal / ProtobufUnmarshaller / Factory / create create \u00b6 fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-protobuf-unmarshaller/-factory/create.html#create","text":"fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Overrides Factory.create","title":"create"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/index.html","text":"misk / misk.web.marshal / Unmarshaller Unmarshaller \u00b6 interface Unmarshaller Unmarshalls a typed object from an incoming source Types \u00b6 Name Summary Factory interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : Functions \u00b6 Name Summary unmarshal abstract fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ? Inheritors \u00b6 Name Summary JsonUnmarshaller class JsonUnmarshaller : Unmarshaller MultipartUnmarshaller object MultipartUnmarshaller : Unmarshaller ProtobufUnmarshaller class ProtobufUnmarshaller : Unmarshaller ToByteString object ToByteString : Unmarshaller ToString object ToString : Unmarshaller","title":"Unmarshaller - Misk"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/index.html#unmarshaller","text":"interface Unmarshaller Unmarshalls a typed object from an incoming source","title":"Unmarshaller"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/index.html#types","text":"Name Summary Factory interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule :","title":"Types"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/index.html#functions","text":"Name Summary unmarshal abstract fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/index.html#inheritors","text":"Name Summary JsonUnmarshaller class JsonUnmarshaller : Unmarshaller MultipartUnmarshaller object MultipartUnmarshaller : Unmarshaller ProtobufUnmarshaller class ProtobufUnmarshaller : Unmarshaller ToByteString object ToByteString : Unmarshaller ToString object ToString : Unmarshaller","title":"Inheritors"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/unmarshal.html","text":"misk / misk.web.marshal / Unmarshaller / unmarshal unmarshal \u00b6 abstract fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ?","title":"unmarshal - Misk"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/unmarshal.html#unmarshal","text":"abstract fun unmarshal(requestHeaders: Headers, source: BufferedSource): Any ?","title":"unmarshal"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/-factory/index.html","text":"misk / misk.web.marshal / Unmarshaller / Factory Factory \u00b6 interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<Unmarshaller.Factory>().to<MyFactory>() Functions \u00b6 Name Summary create abstract fun create(mediaType: MediaType, type: KType ): Unmarshaller ? Inheritors \u00b6 Name Summary Factory class Factory : Unmarshaller.Factory Factory class Factory : Unmarshaller.Factory Factory class Factory : Unmarshaller.Factory Factory class Factory : Unmarshaller.Factory","title":"Factory - Misk"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/-factory/index.html#factory","text":"interface Factory This interface is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<Unmarshaller.Factory>().to<MyFactory>()","title":"Factory"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/-factory/index.html#functions","text":"Name Summary create abstract fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"Functions"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/-factory/index.html#inheritors","text":"Name Summary Factory class Factory : Unmarshaller.Factory Factory class Factory : Unmarshaller.Factory Factory class Factory : Unmarshaller.Factory Factory class Factory : Unmarshaller.Factory","title":"Inheritors"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/-factory/create.html","text":"misk / misk.web.marshal / Unmarshaller / Factory / create create \u00b6 abstract fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"create - Misk"},{"location":"0.x/misk/misk.web.marshal/-unmarshaller/-factory/create.html#create","text":"abstract fun create(mediaType: MediaType, type: KType ): Unmarshaller ?","title":"create"},{"location":"0.x/misk/misk.web.mdc/index.html","text":"misk / misk.web.mdc Package misk.web.mdc \u00b6 Types \u00b6 Name Summary LogContextProvider interface LogContextProvider","title":"Package misk.web.mdc - Misk"},{"location":"0.x/misk/misk.web.mdc/index.html#package-miskwebmdc","text":"","title":"Package misk.web.mdc"},{"location":"0.x/misk/misk.web.mdc/index.html#types","text":"Name Summary LogContextProvider interface LogContextProvider","title":"Types"},{"location":"0.x/misk/misk.web.mdc/-log-context-provider/index.html","text":"misk / misk.web.mdc / LogContextProvider LogContextProvider \u00b6 interface LogContextProvider Functions \u00b6 Name Summary get abstract fun get(request: HttpServletRequest): String ?","title":"LogContextProvider - Misk"},{"location":"0.x/misk/misk.web.mdc/-log-context-provider/index.html#logcontextprovider","text":"interface LogContextProvider","title":"LogContextProvider"},{"location":"0.x/misk/misk.web.mdc/-log-context-provider/index.html#functions","text":"Name Summary get abstract fun get(request: HttpServletRequest): String ?","title":"Functions"},{"location":"0.x/misk/misk.web.mdc/-log-context-provider/get.html","text":"misk / misk.web.mdc / LogContextProvider / get get \u00b6 abstract fun get(request: HttpServletRequest): String ?","title":"get - Misk"},{"location":"0.x/misk/misk.web.mdc/-log-context-provider/get.html#get","text":"abstract fun get(request: HttpServletRequest): String ?","title":"get"},{"location":"0.x/misk/misk.web.metadata/index.html","text":"misk / misk.web.metadata Package misk.web.metadata \u00b6 Types \u00b6 Name Summary DashboardMetadataAction class DashboardMetadataAction : WebAction Serve metadata related to a Misk-Web Dashboard ServiceMetadataAction class ServiceMetadataAction : WebAction Service Metadata used for front end dashboards including App Name and Misk.Deployment name","title":"Package misk.web.metadata - Misk"},{"location":"0.x/misk/misk.web.metadata/index.html#package-miskwebmetadata","text":"","title":"Package misk.web.metadata"},{"location":"0.x/misk/misk.web.metadata/index.html#types","text":"Name Summary DashboardMetadataAction class DashboardMetadataAction : WebAction Serve metadata related to a Misk-Web Dashboard ServiceMetadataAction class ServiceMetadataAction : WebAction Service Metadata used for front end dashboards including App Name and Misk.Deployment name","title":"Types"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/index.html","text":"misk / misk.web.metadata / DashboardMetadataAction DashboardMetadataAction \u00b6 @Singleton class DashboardMetadataAction : WebAction Serve metadata related to a Misk-Web Dashboard Multiple dashboards with Misk-Web tabs can be bound by binding tabs to a different Dashboard Annotation. For example, all tabs used in the Misk Admin Dashboard are bound with the AdminDashboard annotation; tabs used in a service front end app, like Backfila, would be bound with a \u201cBackfilaApp\u201d annotation. Dashboard related metadata is multibound with the slug that corresponds to a Dashboard Annotation. DashboardMetadataAction returns only the metadata for the requested dashboard. Types \u00b6 Name Summary DashboardMetadata data class DashboardMetadata Response data class Response Constructors \u00b6 Name Summary <init> DashboardMetadataAction() Serve metadata related to a Misk-Web Dashboard Properties \u00b6 Name Summary callerProvider lateinit var callerProvider: ActionScoped<MiskCaller?> Functions \u00b6 Name Summary getAll fun getAll(dashboard_slug: String ): DashboardMetadataAction.Response Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"DashboardMetadataAction - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/index.html#dashboardmetadataaction","text":"@Singleton class DashboardMetadataAction : WebAction Serve metadata related to a Misk-Web Dashboard Multiple dashboards with Misk-Web tabs can be bound by binding tabs to a different Dashboard Annotation. For example, all tabs used in the Misk Admin Dashboard are bound with the AdminDashboard annotation; tabs used in a service front end app, like Backfila, would be bound with a \u201cBackfilaApp\u201d annotation. Dashboard related metadata is multibound with the slug that corresponds to a Dashboard Annotation. DashboardMetadataAction returns only the metadata for the requested dashboard.","title":"DashboardMetadataAction"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/index.html#types","text":"Name Summary DashboardMetadata data class DashboardMetadata Response data class Response","title":"Types"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/index.html#constructors","text":"Name Summary <init> DashboardMetadataAction() Serve metadata related to a Misk-Web Dashboard","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/index.html#properties","text":"Name Summary callerProvider lateinit var callerProvider: ActionScoped<MiskCaller?>","title":"Properties"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/index.html#functions","text":"Name Summary getAll fun getAll(dashboard_slug: String ): DashboardMetadataAction.Response","title":"Functions"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-init-.html","text":"misk / misk.web.metadata / DashboardMetadataAction / <init> <init> \u00b6 DashboardMetadataAction() Serve metadata related to a Misk-Web Dashboard Multiple dashboards with Misk-Web tabs can be bound by binding tabs to a different Dashboard Annotation. For example, all tabs used in the Misk Admin Dashboard are bound with the AdminDashboard annotation; tabs used in a service front end app, like Backfila, would be bound with a \u201cBackfilaApp\u201d annotation. Dashboard related metadata is multibound with the slug that corresponds to a Dashboard Annotation. DashboardMetadataAction returns only the metadata for the requested dashboard.","title":" init "},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-init-.html#init","text":"DashboardMetadataAction() Serve metadata related to a Misk-Web Dashboard Multiple dashboards with Misk-Web tabs can be bound by binding tabs to a different Dashboard Annotation. For example, all tabs used in the Misk Admin Dashboard are bound with the AdminDashboard annotation; tabs used in a service front end app, like Backfila, would be bound with a \u201cBackfilaApp\u201d annotation. Dashboard related metadata is multibound with the slug that corresponds to a Dashboard Annotation. DashboardMetadataAction returns only the metadata for the requested dashboard.","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/caller-provider.html","text":"misk / misk.web.metadata / DashboardMetadataAction / callerProvider callerProvider \u00b6 lateinit var callerProvider: @JvmSuppressWildcards ActionScoped<MiskCaller?>","title":"callerProvider - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/caller-provider.html#callerprovider","text":"lateinit var callerProvider: @JvmSuppressWildcards ActionScoped<MiskCaller?>","title":"callerProvider"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/get-all.html","text":"misk / misk.web.metadata / DashboardMetadataAction / getAll getAll \u00b6 fun getAll(dashboard_slug: String ): DashboardMetadataAction.Response","title":"getAll - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/get-all.html#getall","text":"fun getAll(dashboard_slug: String ): DashboardMetadataAction.Response","title":"getAll"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/index.html","text":"misk / misk.web.metadata / DashboardMetadataAction / DashboardMetadata DashboardMetadata \u00b6 data class DashboardMetadata Constructors \u00b6 Name Summary <init> DashboardMetadata(home_url: String = \"\", navbar_items: List < String > = listOf(), navbar_status: String = \"\", tabs: List < DashboardTab > = listOf(), theme: MiskWebTheme ? = null) Properties \u00b6 Name Summary home_url val home_url: String navbar_items val navbar_items: List < String > navbar_status val navbar_status: String tabs val tabs: List < DashboardTab > theme val theme: MiskWebTheme ? If null, uses default theme that ships with Misk-Web","title":"DashboardMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/index.html#dashboardmetadata","text":"data class DashboardMetadata","title":"DashboardMetadata"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/index.html#constructors","text":"Name Summary <init> DashboardMetadata(home_url: String = \"\", navbar_items: List < String > = listOf(), navbar_status: String = \"\", tabs: List < DashboardTab > = listOf(), theme: MiskWebTheme ? = null)","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/index.html#properties","text":"Name Summary home_url val home_url: String navbar_items val navbar_items: List < String > navbar_status val navbar_status: String tabs val tabs: List < DashboardTab > theme val theme: MiskWebTheme ? If null, uses default theme that ships with Misk-Web","title":"Properties"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/-init-.html","text":"misk / misk.web.metadata / DashboardMetadataAction / DashboardMetadata / <init> <init> \u00b6 DashboardMetadata(home_url: String = \"\", navbar_items: List < String > = listOf(), navbar_status: String = \"\", tabs: List < DashboardTab > = listOf(), theme: MiskWebTheme ? = null)","title":" init "},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/-init-.html#init","text":"DashboardMetadata(home_url: String = \"\", navbar_items: List < String > = listOf(), navbar_status: String = \"\", tabs: List < DashboardTab > = listOf(), theme: MiskWebTheme ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/home_url.html","text":"misk / misk.web.metadata / DashboardMetadataAction / DashboardMetadata / home_url home_url \u00b6 val home_url: String","title":"home_url - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/home_url.html#home_url","text":"val home_url: String","title":"home_url"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_items.html","text":"misk / misk.web.metadata / DashboardMetadataAction / DashboardMetadata / navbar_items navbar_items \u00b6 val navbar_items: List < String >","title":"navbar_items - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_items.html#navbar_items","text":"val navbar_items: List < String >","title":"navbar_items"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_status.html","text":"misk / misk.web.metadata / DashboardMetadataAction / DashboardMetadata / navbar_status navbar_status \u00b6 val navbar_status: String","title":"navbar_status - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/navbar_status.html#navbar_status","text":"val navbar_status: String","title":"navbar_status"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/tabs.html","text":"misk / misk.web.metadata / DashboardMetadataAction / DashboardMetadata / tabs tabs \u00b6 val tabs: List < DashboardTab >","title":"tabs - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/tabs.html#tabs","text":"val tabs: List < DashboardTab >","title":"tabs"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/theme.html","text":"misk / misk.web.metadata / DashboardMetadataAction / DashboardMetadata / theme theme \u00b6 val theme: MiskWebTheme ? If null, uses default theme that ships with Misk-Web","title":"theme - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-dashboard-metadata/theme.html#theme","text":"val theme: MiskWebTheme ? If null, uses default theme that ships with Misk-Web","title":"theme"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/index.html","text":"misk / misk.web.metadata / DashboardMetadataAction / Response Response \u00b6 data class Response Constructors \u00b6 Name Summary <init> Response(dashboardMetadata: DashboardMetadataAction.DashboardMetadata = DashboardMetadata()) Properties \u00b6 Name Summary dashboardMetadata val dashboardMetadata: DashboardMetadataAction.DashboardMetadata","title":"Response - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/index.html#response","text":"data class Response","title":"Response"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/index.html#constructors","text":"Name Summary <init> Response(dashboardMetadata: DashboardMetadataAction.DashboardMetadata = DashboardMetadata())","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/index.html#properties","text":"Name Summary dashboardMetadata val dashboardMetadata: DashboardMetadataAction.DashboardMetadata","title":"Properties"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/-init-.html","text":"misk / misk.web.metadata / DashboardMetadataAction / Response / <init> <init> \u00b6 Response(dashboardMetadata: DashboardMetadataAction.DashboardMetadata = DashboardMetadata())","title":" init "},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/-init-.html#init","text":"Response(dashboardMetadata: DashboardMetadataAction.DashboardMetadata = DashboardMetadata())","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/dashboard-metadata.html","text":"misk / misk.web.metadata / DashboardMetadataAction / Response / dashboardMetadata dashboardMetadata \u00b6 val dashboardMetadata: DashboardMetadataAction.DashboardMetadata","title":"dashboardMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata/-dashboard-metadata-action/-response/dashboard-metadata.html#dashboardmetadata","text":"val dashboardMetadata: DashboardMetadataAction.DashboardMetadata","title":"dashboardMetadata"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/index.html","text":"misk / misk.web.metadata / ServiceMetadataAction ServiceMetadataAction \u00b6 @Singleton class ServiceMetadataAction : WebAction Service Metadata used for front end dashboards including App Name and Misk.Deployment name Types \u00b6 Name Summary OptionalBinder class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor Response data class Response ServiceMetadata data class ServiceMetadata Constructors \u00b6 Name Summary <init> ServiceMetadataAction(optionalBinder: ServiceMetadataAction.OptionalBinder ) Service Metadata used for front end dashboards including App Name and Misk.Deployment name Functions \u00b6 Name Summary getAll fun getAll(): ServiceMetadataAction.Response Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"ServiceMetadataAction - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/index.html#servicemetadataaction","text":"@Singleton class ServiceMetadataAction : WebAction Service Metadata used for front end dashboards including App Name and Misk.Deployment name","title":"ServiceMetadataAction"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/index.html#types","text":"Name Summary OptionalBinder class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor Response data class Response ServiceMetadata data class ServiceMetadata","title":"Types"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/index.html#constructors","text":"Name Summary <init> ServiceMetadataAction(optionalBinder: ServiceMetadataAction.OptionalBinder ) Service Metadata used for front end dashboards including App Name and Misk.Deployment name","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/index.html#functions","text":"Name Summary getAll fun getAll(): ServiceMetadataAction.Response","title":"Functions"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-init-.html","text":"misk / misk.web.metadata / ServiceMetadataAction / <init> <init> \u00b6 ServiceMetadataAction(optionalBinder: ServiceMetadataAction.OptionalBinder ) Service Metadata used for front end dashboards including App Name and Misk.Deployment name","title":" init "},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-init-.html#init","text":"ServiceMetadataAction(optionalBinder: ServiceMetadataAction.OptionalBinder ) Service Metadata used for front end dashboards including App Name and Misk.Deployment name","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/get-all.html","text":"misk / misk.web.metadata / ServiceMetadataAction / getAll getAll \u00b6 fun getAll(): ServiceMetadataAction.Response","title":"getAll - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/get-all.html#getall","text":"fun getAll(): ServiceMetadataAction.Response","title":"getAll"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/index.html","text":"misk / misk.web.metadata / ServiceMetadataAction / OptionalBinder OptionalBinder \u00b6 @Singleton class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor Constructors \u00b6 Name Summary <init> OptionalBinder(appName: String , deployment: Deployment) https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor Properties \u00b6 Name Summary appName val appName: String serviceMetadata var serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"OptionalBinder - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/index.html#optionalbinder","text":"@Singleton class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":"OptionalBinder"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/index.html#constructors","text":"Name Summary <init> OptionalBinder(appName: String , deployment: Deployment) https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/index.html#properties","text":"Name Summary appName val appName: String serviceMetadata var serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"Properties"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/-init-.html","text":"misk / misk.web.metadata / ServiceMetadataAction / OptionalBinder / <init> <init> \u00b6 OptionalBinder(appName: String , deployment: Deployment) https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":" init "},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/-init-.html#init","text":"OptionalBinder(appName: String , deployment: Deployment) https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/app-name.html","text":"misk / misk.web.metadata / ServiceMetadataAction / OptionalBinder / appName appName \u00b6 val appName: String","title":"appName - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/app-name.html#appname","text":"val appName: String","title":"appName"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/service-metadata.html","text":"misk / misk.web.metadata / ServiceMetadataAction / OptionalBinder / serviceMetadata serviceMetadata \u00b6 var serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"serviceMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-optional-binder/service-metadata.html#servicemetadata","text":"var serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"serviceMetadata"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/index.html","text":"misk / misk.web.metadata / ServiceMetadataAction / Response Response \u00b6 data class Response Constructors \u00b6 Name Summary <init> Response(serviceMetadata: ServiceMetadataAction.ServiceMetadata ) Properties \u00b6 Name Summary serviceMetadata val serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"Response - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/index.html#response","text":"data class Response","title":"Response"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/index.html#constructors","text":"Name Summary <init> Response(serviceMetadata: ServiceMetadataAction.ServiceMetadata )","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/index.html#properties","text":"Name Summary serviceMetadata val serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"Properties"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/-init-.html","text":"misk / misk.web.metadata / ServiceMetadataAction / Response / <init> <init> \u00b6 Response(serviceMetadata: ServiceMetadataAction.ServiceMetadata )","title":" init "},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/-init-.html#init","text":"Response(serviceMetadata: ServiceMetadataAction.ServiceMetadata )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/service-metadata.html","text":"misk / misk.web.metadata / ServiceMetadataAction / Response / serviceMetadata serviceMetadata \u00b6 val serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"serviceMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-response/service-metadata.html#servicemetadata","text":"val serviceMetadata: ServiceMetadataAction.ServiceMetadata","title":"serviceMetadata"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/index.html","text":"misk / misk.web.metadata / ServiceMetadataAction / ServiceMetadata ServiceMetadata \u00b6 data class ServiceMetadata Constructors \u00b6 Name Summary <init> ServiceMetadata(app_name: String , environment: String ) Properties \u00b6 Name Summary app_name val app_name: String environment val environment: String","title":"ServiceMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/index.html#servicemetadata","text":"data class ServiceMetadata","title":"ServiceMetadata"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/index.html#constructors","text":"Name Summary <init> ServiceMetadata(app_name: String , environment: String )","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/index.html#properties","text":"Name Summary app_name val app_name: String environment val environment: String","title":"Properties"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/-init-.html","text":"misk / misk.web.metadata / ServiceMetadataAction / ServiceMetadata / <init> <init> \u00b6 ServiceMetadata(app_name: String , environment: String )","title":" init "},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/-init-.html#init","text":"ServiceMetadata(app_name: String , environment: String )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/app_name.html","text":"misk / misk.web.metadata / ServiceMetadataAction / ServiceMetadata / app_name app_name \u00b6 val app_name: String","title":"app_name - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/app_name.html#app_name","text":"val app_name: String","title":"app_name"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/environment.html","text":"misk / misk.web.metadata / ServiceMetadataAction / ServiceMetadata / environment environment \u00b6 val environment: String","title":"environment - Misk"},{"location":"0.x/misk/misk.web.metadata/-service-metadata-action/-service-metadata/environment.html#environment","text":"val environment: String","title":"environment"},{"location":"0.x/misk/misk.web.metadata.config/index.html","text":"misk / misk.web.metadata.config Package misk.web.metadata.config \u00b6 Types \u00b6 Name Summary ConfigMetadataAction class ConfigMetadataAction : WebAction","title":"Package misk.web.metadata.config - Misk"},{"location":"0.x/misk/misk.web.metadata.config/index.html#package-miskwebmetadataconfig","text":"","title":"Package misk.web.metadata.config"},{"location":"0.x/misk/misk.web.metadata.config/index.html#types","text":"Name Summary ConfigMetadataAction class ConfigMetadataAction : WebAction","title":"Types"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction ConfigMetadataAction \u00b6 @Singleton class ConfigMetadataAction : WebAction Types \u00b6 Name Summary Response data class Response Constructors \u00b6 Name Summary <init> ConfigMetadataAction(appName: String , deployment: Deployment, config: Config) Properties \u00b6 Name Summary appName val appName: String config val config: Config deployment val deployment: Deployment resources val resources: Map < String , String ?> Functions \u00b6 Name Summary getAll fun getAll(): ConfigMetadataAction.Response Companion Object Functions \u00b6 Name Summary generateConfigResources fun generateConfigResources(appName: String , deployment: Deployment, config: Config): Map < String , String ?> redact fun redact(mapOfOutputs: Map < String , String ?>, regex: Regex ): Map < String , String ?> fun redact(output: String , regex: Regex ): String Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"ConfigMetadataAction - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html#configmetadataaction","text":"@Singleton class ConfigMetadataAction : WebAction","title":"ConfigMetadataAction"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html#types","text":"Name Summary Response data class Response","title":"Types"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html#constructors","text":"Name Summary <init> ConfigMetadataAction(appName: String , deployment: Deployment, config: Config)","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html#properties","text":"Name Summary appName val appName: String config val config: Config deployment val deployment: Deployment resources val resources: Map < String , String ?>","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html#functions","text":"Name Summary getAll fun getAll(): ConfigMetadataAction.Response","title":"Functions"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html#companion-object-functions","text":"Name Summary generateConfigResources fun generateConfigResources(appName: String , deployment: Deployment, config: Config): Map < String , String ?> redact fun redact(mapOfOutputs: Map < String , String ?>, regex: Regex ): Map < String , String ?> fun redact(output: String , regex: Regex ): String","title":"Companion Object Functions"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-init-.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / <init> <init> \u00b6 ConfigMetadataAction(appName: String , deployment: Deployment, config: Config)","title":" init "},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-init-.html#init","text":"ConfigMetadataAction(appName: String , deployment: Deployment, config: Config)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/app-name.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / appName appName \u00b6 val appName: String","title":"appName - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/app-name.html#appname","text":"val appName: String","title":"appName"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/config.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / config config \u00b6 val config: Config","title":"config - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/config.html#config","text":"val config: Config","title":"config"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/deployment.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / deployment deployment \u00b6 val deployment: Deployment","title":"deployment - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/deployment.html#deployment","text":"val deployment: Deployment","title":"deployment"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/generate-config-resources.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / generateConfigResources generateConfigResources \u00b6 fun generateConfigResources(appName: String , deployment: Deployment, config: Config): Map < String , String ?>","title":"generateConfigResources - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/generate-config-resources.html#generateconfigresources","text":"fun generateConfigResources(appName: String , deployment: Deployment, config: Config): Map < String , String ?>","title":"generateConfigResources"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/get-all.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / getAll getAll \u00b6 fun getAll(): ConfigMetadataAction.Response","title":"getAll - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/get-all.html#getall","text":"fun getAll(): ConfigMetadataAction.Response","title":"getAll"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/redact.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / redact redact \u00b6 fun redact(mapOfOutputs: Map < String , String ?>, regex: Regex ): Map < String , String ?> fun redact(output: String , regex: Regex ): String","title":"redact - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/redact.html#redact","text":"fun redact(mapOfOutputs: Map < String , String ?>, regex: Regex ): Map < String , String ?> fun redact(output: String , regex: Regex ): String","title":"redact"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/resources.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / resources resources \u00b6 val resources: Map < String , String ?>","title":"resources - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/resources.html#resources","text":"val resources: Map < String , String ?>","title":"resources"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/index.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / Response Response \u00b6 data class Response Constructors \u00b6 Name Summary <init> Response(resources: Map < String , String ?>) Properties \u00b6 Name Summary resources val resources: Map < String , String ?>","title":"Response - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/index.html#response","text":"data class Response","title":"Response"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/index.html#constructors","text":"Name Summary <init> Response(resources: Map < String , String ?>)","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/index.html#properties","text":"Name Summary resources val resources: Map < String , String ?>","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/-init-.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / Response / <init> <init> \u00b6 Response(resources: Map < String , String ?>)","title":" init "},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/-init-.html#init","text":"Response(resources: Map < String , String ?>)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/resources.html","text":"misk / misk.web.metadata.config / ConfigMetadataAction / Response / resources resources \u00b6 val resources: Map < String , String ?>","title":"resources - Misk"},{"location":"0.x/misk/misk.web.metadata.config/-config-metadata-action/-response/resources.html#resources","text":"val resources: Map < String , String ?>","title":"resources"},{"location":"0.x/misk/misk.web.metadata.database/index.html","text":"misk / misk.web.metadata.database Package misk.web.metadata.database \u00b6 Types \u00b6 Name Summary DatabaseQueryFunctionMetadata interface DatabaseQueryFunctionMetadata DatabaseQueryMetadata data class DatabaseQueryMetadata Metadata front end model for Database Query Misk-Web Tab DatabaseQueryMetadataAction class DatabaseQueryMetadataAction : WebAction Display available queries and their types Annotations \u00b6 Name Summary NoAdminDashboardDatabaseAccess annotation class NoAdminDashboardDatabaseAccess","title":"Package misk.web.metadata.database - Misk"},{"location":"0.x/misk/misk.web.metadata.database/index.html#package-miskwebmetadatadatabase","text":"","title":"Package misk.web.metadata.database"},{"location":"0.x/misk/misk.web.metadata.database/index.html#types","text":"Name Summary DatabaseQueryFunctionMetadata interface DatabaseQueryFunctionMetadata DatabaseQueryMetadata data class DatabaseQueryMetadata Metadata front end model for Database Query Misk-Web Tab DatabaseQueryMetadataAction class DatabaseQueryMetadataAction : WebAction Display available queries and their types","title":"Types"},{"location":"0.x/misk/misk.web.metadata.database/index.html#annotations","text":"Name Summary NoAdminDashboardDatabaseAccess annotation class NoAdminDashboardDatabaseAccess","title":"Annotations"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/index.html","text":"misk / misk.web.metadata.database / DatabaseQueryFunctionMetadata DatabaseQueryFunctionMetadata \u00b6 interface DatabaseQueryFunctionMetadata Properties \u00b6 Name Summary name abstract val name: String Function simple name parametersTypeName abstract val parametersTypeName: String String Type that identifies the parameters signature for the function Inheritors \u00b6 Name Summary ConstraintMetadata data class ConstraintMetadata : DatabaseQueryFunctionMetadata OrderMetadata data class OrderMetadata : DatabaseQueryFunctionMetadata SelectMetadata data class SelectMetadata : DatabaseQueryFunctionMetadata","title":"DatabaseQueryFunctionMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/index.html#databasequeryfunctionmetadata","text":"interface DatabaseQueryFunctionMetadata","title":"DatabaseQueryFunctionMetadata"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/index.html#properties","text":"Name Summary name abstract val name: String Function simple name parametersTypeName abstract val parametersTypeName: String String Type that identifies the parameters signature for the function","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/index.html#inheritors","text":"Name Summary ConstraintMetadata data class ConstraintMetadata : DatabaseQueryFunctionMetadata OrderMetadata data class OrderMetadata : DatabaseQueryFunctionMetadata SelectMetadata data class SelectMetadata : DatabaseQueryFunctionMetadata","title":"Inheritors"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/name.html","text":"misk / misk.web.metadata.database / DatabaseQueryFunctionMetadata / name name \u00b6 abstract val name: String Function simple name","title":"name - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/name.html#name","text":"abstract val name: String Function simple name","title":"name"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/parameters-type-name.html","text":"misk / misk.web.metadata.database / DatabaseQueryFunctionMetadata / parametersTypeName parametersTypeName \u00b6 abstract val parametersTypeName: String String Type that identifies the parameters signature for the function","title":"parametersTypeName - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-function-metadata/parameters-type-name.html#parameterstypename","text":"abstract val parametersTypeName: String String Type that identifies the parameters signature for the function","title":"parametersTypeName"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/index.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata DatabaseQueryMetadata \u00b6 data class DatabaseQueryMetadata Metadata front end model for Database Query Misk-Web Tab Types \u00b6 Name Summary ConstraintMetadata data class ConstraintMetadata : DatabaseQueryFunctionMetadata OrderMetadata data class OrderMetadata : DatabaseQueryFunctionMetadata SelectMetadata data class SelectMetadata : DatabaseQueryFunctionMetadata Constructors \u00b6 Name Summary <init> DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: KClass <out Annotation >? = null, table: String , entityClass: KClass <*>, entitySchema: Map < String , KType >, queryClass: KClass <*>?, constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >)``DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: String ?, table: String , entityClass: String , entitySchema: Map < String , String >, queryClass: String , constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >) Metadata front end model for Database Query Misk-Web Tab Properties \u00b6 Name Summary accessAnnotation val accessAnnotation: String ? allowedCapabilities val allowedCapabilities: Set < String > allowedServices val allowedServices: Set < String > constraints val constraints: List < DatabaseQueryMetadata.ConstraintMetadata > entityClass val entityClass: String DbTable entity class entitySchema val entitySchema: Map < String , String > Describe the DbEntity with types orders val orders: List < DatabaseQueryMetadata.OrderMetadata > queryClass val queryClass: String Query class queryWebActionPath val queryWebActionPath: String selects val selects: List < DatabaseQueryMetadata.SelectMetadata > table val table: String SQL table name types val types: Map < String , MiskWebFormBuilder.Type > Contains all Types across all queries Companion Object Properties \u00b6 Name Summary DYNAMIC_QUERY_KCLASS_SUFFIX const val DYNAMIC_QUERY_KCLASS_SUFFIX: String","title":"DatabaseQueryMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/index.html#databasequerymetadata","text":"data class DatabaseQueryMetadata Metadata front end model for Database Query Misk-Web Tab","title":"DatabaseQueryMetadata"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/index.html#types","text":"Name Summary ConstraintMetadata data class ConstraintMetadata : DatabaseQueryFunctionMetadata OrderMetadata data class OrderMetadata : DatabaseQueryFunctionMetadata SelectMetadata data class SelectMetadata : DatabaseQueryFunctionMetadata","title":"Types"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/index.html#constructors","text":"Name Summary <init> DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: KClass <out Annotation >? = null, table: String , entityClass: KClass <*>, entitySchema: Map < String , KType >, queryClass: KClass <*>?, constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >)``DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: String ?, table: String , entityClass: String , entitySchema: Map < String , String >, queryClass: String , constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >) Metadata front end model for Database Query Misk-Web Tab","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/index.html#properties","text":"Name Summary accessAnnotation val accessAnnotation: String ? allowedCapabilities val allowedCapabilities: Set < String > allowedServices val allowedServices: Set < String > constraints val constraints: List < DatabaseQueryMetadata.ConstraintMetadata > entityClass val entityClass: String DbTable entity class entitySchema val entitySchema: Map < String , String > Describe the DbEntity with types orders val orders: List < DatabaseQueryMetadata.OrderMetadata > queryClass val queryClass: String Query class queryWebActionPath val queryWebActionPath: String selects val selects: List < DatabaseQueryMetadata.SelectMetadata > table val table: String SQL table name types val types: Map < String , MiskWebFormBuilder.Type > Contains all Types across all queries","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/index.html#companion-object-properties","text":"Name Summary DYNAMIC_QUERY_KCLASS_SUFFIX const val DYNAMIC_QUERY_KCLASS_SUFFIX: String","title":"Companion Object Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-d-y-n-a-m-i-c_-q-u-e-r-y_-k-c-l-a-s-s_-s-u-f-f-i-x.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / DYNAMIC_QUERY_KCLASS_SUFFIX DYNAMIC_QUERY_KCLASS_SUFFIX \u00b6 const val DYNAMIC_QUERY_KCLASS_SUFFIX: String","title":"DYNAMIC_QUERY_KCLASS_SUFFIX - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-d-y-n-a-m-i-c_-q-u-e-r-y_-k-c-l-a-s-s_-s-u-f-f-i-x.html#dynamic_query_kclass_suffix","text":"const val DYNAMIC_QUERY_KCLASS_SUFFIX: String","title":"DYNAMIC_QUERY_KCLASS_SUFFIX"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-init-.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / <init> <init> \u00b6 DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: KClass <out Annotation >? = null, table: String , entityClass: KClass <*>, entitySchema: Map < String , KType >, queryClass: KClass <*>?, constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >)``DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: String ?, table: String , entityClass: String , entitySchema: Map < String , String >, queryClass: String , constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >) Metadata front end model for Database Query Misk-Web Tab","title":" init "},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-init-.html#init","text":"DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: KClass <out Annotation >? = null, table: String , entityClass: KClass <*>, entitySchema: Map < String , KType >, queryClass: KClass <*>?, constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >)``DatabaseQueryMetadata(queryWebActionPath: String , allowedCapabilities: Set < String > = setOf(), allowedServices: Set < String > = setOf(), accessAnnotation: String ?, table: String , entityClass: String , entitySchema: Map < String , String >, queryClass: String , constraints: List < DatabaseQueryMetadata.ConstraintMetadata >, orders: List < DatabaseQueryMetadata.OrderMetadata >, selects: List < DatabaseQueryMetadata.SelectMetadata >, types: Map < String , MiskWebFormBuilder.Type >) Metadata front end model for Database Query Misk-Web Tab","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/access-annotation.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / accessAnnotation accessAnnotation \u00b6 val accessAnnotation: String ?","title":"accessAnnotation - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/access-annotation.html#accessannotation","text":"val accessAnnotation: String ?","title":"accessAnnotation"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/allowed-capabilities.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / allowedCapabilities allowedCapabilities \u00b6 val allowedCapabilities: Set < String >","title":"allowedCapabilities - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/allowed-capabilities.html#allowedcapabilities","text":"val allowedCapabilities: Set < String >","title":"allowedCapabilities"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/allowed-services.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / allowedServices allowedServices \u00b6 val allowedServices: Set < String >","title":"allowedServices - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/allowed-services.html#allowedservices","text":"val allowedServices: Set < String >","title":"allowedServices"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/constraints.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / constraints constraints \u00b6 val constraints: List < DatabaseQueryMetadata.ConstraintMetadata > Constraint functions on Misk Query interface, maps function simpleName to Type","title":"constraints - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/constraints.html#constraints","text":"val constraints: List < DatabaseQueryMetadata.ConstraintMetadata > Constraint functions on Misk Query interface, maps function simpleName to Type","title":"constraints"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/entity-class.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / entityClass entityClass \u00b6 val entityClass: String DbTable entity class","title":"entityClass - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/entity-class.html#entityclass","text":"val entityClass: String DbTable entity class","title":"entityClass"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/entity-schema.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / entitySchema entitySchema \u00b6 val entitySchema: Map < String , String > Describe the DbEntity with types","title":"entitySchema - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/entity-schema.html#entityschema","text":"val entitySchema: Map < String , String > Describe the DbEntity with types","title":"entitySchema"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/orders.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / orders orders \u00b6 val orders: List < DatabaseQueryMetadata.OrderMetadata > Order functions on Misk Query interface, maps function simpleName to Type","title":"orders - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/orders.html#orders","text":"val orders: List < DatabaseQueryMetadata.OrderMetadata > Order functions on Misk Query interface, maps function simpleName to Type","title":"orders"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/query-class.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / queryClass queryClass \u00b6 val queryClass: String Query class","title":"queryClass - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/query-class.html#queryclass","text":"val queryClass: String Query class","title":"queryClass"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/query-web-action-path.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / queryWebActionPath queryWebActionPath \u00b6 val queryWebActionPath: String","title":"queryWebActionPath - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/query-web-action-path.html#querywebactionpath","text":"val queryWebActionPath: String","title":"queryWebActionPath"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/selects.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / selects selects \u00b6 val selects: List < DatabaseQueryMetadata.SelectMetadata > Select functions on Misk Query interface, maps function simpleName to Type","title":"selects - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/selects.html#selects","text":"val selects: List < DatabaseQueryMetadata.SelectMetadata > Select functions on Misk Query interface, maps function simpleName to Type","title":"selects"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/table.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / table table \u00b6 val table: String SQL table name","title":"table - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/table.html#table","text":"val table: String SQL table name","title":"table"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/types.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / types types \u00b6 val types: Map < String , MiskWebFormBuilder.Type > Contains all Types across all queries","title":"types - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/types.html#types","text":"val types: Map < String , MiskWebFormBuilder.Type > Contains all Types across all queries","title":"types"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/index.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / ConstraintMetadata ConstraintMetadata \u00b6 data class ConstraintMetadata : DatabaseQueryFunctionMetadata Constructors \u00b6 Name Summary <init> ConstraintMetadata(name: String , parametersTypeName: String , path: String , operator: String ) Properties \u00b6 Name Summary name val name: String Function simple name operator val operator: String parametersTypeName val parametersTypeName: String String Type that identifies the parameters signature for the function path val path: String","title":"ConstraintMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/index.html#constraintmetadata","text":"data class ConstraintMetadata : DatabaseQueryFunctionMetadata","title":"ConstraintMetadata"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/index.html#constructors","text":"Name Summary <init> ConstraintMetadata(name: String , parametersTypeName: String , path: String , operator: String )","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/index.html#properties","text":"Name Summary name val name: String Function simple name operator val operator: String parametersTypeName val parametersTypeName: String String Type that identifies the parameters signature for the function path val path: String","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/-init-.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / ConstraintMetadata / <init> <init> \u00b6 ConstraintMetadata(name: String , parametersTypeName: String , path: String , operator: String )","title":" init "},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/-init-.html#init","text":"ConstraintMetadata(name: String , parametersTypeName: String , path: String , operator: String )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/name.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / ConstraintMetadata / name name \u00b6 val name: String Overrides DatabaseQueryFunctionMetadata.name Function simple name","title":"name - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/name.html#name","text":"val name: String Overrides DatabaseQueryFunctionMetadata.name Function simple name","title":"name"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/operator.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / ConstraintMetadata / operator operator \u00b6 val operator: String","title":"operator - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/operator.html#operator","text":"val operator: String","title":"operator"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/parameters-type-name.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / ConstraintMetadata / parametersTypeName parametersTypeName \u00b6 val parametersTypeName: String Overrides DatabaseQueryFunctionMetadata.parametersTypeName String Type that identifies the parameters signature for the function","title":"parametersTypeName - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/parameters-type-name.html#parameterstypename","text":"val parametersTypeName: String Overrides DatabaseQueryFunctionMetadata.parametersTypeName String Type that identifies the parameters signature for the function","title":"parametersTypeName"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/path.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / ConstraintMetadata / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-constraint-metadata/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/index.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / OrderMetadata OrderMetadata \u00b6 data class OrderMetadata : DatabaseQueryFunctionMetadata Constructors \u00b6 Name Summary <init> OrderMetadata(name: String , parametersTypeName: String , path: String , ascending: Boolean ) Properties \u00b6 Name Summary ascending val ascending: Boolean name val name: String Function simple name parametersTypeName val parametersTypeName: String String Type that identifies the parameters signature for the function path val path: String","title":"OrderMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/index.html#ordermetadata","text":"data class OrderMetadata : DatabaseQueryFunctionMetadata","title":"OrderMetadata"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/index.html#constructors","text":"Name Summary <init> OrderMetadata(name: String , parametersTypeName: String , path: String , ascending: Boolean )","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/index.html#properties","text":"Name Summary ascending val ascending: Boolean name val name: String Function simple name parametersTypeName val parametersTypeName: String String Type that identifies the parameters signature for the function path val path: String","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/-init-.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / OrderMetadata / <init> <init> \u00b6 OrderMetadata(name: String , parametersTypeName: String , path: String , ascending: Boolean )","title":" init "},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/-init-.html#init","text":"OrderMetadata(name: String , parametersTypeName: String , path: String , ascending: Boolean )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/ascending.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / OrderMetadata / ascending ascending \u00b6 val ascending: Boolean","title":"ascending - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/ascending.html#ascending","text":"val ascending: Boolean","title":"ascending"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/name.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / OrderMetadata / name name \u00b6 val name: String Overrides DatabaseQueryFunctionMetadata.name Function simple name","title":"name - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/name.html#name","text":"val name: String Overrides DatabaseQueryFunctionMetadata.name Function simple name","title":"name"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/parameters-type-name.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / OrderMetadata / parametersTypeName parametersTypeName \u00b6 val parametersTypeName: String Overrides DatabaseQueryFunctionMetadata.parametersTypeName String Type that identifies the parameters signature for the function","title":"parametersTypeName - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/parameters-type-name.html#parameterstypename","text":"val parametersTypeName: String Overrides DatabaseQueryFunctionMetadata.parametersTypeName String Type that identifies the parameters signature for the function","title":"parametersTypeName"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/path.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / OrderMetadata / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-order-metadata/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/index.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / SelectMetadata SelectMetadata \u00b6 data class SelectMetadata : DatabaseQueryFunctionMetadata Constructors \u00b6 Name Summary <init> SelectMetadata(name: String , parametersTypeName: String , paths: List < String >) Properties \u00b6 Name Summary name val name: String Function simple name parametersTypeName val parametersTypeName: String String Type that identifies the parameters signature for the function paths val paths: List < String >","title":"SelectMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/index.html#selectmetadata","text":"data class SelectMetadata : DatabaseQueryFunctionMetadata","title":"SelectMetadata"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/index.html#constructors","text":"Name Summary <init> SelectMetadata(name: String , parametersTypeName: String , paths: List < String >)","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/index.html#properties","text":"Name Summary name val name: String Function simple name parametersTypeName val parametersTypeName: String String Type that identifies the parameters signature for the function paths val paths: List < String >","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/-init-.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / SelectMetadata / <init> <init> \u00b6 SelectMetadata(name: String , parametersTypeName: String , paths: List < String >)","title":" init "},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/-init-.html#init","text":"SelectMetadata(name: String , parametersTypeName: String , paths: List < String >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/name.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / SelectMetadata / name name \u00b6 val name: String Overrides DatabaseQueryFunctionMetadata.name Function simple name","title":"name - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/name.html#name","text":"val name: String Overrides DatabaseQueryFunctionMetadata.name Function simple name","title":"name"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/parameters-type-name.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / SelectMetadata / parametersTypeName parametersTypeName \u00b6 val parametersTypeName: String Overrides DatabaseQueryFunctionMetadata.parametersTypeName String Type that identifies the parameters signature for the function","title":"parametersTypeName - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/parameters-type-name.html#parameterstypename","text":"val parametersTypeName: String Overrides DatabaseQueryFunctionMetadata.parametersTypeName String Type that identifies the parameters signature for the function","title":"parametersTypeName"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/paths.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadata / SelectMetadata / paths paths \u00b6 val paths: List < String >","title":"paths - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata/-select-metadata/paths.html#paths","text":"val paths: List < String >","title":"paths"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/index.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadataAction DatabaseQueryMetadataAction \u00b6 @Singleton class DatabaseQueryMetadataAction : WebAction Display available queries and their types Types \u00b6 Name Summary Response data class Response Constructors \u00b6 Name Summary <init> DatabaseQueryMetadataAction(metadata: List < DatabaseQueryMetadata >) Display available queries and their types Properties \u00b6 Name Summary metadata val metadata: List < DatabaseQueryMetadata > Functions \u00b6 Name Summary getAll fun getAll(): DatabaseQueryMetadataAction.Response Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"DatabaseQueryMetadataAction - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/index.html#databasequerymetadataaction","text":"@Singleton class DatabaseQueryMetadataAction : WebAction Display available queries and their types","title":"DatabaseQueryMetadataAction"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/index.html#types","text":"Name Summary Response data class Response","title":"Types"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/index.html#constructors","text":"Name Summary <init> DatabaseQueryMetadataAction(metadata: List < DatabaseQueryMetadata >) Display available queries and their types","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/index.html#properties","text":"Name Summary metadata val metadata: List < DatabaseQueryMetadata >","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/index.html#functions","text":"Name Summary getAll fun getAll(): DatabaseQueryMetadataAction.Response","title":"Functions"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-init-.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadataAction / <init> <init> \u00b6 DatabaseQueryMetadataAction(metadata: List < DatabaseQueryMetadata >) Display available queries and their types","title":" init "},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-init-.html#init","text":"DatabaseQueryMetadataAction(metadata: List < DatabaseQueryMetadata >) Display available queries and their types","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/get-all.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadataAction / getAll getAll \u00b6 fun getAll(): DatabaseQueryMetadataAction.Response","title":"getAll - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/get-all.html#getall","text":"fun getAll(): DatabaseQueryMetadataAction.Response","title":"getAll"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/metadata.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadataAction / metadata metadata \u00b6 val metadata: List < DatabaseQueryMetadata >","title":"metadata - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/metadata.html#metadata","text":"val metadata: List < DatabaseQueryMetadata >","title":"metadata"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/index.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadataAction / Response Response \u00b6 data class Response Constructors \u00b6 Name Summary <init> Response(databaseQueryMetadata: List < DatabaseQueryMetadata >) Properties \u00b6 Name Summary databaseQueryMetadata val databaseQueryMetadata: List < DatabaseQueryMetadata >","title":"Response - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/index.html#response","text":"data class Response","title":"Response"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/index.html#constructors","text":"Name Summary <init> Response(databaseQueryMetadata: List < DatabaseQueryMetadata >)","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/index.html#properties","text":"Name Summary databaseQueryMetadata val databaseQueryMetadata: List < DatabaseQueryMetadata >","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/-init-.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadataAction / Response / <init> <init> \u00b6 Response(databaseQueryMetadata: List < DatabaseQueryMetadata >)","title":" init "},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/-init-.html#init","text":"Response(databaseQueryMetadata: List < DatabaseQueryMetadata >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/database-query-metadata.html","text":"misk / misk.web.metadata.database / DatabaseQueryMetadataAction / Response / databaseQueryMetadata databaseQueryMetadata \u00b6 val databaseQueryMetadata: List < DatabaseQueryMetadata >","title":"databaseQueryMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-database-query-metadata-action/-response/database-query-metadata.html#databasequerymetadata","text":"val databaseQueryMetadata: List < DatabaseQueryMetadata >","title":"databaseQueryMetadata"},{"location":"0.x/misk/misk.web.metadata.database/-no-admin-dashboard-database-access/index.html","text":"misk / misk.web.metadata.database / NoAdminDashboardDatabaseAccess NoAdminDashboardDatabaseAccess \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class NoAdminDashboardDatabaseAccess Constructors \u00b6 Name Summary <init> NoAdminDashboardDatabaseAccess()","title":"NoAdminDashboardDatabaseAccess - Misk"},{"location":"0.x/misk/misk.web.metadata.database/-no-admin-dashboard-database-access/index.html#noadmindashboarddatabaseaccess","text":"@Target([AnnotationTarget.FUNCTION]) annotation class NoAdminDashboardDatabaseAccess","title":"NoAdminDashboardDatabaseAccess"},{"location":"0.x/misk/misk.web.metadata.database/-no-admin-dashboard-database-access/index.html#constructors","text":"Name Summary <init> NoAdminDashboardDatabaseAccess()","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.database/-no-admin-dashboard-database-access/-init-.html","text":"misk / misk.web.metadata.database / NoAdminDashboardDatabaseAccess / <init> <init> \u00b6 NoAdminDashboardDatabaseAccess()","title":" init "},{"location":"0.x/misk/misk.web.metadata.database/-no-admin-dashboard-database-access/-init-.html#init","text":"NoAdminDashboardDatabaseAccess()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.webaction/index.html","text":"misk / misk.web.metadata.webaction Package misk.web.metadata.webaction \u00b6 Types \u00b6 Name Summary WebActionMetadata data class WebActionMetadata Metadata front end model for Web Action Misk-Web Tab WebActionMetadataAction class WebActionMetadataAction : WebAction","title":"Package misk.web.metadata.webaction - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/index.html#package-miskwebmetadatawebaction","text":"","title":"Package misk.web.metadata.webaction"},{"location":"0.x/misk/misk.web.metadata.webaction/index.html#types","text":"Name Summary WebActionMetadata data class WebActionMetadata Metadata front end model for Web Action Misk-Web Tab WebActionMetadataAction class WebActionMetadataAction : WebAction","title":"Types"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/index.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata WebActionMetadata \u00b6 data class WebActionMetadata Metadata front end model for Web Action Misk-Web Tab Types \u00b6 Name Summary ParameterMetaData data class ParameterMetaData Constructors \u00b6 Name Summary <init> WebActionMetadata(name: String , function: KFunction <*>, functionAnnotations: List < Annotation >, description: String ?, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameterTypes: List < KType >, parameters: List < KParameter >, requestType: KType ?, returnType: KType , responseType: KType ?, pathPattern: PathPattern , applicationInterceptors: List < ApplicationInterceptor >, networkInterceptors: List < NetworkInterceptor >, dispatchMechanism: DispatchMechanism , allowedServices: Set < String >, allowedCapabilities: Set < String >)``WebActionMetadata(name: String , function: String , packageName: String ?, description: String ?, functionAnnotations: List < String >, requestMediaTypes: List < String >, responseMediaType: String ?, parameterTypes: List < String >, parameters: List < WebActionMetadata.ParameterMetaData >, requestType: String ?, returnType: String , responseType: String , types: Map < String , MiskWebFormBuilder.Type >, responseTypes: Map < String , MiskWebFormBuilder.Type >, pathPattern: String , applicationInterceptors: List < String >, networkInterceptors: List < String >, httpMethod: String , allowedServices: Set < String >, allowedCapabilities: Set < String >) Metadata front end model for Web Action Misk-Web Tab Properties \u00b6 Name Summary allowedCapabilities val allowedCapabilities: Set < String > allowedServices val allowedServices: Set < String > applicationInterceptors val applicationInterceptors: List < String > description val description: String ? function val function: String functionAnnotations val functionAnnotations: List < String > httpMethod val httpMethod: String name val name: String networkInterceptors val networkInterceptors: List < String > packageName val packageName: String ? parameters val parameters: List < WebActionMetadata.ParameterMetaData > parameterTypes val parameterTypes: List < String > pathPattern val pathPattern: String requestMediaTypes val requestMediaTypes: List < String > requestType val requestType: String ? responseMediaType val responseMediaType: String ? responseType val responseType: String responseTypes val responseTypes: Map < String , MiskWebFormBuilder.Type > returnType val returnType: String types val types: Map < String , MiskWebFormBuilder.Type >","title":"WebActionMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/index.html#webactionmetadata","text":"data class WebActionMetadata Metadata front end model for Web Action Misk-Web Tab","title":"WebActionMetadata"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/index.html#types","text":"Name Summary ParameterMetaData data class ParameterMetaData","title":"Types"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/index.html#constructors","text":"Name Summary <init> WebActionMetadata(name: String , function: KFunction <*>, functionAnnotations: List < Annotation >, description: String ?, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameterTypes: List < KType >, parameters: List < KParameter >, requestType: KType ?, returnType: KType , responseType: KType ?, pathPattern: PathPattern , applicationInterceptors: List < ApplicationInterceptor >, networkInterceptors: List < NetworkInterceptor >, dispatchMechanism: DispatchMechanism , allowedServices: Set < String >, allowedCapabilities: Set < String >)``WebActionMetadata(name: String , function: String , packageName: String ?, description: String ?, functionAnnotations: List < String >, requestMediaTypes: List < String >, responseMediaType: String ?, parameterTypes: List < String >, parameters: List < WebActionMetadata.ParameterMetaData >, requestType: String ?, returnType: String , responseType: String , types: Map < String , MiskWebFormBuilder.Type >, responseTypes: Map < String , MiskWebFormBuilder.Type >, pathPattern: String , applicationInterceptors: List < String >, networkInterceptors: List < String >, httpMethod: String , allowedServices: Set < String >, allowedCapabilities: Set < String >) Metadata front end model for Web Action Misk-Web Tab","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/index.html#properties","text":"Name Summary allowedCapabilities val allowedCapabilities: Set < String > allowedServices val allowedServices: Set < String > applicationInterceptors val applicationInterceptors: List < String > description val description: String ? function val function: String functionAnnotations val functionAnnotations: List < String > httpMethod val httpMethod: String name val name: String networkInterceptors val networkInterceptors: List < String > packageName val packageName: String ? parameters val parameters: List < WebActionMetadata.ParameterMetaData > parameterTypes val parameterTypes: List < String > pathPattern val pathPattern: String requestMediaTypes val requestMediaTypes: List < String > requestType val requestType: String ? responseMediaType val responseMediaType: String ? responseType val responseType: String responseTypes val responseTypes: Map < String , MiskWebFormBuilder.Type > returnType val returnType: String types val types: Map < String , MiskWebFormBuilder.Type >","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-init-.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / <init> <init> \u00b6 WebActionMetadata(name: String , function: KFunction <*>, functionAnnotations: List < Annotation >, description: String ?, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameterTypes: List < KType >, parameters: List < KParameter >, requestType: KType ?, returnType: KType , responseType: KType ?, pathPattern: PathPattern , applicationInterceptors: List < ApplicationInterceptor >, networkInterceptors: List < NetworkInterceptor >, dispatchMechanism: DispatchMechanism , allowedServices: Set < String >, allowedCapabilities: Set < String >)``WebActionMetadata(name: String , function: String , packageName: String ?, description: String ?, functionAnnotations: List < String >, requestMediaTypes: List < String >, responseMediaType: String ?, parameterTypes: List < String >, parameters: List < WebActionMetadata.ParameterMetaData >, requestType: String ?, returnType: String , responseType: String , types: Map < String , MiskWebFormBuilder.Type >, responseTypes: Map < String , MiskWebFormBuilder.Type >, pathPattern: String , applicationInterceptors: List < String >, networkInterceptors: List < String >, httpMethod: String , allowedServices: Set < String >, allowedCapabilities: Set < String >) Metadata front end model for Web Action Misk-Web Tab","title":" init "},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-init-.html#init","text":"WebActionMetadata(name: String , function: KFunction <*>, functionAnnotations: List < Annotation >, description: String ?, acceptedMediaRanges: List <MediaRange>, responseContentType: MediaType?, parameterTypes: List < KType >, parameters: List < KParameter >, requestType: KType ?, returnType: KType , responseType: KType ?, pathPattern: PathPattern , applicationInterceptors: List < ApplicationInterceptor >, networkInterceptors: List < NetworkInterceptor >, dispatchMechanism: DispatchMechanism , allowedServices: Set < String >, allowedCapabilities: Set < String >)``WebActionMetadata(name: String , function: String , packageName: String ?, description: String ?, functionAnnotations: List < String >, requestMediaTypes: List < String >, responseMediaType: String ?, parameterTypes: List < String >, parameters: List < WebActionMetadata.ParameterMetaData >, requestType: String ?, returnType: String , responseType: String , types: Map < String , MiskWebFormBuilder.Type >, responseTypes: Map < String , MiskWebFormBuilder.Type >, pathPattern: String , applicationInterceptors: List < String >, networkInterceptors: List < String >, httpMethod: String , allowedServices: Set < String >, allowedCapabilities: Set < String >) Metadata front end model for Web Action Misk-Web Tab","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-capabilities.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / allowedCapabilities allowedCapabilities \u00b6 val allowedCapabilities: Set < String >","title":"allowedCapabilities - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-capabilities.html#allowedcapabilities","text":"val allowedCapabilities: Set < String >","title":"allowedCapabilities"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-services.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / allowedServices allowedServices \u00b6 val allowedServices: Set < String >","title":"allowedServices - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/allowed-services.html#allowedservices","text":"val allowedServices: Set < String >","title":"allowedServices"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/application-interceptors.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / applicationInterceptors applicationInterceptors \u00b6 val applicationInterceptors: List < String >","title":"applicationInterceptors - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/application-interceptors.html#applicationinterceptors","text":"val applicationInterceptors: List < String >","title":"applicationInterceptors"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/description.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / description description \u00b6 val description: String ?","title":"description - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/description.html#description","text":"val description: String ?","title":"description"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/function-annotations.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / functionAnnotations functionAnnotations \u00b6 val functionAnnotations: List < String >","title":"functionAnnotations - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/function-annotations.html#functionannotations","text":"val functionAnnotations: List < String >","title":"functionAnnotations"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/function.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / function function \u00b6 val function: String","title":"function - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/function.html#function","text":"val function: String","title":"function"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/http-method.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / httpMethod httpMethod \u00b6 val httpMethod: String","title":"httpMethod - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/http-method.html#httpmethod","text":"val httpMethod: String","title":"httpMethod"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/name.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/network-interceptors.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / networkInterceptors networkInterceptors \u00b6 val networkInterceptors: List < String >","title":"networkInterceptors - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/network-interceptors.html#networkinterceptors","text":"val networkInterceptors: List < String >","title":"networkInterceptors"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/package-name.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / packageName packageName \u00b6 val packageName: String ?","title":"packageName - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/package-name.html#packagename","text":"val packageName: String ?","title":"packageName"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/parameter-types.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / parameterTypes parameterTypes \u00b6 val parameterTypes: List < String >","title":"parameterTypes - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/parameter-types.html#parametertypes","text":"val parameterTypes: List < String >","title":"parameterTypes"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/parameters.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / parameters parameters \u00b6 val parameters: List < WebActionMetadata.ParameterMetaData >","title":"parameters - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/parameters.html#parameters","text":"val parameters: List < WebActionMetadata.ParameterMetaData >","title":"parameters"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/path-pattern.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / pathPattern pathPattern \u00b6 val pathPattern: String","title":"pathPattern - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/path-pattern.html#pathpattern","text":"val pathPattern: String","title":"pathPattern"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/request-media-types.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / requestMediaTypes requestMediaTypes \u00b6 val requestMediaTypes: List < String >","title":"requestMediaTypes - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/request-media-types.html#requestmediatypes","text":"val requestMediaTypes: List < String >","title":"requestMediaTypes"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/request-type.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / requestType requestType \u00b6 val requestType: String ?","title":"requestType - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/request-type.html#requesttype","text":"val requestType: String ?","title":"requestType"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/response-media-type.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / responseMediaType responseMediaType \u00b6 val responseMediaType: String ?","title":"responseMediaType - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/response-media-type.html#responsemediatype","text":"val responseMediaType: String ?","title":"responseMediaType"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/response-type.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / responseType responseType \u00b6 val responseType: String","title":"responseType - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/response-type.html#responsetype","text":"val responseType: String","title":"responseType"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/response-types.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / responseTypes responseTypes \u00b6 val responseTypes: Map < String , MiskWebFormBuilder.Type >","title":"responseTypes - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/response-types.html#responsetypes","text":"val responseTypes: Map < String , MiskWebFormBuilder.Type >","title":"responseTypes"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/return-type.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / returnType returnType \u00b6 val returnType: String","title":"returnType - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/return-type.html#returntype","text":"val returnType: String","title":"returnType"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/types.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / types types \u00b6 val types: Map < String , MiskWebFormBuilder.Type >","title":"types - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/types.html#types","text":"val types: Map < String , MiskWebFormBuilder.Type >","title":"types"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/index.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / ParameterMetaData ParameterMetaData \u00b6 data class ParameterMetaData Constructors \u00b6 Name Summary <init> ParameterMetaData(name: String ?, annotations: List < String >, type: String ) Properties \u00b6 Name Summary annotations val annotations: List < String > name val name: String ? type val type: String","title":"ParameterMetaData - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/index.html#parametermetadata","text":"data class ParameterMetaData","title":"ParameterMetaData"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/index.html#constructors","text":"Name Summary <init> ParameterMetaData(name: String ?, annotations: List < String >, type: String )","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/index.html#properties","text":"Name Summary annotations val annotations: List < String > name val name: String ? type val type: String","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/-init-.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / ParameterMetaData / <init> <init> \u00b6 ParameterMetaData(name: String ?, annotations: List < String >, type: String )","title":" init "},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/-init-.html#init","text":"ParameterMetaData(name: String ?, annotations: List < String >, type: String )","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/annotations.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / ParameterMetaData / annotations annotations \u00b6 val annotations: List < String >","title":"annotations - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/annotations.html#annotations","text":"val annotations: List < String >","title":"annotations"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/name.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / ParameterMetaData / name name \u00b6 val name: String ?","title":"name - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/name.html#name","text":"val name: String ?","title":"name"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/type.html","text":"misk / misk.web.metadata.webaction / WebActionMetadata / ParameterMetaData / type type \u00b6 val type: String","title":"type - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata/-parameter-meta-data/type.html#type","text":"val type: String","title":"type"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/index.html","text":"misk / misk.web.metadata.webaction / WebActionMetadataAction WebActionMetadataAction \u00b6 @Singleton class WebActionMetadataAction : WebAction Types \u00b6 Name Summary Response data class Response Constructors \u00b6 Name Summary <init> WebActionMetadataAction() Functions \u00b6 Name Summary getAll fun getAll(): WebActionMetadataAction.Response Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"WebActionMetadataAction - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/index.html#webactionmetadataaction","text":"@Singleton class WebActionMetadataAction : WebAction","title":"WebActionMetadataAction"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/index.html#types","text":"Name Summary Response data class Response","title":"Types"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/index.html#constructors","text":"Name Summary <init> WebActionMetadataAction()","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/index.html#functions","text":"Name Summary getAll fun getAll(): WebActionMetadataAction.Response","title":"Functions"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-init-.html","text":"misk / misk.web.metadata.webaction / WebActionMetadataAction / <init> <init> \u00b6 WebActionMetadataAction()","title":" init "},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-init-.html#init","text":"WebActionMetadataAction()","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/get-all.html","text":"misk / misk.web.metadata.webaction / WebActionMetadataAction / getAll getAll \u00b6 fun getAll(): WebActionMetadataAction.Response","title":"getAll - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/get-all.html#getall","text":"fun getAll(): WebActionMetadataAction.Response","title":"getAll"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/index.html","text":"misk / misk.web.metadata.webaction / WebActionMetadataAction / Response Response \u00b6 data class Response Constructors \u00b6 Name Summary <init> Response(webActionMetadata: List < WebActionMetadata >) Properties \u00b6 Name Summary webActionMetadata val webActionMetadata: List < WebActionMetadata >","title":"Response - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/index.html#response","text":"data class Response","title":"Response"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/index.html#constructors","text":"Name Summary <init> Response(webActionMetadata: List < WebActionMetadata >)","title":"Constructors"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/index.html#properties","text":"Name Summary webActionMetadata val webActionMetadata: List < WebActionMetadata >","title":"Properties"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/-init-.html","text":"misk / misk.web.metadata.webaction / WebActionMetadataAction / Response / <init> <init> \u00b6 Response(webActionMetadata: List < WebActionMetadata >)","title":" init "},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/-init-.html#init","text":"Response(webActionMetadata: List < WebActionMetadata >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/web-action-metadata.html","text":"misk / misk.web.metadata.webaction / WebActionMetadataAction / Response / webActionMetadata webActionMetadata \u00b6 val webActionMetadata: List < WebActionMetadata >","title":"webActionMetadata - Misk"},{"location":"0.x/misk/misk.web.metadata.webaction/-web-action-metadata-action/-response/web-action-metadata.html#webactionmetadata","text":"val webActionMetadata: List < WebActionMetadata >","title":"webActionMetadata"},{"location":"0.x/misk/misk.web.proxy/index.html","text":"misk / misk.web.proxy Package misk.web.proxy \u00b6 Types \u00b6 Name Summary OptionalBinder class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor WebProxyAction class WebProxyAction : WebAction WebProxyAction WebProxyEntry class WebProxyEntry : ValidWebEntry Maps URLs requested against this server to URLs of servers to delegate to Functions \u00b6 Name Summary WebProxyEntry fun WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: String ): WebProxyEntry","title":"Package misk.web.proxy - Misk"},{"location":"0.x/misk/misk.web.proxy/index.html#package-miskwebproxy","text":"","title":"Package misk.web.proxy"},{"location":"0.x/misk/misk.web.proxy/index.html#types","text":"Name Summary OptionalBinder class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor WebProxyAction class WebProxyAction : WebAction WebProxyAction WebProxyEntry class WebProxyEntry : ValidWebEntry Maps URLs requested against this server to URLs of servers to delegate to","title":"Types"},{"location":"0.x/misk/misk.web.proxy/index.html#functions","text":"Name Summary WebProxyEntry fun WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: String ): WebProxyEntry","title":"Functions"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry.html","text":"misk / misk.web.proxy / WebProxyEntry WebProxyEntry \u00b6 fun WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: String ): WebProxyEntry","title":"WebProxyEntry - Misk"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry.html#webproxyentry","text":"fun WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: String ): WebProxyEntry","title":"WebProxyEntry"},{"location":"0.x/misk/misk.web.proxy/-optional-binder/index.html","text":"misk / misk.web.proxy / OptionalBinder OptionalBinder \u00b6 @Singleton class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor Constructors \u00b6 Name Summary <init> OptionalBinder() https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor Properties \u00b6 Name Summary proxyClient var proxyClient: OkHttpClient","title":"OptionalBinder - Misk"},{"location":"0.x/misk/misk.web.proxy/-optional-binder/index.html#optionalbinder","text":"@Singleton class OptionalBinder https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":"OptionalBinder"},{"location":"0.x/misk/misk.web.proxy/-optional-binder/index.html#constructors","text":"Name Summary <init> OptionalBinder() https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":"Constructors"},{"location":"0.x/misk/misk.web.proxy/-optional-binder/index.html#properties","text":"Name Summary proxyClient var proxyClient: OkHttpClient","title":"Properties"},{"location":"0.x/misk/misk.web.proxy/-optional-binder/-init-.html","text":"misk / misk.web.proxy / OptionalBinder / <init> <init> \u00b6 OptionalBinder() https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":" init "},{"location":"0.x/misk/misk.web.proxy/-optional-binder/-init-.html#init","text":"OptionalBinder() https://github.com/google/guice/wiki/FrequentlyAskedQuestions#how-can-i-inject-optional-parameters-into-a-constructor","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.proxy/-optional-binder/proxy-client.html","text":"misk / misk.web.proxy / OptionalBinder / proxyClient proxyClient \u00b6 var proxyClient: OkHttpClient","title":"proxyClient - Misk"},{"location":"0.x/misk/misk.web.proxy/-optional-binder/proxy-client.html#proxyclient","text":"var proxyClient: OkHttpClient","title":"proxyClient"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/index.html","text":"misk / misk.web.proxy / WebProxyAction WebProxyAction \u00b6 @Singleton class WebProxyAction : WebAction WebProxyAction Guidelines Overlapping entry prefixes will resolve to the longest match Example Entries: /_admin/config/ , /_admin/config/subtab/ Request: /_admin/config/subtab/app.js will resolve to the /_admin/config/subtab/ entry url_path_prefix starts with \u201c/\u201d url_path_prefix ends with \u201c/\u201d web_proxy_url ends with \u201c/\u201d and doesn\u2019t contain any path segments Expected Functionality Entries following above rules are injected into action Action attempts to findEntryFromUrl incoming request paths against entries If findEntryFromUrl found, incoming request path is appended to host + port of StaticResourceEntry.server_url Else, 404 Constructors \u00b6 Name Summary <init> WebProxyAction(optionalBinder: OptionalBinder , clientHttpCall: ActionScoped< HttpCall >, staticResourceAction: StaticResourceAction , resourceEntryFinder: ResourceEntryFinder ) WebProxyAction Functions \u00b6 Name Summary action fun action(): Response<ResponseBody> Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"WebProxyAction - Misk"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/index.html#webproxyaction","text":"@Singleton class WebProxyAction : WebAction WebProxyAction Guidelines Overlapping entry prefixes will resolve to the longest match Example Entries: /_admin/config/ , /_admin/config/subtab/ Request: /_admin/config/subtab/app.js will resolve to the /_admin/config/subtab/ entry url_path_prefix starts with \u201c/\u201d url_path_prefix ends with \u201c/\u201d web_proxy_url ends with \u201c/\u201d and doesn\u2019t contain any path segments Expected Functionality Entries following above rules are injected into action Action attempts to findEntryFromUrl incoming request paths against entries If findEntryFromUrl found, incoming request path is appended to host + port of StaticResourceEntry.server_url Else, 404","title":"WebProxyAction"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/index.html#constructors","text":"Name Summary <init> WebProxyAction(optionalBinder: OptionalBinder , clientHttpCall: ActionScoped< HttpCall >, staticResourceAction: StaticResourceAction , resourceEntryFinder: ResourceEntryFinder ) WebProxyAction","title":"Constructors"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/index.html#functions","text":"Name Summary action fun action(): Response<ResponseBody>","title":"Functions"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/-init-.html","text":"misk / misk.web.proxy / WebProxyAction / <init> <init> \u00b6 WebProxyAction(optionalBinder: OptionalBinder , clientHttpCall: ActionScoped< HttpCall >, staticResourceAction: StaticResourceAction , resourceEntryFinder: ResourceEntryFinder ) WebProxyAction Guidelines Overlapping entry prefixes will resolve to the longest match Example Entries: /_admin/config/ , /_admin/config/subtab/ Request: /_admin/config/subtab/app.js will resolve to the /_admin/config/subtab/ entry url_path_prefix starts with \u201c/\u201d url_path_prefix ends with \u201c/\u201d web_proxy_url ends with \u201c/\u201d and doesn\u2019t contain any path segments Expected Functionality Entries following above rules are injected into action Action attempts to findEntryFromUrl incoming request paths against entries If findEntryFromUrl found, incoming request path is appended to host + port of StaticResourceEntry.server_url Else, 404","title":" init "},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/-init-.html#init","text":"WebProxyAction(optionalBinder: OptionalBinder , clientHttpCall: ActionScoped< HttpCall >, staticResourceAction: StaticResourceAction , resourceEntryFinder: ResourceEntryFinder ) WebProxyAction Guidelines Overlapping entry prefixes will resolve to the longest match Example Entries: /_admin/config/ , /_admin/config/subtab/ Request: /_admin/config/subtab/app.js will resolve to the /_admin/config/subtab/ entry url_path_prefix starts with \u201c/\u201d url_path_prefix ends with \u201c/\u201d web_proxy_url ends with \u201c/\u201d and doesn\u2019t contain any path segments Expected Functionality Entries following above rules are injected into action Action attempts to findEntryFromUrl incoming request paths against entries If findEntryFromUrl found, incoming request path is appended to host + port of StaticResourceEntry.server_url Else, 404","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/action.html","text":"misk / misk.web.proxy / WebProxyAction / action action \u00b6 fun action(): Response<ResponseBody>","title":"action - Misk"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-action/action.html#action","text":"fun action(): Response<ResponseBody>","title":"action"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/index.html","text":"misk / misk.web.proxy / WebProxyEntry WebProxyEntry \u00b6 class WebProxyEntry : ValidWebEntry Maps URLs requested against this server to URLs of servers to delegate to url_path_prefix: /_admin/ web_proxy_url: http://localhost:3000/ An incoming request then for /_admin/config.js would route to http://localhost:3000/_admin/config.js . This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<WebProxyEntry>().toInstance(WebProxyEntry(...)) Constructors \u00b6 Name Summary <init> WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: HttpUrl) Maps URLs requested against this server to URLs of servers to delegate to Properties \u00b6 Name Summary web_proxy_url val web_proxy_url: HttpUrl Inherited Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"WebProxyEntry - Misk"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/index.html#webproxyentry","text":"class WebProxyEntry : ValidWebEntry Maps URLs requested against this server to URLs of servers to delegate to url_path_prefix: /_admin/ web_proxy_url: http://localhost:3000/ An incoming request then for /_admin/config.js would route to http://localhost:3000/_admin/config.js . This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<WebProxyEntry>().toInstance(WebProxyEntry(...))","title":"WebProxyEntry"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/index.html#constructors","text":"Name Summary <init> WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: HttpUrl) Maps URLs requested against this server to URLs of servers to delegate to","title":"Constructors"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/index.html#properties","text":"Name Summary web_proxy_url val web_proxy_url: HttpUrl","title":"Properties"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/index.html#inherited-properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/-init-.html","text":"misk / misk.web.proxy / WebProxyEntry / <init> <init> \u00b6 WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: HttpUrl) Maps URLs requested against this server to URLs of servers to delegate to url_path_prefix: /_admin/ web_proxy_url: http://localhost:3000/ An incoming request then for /_admin/config.js would route to http://localhost:3000/_admin/config.js . This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<WebProxyEntry>().toInstance(WebProxyEntry(...))","title":" init "},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/-init-.html#init","text":"WebProxyEntry(url_path_prefix: String = \"/\", web_proxy_url: HttpUrl) Maps URLs requested against this server to URLs of servers to delegate to url_path_prefix: /_admin/ web_proxy_url: http://localhost:3000/ An incoming request then for /_admin/config.js would route to http://localhost:3000/_admin/config.js . This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<WebProxyEntry>().toInstance(WebProxyEntry(...))","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/web_proxy_url.html","text":"misk / misk.web.proxy / WebProxyEntry / web_proxy_url web_proxy_url \u00b6 val web_proxy_url: HttpUrl","title":"web_proxy_url - Misk"},{"location":"0.x/misk/misk.web.proxy/-web-proxy-entry/web_proxy_url.html#web_proxy_url","text":"val web_proxy_url: HttpUrl","title":"web_proxy_url"},{"location":"0.x/misk/misk.web.resources/index.html","text":"misk / misk.web.resources Package misk.web.resources \u00b6 Types \u00b6 Name Summary ResourceEntryFinder class ResourceEntryFinder StaticResourceAction class StaticResourceAction : WebAction StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : StaticResourceEntry class StaticResourceEntry : ValidWebEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule :","title":"Package misk.web.resources - Misk"},{"location":"0.x/misk/misk.web.resources/index.html#package-miskwebresources","text":"","title":"Package misk.web.resources"},{"location":"0.x/misk/misk.web.resources/index.html#types","text":"Name Summary ResourceEntryFinder class ResourceEntryFinder StaticResourceAction class StaticResourceAction : WebAction StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : StaticResourceEntry class StaticResourceEntry : ValidWebEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule :","title":"Types"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/index.html","text":"misk / misk.web.resources / ResourceEntryFinder ResourceEntryFinder \u00b6 class ResourceEntryFinder Constructors \u00b6 Name Summary <init> ResourceEntryFinder(webProxyEntries: List < WebProxyEntry >, staticResourceEntries: List < StaticResourceEntry >) Functions \u00b6 Name Summary staticResource fun staticResource(url: HttpUrl): ValidWebEntry ? webProxy fun webProxy(url: HttpUrl): ValidWebEntry ?","title":"ResourceEntryFinder - Misk"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/index.html#resourceentryfinder","text":"class ResourceEntryFinder","title":"ResourceEntryFinder"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/index.html#constructors","text":"Name Summary <init> ResourceEntryFinder(webProxyEntries: List < WebProxyEntry >, staticResourceEntries: List < StaticResourceEntry >)","title":"Constructors"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/index.html#functions","text":"Name Summary staticResource fun staticResource(url: HttpUrl): ValidWebEntry ? webProxy fun webProxy(url: HttpUrl): ValidWebEntry ?","title":"Functions"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/-init-.html","text":"misk / misk.web.resources / ResourceEntryFinder / <init> <init> \u00b6 ResourceEntryFinder(webProxyEntries: List < WebProxyEntry >, staticResourceEntries: List < StaticResourceEntry >)","title":" init "},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/-init-.html#init","text":"ResourceEntryFinder(webProxyEntries: List < WebProxyEntry >, staticResourceEntries: List < StaticResourceEntry >)","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/static-resource.html","text":"misk / misk.web.resources / ResourceEntryFinder / staticResource staticResource \u00b6 fun staticResource(url: HttpUrl): ValidWebEntry ? Return entry whose url_path_prefix most closely matches given url; longest match wins","title":"staticResource - Misk"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/static-resource.html#staticresource","text":"fun staticResource(url: HttpUrl): ValidWebEntry ? Return entry whose url_path_prefix most closely matches given url; longest match wins","title":"staticResource"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/web-proxy.html","text":"misk / misk.web.resources / ResourceEntryFinder / webProxy webProxy \u00b6 fun webProxy(url: HttpUrl): ValidWebEntry ? Return entry whose url_path_prefix most closely matches given url; longest match wins","title":"webProxy - Misk"},{"location":"0.x/misk/misk.web.resources/-resource-entry-finder/web-proxy.html#webproxy","text":"fun webProxy(url: HttpUrl): ValidWebEntry ? Return entry whose url_path_prefix most closely matches given url; longest match wins","title":"webProxy"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/index.html","text":"misk / misk.web.resources / StaticResourceAction StaticResourceAction \u00b6 @Singleton class StaticResourceAction : WebAction StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...)) Constructors \u00b6 Name Summary <init> StaticResourceAction(clientHttpCall: ActionScoped< HttpCall >, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder ) StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : Functions \u00b6 Name Summary action fun action(): Response<ResponseBody> getResponse fun getResponse(httpCall: HttpCall ): Response<ResponseBody> Extension Functions \u00b6 Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"StaticResourceAction - Misk"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/index.html#staticresourceaction","text":"@Singleton class StaticResourceAction : WebAction StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...))","title":"StaticResourceAction"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/index.html#constructors","text":"Name Summary <init> StaticResourceAction(clientHttpCall: ActionScoped< HttpCall >, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder ) StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule :","title":"Constructors"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/index.html#functions","text":"Name Summary action fun action(): Response<ResponseBody> getResponse fun getResponse(httpCall: HttpCall ): Response<ResponseBody>","title":"Functions"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/index.html#extension-functions","text":"Name Summary asChain fun WebAction.asChain(function: KFunction <*>, args: List < Any ?>, interceptors: List < ApplicationInterceptor >, httpCall: HttpCall ): Chain","title":"Extension Functions"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/-init-.html","text":"misk / misk.web.resources / StaticResourceAction / <init> <init> \u00b6 StaticResourceAction(clientHttpCall: ActionScoped< HttpCall >, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder ) StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...))","title":" init "},{"location":"0.x/misk/misk.web.resources/-static-resource-action/-init-.html#init","text":"StaticResourceAction(clientHttpCall: ActionScoped< HttpCall >, resourceLoader: ResourceLoader, resourceEntryFinder: ResourceEntryFinder ) StaticResourceAction This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...))","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/action.html","text":"misk / misk.web.resources / StaticResourceAction / action action \u00b6 fun action(): Response<ResponseBody>","title":"action - Misk"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/action.html#action","text":"fun action(): Response<ResponseBody>","title":"action"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/get-response.html","text":"misk / misk.web.resources / StaticResourceAction / getResponse getResponse \u00b6 fun getResponse(httpCall: HttpCall ): Response<ResponseBody>","title":"getResponse - Misk"},{"location":"0.x/misk/misk.web.resources/-static-resource-action/get-response.html#getresponse","text":"fun getResponse(httpCall: HttpCall ): Response<ResponseBody>","title":"getResponse"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/index.html","text":"misk / misk.web.resources / StaticResourceEntry StaticResourceEntry \u00b6 class StaticResourceEntry : ValidWebEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...)) Constructors \u00b6 Name Summary <init> StaticResourceEntry(url_path_prefix: String = \"/\", resourcePath: String ) This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : Inherited Properties \u00b6 Name Summary slug val slug: String url_path_prefix val url_path_prefix: String Functions \u00b6 Name Summary resourcePath fun resourcePath(urlPath: String ): String","title":"StaticResourceEntry - Misk"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/index.html#staticresourceentry","text":"class StaticResourceEntry : ValidWebEntry This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...))","title":"StaticResourceEntry"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/index.html#constructors","text":"Name Summary <init> StaticResourceEntry(url_path_prefix: String = \"/\", resourcePath: String ) This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule :","title":"Constructors"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/index.html#inherited-properties","text":"Name Summary slug val slug: String url_path_prefix val url_path_prefix: String","title":"Inherited Properties"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/index.html#functions","text":"Name Summary resourcePath fun resourcePath(urlPath: String ): String","title":"Functions"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/-init-.html","text":"misk / misk.web.resources / StaticResourceEntry / <init> <init> \u00b6 StaticResourceEntry(url_path_prefix: String = \"/\", resourcePath: String ) This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...))","title":" init "},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/-init-.html#init","text":"StaticResourceEntry(url_path_prefix: String = \"/\", resourcePath: String ) This data class is used with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<StaticResourceEntry>().toInstance(StaticResourceEntry(...))","title":"&lt;init&gt;"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/resource-path.html","text":"misk / misk.web.resources / StaticResourceEntry / resourcePath resourcePath \u00b6 fun resourcePath(urlPath: String ): String","title":"resourcePath - Misk"},{"location":"0.x/misk/misk.web.resources/-static-resource-entry/resource-path.html#resourcepath","text":"fun resourcePath(urlPath: String ): String","title":"resourcePath"},{"location":"0.x/misk-actions/index.html","text":"misk-actions Packages \u00b6 Name Summary misk misk.exceptions misk.scope misk.security.authz misk.web misk.web.actions misk.web.interceptors Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-actions/index.html#packages","text":"Name Summary misk misk.exceptions misk.scope misk.security.authz misk.web misk.web.actions misk.web.interceptors","title":"Packages"},{"location":"0.x/misk-actions/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-actions/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.scope.ActionScoped Provides access to a context object specific to the current action misk.security.authz.Authenticated Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services misk.web.AvailableWhenDegraded When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. misk.exceptions.BadRequestException Base exception for bad client requests misk.exceptions.ClientClosedRequestException This exception is custom to Misk. misk.exceptions.ConflictException Base exception for when a request causes a conflict misk.web.ConnectWebSocket misk.web.Delete misk.web.Description misk.web.FormField misk.web.FormValue misk.exceptions.GatewayTimeoutException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. misk.web.Get misk.web.interceptors.LogRequestResponse Annotation indicating that request and response information should be logged. misk.MiskCaller Information about the authenticated caller of a given action misk.exceptions.NotFoundException Base exception for when resources are not found misk.web.Patch misk.web.PathParam misk.exceptions.PayloadTooLargeException misk.web.Post misk.web.Put misk.web.QueryParam misk.web.RequestBody misk.web.RequestContentType misk.web.RequestHeaders misk.exceptions.ResourceUnavailableException Base exception for when a resource is unavailable. The message is not exposed to the caller. misk.web.Response An HTTP response body, headers, and status code. misk.web.ResponseBody misk.web.ResponseContentType misk.exceptions.TooManyRequestsException This exception is custom to Misk. misk.security.authz.Unauthenticated Annotation indicating that a given action supports unauthenticated access misk.exceptions.UnauthenticatedException Base exception for when authentication fails misk.exceptions.UnauthorizedException Base exception for when authenticated credentials lack access to a resource misk.exceptions.UnprocessableEntityException This exception is custom to Misk. misk.exceptions.UnsupportedMediaTypeException misk.web.actions.WebAction misk.exceptions.WebActionException misk.web.actions.WebSocket A non-blocking interface to a web socket. misk.web.actions.WebSocketListener","title":"All Types - Misk"},{"location":"0.x/misk-actions/alltypes/index.html#all-types","text":"Name Summary misk.scope.ActionScoped Provides access to a context object specific to the current action misk.security.authz.Authenticated Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services misk.web.AvailableWhenDegraded When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. misk.exceptions.BadRequestException Base exception for bad client requests misk.exceptions.ClientClosedRequestException This exception is custom to Misk. misk.exceptions.ConflictException Base exception for when a request causes a conflict misk.web.ConnectWebSocket misk.web.Delete misk.web.Description misk.web.FormField misk.web.FormValue misk.exceptions.GatewayTimeoutException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. misk.web.Get misk.web.interceptors.LogRequestResponse Annotation indicating that request and response information should be logged. misk.MiskCaller Information about the authenticated caller of a given action misk.exceptions.NotFoundException Base exception for when resources are not found misk.web.Patch misk.web.PathParam misk.exceptions.PayloadTooLargeException misk.web.Post misk.web.Put misk.web.QueryParam misk.web.RequestBody misk.web.RequestContentType misk.web.RequestHeaders misk.exceptions.ResourceUnavailableException Base exception for when a resource is unavailable. The message is not exposed to the caller. misk.web.Response An HTTP response body, headers, and status code. misk.web.ResponseBody misk.web.ResponseContentType misk.exceptions.TooManyRequestsException This exception is custom to Misk. misk.security.authz.Unauthenticated Annotation indicating that a given action supports unauthenticated access misk.exceptions.UnauthenticatedException Base exception for when authentication fails misk.exceptions.UnauthorizedException Base exception for when authenticated credentials lack access to a resource misk.exceptions.UnprocessableEntityException This exception is custom to Misk. misk.exceptions.UnsupportedMediaTypeException misk.web.actions.WebAction misk.exceptions.WebActionException misk.web.actions.WebSocket A non-blocking interface to a web socket. misk.web.actions.WebSocketListener","title":"All Types"},{"location":"0.x/misk-actions/misk/index.html","text":"misk-actions / misk Package misk \u00b6 Types \u00b6 Name Summary MiskCaller data class MiskCaller Information about the authenticated caller of a given action","title":"Package misk - Misk"},{"location":"0.x/misk-actions/misk/index.html#package-misk","text":"","title":"Package misk"},{"location":"0.x/misk-actions/misk/index.html#types","text":"Name Summary MiskCaller data class MiskCaller Information about the authenticated caller of a given action","title":"Types"},{"location":"0.x/misk-actions/misk/-misk-caller/index.html","text":"misk-actions / misk / MiskCaller MiskCaller \u00b6 data class MiskCaller Information about the authenticated caller of a given action Constructors \u00b6 Name Summary <init> MiskCaller(service: String ? = null, user: String ? = null, capabilities: Set < String > = setOf()) Information about the authenticated caller of a given action Properties \u00b6 Name Summary capabilities val capabilities: Set < String > Set of capabilities given to a human user, typically provided by the SSO infrastructure principal val principal: String The identity of the calling principal, regardless of whether they are a service or a user service val service: String ? Present if the caller is an authenticated peer service user val user: String ? Present if the caller is a human user, typically from an SSO proxy Functions \u00b6 Name Summary isAllowed fun isAllowed(allowedCapabilities: Set < String >, allowedServices: Set < String >): Boolean Determine based on allowed capabilities/services if the caller is permitted toString fun toString(): String We don\u2019t like to log usernames.","title":"MiskCaller - Misk"},{"location":"0.x/misk-actions/misk/-misk-caller/index.html#miskcaller","text":"data class MiskCaller Information about the authenticated caller of a given action","title":"MiskCaller"},{"location":"0.x/misk-actions/misk/-misk-caller/index.html#constructors","text":"Name Summary <init> MiskCaller(service: String ? = null, user: String ? = null, capabilities: Set < String > = setOf()) Information about the authenticated caller of a given action","title":"Constructors"},{"location":"0.x/misk-actions/misk/-misk-caller/index.html#properties","text":"Name Summary capabilities val capabilities: Set < String > Set of capabilities given to a human user, typically provided by the SSO infrastructure principal val principal: String The identity of the calling principal, regardless of whether they are a service or a user service val service: String ? Present if the caller is an authenticated peer service user val user: String ? Present if the caller is a human user, typically from an SSO proxy","title":"Properties"},{"location":"0.x/misk-actions/misk/-misk-caller/index.html#functions","text":"Name Summary isAllowed fun isAllowed(allowedCapabilities: Set < String >, allowedServices: Set < String >): Boolean Determine based on allowed capabilities/services if the caller is permitted toString fun toString(): String We don\u2019t like to log usernames.","title":"Functions"},{"location":"0.x/misk-actions/misk/-misk-caller/-init-.html","text":"misk-actions / misk / MiskCaller / <init> <init> \u00b6 MiskCaller(service: String ? = null, user: String ? = null, capabilities: Set < String > = setOf()) Information about the authenticated caller of a given action","title":" init "},{"location":"0.x/misk-actions/misk/-misk-caller/-init-.html#init","text":"MiskCaller(service: String ? = null, user: String ? = null, capabilities: Set < String > = setOf()) Information about the authenticated caller of a given action","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk/-misk-caller/capabilities.html","text":"misk-actions / misk / MiskCaller / capabilities capabilities \u00b6 val capabilities: Set < String > Set of capabilities given to a human user, typically provided by the SSO infrastructure","title":"capabilities - Misk"},{"location":"0.x/misk-actions/misk/-misk-caller/capabilities.html#capabilities","text":"val capabilities: Set < String > Set of capabilities given to a human user, typically provided by the SSO infrastructure","title":"capabilities"},{"location":"0.x/misk-actions/misk/-misk-caller/is-allowed.html","text":"misk-actions / misk / MiskCaller / isAllowed isAllowed \u00b6 fun isAllowed(allowedCapabilities: Set < String >, allowedServices: Set < String >): Boolean Determine based on allowed capabilities/services if the caller is permitted","title":"isAllowed - Misk"},{"location":"0.x/misk-actions/misk/-misk-caller/is-allowed.html#isallowed","text":"fun isAllowed(allowedCapabilities: Set < String >, allowedServices: Set < String >): Boolean Determine based on allowed capabilities/services if the caller is permitted","title":"isAllowed"},{"location":"0.x/misk-actions/misk/-misk-caller/principal.html","text":"misk-actions / misk / MiskCaller / principal principal \u00b6 val principal: String The identity of the calling principal, regardless of whether they are a service or a user","title":"principal - Misk"},{"location":"0.x/misk-actions/misk/-misk-caller/principal.html#principal","text":"val principal: String The identity of the calling principal, regardless of whether they are a service or a user","title":"principal"},{"location":"0.x/misk-actions/misk/-misk-caller/service.html","text":"misk-actions / misk / MiskCaller / service service \u00b6 val service: String ? Present if the caller is an authenticated peer service","title":"service - Misk"},{"location":"0.x/misk-actions/misk/-misk-caller/service.html#service","text":"val service: String ? Present if the caller is an authenticated peer service","title":"service"},{"location":"0.x/misk-actions/misk/-misk-caller/to-string.html","text":"misk-actions / misk / MiskCaller / toString toString \u00b6 fun toString(): String We don\u2019t like to log usernames.","title":"toString - Misk"},{"location":"0.x/misk-actions/misk/-misk-caller/to-string.html#tostring","text":"fun toString(): String We don\u2019t like to log usernames.","title":"toString"},{"location":"0.x/misk-actions/misk/-misk-caller/user.html","text":"misk-actions / misk / MiskCaller / user user \u00b6 val user: String ? Present if the caller is a human user, typically from an SSO proxy","title":"user - Misk"},{"location":"0.x/misk-actions/misk/-misk-caller/user.html#user","text":"val user: String ? Present if the caller is a human user, typically from an SSO proxy","title":"user"},{"location":"0.x/misk-actions/misk.exceptions/index.html","text":"misk-actions / misk.exceptions Package misk.exceptions \u00b6 Exceptions \u00b6 Name Summary BadRequestException open class BadRequestException : WebActionException Base exception for bad client requests ClientClosedRequestException open class ClientClosedRequestException : WebActionException This exception is custom to Misk. ConflictException open class ConflictException : WebActionException Base exception for when a request causes a conflict GatewayTimeoutException open class GatewayTimeoutException : WebActionException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. NotFoundException open class NotFoundException : WebActionException Base exception for when resources are not found PayloadTooLargeException open class PayloadTooLargeException : WebActionException ResourceUnavailableException open class ResourceUnavailableException : WebActionException Base exception for when a resource is unavailable. The message is not exposed to the caller. TooManyRequestsException open class TooManyRequestsException : WebActionException This exception is custom to Misk. UnauthenticatedException open class UnauthenticatedException : WebActionException Base exception for when authentication fails UnauthorizedException open class UnauthorizedException : WebActionException Base exception for when authenticated credentials lack access to a resource UnprocessableEntityException open class UnprocessableEntityException : WebActionException This exception is custom to Misk. UnsupportedMediaTypeException open class UnsupportedMediaTypeException : WebActionException WebActionException open class WebActionException : Exception Functions \u00b6 Name Summary requireRequest fun requireRequest(check: Boolean , lazyMessage: () -> String ): Unit Similar to kotlin.require , but throws BadRequestException if the check fails","title":"Package misk.exceptions - Misk"},{"location":"0.x/misk-actions/misk.exceptions/index.html#package-miskexceptions","text":"","title":"Package misk.exceptions"},{"location":"0.x/misk-actions/misk.exceptions/index.html#exceptions","text":"Name Summary BadRequestException open class BadRequestException : WebActionException Base exception for bad client requests ClientClosedRequestException open class ClientClosedRequestException : WebActionException This exception is custom to Misk. ConflictException open class ConflictException : WebActionException Base exception for when a request causes a conflict GatewayTimeoutException open class GatewayTimeoutException : WebActionException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. NotFoundException open class NotFoundException : WebActionException Base exception for when resources are not found PayloadTooLargeException open class PayloadTooLargeException : WebActionException ResourceUnavailableException open class ResourceUnavailableException : WebActionException Base exception for when a resource is unavailable. The message is not exposed to the caller. TooManyRequestsException open class TooManyRequestsException : WebActionException This exception is custom to Misk. UnauthenticatedException open class UnauthenticatedException : WebActionException Base exception for when authentication fails UnauthorizedException open class UnauthorizedException : WebActionException Base exception for when authenticated credentials lack access to a resource UnprocessableEntityException open class UnprocessableEntityException : WebActionException This exception is custom to Misk. UnsupportedMediaTypeException open class UnsupportedMediaTypeException : WebActionException WebActionException open class WebActionException : Exception","title":"Exceptions"},{"location":"0.x/misk-actions/misk.exceptions/index.html#functions","text":"Name Summary requireRequest fun requireRequest(check: Boolean , lazyMessage: () -> String ): Unit Similar to kotlin.require , but throws BadRequestException if the check fails","title":"Functions"},{"location":"0.x/misk-actions/misk.exceptions/require-request.html","text":"misk-actions / misk.exceptions / requireRequest requireRequest \u00b6 inline fun requireRequest(check: Boolean , lazyMessage: () -> String ): Unit Similar to kotlin.require , but throws BadRequestException if the check fails","title":"requireRequest - Misk"},{"location":"0.x/misk-actions/misk.exceptions/require-request.html#requirerequest","text":"inline fun requireRequest(check: Boolean , lazyMessage: () -> String ): Unit Similar to kotlin.require , but throws BadRequestException if the check fails","title":"requireRequest"},{"location":"0.x/misk-actions/misk.exceptions/-bad-request-exception/index.html","text":"misk-actions / misk.exceptions / BadRequestException BadRequestException \u00b6 open class BadRequestException : WebActionException Base exception for bad client requests Constructors \u00b6 Name Summary <init> BadRequestException(message: String = \"\", cause: Throwable ? = null) Base exception for bad client requests Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"BadRequestException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-bad-request-exception/index.html#badrequestexception","text":"open class BadRequestException : WebActionException Base exception for bad client requests","title":"BadRequestException"},{"location":"0.x/misk-actions/misk.exceptions/-bad-request-exception/index.html#constructors","text":"Name Summary <init> BadRequestException(message: String = \"\", cause: Throwable ? = null) Base exception for bad client requests","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-bad-request-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-bad-request-exception/-init-.html","text":"misk-actions / misk.exceptions / BadRequestException / <init> <init> \u00b6 BadRequestException(message: String = \"\", cause: Throwable ? = null) Base exception for bad client requests","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-bad-request-exception/-init-.html#init","text":"BadRequestException(message: String = \"\", cause: Throwable ? = null) Base exception for bad client requests","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-client-closed-request-exception/index.html","text":"misk-actions / misk.exceptions / ClientClosedRequestException ClientClosedRequestException \u00b6 open class ClientClosedRequestException : WebActionException This exception is custom to Misk. Constructors \u00b6 Name Summary <init> ClientClosedRequestException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk. Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"ClientClosedRequestException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-client-closed-request-exception/index.html#clientclosedrequestexception","text":"open class ClientClosedRequestException : WebActionException This exception is custom to Misk.","title":"ClientClosedRequestException"},{"location":"0.x/misk-actions/misk.exceptions/-client-closed-request-exception/index.html#constructors","text":"Name Summary <init> ClientClosedRequestException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-client-closed-request-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-client-closed-request-exception/-init-.html","text":"misk-actions / misk.exceptions / ClientClosedRequestException / <init> <init> \u00b6 ClientClosedRequestException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-client-closed-request-exception/-init-.html#init","text":"ClientClosedRequestException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-conflict-exception/index.html","text":"misk-actions / misk.exceptions / ConflictException ConflictException \u00b6 open class ConflictException : WebActionException Base exception for when a request causes a conflict Constructors \u00b6 Name Summary <init> ConflictException(message: String = \"\", cause: Throwable ? = null) Base exception for when a request causes a conflict Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"ConflictException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-conflict-exception/index.html#conflictexception","text":"open class ConflictException : WebActionException Base exception for when a request causes a conflict","title":"ConflictException"},{"location":"0.x/misk-actions/misk.exceptions/-conflict-exception/index.html#constructors","text":"Name Summary <init> ConflictException(message: String = \"\", cause: Throwable ? = null) Base exception for when a request causes a conflict","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-conflict-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-conflict-exception/-init-.html","text":"misk-actions / misk.exceptions / ConflictException / <init> <init> \u00b6 ConflictException(message: String = \"\", cause: Throwable ? = null) Base exception for when a request causes a conflict","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-conflict-exception/-init-.html#init","text":"ConflictException(message: String = \"\", cause: Throwable ? = null) Base exception for when a request causes a conflict","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-gateway-timeout-exception/index.html","text":"misk-actions / misk.exceptions / GatewayTimeoutException GatewayTimeoutException \u00b6 open class GatewayTimeoutException : WebActionException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. Constructors \u00b6 Name Summary <init> GatewayTimeoutException(message: String = \"\", cause: Throwable ? = null) Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"GatewayTimeoutException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-gateway-timeout-exception/index.html#gatewaytimeoutexception","text":"open class GatewayTimeoutException : WebActionException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller.","title":"GatewayTimeoutException"},{"location":"0.x/misk-actions/misk.exceptions/-gateway-timeout-exception/index.html#constructors","text":"Name Summary <init> GatewayTimeoutException(message: String = \"\", cause: Throwable ? = null) Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller.","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-gateway-timeout-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-gateway-timeout-exception/-init-.html","text":"misk-actions / misk.exceptions / GatewayTimeoutException / <init> <init> \u00b6 GatewayTimeoutException(message: String = \"\", cause: Throwable ? = null) Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller.","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-gateway-timeout-exception/-init-.html#init","text":"GatewayTimeoutException(message: String = \"\", cause: Throwable ? = null) Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-not-found-exception/index.html","text":"misk-actions / misk.exceptions / NotFoundException NotFoundException \u00b6 open class NotFoundException : WebActionException Base exception for when resources are not found Constructors \u00b6 Name Summary <init> NotFoundException(message: String = \"\", cause: Throwable ? = null) Base exception for when resources are not found Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"NotFoundException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-not-found-exception/index.html#notfoundexception","text":"open class NotFoundException : WebActionException Base exception for when resources are not found","title":"NotFoundException"},{"location":"0.x/misk-actions/misk.exceptions/-not-found-exception/index.html#constructors","text":"Name Summary <init> NotFoundException(message: String = \"\", cause: Throwable ? = null) Base exception for when resources are not found","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-not-found-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-not-found-exception/-init-.html","text":"misk-actions / misk.exceptions / NotFoundException / <init> <init> \u00b6 NotFoundException(message: String = \"\", cause: Throwable ? = null) Base exception for when resources are not found","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-not-found-exception/-init-.html#init","text":"NotFoundException(message: String = \"\", cause: Throwable ? = null) Base exception for when resources are not found","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-payload-too-large-exception/index.html","text":"misk-actions / misk.exceptions / PayloadTooLargeException PayloadTooLargeException \u00b6 open class PayloadTooLargeException : WebActionException Constructors \u00b6 Name Summary <init> PayloadTooLargeException(message: String = \"\", cause: Throwable ? = null) Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"PayloadTooLargeException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-payload-too-large-exception/index.html#payloadtoolargeexception","text":"open class PayloadTooLargeException : WebActionException","title":"PayloadTooLargeException"},{"location":"0.x/misk-actions/misk.exceptions/-payload-too-large-exception/index.html#constructors","text":"Name Summary <init> PayloadTooLargeException(message: String = \"\", cause: Throwable ? = null)","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-payload-too-large-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-payload-too-large-exception/-init-.html","text":"misk-actions / misk.exceptions / PayloadTooLargeException / <init> <init> \u00b6 PayloadTooLargeException(message: String = \"\", cause: Throwable ? = null)","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-payload-too-large-exception/-init-.html#init","text":"PayloadTooLargeException(message: String = \"\", cause: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-resource-unavailable-exception/index.html","text":"misk-actions / misk.exceptions / ResourceUnavailableException ResourceUnavailableException \u00b6 open class ResourceUnavailableException : WebActionException Base exception for when a resource is unavailable. The message is not exposed to the caller. Constructors \u00b6 Name Summary <init> ResourceUnavailableException(message: String = \"\", cause: Throwable ? = null) Base exception for when a resource is unavailable. The message is not exposed to the caller. Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"ResourceUnavailableException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-resource-unavailable-exception/index.html#resourceunavailableexception","text":"open class ResourceUnavailableException : WebActionException Base exception for when a resource is unavailable. The message is not exposed to the caller.","title":"ResourceUnavailableException"},{"location":"0.x/misk-actions/misk.exceptions/-resource-unavailable-exception/index.html#constructors","text":"Name Summary <init> ResourceUnavailableException(message: String = \"\", cause: Throwable ? = null) Base exception for when a resource is unavailable. The message is not exposed to the caller.","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-resource-unavailable-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-resource-unavailable-exception/-init-.html","text":"misk-actions / misk.exceptions / ResourceUnavailableException / <init> <init> \u00b6 ResourceUnavailableException(message: String = \"\", cause: Throwable ? = null) Base exception for when a resource is unavailable. The message is not exposed to the caller.","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-resource-unavailable-exception/-init-.html#init","text":"ResourceUnavailableException(message: String = \"\", cause: Throwable ? = null) Base exception for when a resource is unavailable. The message is not exposed to the caller.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-too-many-requests-exception/index.html","text":"misk-actions / misk.exceptions / TooManyRequestsException TooManyRequestsException \u00b6 open class TooManyRequestsException : WebActionException This exception is custom to Misk. Constructors \u00b6 Name Summary <init> TooManyRequestsException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk. Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"TooManyRequestsException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-too-many-requests-exception/index.html#toomanyrequestsexception","text":"open class TooManyRequestsException : WebActionException This exception is custom to Misk.","title":"TooManyRequestsException"},{"location":"0.x/misk-actions/misk.exceptions/-too-many-requests-exception/index.html#constructors","text":"Name Summary <init> TooManyRequestsException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-too-many-requests-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-too-many-requests-exception/-init-.html","text":"misk-actions / misk.exceptions / TooManyRequestsException / <init> <init> \u00b6 TooManyRequestsException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-too-many-requests-exception/-init-.html#init","text":"TooManyRequestsException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-unauthenticated-exception/index.html","text":"misk-actions / misk.exceptions / UnauthenticatedException UnauthenticatedException \u00b6 open class UnauthenticatedException : WebActionException Base exception for when authentication fails Constructors \u00b6 Name Summary <init> UnauthenticatedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authentication fails Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"UnauthenticatedException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-unauthenticated-exception/index.html#unauthenticatedexception","text":"open class UnauthenticatedException : WebActionException Base exception for when authentication fails","title":"UnauthenticatedException"},{"location":"0.x/misk-actions/misk.exceptions/-unauthenticated-exception/index.html#constructors","text":"Name Summary <init> UnauthenticatedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authentication fails","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-unauthenticated-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-unauthenticated-exception/-init-.html","text":"misk-actions / misk.exceptions / UnauthenticatedException / <init> <init> \u00b6 UnauthenticatedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authentication fails","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-unauthenticated-exception/-init-.html#init","text":"UnauthenticatedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authentication fails","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-unauthorized-exception/index.html","text":"misk-actions / misk.exceptions / UnauthorizedException UnauthorizedException \u00b6 open class UnauthorizedException : WebActionException Base exception for when authenticated credentials lack access to a resource Constructors \u00b6 Name Summary <init> UnauthorizedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authenticated credentials lack access to a resource Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"UnauthorizedException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-unauthorized-exception/index.html#unauthorizedexception","text":"open class UnauthorizedException : WebActionException Base exception for when authenticated credentials lack access to a resource","title":"UnauthorizedException"},{"location":"0.x/misk-actions/misk.exceptions/-unauthorized-exception/index.html#constructors","text":"Name Summary <init> UnauthorizedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authenticated credentials lack access to a resource","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-unauthorized-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-unauthorized-exception/-init-.html","text":"misk-actions / misk.exceptions / UnauthorizedException / <init> <init> \u00b6 UnauthorizedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authenticated credentials lack access to a resource","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-unauthorized-exception/-init-.html#init","text":"UnauthorizedException(message: String = \"\", cause: Throwable ? = null) Base exception for when authenticated credentials lack access to a resource","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-unprocessable-entity-exception/index.html","text":"misk-actions / misk.exceptions / UnprocessableEntityException UnprocessableEntityException \u00b6 open class UnprocessableEntityException : WebActionException This exception is custom to Misk. Constructors \u00b6 Name Summary <init> UnprocessableEntityException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk. Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"UnprocessableEntityException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-unprocessable-entity-exception/index.html#unprocessableentityexception","text":"open class UnprocessableEntityException : WebActionException This exception is custom to Misk.","title":"UnprocessableEntityException"},{"location":"0.x/misk-actions/misk.exceptions/-unprocessable-entity-exception/index.html#constructors","text":"Name Summary <init> UnprocessableEntityException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-unprocessable-entity-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-unprocessable-entity-exception/-init-.html","text":"misk-actions / misk.exceptions / UnprocessableEntityException / <init> <init> \u00b6 UnprocessableEntityException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-unprocessable-entity-exception/-init-.html#init","text":"UnprocessableEntityException(message: String = \"\", cause: Throwable ? = null) This exception is custom to Misk.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-unsupported-media-type-exception/index.html","text":"misk-actions / misk.exceptions / UnsupportedMediaTypeException UnsupportedMediaTypeException \u00b6 open class UnsupportedMediaTypeException : WebActionException Constructors \u00b6 Name Summary <init> UnsupportedMediaTypeException(message: String = \"\", cause: Throwable ? = null) Inherited Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"UnsupportedMediaTypeException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-unsupported-media-type-exception/index.html#unsupportedmediatypeexception","text":"open class UnsupportedMediaTypeException : WebActionException","title":"UnsupportedMediaTypeException"},{"location":"0.x/misk-actions/misk.exceptions/-unsupported-media-type-exception/index.html#constructors","text":"Name Summary <init> UnsupportedMediaTypeException(message: String = \"\", cause: Throwable ? = null)","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-unsupported-media-type-exception/index.html#inherited-properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Inherited Properties"},{"location":"0.x/misk-actions/misk.exceptions/-unsupported-media-type-exception/-init-.html","text":"misk-actions / misk.exceptions / UnsupportedMediaTypeException / <init> <init> \u00b6 UnsupportedMediaTypeException(message: String = \"\", cause: Throwable ? = null)","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-unsupported-media-type-exception/-init-.html#init","text":"UnsupportedMediaTypeException(message: String = \"\", cause: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/index.html","text":"misk-actions / misk.exceptions / WebActionException WebActionException \u00b6 open class WebActionException : Exception Constructors \u00b6 Name Summary <init> WebActionException(code: Int , responseBody: String , message: String , cause: Throwable ? = null) Properties \u00b6 Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body. Inheritors \u00b6 Name Summary BadRequestException open class BadRequestException : WebActionException Base exception for bad client requests ClientClosedRequestException open class ClientClosedRequestException : WebActionException This exception is custom to Misk. ConflictException open class ConflictException : WebActionException Base exception for when a request causes a conflict GatewayTimeoutException open class GatewayTimeoutException : WebActionException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. NotFoundException open class NotFoundException : WebActionException Base exception for when resources are not found PayloadTooLargeException open class PayloadTooLargeException : WebActionException ResourceUnavailableException open class ResourceUnavailableException : WebActionException Base exception for when a resource is unavailable. The message is not exposed to the caller. TooManyRequestsException open class TooManyRequestsException : WebActionException This exception is custom to Misk. UnauthenticatedException open class UnauthenticatedException : WebActionException Base exception for when authentication fails UnauthorizedException open class UnauthorizedException : WebActionException Base exception for when authenticated credentials lack access to a resource UnprocessableEntityException open class UnprocessableEntityException : WebActionException This exception is custom to Misk. UnsupportedMediaTypeException open class UnsupportedMediaTypeException : WebActionException","title":"WebActionException - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/index.html#webactionexception","text":"open class WebActionException : Exception","title":"WebActionException"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/index.html#constructors","text":"Name Summary <init> WebActionException(code: Int , responseBody: String , message: String , cause: Throwable ? = null)","title":"Constructors"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/index.html#properties","text":"Name Summary code val code: Int The HTTP status code. Should be 400..599. isClientError val isClientError: Boolean isServerError val isServerError: Boolean responseBody val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"Properties"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/index.html#inheritors","text":"Name Summary BadRequestException open class BadRequestException : WebActionException Base exception for bad client requests ClientClosedRequestException open class ClientClosedRequestException : WebActionException This exception is custom to Misk. ConflictException open class ConflictException : WebActionException Base exception for when a request causes a conflict GatewayTimeoutException open class GatewayTimeoutException : WebActionException Base exception for when a server is acting as a gateway and cannot get a response in time. The message is not exposed to the caller. NotFoundException open class NotFoundException : WebActionException Base exception for when resources are not found PayloadTooLargeException open class PayloadTooLargeException : WebActionException ResourceUnavailableException open class ResourceUnavailableException : WebActionException Base exception for when a resource is unavailable. The message is not exposed to the caller. TooManyRequestsException open class TooManyRequestsException : WebActionException This exception is custom to Misk. UnauthenticatedException open class UnauthenticatedException : WebActionException Base exception for when authentication fails UnauthorizedException open class UnauthorizedException : WebActionException Base exception for when authenticated credentials lack access to a resource UnprocessableEntityException open class UnprocessableEntityException : WebActionException This exception is custom to Misk. UnsupportedMediaTypeException open class UnsupportedMediaTypeException : WebActionException","title":"Inheritors"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/-init-.html","text":"misk-actions / misk.exceptions / WebActionException / <init> <init> \u00b6 WebActionException(code: Int , responseBody: String , message: String , cause: Throwable ? = null)","title":" init "},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/-init-.html#init","text":"WebActionException(code: Int , responseBody: String , message: String , cause: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/code.html","text":"misk-actions / misk.exceptions / WebActionException / code code \u00b6 val code: Int The HTTP status code. Should be 400..599.","title":"code - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/code.html#code","text":"val code: Int The HTTP status code. Should be 400..599.","title":"code"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/is-client-error.html","text":"misk-actions / misk.exceptions / WebActionException / isClientError isClientError \u00b6 val isClientError: Boolean","title":"isClientError - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/is-client-error.html#isclienterror","text":"val isClientError: Boolean","title":"isClientError"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/is-server-error.html","text":"misk-actions / misk.exceptions / WebActionException / isServerError isServerError \u00b6 val isServerError: Boolean","title":"isServerError - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/is-server-error.html#isservererror","text":"val isServerError: Boolean","title":"isServerError"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/response-body.html","text":"misk-actions / misk.exceptions / WebActionException / responseBody responseBody \u00b6 val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"responseBody - Misk"},{"location":"0.x/misk-actions/misk.exceptions/-web-action-exception/response-body.html#responsebody","text":"val responseBody: String This is returned to the caller as is for 4xx responses. 5xx responses are always masked. Be mindful not to leak internal implementation details and possible vulnerabilities in the response body.","title":"responseBody"},{"location":"0.x/misk-actions/misk.scope/index.html","text":"misk-actions / misk.scope Package misk.scope \u00b6 Types \u00b6 Name Summary ActionScoped interface ActionScoped<out T> Provides access to a context object specific to the current action","title":"Package misk.scope - Misk"},{"location":"0.x/misk-actions/misk.scope/index.html#package-miskscope","text":"","title":"Package misk.scope"},{"location":"0.x/misk-actions/misk.scope/index.html#types","text":"Name Summary ActionScoped interface ActionScoped<out T> Provides access to a context object specific to the current action","title":"Types"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/index.html","text":"misk-actions / misk.scope / ActionScoped ActionScoped \u00b6 interface ActionScoped<out T> Provides access to a context object specific to the current action Functions \u00b6 Name Summary get abstract fun get(): T Companion Object Functions \u00b6 Name Summary of fun <T> of(value: T ): ActionScoped < T >","title":"ActionScoped - Misk"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/index.html#actionscoped","text":"interface ActionScoped<out T> Provides access to a context object specific to the current action","title":"ActionScoped"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/index.html#functions","text":"Name Summary get abstract fun get(): T","title":"Functions"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/index.html#companion-object-functions","text":"Name Summary of fun <T> of(value: T ): ActionScoped < T >","title":"Companion Object Functions"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/get.html","text":"misk-actions / misk.scope / ActionScoped / get get \u00b6 abstract fun get(): T","title":"get - Misk"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/get.html#get","text":"abstract fun get(): T","title":"get"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/of.html","text":"misk-actions / misk.scope / ActionScoped / of of \u00b6 fun <T> of(value: T ): ActionScoped < T > Return an ActionScoped hard-coded to a specific value, useful for tests","title":"of - Misk"},{"location":"0.x/misk-actions/misk.scope/-action-scoped/of.html#of","text":"fun <T> of(value: T ): ActionScoped < T > Return an ActionScoped hard-coded to a specific value, useful for tests","title":"of"},{"location":"0.x/misk-actions/misk.security.authz/index.html","text":"misk-actions / misk.security.authz Package misk.security.authz \u00b6 Annotations \u00b6 Name Summary Authenticated annotation class Authenticated Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services Unauthenticated annotation class Unauthenticated Annotation indicating that a given action supports unauthenticated access","title":"Package misk.security.authz - Misk"},{"location":"0.x/misk-actions/misk.security.authz/index.html#package-misksecurityauthz","text":"","title":"Package misk.security.authz"},{"location":"0.x/misk-actions/misk.security.authz/index.html#annotations","text":"Name Summary Authenticated annotation class Authenticated Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services Unauthenticated annotation class Unauthenticated Annotation indicating that a given action supports unauthenticated access","title":"Annotations"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/index.html","text":"misk-actions / misk.security.authz / Authenticated Authenticated \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Authenticated Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services Constructors \u00b6 Name Summary <init> Authenticated(services: Array < String > = [], capabilities: Array < String > = []) Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services Properties \u00b6 Name Summary capabilities val capabilities: Array < String > services val services: Array < String >","title":"Authenticated - Misk"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/index.html#authenticated","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Authenticated Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services","title":"Authenticated"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/index.html#constructors","text":"Name Summary <init> Authenticated(services: Array < String > = [], capabilities: Array < String > = []) Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services","title":"Constructors"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/index.html#properties","text":"Name Summary capabilities val capabilities: Array < String > services val services: Array < String >","title":"Properties"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/-init-.html","text":"misk-actions / misk.security.authz / Authenticated / <init> <init> \u00b6 Authenticated(services: Array < String > = [], capabilities: Array < String > = []) Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services","title":" init "},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/-init-.html#init","text":"Authenticated(services: Array < String > = [], capabilities: Array < String > = []) Annotation indicating that a given action requires an authenticated caller - either a human in a specific capability, or one of a set of services","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/capabilities.html","text":"misk-actions / misk.security.authz / Authenticated / capabilities capabilities \u00b6 val capabilities: Array < String >","title":"capabilities - Misk"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/capabilities.html#capabilities","text":"val capabilities: Array < String >","title":"capabilities"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/services.html","text":"misk-actions / misk.security.authz / Authenticated / services services \u00b6 val services: Array < String >","title":"services - Misk"},{"location":"0.x/misk-actions/misk.security.authz/-authenticated/services.html#services","text":"val services: Array < String >","title":"services"},{"location":"0.x/misk-actions/misk.security.authz/-unauthenticated/index.html","text":"misk-actions / misk.security.authz / Unauthenticated Unauthenticated \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Unauthenticated Annotation indicating that a given action supports unauthenticated access Constructors \u00b6 Name Summary <init> Unauthenticated() Annotation indicating that a given action supports unauthenticated access","title":"Unauthenticated - Misk"},{"location":"0.x/misk-actions/misk.security.authz/-unauthenticated/index.html#unauthenticated","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Unauthenticated Annotation indicating that a given action supports unauthenticated access","title":"Unauthenticated"},{"location":"0.x/misk-actions/misk.security.authz/-unauthenticated/index.html#constructors","text":"Name Summary <init> Unauthenticated() Annotation indicating that a given action supports unauthenticated access","title":"Constructors"},{"location":"0.x/misk-actions/misk.security.authz/-unauthenticated/-init-.html","text":"misk-actions / misk.security.authz / Unauthenticated / <init> <init> \u00b6 Unauthenticated() Annotation indicating that a given action supports unauthenticated access","title":" init "},{"location":"0.x/misk-actions/misk.security.authz/-unauthenticated/-init-.html#init","text":"Unauthenticated() Annotation indicating that a given action supports unauthenticated access","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/index.html","text":"misk-actions / misk.web Package misk.web \u00b6 Types \u00b6 Name Summary Response data class Response<out T> An HTTP response body, headers, and status code. ResponseBody interface ResponseBody Annotations \u00b6 Name Summary AvailableWhenDegraded annotation class AvailableWhenDegraded When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. ConnectWebSocket annotation class ConnectWebSocket Delete annotation class Delete Description annotation class Description FormField annotation class FormField FormValue annotation class FormValue Get annotation class Get Patch annotation class Patch PathParam annotation class PathParam Post annotation class Post Put annotation class Put QueryParam annotation class QueryParam RequestBody annotation class RequestBody RequestContentType annotation class RequestContentType RequestHeaders annotation class RequestHeaders ResponseContentType annotation class ResponseContentType","title":"Package misk.web - Misk"},{"location":"0.x/misk-actions/misk.web/index.html#package-miskweb","text":"","title":"Package misk.web"},{"location":"0.x/misk-actions/misk.web/index.html#types","text":"Name Summary Response data class Response<out T> An HTTP response body, headers, and status code. ResponseBody interface ResponseBody","title":"Types"},{"location":"0.x/misk-actions/misk.web/index.html#annotations","text":"Name Summary AvailableWhenDegraded annotation class AvailableWhenDegraded When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. ConnectWebSocket annotation class ConnectWebSocket Delete annotation class Delete Description annotation class Description FormField annotation class FormField FormValue annotation class FormValue Get annotation class Get Patch annotation class Patch PathParam annotation class PathParam Post annotation class Post Put annotation class Put QueryParam annotation class QueryParam RequestBody annotation class RequestBody RequestContentType annotation class RequestContentType RequestHeaders annotation class RequestHeaders ResponseContentType annotation class ResponseContentType","title":"Annotations"},{"location":"0.x/misk-actions/misk.web/-available-when-degraded/index.html","text":"misk-actions / misk.web / AvailableWhenDegraded AvailableWhenDegraded \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class AvailableWhenDegraded When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. We must not shed calls to status endpoints like health checks as doing so may create cascading failures: overloaded instances that do not respond to health checks will be killed, and this further overloads the remaining peers. Only put this on endpoints that must never be rejected. Such endpoints must not do RPCs, database queries or other I/O because unexpected latency there can take down the entire service. Constructors \u00b6 Name Summary <init> AvailableWhenDegraded() When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP.","title":"AvailableWhenDegraded - Misk"},{"location":"0.x/misk-actions/misk.web/-available-when-degraded/index.html#availablewhendegraded","text":"@Target([AnnotationTarget.FUNCTION]) annotation class AvailableWhenDegraded When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. We must not shed calls to status endpoints like health checks as doing so may create cascading failures: overloaded instances that do not respond to health checks will be killed, and this further overloads the remaining peers. Only put this on endpoints that must never be rejected. Such endpoints must not do RPCs, database queries or other I/O because unexpected latency there can take down the entire service.","title":"AvailableWhenDegraded"},{"location":"0.x/misk-actions/misk.web/-available-when-degraded/index.html#constructors","text":"Name Summary <init> AvailableWhenDegraded() When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP.","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-available-when-degraded/-init-.html","text":"misk-actions / misk.web / AvailableWhenDegraded / <init> <init> \u00b6 AvailableWhenDegraded() When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. We must not shed calls to status endpoints like health checks as doing so may create cascading failures: overloaded instances that do not respond to health checks will be killed, and this further overloads the remaining peers. Only put this on endpoints that must never be rejected. Such endpoints must not do RPCs, database queries or other I/O because unexpected latency there can take down the entire service.","title":" init "},{"location":"0.x/misk-actions/misk.web/-available-when-degraded/-init-.html#init","text":"AvailableWhenDegraded() When the service is overloaded Misk will intervene and reject calls by returning \u201cHTTP 503 Service Unavailable\u201d. We call this load shedding and it works similarly to flow control in TCP. We must not shed calls to status endpoints like health checks as doing so may create cascading failures: overloaded instances that do not respond to health checks will be killed, and this further overloads the remaining peers. Only put this on endpoints that must never be rejected. Such endpoints must not do RPCs, database queries or other I/O because unexpected latency there can take down the entire service.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/index.html","text":"misk-actions / misk.web / ConnectWebSocket ConnectWebSocket \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class ConnectWebSocket Constructors \u00b6 Name Summary <init> ConnectWebSocket(pathPattern: String ) Properties \u00b6 Name Summary pathPattern val pathPattern: String","title":"ConnectWebSocket - Misk"},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/index.html#connectwebsocket","text":"@Target([AnnotationTarget.FUNCTION]) annotation class ConnectWebSocket","title":"ConnectWebSocket"},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/index.html#constructors","text":"Name Summary <init> ConnectWebSocket(pathPattern: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/index.html#properties","text":"Name Summary pathPattern val pathPattern: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/-init-.html","text":"misk-actions / misk.web / ConnectWebSocket / <init> <init> \u00b6 ConnectWebSocket(pathPattern: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/-init-.html#init","text":"ConnectWebSocket(pathPattern: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/path-pattern.html","text":"misk-actions / misk.web / ConnectWebSocket / pathPattern pathPattern \u00b6 val pathPattern: String","title":"pathPattern - Misk"},{"location":"0.x/misk-actions/misk.web/-connect-web-socket/path-pattern.html#pathpattern","text":"val pathPattern: String","title":"pathPattern"},{"location":"0.x/misk-actions/misk.web/-delete/index.html","text":"misk-actions / misk.web / Delete Delete \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Delete Constructors \u00b6 Name Summary <init> Delete(pathPattern: String ) Properties \u00b6 Name Summary pathPattern val pathPattern: String","title":"Delete - Misk"},{"location":"0.x/misk-actions/misk.web/-delete/index.html#delete","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Delete","title":"Delete"},{"location":"0.x/misk-actions/misk.web/-delete/index.html#constructors","text":"Name Summary <init> Delete(pathPattern: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-delete/index.html#properties","text":"Name Summary pathPattern val pathPattern: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-delete/-init-.html","text":"misk-actions / misk.web / Delete / <init> <init> \u00b6 Delete(pathPattern: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-delete/-init-.html#init","text":"Delete(pathPattern: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-delete/path-pattern.html","text":"misk-actions / misk.web / Delete / pathPattern pathPattern \u00b6 val pathPattern: String","title":"pathPattern - Misk"},{"location":"0.x/misk-actions/misk.web/-delete/path-pattern.html#pathpattern","text":"val pathPattern: String","title":"pathPattern"},{"location":"0.x/misk-actions/misk.web/-description/index.html","text":"misk-actions / misk.web / Description Description \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Description Constructors \u00b6 Name Summary <init> Description(text: String ) Properties \u00b6 Name Summary text val text: String","title":"Description - Misk"},{"location":"0.x/misk-actions/misk.web/-description/index.html#description","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Description","title":"Description"},{"location":"0.x/misk-actions/misk.web/-description/index.html#constructors","text":"Name Summary <init> Description(text: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-description/index.html#properties","text":"Name Summary text val text: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-description/-init-.html","text":"misk-actions / misk.web / Description / <init> <init> \u00b6 Description(text: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-description/-init-.html#init","text":"Description(text: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-description/text.html","text":"misk-actions / misk.web / Description / text text \u00b6 val text: String","title":"text - Misk"},{"location":"0.x/misk-actions/misk.web/-description/text.html#text","text":"val text: String","title":"text"},{"location":"0.x/misk-actions/misk.web/-form-field/index.html","text":"misk-actions / misk.web / FormField FormField \u00b6 @Target([AnnotationTarget.VALUE_PARAMETER]) annotation class FormField Constructors \u00b6 Name Summary <init> FormField(name: String ) Properties \u00b6 Name Summary name val name: String","title":"FormField - Misk"},{"location":"0.x/misk-actions/misk.web/-form-field/index.html#formfield","text":"@Target([AnnotationTarget.VALUE_PARAMETER]) annotation class FormField","title":"FormField"},{"location":"0.x/misk-actions/misk.web/-form-field/index.html#constructors","text":"Name Summary <init> FormField(name: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-form-field/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-form-field/-init-.html","text":"misk-actions / misk.web / FormField / <init> <init> \u00b6 FormField(name: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-form-field/-init-.html#init","text":"FormField(name: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-form-field/name.html","text":"misk-actions / misk.web / FormField / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-actions/misk.web/-form-field/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-actions/misk.web/-form-value/index.html","text":"misk-actions / misk.web / FormValue FormValue \u00b6 @Target([AnnotationTarget.VALUE_PARAMETER]) annotation class FormValue Constructors \u00b6 Name Summary <init> FormValue()","title":"FormValue - Misk"},{"location":"0.x/misk-actions/misk.web/-form-value/index.html#formvalue","text":"@Target([AnnotationTarget.VALUE_PARAMETER]) annotation class FormValue","title":"FormValue"},{"location":"0.x/misk-actions/misk.web/-form-value/index.html#constructors","text":"Name Summary <init> FormValue()","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-form-value/-init-.html","text":"misk-actions / misk.web / FormValue / <init> <init> \u00b6 FormValue()","title":" init "},{"location":"0.x/misk-actions/misk.web/-form-value/-init-.html#init","text":"FormValue()","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-get/index.html","text":"misk-actions / misk.web / Get Get \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Get Constructors \u00b6 Name Summary <init> Get(pathPattern: String ) Properties \u00b6 Name Summary pathPattern val pathPattern: String","title":"Get - Misk"},{"location":"0.x/misk-actions/misk.web/-get/index.html#get","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Get","title":"Get"},{"location":"0.x/misk-actions/misk.web/-get/index.html#constructors","text":"Name Summary <init> Get(pathPattern: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-get/index.html#properties","text":"Name Summary pathPattern val pathPattern: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-get/-init-.html","text":"misk-actions / misk.web / Get / <init> <init> \u00b6 Get(pathPattern: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-get/-init-.html#init","text":"Get(pathPattern: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-get/path-pattern.html","text":"misk-actions / misk.web / Get / pathPattern pathPattern \u00b6 val pathPattern: String","title":"pathPattern - Misk"},{"location":"0.x/misk-actions/misk.web/-get/path-pattern.html#pathpattern","text":"val pathPattern: String","title":"pathPattern"},{"location":"0.x/misk-actions/misk.web/-patch/index.html","text":"misk-actions / misk.web / Patch Patch \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Patch Constructors \u00b6 Name Summary <init> Patch(pathPattern: String ) Properties \u00b6 Name Summary pathPattern val pathPattern: String","title":"Patch - Misk"},{"location":"0.x/misk-actions/misk.web/-patch/index.html#patch","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Patch","title":"Patch"},{"location":"0.x/misk-actions/misk.web/-patch/index.html#constructors","text":"Name Summary <init> Patch(pathPattern: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-patch/index.html#properties","text":"Name Summary pathPattern val pathPattern: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-patch/-init-.html","text":"misk-actions / misk.web / Patch / <init> <init> \u00b6 Patch(pathPattern: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-patch/-init-.html#init","text":"Patch(pathPattern: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-patch/path-pattern.html","text":"misk-actions / misk.web / Patch / pathPattern pathPattern \u00b6 val pathPattern: String","title":"pathPattern - Misk"},{"location":"0.x/misk-actions/misk.web/-patch/path-pattern.html#pathpattern","text":"val pathPattern: String","title":"pathPattern"},{"location":"0.x/misk-actions/misk.web/-path-param/index.html","text":"misk-actions / misk.web / PathParam PathParam \u00b6 @Target([AnnotationTarget.VALUE_PARAMETER]) annotation class PathParam Constructors \u00b6 Name Summary <init> PathParam(value: String = \"\") Properties \u00b6 Name Summary value val value: String","title":"PathParam - Misk"},{"location":"0.x/misk-actions/misk.web/-path-param/index.html#pathparam","text":"@Target([AnnotationTarget.VALUE_PARAMETER]) annotation class PathParam","title":"PathParam"},{"location":"0.x/misk-actions/misk.web/-path-param/index.html#constructors","text":"Name Summary <init> PathParam(value: String = \"\")","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-path-param/index.html#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-path-param/-init-.html","text":"misk-actions / misk.web / PathParam / <init> <init> \u00b6 PathParam(value: String = \"\")","title":" init "},{"location":"0.x/misk-actions/misk.web/-path-param/-init-.html#init","text":"PathParam(value: String = \"\")","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-path-param/value.html","text":"misk-actions / misk.web / PathParam / value value \u00b6 val value: String","title":"value - Misk"},{"location":"0.x/misk-actions/misk.web/-path-param/value.html#value","text":"val value: String","title":"value"},{"location":"0.x/misk-actions/misk.web/-post/index.html","text":"misk-actions / misk.web / Post Post \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Post Constructors \u00b6 Name Summary <init> Post(pathPattern: String ) Properties \u00b6 Name Summary pathPattern val pathPattern: String","title":"Post - Misk"},{"location":"0.x/misk-actions/misk.web/-post/index.html#post","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Post","title":"Post"},{"location":"0.x/misk-actions/misk.web/-post/index.html#constructors","text":"Name Summary <init> Post(pathPattern: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-post/index.html#properties","text":"Name Summary pathPattern val pathPattern: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-post/-init-.html","text":"misk-actions / misk.web / Post / <init> <init> \u00b6 Post(pathPattern: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-post/-init-.html#init","text":"Post(pathPattern: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-post/path-pattern.html","text":"misk-actions / misk.web / Post / pathPattern pathPattern \u00b6 val pathPattern: String","title":"pathPattern - Misk"},{"location":"0.x/misk-actions/misk.web/-post/path-pattern.html#pathpattern","text":"val pathPattern: String","title":"pathPattern"},{"location":"0.x/misk-actions/misk.web/-put/index.html","text":"misk-actions / misk.web / Put Put \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class Put Constructors \u00b6 Name Summary <init> Put(pathPattern: String ) Properties \u00b6 Name Summary pathPattern val pathPattern: String","title":"Put - Misk"},{"location":"0.x/misk-actions/misk.web/-put/index.html#put","text":"@Target([AnnotationTarget.FUNCTION]) annotation class Put","title":"Put"},{"location":"0.x/misk-actions/misk.web/-put/index.html#constructors","text":"Name Summary <init> Put(pathPattern: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-put/index.html#properties","text":"Name Summary pathPattern val pathPattern: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-put/-init-.html","text":"misk-actions / misk.web / Put / <init> <init> \u00b6 Put(pathPattern: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-put/-init-.html#init","text":"Put(pathPattern: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-put/path-pattern.html","text":"misk-actions / misk.web / Put / pathPattern pathPattern \u00b6 val pathPattern: String","title":"pathPattern - Misk"},{"location":"0.x/misk-actions/misk.web/-put/path-pattern.html#pathpattern","text":"val pathPattern: String","title":"pathPattern"},{"location":"0.x/misk-actions/misk.web/-query-param/index.html","text":"misk-actions / misk.web / QueryParam QueryParam \u00b6 @Target([AnnotationTarget.VALUE_PARAMETER]) annotation class QueryParam Constructors \u00b6 Name Summary <init> QueryParam(value: String = \"\") Properties \u00b6 Name Summary value val value: String","title":"QueryParam - Misk"},{"location":"0.x/misk-actions/misk.web/-query-param/index.html#queryparam","text":"@Target([AnnotationTarget.VALUE_PARAMETER]) annotation class QueryParam","title":"QueryParam"},{"location":"0.x/misk-actions/misk.web/-query-param/index.html#constructors","text":"Name Summary <init> QueryParam(value: String = \"\")","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-query-param/index.html#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-query-param/-init-.html","text":"misk-actions / misk.web / QueryParam / <init> <init> \u00b6 QueryParam(value: String = \"\")","title":" init "},{"location":"0.x/misk-actions/misk.web/-query-param/-init-.html#init","text":"QueryParam(value: String = \"\")","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-query-param/value.html","text":"misk-actions / misk.web / QueryParam / value value \u00b6 val value: String","title":"value - Misk"},{"location":"0.x/misk-actions/misk.web/-query-param/value.html#value","text":"val value: String","title":"value"},{"location":"0.x/misk-actions/misk.web/-request-body/index.html","text":"misk-actions / misk.web / RequestBody RequestBody \u00b6 @Target([AnnotationTarget.VALUE_PARAMETER]) annotation class RequestBody Constructors \u00b6 Name Summary <init> RequestBody()","title":"RequestBody - Misk"},{"location":"0.x/misk-actions/misk.web/-request-body/index.html#requestbody","text":"@Target([AnnotationTarget.VALUE_PARAMETER]) annotation class RequestBody","title":"RequestBody"},{"location":"0.x/misk-actions/misk.web/-request-body/index.html#constructors","text":"Name Summary <init> RequestBody()","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-request-body/-init-.html","text":"misk-actions / misk.web / RequestBody / <init> <init> \u00b6 RequestBody()","title":" init "},{"location":"0.x/misk-actions/misk.web/-request-body/-init-.html#init","text":"RequestBody()","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-request-content-type/index.html","text":"misk-actions / misk.web / RequestContentType RequestContentType \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class RequestContentType Constructors \u00b6 Name Summary <init> RequestContentType(vararg value: String ) Properties \u00b6 Name Summary value vararg val value: Array <out String >","title":"RequestContentType - Misk"},{"location":"0.x/misk-actions/misk.web/-request-content-type/index.html#requestcontenttype","text":"@Target([AnnotationTarget.FUNCTION]) annotation class RequestContentType","title":"RequestContentType"},{"location":"0.x/misk-actions/misk.web/-request-content-type/index.html#constructors","text":"Name Summary <init> RequestContentType(vararg value: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-request-content-type/index.html#properties","text":"Name Summary value vararg val value: Array <out String >","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-request-content-type/-init-.html","text":"misk-actions / misk.web / RequestContentType / <init> <init> \u00b6 RequestContentType(vararg value: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-request-content-type/-init-.html#init","text":"RequestContentType(vararg value: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-request-content-type/value.html","text":"misk-actions / misk.web / RequestContentType / value value \u00b6 vararg val value: Array <out String >","title":"value - Misk"},{"location":"0.x/misk-actions/misk.web/-request-content-type/value.html#value","text":"vararg val value: Array <out String >","title":"value"},{"location":"0.x/misk-actions/misk.web/-request-headers/index.html","text":"misk-actions / misk.web / RequestHeaders RequestHeaders \u00b6 @Target([AnnotationTarget.VALUE_PARAMETER]) annotation class RequestHeaders Constructors \u00b6 Name Summary <init> RequestHeaders()","title":"RequestHeaders - Misk"},{"location":"0.x/misk-actions/misk.web/-request-headers/index.html#requestheaders","text":"@Target([AnnotationTarget.VALUE_PARAMETER]) annotation class RequestHeaders","title":"RequestHeaders"},{"location":"0.x/misk-actions/misk.web/-request-headers/index.html#constructors","text":"Name Summary <init> RequestHeaders()","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-request-headers/-init-.html","text":"misk-actions / misk.web / RequestHeaders / <init> <init> \u00b6 RequestHeaders()","title":" init "},{"location":"0.x/misk-actions/misk.web/-request-headers/-init-.html#init","text":"RequestHeaders()","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-response/index.html","text":"misk-actions / misk.web / Response Response \u00b6 data class Response<out T> An HTTP response body, headers, and status code. Constructors \u00b6 Name Summary <init> Response(body: T , headers: Headers = headersOf(), statusCode: Int = 200) An HTTP response body, headers, and status code. Properties \u00b6 Name Summary body val body: T headers val headers: Headers statusCode val statusCode: Int Functions \u00b6 Name Summary toString fun toString(): String","title":"Response - Misk"},{"location":"0.x/misk-actions/misk.web/-response/index.html#response","text":"data class Response<out T> An HTTP response body, headers, and status code.","title":"Response"},{"location":"0.x/misk-actions/misk.web/-response/index.html#constructors","text":"Name Summary <init> Response(body: T , headers: Headers = headersOf(), statusCode: Int = 200) An HTTP response body, headers, and status code.","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-response/index.html#properties","text":"Name Summary body val body: T headers val headers: Headers statusCode val statusCode: Int","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-response/index.html#functions","text":"Name Summary toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-actions/misk.web/-response/-init-.html","text":"misk-actions / misk.web / Response / <init> <init> \u00b6 Response(body: T , headers: Headers = headersOf(), statusCode: Int = 200) An HTTP response body, headers, and status code.","title":" init "},{"location":"0.x/misk-actions/misk.web/-response/-init-.html#init","text":"Response(body: T , headers: Headers = headersOf(), statusCode: Int = 200) An HTTP response body, headers, and status code.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-response/body.html","text":"misk-actions / misk.web / Response / body body \u00b6 val body: T","title":"body - Misk"},{"location":"0.x/misk-actions/misk.web/-response/body.html#body","text":"val body: T","title":"body"},{"location":"0.x/misk-actions/misk.web/-response/headers.html","text":"misk-actions / misk.web / Response / headers headers \u00b6 val headers: Headers","title":"headers - Misk"},{"location":"0.x/misk-actions/misk.web/-response/headers.html#headers","text":"val headers: Headers","title":"headers"},{"location":"0.x/misk-actions/misk.web/-response/status-code.html","text":"misk-actions / misk.web / Response / statusCode statusCode \u00b6 val statusCode: Int","title":"statusCode - Misk"},{"location":"0.x/misk-actions/misk.web/-response/status-code.html#statuscode","text":"val statusCode: Int","title":"statusCode"},{"location":"0.x/misk-actions/misk.web/-response/to-string.html","text":"misk-actions / misk.web / Response / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-actions/misk.web/-response/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-actions/misk.web/-response-body/index.html","text":"misk-actions / misk.web / ResponseBody ResponseBody \u00b6 interface ResponseBody Functions \u00b6 Name Summary writeTo abstract fun writeTo(sink: BufferedSink): Unit","title":"ResponseBody - Misk"},{"location":"0.x/misk-actions/misk.web/-response-body/index.html#responsebody","text":"interface ResponseBody","title":"ResponseBody"},{"location":"0.x/misk-actions/misk.web/-response-body/index.html#functions","text":"Name Summary writeTo abstract fun writeTo(sink: BufferedSink): Unit","title":"Functions"},{"location":"0.x/misk-actions/misk.web/-response-body/write-to.html","text":"misk-actions / misk.web / ResponseBody / writeTo writeTo \u00b6 abstract fun writeTo(sink: BufferedSink): Unit","title":"writeTo - Misk"},{"location":"0.x/misk-actions/misk.web/-response-body/write-to.html#writeto","text":"abstract fun writeTo(sink: BufferedSink): Unit","title":"writeTo"},{"location":"0.x/misk-actions/misk.web/-response-content-type/index.html","text":"misk-actions / misk.web / ResponseContentType ResponseContentType \u00b6 @Target([AnnotationTarget.FUNCTION]) annotation class ResponseContentType Constructors \u00b6 Name Summary <init> ResponseContentType(value: String ) Properties \u00b6 Name Summary value val value: String","title":"ResponseContentType - Misk"},{"location":"0.x/misk-actions/misk.web/-response-content-type/index.html#responsecontenttype","text":"@Target([AnnotationTarget.FUNCTION]) annotation class ResponseContentType","title":"ResponseContentType"},{"location":"0.x/misk-actions/misk.web/-response-content-type/index.html#constructors","text":"Name Summary <init> ResponseContentType(value: String )","title":"Constructors"},{"location":"0.x/misk-actions/misk.web/-response-content-type/index.html#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"0.x/misk-actions/misk.web/-response-content-type/-init-.html","text":"misk-actions / misk.web / ResponseContentType / <init> <init> \u00b6 ResponseContentType(value: String )","title":" init "},{"location":"0.x/misk-actions/misk.web/-response-content-type/-init-.html#init","text":"ResponseContentType(value: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web/-response-content-type/value.html","text":"misk-actions / misk.web / ResponseContentType / value value \u00b6 val value: String","title":"value - Misk"},{"location":"0.x/misk-actions/misk.web/-response-content-type/value.html#value","text":"val value: String","title":"value"},{"location":"0.x/misk-actions/misk.web.actions/index.html","text":"misk-actions / misk.web.actions Package misk.web.actions \u00b6 Types \u00b6 Name Summary WebAction interface WebAction WebSocket interface WebSocket A non-blocking interface to a web socket. WebSocketListener open class WebSocketListener","title":"Package misk.web.actions - Misk"},{"location":"0.x/misk-actions/misk.web.actions/index.html#package-miskwebactions","text":"","title":"Package misk.web.actions"},{"location":"0.x/misk-actions/misk.web.actions/index.html#types","text":"Name Summary WebAction interface WebAction WebSocket interface WebSocket A non-blocking interface to a web socket. WebSocketListener open class WebSocketListener","title":"Types"},{"location":"0.x/misk-actions/misk.web.actions/-web-action.html","text":"misk-actions / misk.web.actions / WebAction WebAction \u00b6 interface WebAction","title":"WebAction - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-action.html#webaction","text":"interface WebAction","title":"WebAction"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/index.html","text":"misk-actions / misk.web.actions / WebSocket WebSocket \u00b6 interface WebSocket A non-blocking interface to a web socket. Web Socket Lifecycle Upon normal operation each web socket progresses through a sequence of states: Web sockets may fail due to HTTP upgrade problems, connectivity problems, or if either peer chooses to short-circuit the graceful shutdown process: Note that the state progression is independent for each peer. Arriving at a gracefully-closed state indicates that a peer has sent all of its outgoing messages and received all of its incoming messages. But it does not guarantee that the other peer will successfully receive all of its incoming messages. Functions \u00b6 Name Summary cancel abstract fun cancel(): Unit Immediately and violently release resources held by this web socket, discarding any enqueued messages. This does nothing if the web socket has already been closed or canceled. close abstract fun close(code: Int , reason: String ?): Boolean Attempts to initiate a graceful shutdown of this web socket. Any already-enqueued messages will be transmitted before the close message is sent but subsequent calls to {@link #send} will return false and their messages will not be enqueued. queueSize abstract fun queueSize(): Long Returns the size in bytes of all messages enqueued to be transmitted to the server. This doesn\u2019t include framing overhead. It also doesn\u2019t include any bytes buffered by the operating system or network intermediaries. This method returns 0 if no messages are waiting in the queue. If may return a nonzero value after the web socket has been canceled; this indicates that enqueued messages were not transmitted. send abstract fun send(bytes: ByteString): Boolean Attempts to enqueue {@code text} to be UTF-8 encoded and sent as a the data of a text (type {@code 0x1}) message. abstract fun send(text: String ): Boolean Attempts to enqueue {@code bytes} to be sent as a the data of a binary (type {@code 0x2}) message.","title":"WebSocket - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/index.html#websocket","text":"interface WebSocket A non-blocking interface to a web socket. Web Socket Lifecycle Upon normal operation each web socket progresses through a sequence of states: Web sockets may fail due to HTTP upgrade problems, connectivity problems, or if either peer chooses to short-circuit the graceful shutdown process: Note that the state progression is independent for each peer. Arriving at a gracefully-closed state indicates that a peer has sent all of its outgoing messages and received all of its incoming messages. But it does not guarantee that the other peer will successfully receive all of its incoming messages.","title":"WebSocket"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/index.html#functions","text":"Name Summary cancel abstract fun cancel(): Unit Immediately and violently release resources held by this web socket, discarding any enqueued messages. This does nothing if the web socket has already been closed or canceled. close abstract fun close(code: Int , reason: String ?): Boolean Attempts to initiate a graceful shutdown of this web socket. Any already-enqueued messages will be transmitted before the close message is sent but subsequent calls to {@link #send} will return false and their messages will not be enqueued. queueSize abstract fun queueSize(): Long Returns the size in bytes of all messages enqueued to be transmitted to the server. This doesn\u2019t include framing overhead. It also doesn\u2019t include any bytes buffered by the operating system or network intermediaries. This method returns 0 if no messages are waiting in the queue. If may return a nonzero value after the web socket has been canceled; this indicates that enqueued messages were not transmitted. send abstract fun send(bytes: ByteString): Boolean Attempts to enqueue {@code text} to be UTF-8 encoded and sent as a the data of a text (type {@code 0x1}) message. abstract fun send(text: String ): Boolean Attempts to enqueue {@code bytes} to be sent as a the data of a binary (type {@code 0x2}) message.","title":"Functions"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/cancel.html","text":"misk-actions / misk.web.actions / WebSocket / cancel cancel \u00b6 abstract fun cancel(): Unit Immediately and violently release resources held by this web socket, discarding any enqueued messages. This does nothing if the web socket has already been closed or canceled.","title":"cancel - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/cancel.html#cancel","text":"abstract fun cancel(): Unit Immediately and violently release resources held by this web socket, discarding any enqueued messages. This does nothing if the web socket has already been closed or canceled.","title":"cancel"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/close.html","text":"misk-actions / misk.web.actions / WebSocket / close close \u00b6 abstract fun close(code: Int , reason: String ?): Boolean Attempts to initiate a graceful shutdown of this web socket. Any already-enqueued messages will be transmitted before the close message is sent but subsequent calls to {@link #send} will return false and their messages will not be enqueued. Parameters \u00b6 code - Status code as defined by <a href=\u201d http://tools.ietf.org/html/rfc6455#section-7.4\">Section 7.4 of RFC 6455. reason - Reason for shutting down or {@code null}.","title":"close - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/close.html#close","text":"abstract fun close(code: Int , reason: String ?): Boolean Attempts to initiate a graceful shutdown of this web socket. Any already-enqueued messages will be transmitted before the close message is sent but subsequent calls to {@link #send} will return false and their messages will not be enqueued.","title":"close"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/close.html#parameters","text":"code - Status code as defined by <a href=\u201d http://tools.ietf.org/html/rfc6455#section-7.4\">Section 7.4 of RFC 6455. reason - Reason for shutting down or {@code null}.","title":"Parameters"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/queue-size.html","text":"misk-actions / misk.web.actions / WebSocket / queueSize queueSize \u00b6 abstract fun queueSize(): Long Returns the size in bytes of all messages enqueued to be transmitted to the server. This doesn\u2019t include framing overhead. It also doesn\u2019t include any bytes buffered by the operating system or network intermediaries. This method returns 0 if no messages are waiting in the queue. If may return a nonzero value after the web socket has been canceled; this indicates that enqueued messages were not transmitted.","title":"queueSize - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/queue-size.html#queuesize","text":"abstract fun queueSize(): Long Returns the size in bytes of all messages enqueued to be transmitted to the server. This doesn\u2019t include framing overhead. It also doesn\u2019t include any bytes buffered by the operating system or network intermediaries. This method returns 0 if no messages are waiting in the queue. If may return a nonzero value after the web socket has been canceled; this indicates that enqueued messages were not transmitted.","title":"queueSize"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/send.html","text":"misk-actions / misk.web.actions / WebSocket / send send \u00b6 abstract fun send(bytes: ByteString): Boolean Attempts to enqueue {@code text} to be UTF-8 encoded and sent as a the data of a text (type {@code 0x1}) message. abstract fun send(text: String ): Boolean Attempts to enqueue {@code bytes} to be sent as a the data of a binary (type {@code 0x2}) message.","title":"send - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket/send.html#send","text":"abstract fun send(bytes: ByteString): Boolean Attempts to enqueue {@code text} to be UTF-8 encoded and sent as a the data of a text (type {@code 0x1}) message. abstract fun send(text: String ): Boolean Attempts to enqueue {@code bytes} to be sent as a the data of a binary (type {@code 0x2}) message.","title":"send"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/index.html","text":"misk-actions / misk.web.actions / WebSocketListener WebSocketListener \u00b6 open class WebSocketListener Constructors \u00b6 Name Summary <init> WebSocketListener() Functions \u00b6 Name Summary onClosed open fun onClosed(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when both peers have indicated that no more messages will be transmitted and the connection has been successfully released. No further calls to this listener will be made. onClosing open fun onClosing(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when the remote peer has indicated that no more incoming messages will be transmitted. onFailure open fun onFailure(webSocket: WebSocket , t: Throwable ): Unit Invoked when a web socket has been closed due to an error reading from or writing to the network. Both outgoing and incoming messages may have been lost. No further calls to this listener will be made. onMessage open fun onMessage(webSocket: WebSocket , text: String ): Unit Invoked when a text (type {@code 0x1}) message has been received. open fun onMessage(webSocket: WebSocket , bytes: ByteString): Unit Invoked when a binary (type {@code 0x2}) message has been received.","title":"WebSocketListener - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/index.html#websocketlistener","text":"open class WebSocketListener","title":"WebSocketListener"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/index.html#constructors","text":"Name Summary <init> WebSocketListener()","title":"Constructors"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/index.html#functions","text":"Name Summary onClosed open fun onClosed(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when both peers have indicated that no more messages will be transmitted and the connection has been successfully released. No further calls to this listener will be made. onClosing open fun onClosing(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when the remote peer has indicated that no more incoming messages will be transmitted. onFailure open fun onFailure(webSocket: WebSocket , t: Throwable ): Unit Invoked when a web socket has been closed due to an error reading from or writing to the network. Both outgoing and incoming messages may have been lost. No further calls to this listener will be made. onMessage open fun onMessage(webSocket: WebSocket , text: String ): Unit Invoked when a text (type {@code 0x1}) message has been received. open fun onMessage(webSocket: WebSocket , bytes: ByteString): Unit Invoked when a binary (type {@code 0x2}) message has been received.","title":"Functions"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/-init-.html","text":"misk-actions / misk.web.actions / WebSocketListener / <init> <init> \u00b6 WebSocketListener()","title":" init "},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/-init-.html#init","text":"WebSocketListener()","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-closed.html","text":"misk-actions / misk.web.actions / WebSocketListener / onClosed onClosed \u00b6 open fun onClosed(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when both peers have indicated that no more messages will be transmitted and the connection has been successfully released. No further calls to this listener will be made.","title":"onClosed - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-closed.html#onclosed","text":"open fun onClosed(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when both peers have indicated that no more messages will be transmitted and the connection has been successfully released. No further calls to this listener will be made.","title":"onClosed"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-closing.html","text":"misk-actions / misk.web.actions / WebSocketListener / onClosing onClosing \u00b6 open fun onClosing(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when the remote peer has indicated that no more incoming messages will be transmitted.","title":"onClosing - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-closing.html#onclosing","text":"open fun onClosing(webSocket: WebSocket , code: Int , reason: String ?): Unit Invoked when the remote peer has indicated that no more incoming messages will be transmitted.","title":"onClosing"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-failure.html","text":"misk-actions / misk.web.actions / WebSocketListener / onFailure onFailure \u00b6 open fun onFailure(webSocket: WebSocket , t: Throwable ): Unit Invoked when a web socket has been closed due to an error reading from or writing to the network. Both outgoing and incoming messages may have been lost. No further calls to this listener will be made.","title":"onFailure - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-failure.html#onfailure","text":"open fun onFailure(webSocket: WebSocket , t: Throwable ): Unit Invoked when a web socket has been closed due to an error reading from or writing to the network. Both outgoing and incoming messages may have been lost. No further calls to this listener will be made.","title":"onFailure"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-message.html","text":"misk-actions / misk.web.actions / WebSocketListener / onMessage onMessage \u00b6 open fun onMessage(webSocket: WebSocket , text: String ): Unit Invoked when a text (type {@code 0x1}) message has been received. open fun onMessage(webSocket: WebSocket , bytes: ByteString): Unit Invoked when a binary (type {@code 0x2}) message has been received.","title":"onMessage - Misk"},{"location":"0.x/misk-actions/misk.web.actions/-web-socket-listener/on-message.html#onmessage","text":"open fun onMessage(webSocket: WebSocket , text: String ): Unit Invoked when a text (type {@code 0x1}) message has been received. open fun onMessage(webSocket: WebSocket , bytes: ByteString): Unit Invoked when a binary (type {@code 0x2}) message has been received.","title":"onMessage"},{"location":"0.x/misk-actions/misk.web.interceptors/index.html","text":"misk-actions / misk.web.interceptors Package misk.web.interceptors \u00b6 Annotations \u00b6 Name Summary LogRequestResponse annotation class LogRequestResponse Annotation indicating that request and response information should be logged.","title":"Package misk.web.interceptors - Misk"},{"location":"0.x/misk-actions/misk.web.interceptors/index.html#package-miskwebinterceptors","text":"","title":"Package misk.web.interceptors"},{"location":"0.x/misk-actions/misk.web.interceptors/index.html#annotations","text":"Name Summary LogRequestResponse annotation class LogRequestResponse Annotation indicating that request and response information should be logged.","title":"Annotations"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/index.html","text":"misk-actions / misk.web.interceptors / LogRequestResponse LogRequestResponse \u00b6 @Target([AnnotationTarget.FUNCTION, AnnotationTarget.CLASS]) annotation class LogRequestResponse Annotation indicating that request and response information should be logged. Rate limiting is used to sample the number of requests logged. The value specified is the log events per sec allotted per action. By default we set rate limiting for successes to 10 log events per second, enough to show things are happening without sending too many logs. By default rate limiting is off for errors, as we would want to surface such logs for investigation. If you would like to turn off rate limiting and emit all logs, set ratePerSecond and/or errorRatePerSecond to 0. Percentage sampling is used to sample request and response bodies, with 0.0 for none and 1.0 for all. Valid values are in the range 0.0,1.0 . If arguments and responses may include sensitive information, it is expected that the toString() methods of these objects will redact it. Constructors \u00b6 Name Summary <init> LogRequestResponse(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0) Annotation indicating that request and response information should be logged. Properties \u00b6 Name Summary bodySampling val bodySampling: Double By default do not log request and response bodies errorBodySampling val errorBodySampling: Double errorRatePerSecond val errorRatePerSecond: Long By default, rate limiting is off for error logs ratePerSecond val ratePerSecond: Long","title":"LogRequestResponse - Misk"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/index.html#logrequestresponse","text":"@Target([AnnotationTarget.FUNCTION, AnnotationTarget.CLASS]) annotation class LogRequestResponse Annotation indicating that request and response information should be logged. Rate limiting is used to sample the number of requests logged. The value specified is the log events per sec allotted per action. By default we set rate limiting for successes to 10 log events per second, enough to show things are happening without sending too many logs. By default rate limiting is off for errors, as we would want to surface such logs for investigation. If you would like to turn off rate limiting and emit all logs, set ratePerSecond and/or errorRatePerSecond to 0. Percentage sampling is used to sample request and response bodies, with 0.0 for none and 1.0 for all. Valid values are in the range 0.0,1.0 . If arguments and responses may include sensitive information, it is expected that the toString() methods of these objects will redact it.","title":"LogRequestResponse"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/index.html#constructors","text":"Name Summary <init> LogRequestResponse(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0) Annotation indicating that request and response information should be logged.","title":"Constructors"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/index.html#properties","text":"Name Summary bodySampling val bodySampling: Double By default do not log request and response bodies errorBodySampling val errorBodySampling: Double errorRatePerSecond val errorRatePerSecond: Long By default, rate limiting is off for error logs ratePerSecond val ratePerSecond: Long","title":"Properties"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/-init-.html","text":"misk-actions / misk.web.interceptors / LogRequestResponse / <init> <init> \u00b6 LogRequestResponse(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0) Annotation indicating that request and response information should be logged. Rate limiting is used to sample the number of requests logged. The value specified is the log events per sec allotted per action. By default we set rate limiting for successes to 10 log events per second, enough to show things are happening without sending too many logs. By default rate limiting is off for errors, as we would want to surface such logs for investigation. If you would like to turn off rate limiting and emit all logs, set ratePerSecond and/or errorRatePerSecond to 0. Percentage sampling is used to sample request and response bodies, with 0.0 for none and 1.0 for all. Valid values are in the range 0.0,1.0 . If arguments and responses may include sensitive information, it is expected that the toString() methods of these objects will redact it.","title":" init "},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/-init-.html#init","text":"LogRequestResponse(ratePerSecond: Long = 10, errorRatePerSecond: Long = 0, bodySampling: Double = 0.0, errorBodySampling: Double = 0.0) Annotation indicating that request and response information should be logged. Rate limiting is used to sample the number of requests logged. The value specified is the log events per sec allotted per action. By default we set rate limiting for successes to 10 log events per second, enough to show things are happening without sending too many logs. By default rate limiting is off for errors, as we would want to surface such logs for investigation. If you would like to turn off rate limiting and emit all logs, set ratePerSecond and/or errorRatePerSecond to 0. Percentage sampling is used to sample request and response bodies, with 0.0 for none and 1.0 for all. Valid values are in the range 0.0,1.0 . If arguments and responses may include sensitive information, it is expected that the toString() methods of these objects will redact it.","title":"&lt;init&gt;"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/body-sampling.html","text":"misk-actions / misk.web.interceptors / LogRequestResponse / bodySampling bodySampling \u00b6 val bodySampling: Double By default do not log request and response bodies","title":"bodySampling - Misk"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/body-sampling.html#bodysampling","text":"val bodySampling: Double By default do not log request and response bodies","title":"bodySampling"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/error-body-sampling.html","text":"misk-actions / misk.web.interceptors / LogRequestResponse / errorBodySampling errorBodySampling \u00b6 val errorBodySampling: Double","title":"errorBodySampling - Misk"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/error-body-sampling.html#errorbodysampling","text":"val errorBodySampling: Double","title":"errorBodySampling"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/error-rate-per-second.html","text":"misk-actions / misk.web.interceptors / LogRequestResponse / errorRatePerSecond errorRatePerSecond \u00b6 val errorRatePerSecond: Long By default, rate limiting is off for error logs","title":"errorRatePerSecond - Misk"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/error-rate-per-second.html#errorratepersecond","text":"val errorRatePerSecond: Long By default, rate limiting is off for error logs","title":"errorRatePerSecond"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/rate-per-second.html","text":"misk-actions / misk.web.interceptors / LogRequestResponse / ratePerSecond ratePerSecond \u00b6 val ratePerSecond: Long","title":"ratePerSecond - Misk"},{"location":"0.x/misk-actions/misk.web.interceptors/-log-request-response/rate-per-second.html#ratepersecond","text":"val ratePerSecond: Long","title":"ratePerSecond"},{"location":"0.x/misk-aws/index.html","text":"misk-aws Packages \u00b6 Name Summary misk.cloud.aws misk.jobqueue.sqs misk.s3 Index \u00b6 All Types","title":"misk-aws"},{"location":"0.x/misk-aws/index.html#packages","text":"Name Summary misk.cloud.aws misk.jobqueue.sqs misk.s3","title":"Packages"},{"location":"0.x/misk-aws/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-aws/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.cloud.aws.AwsAccountId AwsAccountId is the id of the account in which the service is running wisp.aws.environment.AwsAccountId (extensions in package misk.cloud.aws) misk.cloud.aws.AwsEnvironmentModule AwsEnvironmentModule pulls region and account information from installed env vars misk.cloud.aws.AwsRegion AwsRegion is the region in which the service is running wisp.aws.environment.AwsRegion (extensions in package misk.cloud.aws) misk.jobqueue.sqs.AwsSqsJobHandlerModule Install this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue. misk.jobqueue.sqs.AwsSqsJobQueueConfig AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service misk.jobqueue.sqs.AwsSqsJobQueueModule AwsSqsJobQueueModule installs job queue support provided by SQS. misk.jobqueue.sqs.AwsSqsQueueConfig An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access misk.jobqueue.sqs.DeadLetterQueueProvider Interface for a provider of dead-letter queue names. misk.jobqueue.sqs.DefaultDeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. misk.cloud.aws.FakeAwsEnvironmentModule FakeAwsEnvironmentModule pulls region and account information from an in memory map. misk.jobqueue.sqs.FlaggedBufferedSqsClient Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. com.amazonaws.services.sqs.buffered.QueueBufferConfig (extensions in package misk.jobqueue.sqs) misk.jobqueue.QueueName (extensions in package misk.jobqueue.sqs) misk.s3.RealS3Module misk.jobqueue.sqs.StaticDeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue.","title":"All Types - Misk"},{"location":"0.x/misk-aws/alltypes/index.html#all-types","text":"Name Summary misk.cloud.aws.AwsAccountId AwsAccountId is the id of the account in which the service is running wisp.aws.environment.AwsAccountId (extensions in package misk.cloud.aws) misk.cloud.aws.AwsEnvironmentModule AwsEnvironmentModule pulls region and account information from installed env vars misk.cloud.aws.AwsRegion AwsRegion is the region in which the service is running wisp.aws.environment.AwsRegion (extensions in package misk.cloud.aws) misk.jobqueue.sqs.AwsSqsJobHandlerModule Install this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue. misk.jobqueue.sqs.AwsSqsJobQueueConfig AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service misk.jobqueue.sqs.AwsSqsJobQueueModule AwsSqsJobQueueModule installs job queue support provided by SQS. misk.jobqueue.sqs.AwsSqsQueueConfig An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access misk.jobqueue.sqs.DeadLetterQueueProvider Interface for a provider of dead-letter queue names. misk.jobqueue.sqs.DefaultDeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. misk.cloud.aws.FakeAwsEnvironmentModule FakeAwsEnvironmentModule pulls region and account information from an in memory map. misk.jobqueue.sqs.FlaggedBufferedSqsClient Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. com.amazonaws.services.sqs.buffered.QueueBufferConfig (extensions in package misk.jobqueue.sqs) misk.jobqueue.QueueName (extensions in package misk.jobqueue.sqs) misk.s3.RealS3Module misk.jobqueue.sqs.StaticDeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue.","title":"All Types"},{"location":"0.x/misk-aws/misk.cloud.aws/index.html","text":"misk-aws / misk.cloud.aws Package misk.cloud.aws \u00b6 Types \u00b6 Name Summary AwsAccountId data class AwsAccountId AwsAccountId is the id of the account in which the service is running AwsEnvironmentModule class AwsEnvironmentModule : KAbstractModule AwsEnvironmentModule pulls region and account information from installed env vars AwsRegion data class AwsRegion AwsRegion is the region in which the service is running FakeAwsEnvironmentModule class FakeAwsEnvironmentModule : KAbstractModule FakeAwsEnvironmentModule pulls region and account information from an in memory map. Extensions for External Classes \u00b6 Name Summary wisp.aws.environment.AwsAccountId wisp.aws.environment.AwsRegion","title":"Package misk.cloud.aws - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/index.html#package-miskcloudaws","text":"","title":"Package misk.cloud.aws"},{"location":"0.x/misk-aws/misk.cloud.aws/index.html#types","text":"Name Summary AwsAccountId data class AwsAccountId AwsAccountId is the id of the account in which the service is running AwsEnvironmentModule class AwsEnvironmentModule : KAbstractModule AwsEnvironmentModule pulls region and account information from installed env vars AwsRegion data class AwsRegion AwsRegion is the region in which the service is running FakeAwsEnvironmentModule class FakeAwsEnvironmentModule : KAbstractModule FakeAwsEnvironmentModule pulls region and account information from an in memory map.","title":"Types"},{"location":"0.x/misk-aws/misk.cloud.aws/index.html#extensions-for-external-classes","text":"Name Summary wisp.aws.environment.AwsAccountId wisp.aws.environment.AwsRegion","title":"Extensions for External Classes"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/index.html","text":"misk-aws / misk.cloud.aws / AwsAccountId AwsAccountId \u00b6 data class AwsAccountId AwsAccountId is the id of the account in which the service is running Constructors \u00b6 Name Summary <init> AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running Properties \u00b6 Name Summary value val value: String","title":"AwsAccountId - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/index.html#awsaccountid","text":"data class AwsAccountId AwsAccountId is the id of the account in which the service is running","title":"AwsAccountId"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/index.html#constructors","text":"Name Summary <init> AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running","title":"Constructors"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/index.html#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/-init-.html","text":"misk-aws / misk.cloud.aws / AwsAccountId / <init> <init> \u00b6 AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running","title":" init "},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/-init-.html#init","text":"AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/value.html","text":"misk-aws / misk.cloud.aws / AwsAccountId / value value \u00b6 val value: String","title":"value - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-account-id/value.html#value","text":"val value: String","title":"value"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/index.html","text":"misk-aws / misk.cloud.aws / AwsEnvironmentModule AwsEnvironmentModule \u00b6 class AwsEnvironmentModule : KAbstractModule AwsEnvironmentModule pulls region and account information from installed env vars Constructors \u00b6 Name Summary <init> AwsEnvironmentModule() AwsEnvironmentModule pulls region and account information from installed env vars Functions \u00b6 Name Summary awsAccountId fun awsAccountId(envVarLoader: EnvVarLoader): AwsAccountId awsRegion fun awsRegion(envVarLoader: EnvVarLoader): AwsRegion","title":"AwsEnvironmentModule - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/index.html#awsenvironmentmodule","text":"class AwsEnvironmentModule : KAbstractModule AwsEnvironmentModule pulls region and account information from installed env vars","title":"AwsEnvironmentModule"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/index.html#constructors","text":"Name Summary <init> AwsEnvironmentModule() AwsEnvironmentModule pulls region and account information from installed env vars","title":"Constructors"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/index.html#functions","text":"Name Summary awsAccountId fun awsAccountId(envVarLoader: EnvVarLoader): AwsAccountId awsRegion fun awsRegion(envVarLoader: EnvVarLoader): AwsRegion","title":"Functions"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/-init-.html","text":"misk-aws / misk.cloud.aws / AwsEnvironmentModule / <init> <init> \u00b6 AwsEnvironmentModule() AwsEnvironmentModule pulls region and account information from installed env vars","title":" init "},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/-init-.html#init","text":"AwsEnvironmentModule() AwsEnvironmentModule pulls region and account information from installed env vars","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/aws-account-id.html","text":"misk-aws / misk.cloud.aws / AwsEnvironmentModule / awsAccountId awsAccountId \u00b6 @Provides fun awsAccountId(envVarLoader: EnvVarLoader): AwsAccountId","title":"awsAccountId - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/aws-account-id.html#awsaccountid","text":"@Provides fun awsAccountId(envVarLoader: EnvVarLoader): AwsAccountId","title":"awsAccountId"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/aws-region.html","text":"misk-aws / misk.cloud.aws / AwsEnvironmentModule / awsRegion awsRegion \u00b6 @Provides fun awsRegion(envVarLoader: EnvVarLoader): AwsRegion","title":"awsRegion - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-environment-module/aws-region.html#awsregion","text":"@Provides fun awsRegion(envVarLoader: EnvVarLoader): AwsRegion","title":"awsRegion"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/index.html","text":"misk-aws / misk.cloud.aws / AwsRegion AwsRegion \u00b6 data class AwsRegion AwsRegion is the region in which the service is running Constructors \u00b6 Name Summary <init> AwsRegion(name: String ) AwsRegion is the region in which the service is running Properties \u00b6 Name Summary name val name: String","title":"AwsRegion - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/index.html#awsregion","text":"data class AwsRegion AwsRegion is the region in which the service is running","title":"AwsRegion"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/index.html#constructors","text":"Name Summary <init> AwsRegion(name: String ) AwsRegion is the region in which the service is running","title":"Constructors"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/-init-.html","text":"misk-aws / misk.cloud.aws / AwsRegion / <init> <init> \u00b6 AwsRegion(name: String ) AwsRegion is the region in which the service is running","title":" init "},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/-init-.html#init","text":"AwsRegion(name: String ) AwsRegion is the region in which the service is running","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/name.html","text":"misk-aws / misk.cloud.aws / AwsRegion / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-aws-region/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/index.html","text":"misk-aws / misk.cloud.aws / FakeAwsEnvironmentModule FakeAwsEnvironmentModule \u00b6 class FakeAwsEnvironmentModule : KAbstractModule FakeAwsEnvironmentModule pulls region and account information from an in memory map. Constructors \u00b6 Name Summary <init> FakeAwsEnvironmentModule() FakeAwsEnvironmentModule pulls region and account information from an in memory map. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeAwsEnvironmentModule - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/index.html#fakeawsenvironmentmodule","text":"class FakeAwsEnvironmentModule : KAbstractModule FakeAwsEnvironmentModule pulls region and account information from an in memory map.","title":"FakeAwsEnvironmentModule"},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/index.html#constructors","text":"Name Summary <init> FakeAwsEnvironmentModule() FakeAwsEnvironmentModule pulls region and account information from an in memory map.","title":"Constructors"},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/-init-.html","text":"misk-aws / misk.cloud.aws / FakeAwsEnvironmentModule / <init> <init> \u00b6 FakeAwsEnvironmentModule() FakeAwsEnvironmentModule pulls region and account information from an in memory map.","title":" init "},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/-init-.html#init","text":"FakeAwsEnvironmentModule() FakeAwsEnvironmentModule pulls region and account information from an in memory map.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/configure.html","text":"misk-aws / misk.cloud.aws / FakeAwsEnvironmentModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/-fake-aws-environment-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-account-id/index.html","text":"misk-aws / misk.cloud.aws / wisp.aws.environment.AwsAccountId Extensions for wisp.aws.environment.AwsAccountId \u00b6 Name Summary toMiskAwsAccountId fun AwsAccountId.toMiskAwsAccountId(): AwsAccountId","title":"Extensions for wisp.aws.environment.AwsAccountId - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-account-id/index.html#extensions-for-wispawsenvironmentawsaccountid","text":"Name Summary toMiskAwsAccountId fun AwsAccountId.toMiskAwsAccountId(): AwsAccountId","title":"Extensions for wisp.aws.environment.AwsAccountId"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-account-id/to-misk-aws-account-id.html","text":"misk-aws / misk.cloud.aws / wisp.aws.environment.AwsAccountId / toMiskAwsAccountId toMiskAwsAccountId \u00b6 fun AwsAccountId.toMiskAwsAccountId(): AwsAccountId","title":"toMiskAwsAccountId - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-account-id/to-misk-aws-account-id.html#tomiskawsaccountid","text":"fun AwsAccountId.toMiskAwsAccountId(): AwsAccountId","title":"toMiskAwsAccountId"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-region/index.html","text":"misk-aws / misk.cloud.aws / wisp.aws.environment.AwsRegion Extensions for wisp.aws.environment.AwsRegion \u00b6 Name Summary toMiskAwsRegion fun AwsRegion.toMiskAwsRegion(): AwsRegion","title":"Extensions for wisp.aws.environment.AwsRegion - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-region/index.html#extensions-for-wispawsenvironmentawsregion","text":"Name Summary toMiskAwsRegion fun AwsRegion.toMiskAwsRegion(): AwsRegion","title":"Extensions for wisp.aws.environment.AwsRegion"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-region/to-misk-aws-region.html","text":"misk-aws / misk.cloud.aws / wisp.aws.environment.AwsRegion / toMiskAwsRegion toMiskAwsRegion \u00b6 fun AwsRegion.toMiskAwsRegion(): AwsRegion","title":"toMiskAwsRegion - Misk"},{"location":"0.x/misk-aws/misk.cloud.aws/wisp.aws.environment.-aws-region/to-misk-aws-region.html#tomiskawsregion","text":"fun AwsRegion.toMiskAwsRegion(): AwsRegion","title":"toMiskAwsRegion"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/index.html","text":"misk-aws / misk.jobqueue.sqs Package misk.jobqueue.sqs \u00b6 Types \u00b6 Name Summary AwsSqsJobHandlerModule class AwsSqsJobHandlerModule<T : JobHandler> : KAbstractModule Install this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue. AwsSqsJobQueueConfig class AwsSqsJobQueueConfig : Config AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service AwsSqsJobQueueModule class AwsSqsJobQueueModule : KAbstractModule AwsSqsJobQueueModule installs job queue support provided by SQS. AwsSqsQueueConfig data class AwsSqsQueueConfig An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access DeadLetterQueueProvider interface DeadLetterQueueProvider Interface for a provider of dead-letter queue names. DefaultDeadLetterQueueProvider class DefaultDeadLetterQueueProvider : DeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. FlaggedBufferedSqsClient class FlaggedBufferedSqsClient : AmazonSQS Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. StaticDeadLetterQueueProvider class StaticDeadLetterQueueProvider : DeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue. Extensions for External Classes \u00b6 Name Summary com.amazonaws.services.sqs.buffered.QueueBufferConfig misk.jobqueue.QueueName","title":"Package misk.jobqueue.sqs - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/index.html#package-miskjobqueuesqs","text":"","title":"Package misk.jobqueue.sqs"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/index.html#types","text":"Name Summary AwsSqsJobHandlerModule class AwsSqsJobHandlerModule<T : JobHandler> : KAbstractModule Install this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue. AwsSqsJobQueueConfig class AwsSqsJobQueueConfig : Config AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service AwsSqsJobQueueModule class AwsSqsJobQueueModule : KAbstractModule AwsSqsJobQueueModule installs job queue support provided by SQS. AwsSqsQueueConfig data class AwsSqsQueueConfig An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access DeadLetterQueueProvider interface DeadLetterQueueProvider Interface for a provider of dead-letter queue names. DefaultDeadLetterQueueProvider class DefaultDeadLetterQueueProvider : DeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. FlaggedBufferedSqsClient class FlaggedBufferedSqsClient : AmazonSQS Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. StaticDeadLetterQueueProvider class StaticDeadLetterQueueProvider : DeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue.","title":"Types"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/index.html#extensions-for-external-classes","text":"Name Summary com.amazonaws.services.sqs.buffered.QueueBufferConfig misk.jobqueue.QueueName","title":"Extensions for External Classes"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/index.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobHandlerModule AwsSqsJobHandlerModule \u00b6 class AwsSqsJobHandlerModule<T : JobHandler> : KAbstractModule Install this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue. Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <T : JobHandler> create(queueName: QueueName, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T >``fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > Returns a module that registers a handler for an SQS queue.","title":"AwsSqsJobHandlerModule - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/index.html#awssqsjobhandlermodule","text":"class AwsSqsJobHandlerModule<T : JobHandler> : KAbstractModule Install this module to register a handler for an SQS queue, and if specified, registers its corresponding retry queue.","title":"AwsSqsJobHandlerModule"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/index.html#companion-object-functions","text":"Name Summary create fun <T : JobHandler> create(queueName: QueueName, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T >``fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > Returns a module that registers a handler for an SQS queue.","title":"Companion Object Functions"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/configure.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobHandlerModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/create.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobHandlerModule / create create \u00b6 @JvmOverloads inline fun <reified T : JobHandler> create(queueName: QueueName, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > @JvmStatic @JvmOverloads fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T >``@JvmOverloads fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > Returns a module that registers a handler for an SQS queue.","title":"create - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-handler-module/create.html#create","text":"@JvmOverloads inline fun <reified T : JobHandler> create(queueName: QueueName, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > @JvmStatic @JvmOverloads fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T >``@JvmOverloads fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >, installRetryQueue: Boolean = true): AwsSqsJobHandlerModule < T > Returns a module that registers a handler for an SQS queue.","title":"create"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/index.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig AwsSqsJobQueueConfig \u00b6 class AwsSqsJobQueueConfig : Config AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service Constructors \u00b6 Name Summary <init> AwsSqsJobQueueConfig(external_queues: Map < String , AwsSqsQueueConfig > = mapOf(), message_batch_size: Int = 10, task_queue: RepeatedTaskQueueConfig? = null, queue_attribute_importer_frequency_ms: Long = 1000, sqs_sending_socket_timeout_ms: Int = 5000, sqs_sending_connect_timeout_ms: Int = 1000, sqs_sending_request_timeout_ms: Int = 5000) AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service Properties \u00b6 Name Summary external_queues val external_queues: Map < String , AwsSqsQueueConfig > External queues is a set of externally owned SQS queues accessed by this service, mapping an internal queue name to the (account ID, region, name) of the queue in the external account message_batch_size val message_batch_size: Int Max number of messages to pull from SQS with each request. queue_attribute_importer_frequency_ms val queue_attribute_importer_frequency_ms: Long Frequency used to import Queue Attributes in milliseconds. sqs_sending_connect_timeout_ms val sqs_sending_connect_timeout_ms: Int Connect timeout to reach SQS with for sending . sqs_sending_request_timeout_ms val sqs_sending_request_timeout_ms: Int Request timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS. sqs_sending_socket_timeout_ms val sqs_sending_socket_timeout_ms: Int Socket timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS. task_queue val task_queue: RepeatedTaskQueueConfig? Task queue configuration, which should have a num_parallel_tasks equal or greater than the number of consumed queues. If undefined, an unbounded number of parallel tasks will be used.","title":"AwsSqsJobQueueConfig - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/index.html#awssqsjobqueueconfig","text":"class AwsSqsJobQueueConfig : Config AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service","title":"AwsSqsJobQueueConfig"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/index.html#constructors","text":"Name Summary <init> AwsSqsJobQueueConfig(external_queues: Map < String , AwsSqsQueueConfig > = mapOf(), message_batch_size: Int = 10, task_queue: RepeatedTaskQueueConfig? = null, queue_attribute_importer_frequency_ms: Long = 1000, sqs_sending_socket_timeout_ms: Int = 5000, sqs_sending_connect_timeout_ms: Int = 1000, sqs_sending_request_timeout_ms: Int = 5000) AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service","title":"Constructors"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/index.html#properties","text":"Name Summary external_queues val external_queues: Map < String , AwsSqsQueueConfig > External queues is a set of externally owned SQS queues accessed by this service, mapping an internal queue name to the (account ID, region, name) of the queue in the external account message_batch_size val message_batch_size: Int Max number of messages to pull from SQS with each request. queue_attribute_importer_frequency_ms val queue_attribute_importer_frequency_ms: Long Frequency used to import Queue Attributes in milliseconds. sqs_sending_connect_timeout_ms val sqs_sending_connect_timeout_ms: Int Connect timeout to reach SQS with for sending . sqs_sending_request_timeout_ms val sqs_sending_request_timeout_ms: Int Request timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS. sqs_sending_socket_timeout_ms val sqs_sending_socket_timeout_ms: Int Socket timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS. task_queue val task_queue: RepeatedTaskQueueConfig? Task queue configuration, which should have a num_parallel_tasks equal or greater than the number of consumed queues. If undefined, an unbounded number of parallel tasks will be used.","title":"Properties"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/-init-.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / <init> <init> \u00b6 AwsSqsJobQueueConfig(external_queues: Map < String , AwsSqsQueueConfig > = mapOf(), message_batch_size: Int = 10, task_queue: RepeatedTaskQueueConfig? = null, queue_attribute_importer_frequency_ms: Long = 1000, sqs_sending_socket_timeout_ms: Int = 5000, sqs_sending_connect_timeout_ms: Int = 1000, sqs_sending_request_timeout_ms: Int = 5000) AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service","title":" init "},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/-init-.html#init","text":"AwsSqsJobQueueConfig(external_queues: Map < String , AwsSqsQueueConfig > = mapOf(), message_batch_size: Int = 10, task_queue: RepeatedTaskQueueConfig? = null, queue_attribute_importer_frequency_ms: Long = 1000, sqs_sending_socket_timeout_ms: Int = 5000, sqs_sending_connect_timeout_ms: Int = 1000, sqs_sending_request_timeout_ms: Int = 5000) AwsSqsJobQueueConfig is the configuration for job queueing backed by Amazon\u2019s Simple Queuing Service","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/external_queues.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / external_queues external_queues \u00b6 val external_queues: Map < String , AwsSqsQueueConfig > External queues is a set of externally owned SQS queues accessed by this service, mapping an internal queue name to the (account ID, region, name) of the queue in the external account","title":"external_queues - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/external_queues.html#external_queues","text":"val external_queues: Map < String , AwsSqsQueueConfig > External queues is a set of externally owned SQS queues accessed by this service, mapping an internal queue name to the (account ID, region, name) of the queue in the external account","title":"external_queues"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/message_batch_size.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / message_batch_size message_batch_size \u00b6 val message_batch_size: Int Max number of messages to pull from SQS with each request.","title":"message_batch_size - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/message_batch_size.html#message_batch_size","text":"val message_batch_size: Int Max number of messages to pull from SQS with each request.","title":"message_batch_size"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/queue_attribute_importer_frequency_ms.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / queue_attribute_importer_frequency_ms queue_attribute_importer_frequency_ms \u00b6 val queue_attribute_importer_frequency_ms: Long Frequency used to import Queue Attributes in milliseconds.","title":"queue_attribute_importer_frequency_ms - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/queue_attribute_importer_frequency_ms.html#queue_attribute_importer_frequency_ms","text":"val queue_attribute_importer_frequency_ms: Long Frequency used to import Queue Attributes in milliseconds.","title":"queue_attribute_importer_frequency_ms"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_connect_timeout_ms.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / sqs_sending_connect_timeout_ms sqs_sending_connect_timeout_ms \u00b6 val sqs_sending_connect_timeout_ms: Int Connect timeout to reach SQS with for sending .","title":"sqs_sending_connect_timeout_ms - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_connect_timeout_ms.html#sqs_sending_connect_timeout_ms","text":"val sqs_sending_connect_timeout_ms: Int Connect timeout to reach SQS with for sending .","title":"sqs_sending_connect_timeout_ms"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_request_timeout_ms.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / sqs_sending_request_timeout_ms sqs_sending_request_timeout_ms \u00b6 val sqs_sending_request_timeout_ms: Int Request timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS.","title":"sqs_sending_request_timeout_ms - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_request_timeout_ms.html#sqs_sending_request_timeout_ms","text":"val sqs_sending_request_timeout_ms: Int Request timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS.","title":"sqs_sending_request_timeout_ms"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_socket_timeout_ms.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / sqs_sending_socket_timeout_ms sqs_sending_socket_timeout_ms \u00b6 val sqs_sending_socket_timeout_ms: Int Socket timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS.","title":"sqs_sending_socket_timeout_ms - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/sqs_sending_socket_timeout_ms.html#sqs_sending_socket_timeout_ms","text":"val sqs_sending_socket_timeout_ms: Int Socket timeout to reach SQS with for sending , not including retries. We only apply this for sending because receiving uses long-polling, which explicitly leverages a longer request time. We use the default retry strategy with SQS, which retries 3 times. As a result, your app could potentially spend 3 x this timeout talking to SQS.","title":"sqs_sending_socket_timeout_ms"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/task_queue.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueConfig / task_queue task_queue \u00b6 val task_queue: RepeatedTaskQueueConfig? Task queue configuration, which should have a num_parallel_tasks equal or greater than the number of consumed queues. If undefined, an unbounded number of parallel tasks will be used.","title":"task_queue - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-config/task_queue.html#task_queue","text":"val task_queue: RepeatedTaskQueueConfig? Task queue configuration, which should have a num_parallel_tasks equal or greater than the number of consumed queues. If undefined, an unbounded number of parallel tasks will be used.","title":"task_queue"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/index.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueModule AwsSqsJobQueueModule \u00b6 class AwsSqsJobQueueModule : KAbstractModule AwsSqsJobQueueModule installs job queue support provided by SQS. Constructors \u00b6 Name Summary <init> AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig ) AwsSqsJobQueueModule installs job queue support provided by SQS. Functions \u00b6 Name Summary configure fun configure(): Unit consumerRepeatedTaskQueue fun consumerRepeatedTaskQueue(queueFactory: RepeatedTaskQueueFactory, config: AwsSqsJobQueueConfig ): RepeatedTaskQueue provideSQSClient fun provideSQSClient(appName: String , region: AwsRegion , credentials: AWSCredentialsProvider, features: FeatureFlags): AmazonSQS provideSQSClientForReceiving fun provideSQSClientForReceiving(region: AwsRegion , credentials: AWSCredentialsProvider): AmazonSQS","title":"AwsSqsJobQueueModule - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/index.html#awssqsjobqueuemodule","text":"class AwsSqsJobQueueModule : KAbstractModule AwsSqsJobQueueModule installs job queue support provided by SQS.","title":"AwsSqsJobQueueModule"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/index.html#constructors","text":"Name Summary <init> AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig ) AwsSqsJobQueueModule installs job queue support provided by SQS.","title":"Constructors"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/index.html#functions","text":"Name Summary configure fun configure(): Unit consumerRepeatedTaskQueue fun consumerRepeatedTaskQueue(queueFactory: RepeatedTaskQueueFactory, config: AwsSqsJobQueueConfig ): RepeatedTaskQueue provideSQSClient fun provideSQSClient(appName: String , region: AwsRegion , credentials: AWSCredentialsProvider, features: FeatureFlags): AmazonSQS provideSQSClientForReceiving fun provideSQSClientForReceiving(region: AwsRegion , credentials: AWSCredentialsProvider): AmazonSQS","title":"Functions"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/-init-.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueModule / <init> <init> \u00b6 AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig ) AwsSqsJobQueueModule installs job queue support provided by SQS.","title":" init "},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/-init-.html#init","text":"AwsSqsJobQueueModule(config: AwsSqsJobQueueConfig ) AwsSqsJobQueueModule installs job queue support provided by SQS.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/configure.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/consumer-repeated-task-queue.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueModule / consumerRepeatedTaskQueue consumerRepeatedTaskQueue \u00b6 @Provides fun consumerRepeatedTaskQueue(queueFactory: RepeatedTaskQueueFactory, config: AwsSqsJobQueueConfig ): RepeatedTaskQueue","title":"consumerRepeatedTaskQueue - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/consumer-repeated-task-queue.html#consumerrepeatedtaskqueue","text":"@Provides fun consumerRepeatedTaskQueue(queueFactory: RepeatedTaskQueueFactory, config: AwsSqsJobQueueConfig ): RepeatedTaskQueue","title":"consumerRepeatedTaskQueue"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client-for-receiving.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueModule / provideSQSClientForReceiving provideSQSClientForReceiving \u00b6 @Provides fun provideSQSClientForReceiving(region: AwsRegion , credentials: AWSCredentialsProvider): AmazonSQS","title":"provideSQSClientForReceiving - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client-for-receiving.html#providesqsclientforreceiving","text":"@Provides fun provideSQSClientForReceiving(region: AwsRegion , credentials: AWSCredentialsProvider): AmazonSQS","title":"provideSQSClientForReceiving"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsJobQueueModule / provideSQSClient provideSQSClient \u00b6 @Provides fun provideSQSClient(appName: String , region: AwsRegion , credentials: AWSCredentialsProvider, features: FeatureFlags): AmazonSQS","title":"provideSQSClient - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-job-queue-module/provide-s-q-s-client.html#providesqsclient","text":"@Provides fun provideSQSClient(appName: String , region: AwsRegion , credentials: AWSCredentialsProvider, features: FeatureFlags): AmazonSQS","title":"provideSQSClient"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/index.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsQueueConfig AwsSqsQueueConfig \u00b6 data class AwsSqsQueueConfig An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access Constructors \u00b6 Name Summary <init> AwsSqsQueueConfig(region: String ? = null, account_id: String ? = null, sqs_queue_name: String ? = null) An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access Properties \u00b6 Name Summary account_id val account_id: String ? region val region: String ? sqs_queue_name val sqs_queue_name: String ?","title":"AwsSqsQueueConfig - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/index.html#awssqsqueueconfig","text":"data class AwsSqsQueueConfig An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access","title":"AwsSqsQueueConfig"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/index.html#constructors","text":"Name Summary <init> AwsSqsQueueConfig(region: String ? = null, account_id: String ? = null, sqs_queue_name: String ? = null) An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access","title":"Constructors"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/index.html#properties","text":"Name Summary account_id val account_id: String ? region val region: String ? sqs_queue_name val sqs_queue_name: String ?","title":"Properties"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/-init-.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsQueueConfig / <init> <init> \u00b6 AwsSqsQueueConfig(region: String ? = null, account_id: String ? = null, sqs_queue_name: String ? = null) An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access","title":" init "},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/-init-.html#init","text":"AwsSqsQueueConfig(region: String ? = null, account_id: String ? = null, sqs_queue_name: String ? = null) An AwsSqsQueueConfig tells misk about a queue, potentially in another region and/or another account. If the queue is in another account, it will require an IAM policy enabling cross account access","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/account_id.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsQueueConfig / account_id account_id \u00b6 val account_id: String ?","title":"account_id - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/account_id.html#account_id","text":"val account_id: String ?","title":"account_id"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/region.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsQueueConfig / region region \u00b6 val region: String ?","title":"region - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/region.html#region","text":"val region: String ?","title":"region"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/sqs_queue_name.html","text":"misk-aws / misk.jobqueue.sqs / AwsSqsQueueConfig / sqs_queue_name sqs_queue_name \u00b6 val sqs_queue_name: String ?","title":"sqs_queue_name - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-aws-sqs-queue-config/sqs_queue_name.html#sqs_queue_name","text":"val sqs_queue_name: String ?","title":"sqs_queue_name"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/index.html","text":"misk-aws / misk.jobqueue.sqs / DeadLetterQueueProvider DeadLetterQueueProvider \u00b6 interface DeadLetterQueueProvider Interface for a provider of dead-letter queue names. Returns the name of the appropriate dead-letter QueueName for a given QueueName . Functions \u00b6 Name Summary deadLetterQueueFor abstract fun deadLetterQueueFor(queue: QueueName): QueueName Inheritors \u00b6 Name Summary DefaultDeadLetterQueueProvider class DefaultDeadLetterQueueProvider : DeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. StaticDeadLetterQueueProvider class StaticDeadLetterQueueProvider : DeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue.","title":"DeadLetterQueueProvider - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/index.html#deadletterqueueprovider","text":"interface DeadLetterQueueProvider Interface for a provider of dead-letter queue names. Returns the name of the appropriate dead-letter QueueName for a given QueueName .","title":"DeadLetterQueueProvider"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/index.html#functions","text":"Name Summary deadLetterQueueFor abstract fun deadLetterQueueFor(queue: QueueName): QueueName","title":"Functions"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/index.html#inheritors","text":"Name Summary DefaultDeadLetterQueueProvider class DefaultDeadLetterQueueProvider : DeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. StaticDeadLetterQueueProvider class StaticDeadLetterQueueProvider : DeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue.","title":"Inheritors"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/dead-letter-queue-for.html","text":"misk-aws / misk.jobqueue.sqs / DeadLetterQueueProvider / deadLetterQueueFor deadLetterQueueFor \u00b6 abstract fun deadLetterQueueFor(queue: QueueName): QueueName","title":"deadLetterQueueFor - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-dead-letter-queue-provider/dead-letter-queue-for.html#deadletterqueuefor","text":"abstract fun deadLetterQueueFor(queue: QueueName): QueueName","title":"deadLetterQueueFor"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/index.html","text":"misk-aws / misk.jobqueue.sqs / DefaultDeadLetterQueueProvider DefaultDeadLetterQueueProvider \u00b6 @Singleton class DefaultDeadLetterQueueProvider : DeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. Constructors \u00b6 Name Summary <init> DefaultDeadLetterQueueProvider() Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d. Functions \u00b6 Name Summary deadLetterQueueFor fun deadLetterQueueFor(queue: QueueName): QueueName","title":"DefaultDeadLetterQueueProvider - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/index.html#defaultdeadletterqueueprovider","text":"@Singleton class DefaultDeadLetterQueueProvider : DeadLetterQueueProvider Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d.","title":"DefaultDeadLetterQueueProvider"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/index.html#constructors","text":"Name Summary <init> DefaultDeadLetterQueueProvider() Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d.","title":"Constructors"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/index.html#functions","text":"Name Summary deadLetterQueueFor fun deadLetterQueueFor(queue: QueueName): QueueName","title":"Functions"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/-init-.html","text":"misk-aws / misk.jobqueue.sqs / DefaultDeadLetterQueueProvider / <init> <init> \u00b6 DefaultDeadLetterQueueProvider() Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d.","title":" init "},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/-init-.html#init","text":"DefaultDeadLetterQueueProvider() Default provider of dead-letter QueueName . Returns the name of the main queue suffixed with \u201c_dlq\u201d.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/dead-letter-queue-for.html","text":"misk-aws / misk.jobqueue.sqs / DefaultDeadLetterQueueProvider / deadLetterQueueFor deadLetterQueueFor \u00b6 fun deadLetterQueueFor(queue: QueueName): QueueName Overrides DeadLetterQueueProvider.deadLetterQueueFor","title":"deadLetterQueueFor - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-default-dead-letter-queue-provider/dead-letter-queue-for.html#deadletterqueuefor","text":"fun deadLetterQueueFor(queue: QueueName): QueueName Overrides DeadLetterQueueProvider.deadLetterQueueFor","title":"deadLetterQueueFor"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/index.html","text":"misk-aws / misk.jobqueue.sqs / FlaggedBufferedSqsClient FlaggedBufferedSqsClient \u00b6 class FlaggedBufferedSqsClient : AmazonSQS Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. Flag allows gates functionality on a per-service basis. Calls to sendMessage and deleteMessage will be routed to either buffered or unbuffered clients depending on the state of the feature flag for this service. All other operations are delegated to the unbufferd implementation. Once usage of the buffered client is proven safe, this shim should be deleted and substituted with AmazonSQSBufferedAsyncClient . Flag: https://app.launchdarkly.com/cash/production/features/jobqueue-buffered-sqs-client/targeting Constructors \u00b6 Name Summary <init> FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String , featureFlags: FeatureFlags) Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. Functions \u00b6 Name Summary deleteMessage fun deleteMessage(deleteMessageRequest: DeleteMessageRequest): DeleteMessageResult fun deleteMessage(queueUrl: String , receiptHandle: String ): DeleteMessageResult sendMessage fun sendMessage(sendMessageRequest: SendMessageRequest): SendMessageResult fun sendMessage(queueUrl: String , messageBody: String ): SendMessageResult shutdown fun shutdown(): Unit Companion Object Properties \u00b6 Name Summary FEATURE val FEATURE: Feature","title":"FlaggedBufferedSqsClient - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/index.html#flaggedbufferedsqsclient","text":"class FlaggedBufferedSqsClient : AmazonSQS Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. Flag allows gates functionality on a per-service basis. Calls to sendMessage and deleteMessage will be routed to either buffered or unbuffered clients depending on the state of the feature flag for this service. All other operations are delegated to the unbufferd implementation. Once usage of the buffered client is proven safe, this shim should be deleted and substituted with AmazonSQSBufferedAsyncClient . Flag: https://app.launchdarkly.com/cash/production/features/jobqueue-buffered-sqs-client/targeting","title":"FlaggedBufferedSqsClient"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/index.html#constructors","text":"Name Summary <init> FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String , featureFlags: FeatureFlags) Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps.","title":"Constructors"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/index.html#functions","text":"Name Summary deleteMessage fun deleteMessage(deleteMessageRequest: DeleteMessageRequest): DeleteMessageResult fun deleteMessage(queueUrl: String , receiptHandle: String ): DeleteMessageResult sendMessage fun sendMessage(sendMessageRequest: SendMessageRequest): SendMessageResult fun sendMessage(queueUrl: String , messageBody: String ): SendMessageResult shutdown fun shutdown(): Unit","title":"Functions"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/index.html#companion-object-properties","text":"Name Summary FEATURE val FEATURE: Feature","title":"Companion Object Properties"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-f-e-a-t-u-r-e.html","text":"misk-aws / misk.jobqueue.sqs / FlaggedBufferedSqsClient / FEATURE FEATURE \u00b6 val FEATURE: Feature","title":"FEATURE - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-f-e-a-t-u-r-e.html#feature","text":"val FEATURE: Feature","title":"FEATURE"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-init-.html","text":"misk-aws / misk.jobqueue.sqs / FlaggedBufferedSqsClient / <init> <init> \u00b6 FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String , featureFlags: FeatureFlags) Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. Flag allows gates functionality on a per-service basis. Calls to sendMessage and deleteMessage will be routed to either buffered or unbuffered clients depending on the state of the feature flag for this service. All other operations are delegated to the unbufferd implementation. Once usage of the buffered client is proven safe, this shim should be deleted and substituted with AmazonSQSBufferedAsyncClient . Flag: https://app.launchdarkly.com/cash/production/features/jobqueue-buffered-sqs-client/targeting","title":" init "},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/-init-.html#init","text":"FlaggedBufferedSqsClient(unbufferedSqs: AmazonSQS, bufferedSqs: AmazonSQS, appName: String , featureFlags: FeatureFlags) Temporary shim for buffered and unbuffered AmazonSQS implementations, for feature-flagged rollout of buffered SQS operations across cash cloud apps. Flag allows gates functionality on a per-service basis. Calls to sendMessage and deleteMessage will be routed to either buffered or unbuffered clients depending on the state of the feature flag for this service. All other operations are delegated to the unbufferd implementation. Once usage of the buffered client is proven safe, this shim should be deleted and substituted with AmazonSQSBufferedAsyncClient . Flag: https://app.launchdarkly.com/cash/production/features/jobqueue-buffered-sqs-client/targeting","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/delete-message.html","text":"misk-aws / misk.jobqueue.sqs / FlaggedBufferedSqsClient / deleteMessage deleteMessage \u00b6 fun deleteMessage(deleteMessageRequest: DeleteMessageRequest): DeleteMessageResult fun deleteMessage(queueUrl: String , receiptHandle: String ): DeleteMessageResult","title":"deleteMessage - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/delete-message.html#deletemessage","text":"fun deleteMessage(deleteMessageRequest: DeleteMessageRequest): DeleteMessageResult fun deleteMessage(queueUrl: String , receiptHandle: String ): DeleteMessageResult","title":"deleteMessage"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/send-message.html","text":"misk-aws / misk.jobqueue.sqs / FlaggedBufferedSqsClient / sendMessage sendMessage \u00b6 fun sendMessage(sendMessageRequest: SendMessageRequest): SendMessageResult fun sendMessage(queueUrl: String , messageBody: String ): SendMessageResult","title":"sendMessage - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/send-message.html#sendmessage","text":"fun sendMessage(sendMessageRequest: SendMessageRequest): SendMessageResult fun sendMessage(queueUrl: String , messageBody: String ): SendMessageResult","title":"sendMessage"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/shutdown.html","text":"misk-aws / misk.jobqueue.sqs / FlaggedBufferedSqsClient / shutdown shutdown \u00b6 fun shutdown(): Unit","title":"shutdown - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-flagged-buffered-sqs-client/shutdown.html#shutdown","text":"fun shutdown(): Unit","title":"shutdown"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/index.html","text":"misk-aws / misk.jobqueue.sqs / StaticDeadLetterQueueProvider StaticDeadLetterQueueProvider \u00b6 class StaticDeadLetterQueueProvider : DeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue. For apps with queues that share a single dead-letter queue. Constructors \u00b6 Name Summary <init> StaticDeadLetterQueueProvider(queue: String ) Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue. Functions \u00b6 Name Summary deadLetterQueueFor fun deadLetterQueueFor(queue: QueueName): QueueName","title":"StaticDeadLetterQueueProvider - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/index.html#staticdeadletterqueueprovider","text":"class StaticDeadLetterQueueProvider : DeadLetterQueueProvider Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue. For apps with queues that share a single dead-letter queue.","title":"StaticDeadLetterQueueProvider"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/index.html#constructors","text":"Name Summary <init> StaticDeadLetterQueueProvider(queue: String ) Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue.","title":"Constructors"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/index.html#functions","text":"Name Summary deadLetterQueueFor fun deadLetterQueueFor(queue: QueueName): QueueName","title":"Functions"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/-init-.html","text":"misk-aws / misk.jobqueue.sqs / StaticDeadLetterQueueProvider / <init> <init> \u00b6 StaticDeadLetterQueueProvider(queue: String ) Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue. For apps with queues that share a single dead-letter queue.","title":" init "},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/-init-.html#init","text":"StaticDeadLetterQueueProvider(queue: String ) Provider of dead-letter QueueName that always returns the same value, no matter the supplied queue. For apps with queues that share a single dead-letter queue.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/dead-letter-queue-for.html","text":"misk-aws / misk.jobqueue.sqs / StaticDeadLetterQueueProvider / deadLetterQueueFor deadLetterQueueFor \u00b6 fun deadLetterQueueFor(queue: QueueName): QueueName Overrides DeadLetterQueueProvider.deadLetterQueueFor","title":"deadLetterQueueFor - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/-static-dead-letter-queue-provider/dead-letter-queue-for.html#deadletterqueuefor","text":"fun deadLetterQueueFor(queue: QueueName): QueueName Overrides DeadLetterQueueProvider.deadLetterQueueFor","title":"deadLetterQueueFor"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/com.amazonaws.services.sqs.buffered.-queue-buffer-config/index.html","text":"misk-aws / misk.jobqueue.sqs / com.amazonaws.services.sqs.buffered.QueueBufferConfig Extensions for com.amazonaws.services.sqs.buffered.QueueBufferConfig \u00b6 Name Summary withNoPrefetching fun QueueBufferConfig.withNoPrefetching(): QueueBufferConfig Modify a QueueBufferConfig to disable all receive pre-fetching settings.","title":"Extensions for com.amazonaws.services.sqs.buffered.QueueBufferConfig - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/com.amazonaws.services.sqs.buffered.-queue-buffer-config/index.html#extensions-for-comamazonawsservicessqsbufferedqueuebufferconfig","text":"Name Summary withNoPrefetching fun QueueBufferConfig.withNoPrefetching(): QueueBufferConfig Modify a QueueBufferConfig to disable all receive pre-fetching settings.","title":"Extensions for com.amazonaws.services.sqs.buffered.QueueBufferConfig"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/com.amazonaws.services.sqs.buffered.-queue-buffer-config/with-no-prefetching.html","text":"misk-aws / misk.jobqueue.sqs / com.amazonaws.services.sqs.buffered.QueueBufferConfig / withNoPrefetching withNoPrefetching \u00b6 fun QueueBufferConfig.withNoPrefetching(): QueueBufferConfig Modify a QueueBufferConfig to disable all receive pre-fetching settings.","title":"withNoPrefetching - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/com.amazonaws.services.sqs.buffered.-queue-buffer-config/with-no-prefetching.html#withnoprefetching","text":"fun QueueBufferConfig.withNoPrefetching(): QueueBufferConfig Modify a QueueBufferConfig to disable all receive pre-fetching settings.","title":"withNoPrefetching"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/index.html","text":"misk-aws / misk.jobqueue.sqs / misk.jobqueue.QueueName Extensions for misk.jobqueue.QueueName \u00b6 Name Summary isRetryQueue val QueueName.isRetryQueue: Boolean parentQueue val QueueName.parentQueue: QueueName retryQueue val QueueName.retryQueue: QueueName","title":"Extensions for misk.jobqueue.QueueName - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/index.html#extensions-for-miskjobqueuequeuename","text":"Name Summary isRetryQueue val QueueName.isRetryQueue: Boolean parentQueue val QueueName.parentQueue: QueueName retryQueue val QueueName.retryQueue: QueueName","title":"Extensions for misk.jobqueue.QueueName"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/is-retry-queue.html","text":"misk-aws / misk.jobqueue.sqs / misk.jobqueue.QueueName / isRetryQueue isRetryQueue \u00b6 val QueueName.isRetryQueue: Boolean","title":"isRetryQueue - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/is-retry-queue.html#isretryqueue","text":"val QueueName.isRetryQueue: Boolean","title":"isRetryQueue"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/parent-queue.html","text":"misk-aws / misk.jobqueue.sqs / misk.jobqueue.QueueName / parentQueue parentQueue \u00b6 val QueueName.parentQueue: QueueName","title":"parentQueue - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/parent-queue.html#parentqueue","text":"val QueueName.parentQueue: QueueName","title":"parentQueue"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/retry-queue.html","text":"misk-aws / misk.jobqueue.sqs / misk.jobqueue.QueueName / retryQueue retryQueue \u00b6 val QueueName.retryQueue: QueueName","title":"retryQueue - Misk"},{"location":"0.x/misk-aws/misk.jobqueue.sqs/misk.jobqueue.-queue-name/retry-queue.html#retryqueue","text":"val QueueName.retryQueue: QueueName","title":"retryQueue"},{"location":"0.x/misk-aws/misk.s3/index.html","text":"misk-aws / misk.s3 Package misk.s3 \u00b6 Types \u00b6 Name Summary RealS3Module class RealS3Module : KAbstractModule","title":"Package misk.s3 - Misk"},{"location":"0.x/misk-aws/misk.s3/index.html#package-misks3","text":"","title":"Package misk.s3"},{"location":"0.x/misk-aws/misk.s3/index.html#types","text":"Name Summary RealS3Module class RealS3Module : KAbstractModule","title":"Types"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/index.html","text":"misk-aws / misk.s3 / RealS3Module RealS3Module \u00b6 class RealS3Module : KAbstractModule Constructors \u00b6 Name Summary <init> RealS3Module() Functions \u00b6 Name Summary configure fun configure(): Unit provideS3 fun provideS3(awsRegion: AwsRegion , awsCredentialsProvider: AWSCredentialsProvider): AmazonS3","title":"RealS3Module - Misk"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/index.html#reals3module","text":"class RealS3Module : KAbstractModule","title":"RealS3Module"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/index.html#constructors","text":"Name Summary <init> RealS3Module()","title":"Constructors"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideS3 fun provideS3(awsRegion: AwsRegion , awsCredentialsProvider: AWSCredentialsProvider): AmazonS3","title":"Functions"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/-init-.html","text":"misk-aws / misk.s3 / RealS3Module / <init> <init> \u00b6 RealS3Module()","title":" init "},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/-init-.html#init","text":"RealS3Module()","title":"&lt;init&gt;"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/configure.html","text":"misk-aws / misk.s3 / RealS3Module / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/provide-s3.html","text":"misk-aws / misk.s3 / RealS3Module / provideS3 provideS3 \u00b6 @Provides @Singleton fun provideS3(awsRegion: AwsRegion , awsCredentialsProvider: AWSCredentialsProvider): AmazonS3","title":"provideS3 - Misk"},{"location":"0.x/misk-aws/misk.s3/-real-s3-module/provide-s3.html#provides3","text":"@Provides @Singleton fun provideS3(awsRegion: AwsRegion , awsCredentialsProvider: AWSCredentialsProvider): AmazonS3","title":"provideS3"},{"location":"0.x/misk-aws-dynamodb/index.html","text":"misk-aws-dynamodb Packages \u00b6 Name Summary misk.dynamodb Index \u00b6 All Types","title":"misk-aws-dynamodb"},{"location":"0.x/misk-aws-dynamodb/index.html#packages","text":"Name Summary misk.dynamodb","title":"Packages"},{"location":"0.x/misk-aws-dynamodb/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-aws-dynamodb/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.dynamodb.DynamoDbHealthCheck misk.dynamodb.DynamoDbService Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. misk.dynamodb.DyTimestampedEntity Interface for a timestamped entity. misk.dynamodb.DyVersionedEntity This version field is used for optimistic locking. misk.dynamodb.RealDynamoDbModule Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. misk.dynamodb.RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"All Types - Misk"},{"location":"0.x/misk-aws-dynamodb/alltypes/index.html#all-types","text":"Name Summary misk.dynamodb.DynamoDbHealthCheck misk.dynamodb.DynamoDbService Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. misk.dynamodb.DyTimestampedEntity Interface for a timestamped entity. misk.dynamodb.DyVersionedEntity This version field is used for optimistic locking. misk.dynamodb.RealDynamoDbModule Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. misk.dynamodb.RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"All Types"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/index.html","text":"misk-aws-dynamodb / misk.dynamodb Package misk.dynamodb \u00b6 Types \u00b6 Name Summary DynamoDbHealthCheck class DynamoDbHealthCheck : HealthCheck DynamoDbService interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. DyTimestampedEntity interface DyTimestampedEntity Interface for a timestamped entity. DyVersionedEntity interface DyVersionedEntity This version field is used for optimistic locking. RealDynamoDbModule class RealDynamoDbModule : KAbstractModule Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. RequiredDynamoDbTable data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"Package misk.dynamodb - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/index.html#package-miskdynamodb","text":"","title":"Package misk.dynamodb"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/index.html#types","text":"Name Summary DynamoDbHealthCheck class DynamoDbHealthCheck : HealthCheck DynamoDbService interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. DyTimestampedEntity interface DyTimestampedEntity Interface for a timestamped entity. DyVersionedEntity interface DyVersionedEntity This version field is used for optimistic locking. RealDynamoDbModule class RealDynamoDbModule : KAbstractModule Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. RequiredDynamoDbTable data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"Types"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-service.html","text":"misk-aws-dynamodb / misk.dynamodb / DynamoDbService DynamoDbService \u00b6 interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb.","title":"DynamoDbService - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-service.html#dynamodbservice","text":"interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb.","title":"DynamoDbService"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/index.html","text":"misk-aws-dynamodb / misk.dynamodb / DyTimestampedEntity DyTimestampedEntity \u00b6 interface DyTimestampedEntity Interface for a timestamped entity. Properties \u00b6 Name Summary created_at abstract var created_at: Date Use the below annotations on the implementations. This will automatically set field to be when the entity is created. This will save the Date as a Long (epoch milliseconds). updated_at abstract var updated_at: Date Use the below annotations on the implementations. This will automatically set field every time entity is saved. This will save the Date as a Long (epoch milliseconds).","title":"DyTimestampedEntity - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/index.html#dytimestampedentity","text":"interface DyTimestampedEntity Interface for a timestamped entity.","title":"DyTimestampedEntity"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/index.html#properties","text":"Name Summary created_at abstract var created_at: Date Use the below annotations on the implementations. This will automatically set field to be when the entity is created. This will save the Date as a Long (epoch milliseconds). updated_at abstract var updated_at: Date Use the below annotations on the implementations. This will automatically set field every time entity is saved. This will save the Date as a Long (epoch milliseconds).","title":"Properties"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/created_at.html","text":"misk-aws-dynamodb / misk.dynamodb / DyTimestampedEntity / created_at created_at \u00b6 abstract var created_at: Date Use the below annotations on the implementations. This will automatically set field to be when the entity is created. This will save the Date as a Long (epoch milliseconds). DynamoDBAttribute (attributeName = \u201ccreated_at\u201d) DynamoDBAutoGeneratedTimestamp (strategy = DynamoDBAutoGenerateStrategy.CREATE)","title":"created_at - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/created_at.html#created_at","text":"abstract var created_at: Date Use the below annotations on the implementations. This will automatically set field to be when the entity is created. This will save the Date as a Long (epoch milliseconds). DynamoDBAttribute (attributeName = \u201ccreated_at\u201d) DynamoDBAutoGeneratedTimestamp (strategy = DynamoDBAutoGenerateStrategy.CREATE)","title":"created_at"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/updated_at.html","text":"misk-aws-dynamodb / misk.dynamodb / DyTimestampedEntity / updated_at updated_at \u00b6 abstract var updated_at: Date Use the below annotations on the implementations. This will automatically set field every time entity is saved. This will save the Date as a Long (epoch milliseconds). DynamoDBAttribute (attributeName = \u201cupdated_at\u201d) DynamoDBAutoGeneratedTimestamp (strategy = DynamoDBAutoGenerateStrategy.ALWAYS)","title":"updated_at - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-timestamped-entity/updated_at.html#updated_at","text":"abstract var updated_at: Date Use the below annotations on the implementations. This will automatically set field every time entity is saved. This will save the Date as a Long (epoch milliseconds). DynamoDBAttribute (attributeName = \u201cupdated_at\u201d) DynamoDBAutoGeneratedTimestamp (strategy = DynamoDBAutoGenerateStrategy.ALWAYS)","title":"updated_at"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/index.html","text":"misk-aws-dynamodb / misk.dynamodb / DyVersionedEntity DyVersionedEntity \u00b6 interface DyVersionedEntity This version field is used for optimistic locking. Properties \u00b6 Name Summary version abstract var version: Long This version field can be used to do optimistic locking on updates. Note that the DynamoDbMapper will need to be in save mode DynamoDBMapperConfig.SaveBehavior.CLOBBER","title":"DyVersionedEntity - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/index.html#dyversionedentity","text":"interface DyVersionedEntity This version field is used for optimistic locking.","title":"DyVersionedEntity"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/index.html#properties","text":"Name Summary version abstract var version: Long This version field can be used to do optimistic locking on updates. Note that the DynamoDbMapper will need to be in save mode DynamoDBMapperConfig.SaveBehavior.CLOBBER","title":"Properties"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/version.html","text":"misk-aws-dynamodb / misk.dynamodb / DyVersionedEntity / version version \u00b6 abstract var version: Long This version field can be used to do optimistic locking on updates. Note that the DynamoDbMapper will need to be in save mode DynamoDBMapperConfig.SaveBehavior.CLOBBER DynamoDBVersionAttribute (attributeName = \u201cversion\u201d)","title":"version - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dy-versioned-entity/version.html#version","text":"abstract var version: Long This version field can be used to do optimistic locking on updates. Note that the DynamoDbMapper will need to be in save mode DynamoDBMapperConfig.SaveBehavior.CLOBBER DynamoDBVersionAttribute (attributeName = \u201cversion\u201d)","title":"version"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/index.html","text":"misk-aws-dynamodb / misk.dynamodb / DynamoDbHealthCheck DynamoDbHealthCheck \u00b6 @Singleton class DynamoDbHealthCheck : HealthCheck Constructors \u00b6 Name Summary <init> DynamoDbHealthCheck(dynamoDb: AmazonDynamoDB, requiredTables: List < RequiredDynamoDbTable >) Functions \u00b6 Name Summary status fun status(): HealthStatus Companion Object Properties \u00b6 Name Summary logger val logger: KLogger","title":"DynamoDbHealthCheck - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/index.html#dynamodbhealthcheck","text":"@Singleton class DynamoDbHealthCheck : HealthCheck","title":"DynamoDbHealthCheck"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/index.html#constructors","text":"Name Summary <init> DynamoDbHealthCheck(dynamoDb: AmazonDynamoDB, requiredTables: List < RequiredDynamoDbTable >)","title":"Constructors"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/index.html#functions","text":"Name Summary status fun status(): HealthStatus","title":"Functions"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/index.html#companion-object-properties","text":"Name Summary logger val logger: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/-init-.html","text":"misk-aws-dynamodb / misk.dynamodb / DynamoDbHealthCheck / <init> <init> \u00b6 DynamoDbHealthCheck(dynamoDb: AmazonDynamoDB, requiredTables: List < RequiredDynamoDbTable >)","title":" init "},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/-init-.html#init","text":"DynamoDbHealthCheck(dynamoDb: AmazonDynamoDB, requiredTables: List < RequiredDynamoDbTable >)","title":"&lt;init&gt;"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/logger.html","text":"misk-aws-dynamodb / misk.dynamodb / DynamoDbHealthCheck / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/status.html","text":"misk-aws-dynamodb / misk.dynamodb / DynamoDbHealthCheck / status status \u00b6 fun status(): HealthStatus","title":"status - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-dynamo-db-health-check/status.html#status","text":"fun status(): HealthStatus","title":"status"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/index.html","text":"misk-aws-dynamodb / misk.dynamodb / RealDynamoDbModule RealDynamoDbModule \u00b6 class RealDynamoDbModule : KAbstractModule Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. Parameters \u00b6 requiredTableTypes - a list of mapper classes annotated DynamoDBTable . Constructors \u00b6 Name Summary <init> RealDynamoDbModule(clientConfig: ClientConfiguration = ClientConfiguration(), vararg requiredTableTypes: KClass <*>) Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. Functions \u00b6 Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List < RequiredDynamoDbTable > providesAmazonDynamoDB fun providesAmazonDynamoDB(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDB providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDBStreams","title":"RealDynamoDbModule - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/index.html#realdynamodbmodule","text":"class RealDynamoDbModule : KAbstractModule Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table.","title":"RealDynamoDbModule"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/index.html#parameters","text":"requiredTableTypes - a list of mapper classes annotated DynamoDBTable .","title":"Parameters"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/index.html#constructors","text":"Name Summary <init> RealDynamoDbModule(clientConfig: ClientConfiguration = ClientConfiguration(), vararg requiredTableTypes: KClass <*>) Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table.","title":"Constructors"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List < RequiredDynamoDbTable > providesAmazonDynamoDB fun providesAmazonDynamoDB(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDB providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDBStreams","title":"Functions"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/-init-.html","text":"misk-aws-dynamodb / misk.dynamodb / RealDynamoDbModule / <init> <init> \u00b6 RealDynamoDbModule(clientConfig: ClientConfiguration = ClientConfiguration(), vararg requiredTableTypes: KClass <*>) Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table. Parameters \u00b6 requiredTableTypes - a list of mapper classes annotated DynamoDBTable .","title":" init "},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/-init-.html#init","text":"RealDynamoDbModule(clientConfig: ClientConfiguration = ClientConfiguration(), vararg requiredTableTypes: KClass <*>) Install this module to have access to an AmazonDynamoDB client. This can be used to create a DynamoDbMapper for querying of a DynamoDb table.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/-init-.html#parameters","text":"requiredTableTypes - a list of mapper classes annotated DynamoDBTable .","title":"Parameters"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/configure.html","text":"misk-aws-dynamodb / misk.dynamodb / RealDynamoDbModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provide-required-tables.html","text":"misk-aws-dynamodb / misk.dynamodb / RealDynamoDbModule / provideRequiredTables provideRequiredTables \u00b6 @Provides @Singleton fun provideRequiredTables(): List < RequiredDynamoDbTable >","title":"provideRequiredTables - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provide-required-tables.html#providerequiredtables","text":"@Provides @Singleton fun provideRequiredTables(): List < RequiredDynamoDbTable >","title":"provideRequiredTables"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html","text":"misk-aws-dynamodb / misk.dynamodb / RealDynamoDbModule / providesAmazonDynamoDBStreams providesAmazonDynamoDBStreams \u00b6 @Provides @Singleton fun providesAmazonDynamoDBStreams(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDBStreams","title":"providesAmazonDynamoDBStreams - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html#providesamazondynamodbstreams","text":"@Provides @Singleton fun providesAmazonDynamoDBStreams(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDBStreams","title":"providesAmazonDynamoDBStreams"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b.html","text":"misk-aws-dynamodb / misk.dynamodb / RealDynamoDbModule / providesAmazonDynamoDB providesAmazonDynamoDB \u00b6 @Provides @Singleton fun providesAmazonDynamoDB(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDB","title":"providesAmazonDynamoDB - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-real-dynamo-db-module/provides-amazon-dynamo-d-b.html#providesamazondynamodb","text":"@Provides @Singleton fun providesAmazonDynamoDB(awsRegion: AwsRegion, awsCredentialsProvider: AWSCredentialsProvider): AmazonDynamoDB","title":"providesAmazonDynamoDB"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/index.html","text":"misk-aws-dynamodb / misk.dynamodb / RequiredDynamoDbTable RequiredDynamoDbTable \u00b6 data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d. Constructors \u00b6 Name Summary <init> RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. Properties \u00b6 Name Summary name val name: String","title":"RequiredDynamoDbTable - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/index.html#requireddynamodbtable","text":"data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.","title":"RequiredDynamoDbTable"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/index.html#constructors","text":"Name Summary <init> RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"Constructors"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/-init-.html","text":"misk-aws-dynamodb / misk.dynamodb / RequiredDynamoDbTable / <init> <init> \u00b6 RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.","title":" init "},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/-init-.html#init","text":"RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/name.html","text":"misk-aws-dynamodb / misk.dynamodb / RequiredDynamoDbTable / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-aws-dynamodb/misk.dynamodb/-required-dynamo-db-table/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-aws-dynamodb-testing/index.html","text":"misk-aws-dynamodb-testing Packages \u00b6 Name Summary misk.aws.dynamodb.testing Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/index.html#packages","text":"Name Summary misk.aws.dynamodb.testing","title":"Packages"},{"location":"0.x/misk-aws-dynamodb-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-aws-dynamodb-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.aws.dynamodb.testing.DockerDynamoDbModule Spins up a docker container for testing. It clears the table content before each test starts. misk.aws.dynamodb.testing.DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. misk.aws.dynamodb.testing.InProcessDynamoDbModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. misk.aws.dynamodb.testing.TestDynamoDb Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"All Types - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/alltypes/index.html#all-types","text":"Name Summary misk.aws.dynamodb.testing.DockerDynamoDbModule Spins up a docker container for testing. It clears the table content before each test starts. misk.aws.dynamodb.testing.DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. misk.aws.dynamodb.testing.InProcessDynamoDbModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. misk.aws.dynamodb.testing.TestDynamoDb Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"All Types"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/index.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing Package misk.aws.dynamodb.testing \u00b6 Types \u00b6 Name Summary DockerDynamoDbModule class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. DynamoDbTable data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. InProcessDynamoDbModule class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. TestDynamoDb class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"Package misk.aws.dynamodb.testing - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/index.html#package-miskawsdynamodbtesting","text":"","title":"Package misk.aws.dynamodb.testing"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/index.html#types","text":"Name Summary DockerDynamoDbModule class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. DynamoDbTable data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. InProcessDynamoDbModule class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. TestDynamoDb class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"Types"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/index.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DockerDynamoDbModule DockerDynamoDbModule \u00b6 class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside InProcessDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both. Constructors \u00b6 Name Summary <init> DockerDynamoDbModule(vararg tables: DynamoDbTable ) DockerDynamoDbModule(vararg tables: KClass <*>)``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts. Functions \u00b6 Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams providesTestDynamoDb fun providesTestDynamoDb(): TestDynamoDb","title":"DockerDynamoDbModule - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/index.html#dockerdynamodbmodule","text":"class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside InProcessDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both.","title":"DockerDynamoDbModule"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/index.html#constructors","text":"Name Summary <init> DockerDynamoDbModule(vararg tables: DynamoDbTable ) DockerDynamoDbModule(vararg tables: KClass <*>)``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts.","title":"Constructors"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams providesTestDynamoDb fun providesTestDynamoDb(): TestDynamoDb","title":"Functions"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/-init-.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DockerDynamoDbModule / <init> <init> \u00b6 DockerDynamoDbModule(vararg tables: DynamoDbTable ) DockerDynamoDbModule(vararg tables: KClass <*>)``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside InProcessDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both.","title":" init "},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/-init-.html#init","text":"DockerDynamoDbModule(vararg tables: DynamoDbTable ) DockerDynamoDbModule(vararg tables: KClass <*>)``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside InProcessDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/configure.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DockerDynamoDbModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provide-required-tables.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DockerDynamoDbModule / provideRequiredTables provideRequiredTables \u00b6 @Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provide-required-tables.html#providerequiredtables","text":"@Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DockerDynamoDbModule / providesAmazonDynamoDBStreams providesAmazonDynamoDBStreams \u00b6 @Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams","title":"providesAmazonDynamoDBStreams - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html#providesamazondynamodbstreams","text":"@Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams","title":"providesAmazonDynamoDBStreams"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DockerDynamoDbModule / providesAmazonDynamoDB providesAmazonDynamoDB \u00b6 @Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB","title":"providesAmazonDynamoDB - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b.html#providesamazondynamodb","text":"@Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB","title":"providesAmazonDynamoDB"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provides-test-dynamo-db.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DockerDynamoDbModule / providesTestDynamoDb providesTestDynamoDb \u00b6 @Provides @Singleton fun providesTestDynamoDb(): TestDynamoDb","title":"providesTestDynamoDb - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-docker-dynamo-db-module/provides-test-dynamo-db.html#providestestdynamodb","text":"@Provides @Singleton fun providesTestDynamoDb(): TestDynamoDb","title":"providesTestDynamoDb"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/index.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DynamoDbTable DynamoDbTable \u00b6 data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL . Constructors \u00b6 Name Summary <init> DynamoDbTable(tableClass: KClass <*>, configureTable: (CreateTableRequest) -> CreateTableRequest = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Properties \u00b6 Name Summary configureTable val configureTable: (CreateTableRequest) -> CreateTableRequest tableClass val tableClass: KClass <*> tableName val tableName: String","title":"DynamoDbTable - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/index.html#dynamodbtable","text":"data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL .","title":"DynamoDbTable"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/index.html#constructors","text":"Name Summary <init> DynamoDbTable(tableClass: KClass <*>, configureTable: (CreateTableRequest) -> CreateTableRequest = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution.","title":"Constructors"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/index.html#properties","text":"Name Summary configureTable val configureTable: (CreateTableRequest) -> CreateTableRequest tableClass val tableClass: KClass <*> tableName val tableName: String","title":"Properties"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/-init-.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DynamoDbTable / <init> <init> \u00b6 DynamoDbTable(tableClass: KClass <*>, configureTable: (CreateTableRequest) -> CreateTableRequest = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL .","title":" init "},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/-init-.html#init","text":"DynamoDbTable(tableClass: KClass <*>, configureTable: (CreateTableRequest) -> CreateTableRequest = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL .","title":"&lt;init&gt;"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/configure-table.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DynamoDbTable / configureTable configureTable \u00b6 val configureTable: (CreateTableRequest) -> CreateTableRequest","title":"configureTable - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/configure-table.html#configuretable","text":"val configureTable: (CreateTableRequest) -> CreateTableRequest","title":"configureTable"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/table-class.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DynamoDbTable / tableClass tableClass \u00b6 val tableClass: KClass <*>","title":"tableClass - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/table-class.html#tableclass","text":"val tableClass: KClass <*>","title":"tableClass"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/table-name.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / DynamoDbTable / tableName tableName \u00b6 val tableName: String","title":"tableName - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-dynamo-db-table/table-name.html#tablename","text":"val tableName: String","title":"tableName"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/index.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / InProcessDynamoDbModule InProcessDynamoDbModule \u00b6 class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both. Constructors \u00b6 Name Summary <init> InProcessDynamoDbModule(vararg tables: DynamoDbTable ) InProcessDynamoDbModule(vararg tables: KClass <*>)``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Functions \u00b6 Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams providesDynamoDbServiceWrapper fun providesDynamoDbServiceWrapper(): TestDynamoDb","title":"InProcessDynamoDbModule - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/index.html#inprocessdynamodbmodule","text":"class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both.","title":"InProcessDynamoDbModule"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/index.html#constructors","text":"Name Summary <init> InProcessDynamoDbModule(vararg tables: DynamoDbTable ) InProcessDynamoDbModule(vararg tables: KClass <*>)``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts.","title":"Constructors"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams providesDynamoDbServiceWrapper fun providesDynamoDbServiceWrapper(): TestDynamoDb","title":"Functions"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/-init-.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / InProcessDynamoDbModule / <init> <init> \u00b6 InProcessDynamoDbModule(vararg tables: DynamoDbTable ) InProcessDynamoDbModule(vararg tables: KClass <*>)``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both.","title":" init "},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/-init-.html#init","text":"InProcessDynamoDbModule(vararg tables: DynamoDbTable ) InProcessDynamoDbModule(vararg tables: KClass <*>)``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/configure.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / InProcessDynamoDbModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provide-required-tables.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / InProcessDynamoDbModule / provideRequiredTables provideRequiredTables \u00b6 @Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provide-required-tables.html#providerequiredtables","text":"@Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / InProcessDynamoDbModule / providesAmazonDynamoDBStreams providesAmazonDynamoDBStreams \u00b6 @Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams","title":"providesAmazonDynamoDBStreams - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html#providesamazondynamodbstreams","text":"@Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): AmazonDynamoDBStreams","title":"providesAmazonDynamoDBStreams"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / InProcessDynamoDbModule / providesAmazonDynamoDB providesAmazonDynamoDB \u00b6 @Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB","title":"providesAmazonDynamoDB - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b.html#providesamazondynamodb","text":"@Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): AmazonDynamoDB","title":"providesAmazonDynamoDB"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provides-dynamo-db-service-wrapper.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / InProcessDynamoDbModule / providesDynamoDbServiceWrapper providesDynamoDbServiceWrapper \u00b6 @Provides @Singleton fun providesDynamoDbServiceWrapper(): TestDynamoDb","title":"providesDynamoDbServiceWrapper - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-in-process-dynamo-db-module/provides-dynamo-db-service-wrapper.html#providesdynamodbservicewrapper","text":"@Provides @Singleton fun providesDynamoDbServiceWrapper(): TestDynamoDb","title":"providesDynamoDbServiceWrapper"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/index.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / TestDynamoDb TestDynamoDb \u00b6 class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule . Constructors \u00b6 Name Summary <init> TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule . Properties \u00b6 Name Summary service val service: TestDynamoDbService","title":"TestDynamoDb - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/index.html#testdynamodb","text":"class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"TestDynamoDb"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/index.html#constructors","text":"Name Summary <init> TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"Constructors"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/index.html#properties","text":"Name Summary service val service: TestDynamoDbService","title":"Properties"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/-init-.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / TestDynamoDb / <init> <init> \u00b6 TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":" init "},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/-init-.html#init","text":"TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"&lt;init&gt;"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/service.html","text":"misk-aws-dynamodb-testing / misk.aws.dynamodb.testing / TestDynamoDb / service service \u00b6 val service: TestDynamoDbService","title":"service - Misk"},{"location":"0.x/misk-aws-dynamodb-testing/misk.aws.dynamodb.testing/-test-dynamo-db/service.html#service","text":"val service: TestDynamoDbService","title":"service"},{"location":"0.x/misk-aws2-dynamodb/index.html","text":"misk-aws2-dynamodb Packages \u00b6 Name Summary misk.aws2.dynamodb Index \u00b6 All Types","title":"misk-aws2-dynamodb"},{"location":"0.x/misk-aws2-dynamodb/index.html#packages","text":"Name Summary misk.aws2.dynamodb","title":"Packages"},{"location":"0.x/misk-aws2-dynamodb/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-aws2-dynamodb/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.aws2.dynamodb.DynamoDbHealthCheck misk.aws2.dynamodb.DynamoDbService Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. misk.aws2.dynamodb.RealDynamoDbModule Install this module to have access to a DynamoDbClient. misk.aws2.dynamodb.RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"All Types - Misk"},{"location":"0.x/misk-aws2-dynamodb/alltypes/index.html#all-types","text":"Name Summary misk.aws2.dynamodb.DynamoDbHealthCheck misk.aws2.dynamodb.DynamoDbService Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. misk.aws2.dynamodb.RealDynamoDbModule Install this module to have access to a DynamoDbClient. misk.aws2.dynamodb.RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"All Types"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/index.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb Package misk.aws2.dynamodb \u00b6 Types \u00b6 Name Summary DynamoDbHealthCheck class DynamoDbHealthCheck : HealthCheck DynamoDbService interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. RealDynamoDbModule class RealDynamoDbModule : KAbstractModule Install this module to have access to a DynamoDbClient. RequiredDynamoDbTable data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"Package misk.aws2.dynamodb - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/index.html#package-miskaws2dynamodb","text":"","title":"Package misk.aws2.dynamodb"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/index.html#types","text":"Name Summary DynamoDbHealthCheck class DynamoDbHealthCheck : HealthCheck DynamoDbService interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb. RealDynamoDbModule class RealDynamoDbModule : KAbstractModule Install this module to have access to a DynamoDbClient. RequiredDynamoDbTable data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"Types"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-service.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / DynamoDbService DynamoDbService \u00b6 interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb.","title":"DynamoDbService - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-service.html#dynamodbservice","text":"interface DynamoDbService : Service Service that\u2019s running when DynamoDb is usable. Configure your service to depend on this service if it needs DynamoDb.","title":"DynamoDbService"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/index.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / DynamoDbHealthCheck DynamoDbHealthCheck \u00b6 @Singleton class DynamoDbHealthCheck : HealthCheck Constructors \u00b6 Name Summary <init> DynamoDbHealthCheck(dynamoDb: DynamoDbClient, requiredTables: List < RequiredDynamoDbTable >) Functions \u00b6 Name Summary status fun status(): HealthStatus Companion Object Properties \u00b6 Name Summary logger val logger: KLogger","title":"DynamoDbHealthCheck - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/index.html#dynamodbhealthcheck","text":"@Singleton class DynamoDbHealthCheck : HealthCheck","title":"DynamoDbHealthCheck"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/index.html#constructors","text":"Name Summary <init> DynamoDbHealthCheck(dynamoDb: DynamoDbClient, requiredTables: List < RequiredDynamoDbTable >)","title":"Constructors"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/index.html#functions","text":"Name Summary status fun status(): HealthStatus","title":"Functions"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/index.html#companion-object-properties","text":"Name Summary logger val logger: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/-init-.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / DynamoDbHealthCheck / <init> <init> \u00b6 DynamoDbHealthCheck(dynamoDb: DynamoDbClient, requiredTables: List < RequiredDynamoDbTable >)","title":" init "},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/-init-.html#init","text":"DynamoDbHealthCheck(dynamoDb: DynamoDbClient, requiredTables: List < RequiredDynamoDbTable >)","title":"&lt;init&gt;"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/logger.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / DynamoDbHealthCheck / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/status.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / DynamoDbHealthCheck / status status \u00b6 fun status(): HealthStatus","title":"status - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-dynamo-db-health-check/status.html#status","text":"fun status(): HealthStatus","title":"status"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/index.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RealDynamoDbModule RealDynamoDbModule \u00b6 class RealDynamoDbModule : KAbstractModule Install this module to have access to a DynamoDbClient. Constructors \u00b6 Name Summary <init> RealDynamoDbModule(clientOverrideConfig: ClientOverrideConfiguration = ClientOverrideConfiguration.builder().build(), requiredTables: List < RequiredDynamoDbTable > = listOf()) Install this module to have access to a DynamoDbClient. Functions \u00b6 Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List < RequiredDynamoDbTable > providesDynamoDbClient fun providesDynamoDbClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbClient","title":"RealDynamoDbModule - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/index.html#realdynamodbmodule","text":"class RealDynamoDbModule : KAbstractModule Install this module to have access to a DynamoDbClient.","title":"RealDynamoDbModule"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/index.html#constructors","text":"Name Summary <init> RealDynamoDbModule(clientOverrideConfig: ClientOverrideConfiguration = ClientOverrideConfiguration.builder().build(), requiredTables: List < RequiredDynamoDbTable > = listOf()) Install this module to have access to a DynamoDbClient.","title":"Constructors"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List < RequiredDynamoDbTable > providesDynamoDbClient fun providesDynamoDbClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbClient","title":"Functions"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/-init-.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RealDynamoDbModule / <init> <init> \u00b6 RealDynamoDbModule(clientOverrideConfig: ClientOverrideConfiguration = ClientOverrideConfiguration.builder().build(), requiredTables: List < RequiredDynamoDbTable > = listOf()) Install this module to have access to a DynamoDbClient.","title":" init "},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/-init-.html#init","text":"RealDynamoDbModule(clientOverrideConfig: ClientOverrideConfiguration = ClientOverrideConfiguration.builder().build(), requiredTables: List < RequiredDynamoDbTable > = listOf()) Install this module to have access to a DynamoDbClient.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/configure.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RealDynamoDbModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provide-required-tables.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RealDynamoDbModule / provideRequiredTables provideRequiredTables \u00b6 @Provides @Singleton fun provideRequiredTables(): List < RequiredDynamoDbTable >","title":"provideRequiredTables - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provide-required-tables.html#providerequiredtables","text":"@Provides @Singleton fun provideRequiredTables(): List < RequiredDynamoDbTable >","title":"provideRequiredTables"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provides-dynamo-db-client.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RealDynamoDbModule / providesDynamoDbClient providesDynamoDbClient \u00b6 @Provides @Singleton fun providesDynamoDbClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbClient","title":"providesDynamoDbClient - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-real-dynamo-db-module/provides-dynamo-db-client.html#providesdynamodbclient","text":"@Provides @Singleton fun providesDynamoDbClient(awsRegion: AwsRegion, awsCredentialsProvider: AwsCredentialsProvider): DynamoDbClient","title":"providesDynamoDbClient"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/index.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RequiredDynamoDbTable RequiredDynamoDbTable \u00b6 data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d. Constructors \u00b6 Name Summary <init> RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. Properties \u00b6 Name Summary name val name: String","title":"RequiredDynamoDbTable - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/index.html#requireddynamodbtable","text":"data class RequiredDynamoDbTable A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.","title":"RequiredDynamoDbTable"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/index.html#constructors","text":"Name Summary <init> RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up.","title":"Constructors"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/-init-.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RequiredDynamoDbTable / <init> <init> \u00b6 RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.","title":" init "},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/-init-.html#init","text":"RequiredDynamoDbTable(name: String ) A table that must be available in the DynamoDB instance. If this table doesn\u2019t exist, the service will not start up. The table name is sometimes prefixed with the service name, like \u201curlshortener.urls\u201d.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/name.html","text":"misk-aws2-dynamodb / misk.aws2.dynamodb / RequiredDynamoDbTable / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-aws2-dynamodb/misk.aws2.dynamodb/-required-dynamo-db-table/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-aws2-dynamodb-testing/index.html","text":"misk-aws2-dynamodb-testing Packages \u00b6 Name Summary misk.aws2.dynamodb.testing Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/index.html#packages","text":"Name Summary misk.aws2.dynamodb.testing","title":"Packages"},{"location":"0.x/misk-aws2-dynamodb-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-aws2-dynamodb-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.aws2.dynamodb.testing.DockerDynamoDbModule Spins up a docker container for testing. It clears the table content before each test starts. misk.aws2.dynamodb.testing.DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. misk.aws2.dynamodb.testing.InProcessDynamoDbModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. misk.aws2.dynamodb.testing.TestDynamoDb Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"All Types - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/alltypes/index.html#all-types","text":"Name Summary misk.aws2.dynamodb.testing.DockerDynamoDbModule Spins up a docker container for testing. It clears the table content before each test starts. misk.aws2.dynamodb.testing.DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. misk.aws2.dynamodb.testing.InProcessDynamoDbModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. misk.aws2.dynamodb.testing.TestDynamoDb Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"All Types"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/index.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing Package misk.aws2.dynamodb.testing \u00b6 Types \u00b6 Name Summary DockerDynamoDbModule class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. DynamoDbTable data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. InProcessDynamoDbModule class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. TestDynamoDb class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"Package misk.aws2.dynamodb.testing - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/index.html#package-miskaws2dynamodbtesting","text":"","title":"Package misk.aws2.dynamodb.testing"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/index.html#types","text":"Name Summary DockerDynamoDbModule class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. DynamoDbTable data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. InProcessDynamoDbModule class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. TestDynamoDb class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"Types"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/index.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DockerDynamoDbModule DockerDynamoDbModule \u00b6 class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside LocalDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both. Constructors \u00b6 Name Summary <init> DockerDynamoDbModule(vararg tables: DynamoDbTable )``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts. Functions \u00b6 Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient providesTestDynamoDb fun providesTestDynamoDb(): TestDynamoDb","title":"DockerDynamoDbModule - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/index.html#dockerdynamodbmodule","text":"class DockerDynamoDbModule : KAbstractModule Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside LocalDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both.","title":"DockerDynamoDbModule"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/index.html#constructors","text":"Name Summary <init> DockerDynamoDbModule(vararg tables: DynamoDbTable )``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts.","title":"Constructors"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient providesTestDynamoDb fun providesTestDynamoDb(): TestDynamoDb","title":"Functions"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/-init-.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DockerDynamoDbModule / <init> <init> \u00b6 DockerDynamoDbModule(vararg tables: DynamoDbTable )``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside LocalDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both.","title":" init "},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/-init-.html#init","text":"DockerDynamoDbModule(vararg tables: DynamoDbTable )``DockerDynamoDbModule(tables: List < DynamoDbTable >) Spins up a docker container for testing. It clears the table content before each test starts. Note that this may not be used alongside LocalDynamoDbModule . DynamoDB may execute in Docker or in-process, but never both.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/configure.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DockerDynamoDbModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provide-required-tables.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DockerDynamoDbModule / provideRequiredTables provideRequiredTables \u00b6 @Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provide-required-tables.html#providerequiredtables","text":"@Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DockerDynamoDbModule / providesAmazonDynamoDBStreams providesAmazonDynamoDBStreams \u00b6 @Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient","title":"providesAmazonDynamoDBStreams - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html#providesamazondynamodbstreams","text":"@Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient","title":"providesAmazonDynamoDBStreams"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DockerDynamoDbModule / providesAmazonDynamoDB providesAmazonDynamoDB \u00b6 @Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient","title":"providesAmazonDynamoDB - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provides-amazon-dynamo-d-b.html#providesamazondynamodb","text":"@Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient","title":"providesAmazonDynamoDB"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provides-test-dynamo-db.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DockerDynamoDbModule / providesTestDynamoDb providesTestDynamoDb \u00b6 @Provides @Singleton fun providesTestDynamoDb(): TestDynamoDb","title":"providesTestDynamoDb - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-docker-dynamo-db-module/provides-test-dynamo-db.html#providestestdynamodb","text":"@Provides @Singleton fun providesTestDynamoDb(): TestDynamoDb","title":"providesTestDynamoDb"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/index.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DynamoDbTable DynamoDbTable \u00b6 data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL . Constructors \u00b6 Name Summary <init> DynamoDbTable(tableName: String , tableClass: KClass <*>, configureTable: (Builder) -> Builder = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Properties \u00b6 Name Summary configureTable val configureTable: (Builder) -> Builder tableClass val tableClass: KClass <*> tableName val tableName: String","title":"DynamoDbTable - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/index.html#dynamodbtable","text":"data class DynamoDbTable Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL .","title":"DynamoDbTable"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/index.html#constructors","text":"Name Summary <init> DynamoDbTable(tableName: String , tableClass: KClass <*>, configureTable: (Builder) -> Builder = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution.","title":"Constructors"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/index.html#properties","text":"Name Summary configureTable val configureTable: (Builder) -> Builder tableClass val tableClass: KClass <*> tableName val tableName: String","title":"Properties"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/-init-.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DynamoDbTable / <init> <init> \u00b6 DynamoDbTable(tableName: String , tableClass: KClass <*>, configureTable: (Builder) -> Builder = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL .","title":" init "},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/-init-.html#init","text":"DynamoDbTable(tableName: String , tableClass: KClass <*>, configureTable: (Builder) -> Builder = { it }) Use this with DockerDynamoDbModule or InProcessDynamoDbModule to configure your DynamoDB tables for each test execution. Use configureTable to customize the table creation request for testing, such as to configure the secondary indexes required by ProjectionType.ALL .","title":"&lt;init&gt;"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/configure-table.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DynamoDbTable / configureTable configureTable \u00b6 val configureTable: (Builder) -> Builder","title":"configureTable - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/configure-table.html#configuretable","text":"val configureTable: (Builder) -> Builder","title":"configureTable"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/table-class.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DynamoDbTable / tableClass tableClass \u00b6 val tableClass: KClass <*>","title":"tableClass - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/table-class.html#tableclass","text":"val tableClass: KClass <*>","title":"tableClass"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/table-name.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / DynamoDbTable / tableName tableName \u00b6 val tableName: String","title":"tableName - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-dynamo-db-table/table-name.html#tablename","text":"val tableName: String","title":"tableName"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/index.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / InProcessDynamoDbModule InProcessDynamoDbModule \u00b6 class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both. Constructors \u00b6 Name Summary <init> InProcessDynamoDbModule(vararg tables: DynamoDbTable )``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Functions \u00b6 Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient providesTestDynamoDb fun providesTestDynamoDb(): TestDynamoDb","title":"InProcessDynamoDbModule - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/index.html#inprocessdynamodbmodule","text":"class InProcessDynamoDbModule : KAbstractModule Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both.","title":"InProcessDynamoDbModule"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/index.html#constructors","text":"Name Summary <init> InProcessDynamoDbModule(vararg tables: DynamoDbTable )``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts.","title":"Constructors"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideRequiredTables fun provideRequiredTables(): List <RequiredDynamoDbTable> providesAmazonDynamoDB fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient providesAmazonDynamoDBStreams fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient providesTestDynamoDb fun providesTestDynamoDb(): TestDynamoDb","title":"Functions"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/-init-.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / InProcessDynamoDbModule / <init> <init> \u00b6 InProcessDynamoDbModule(vararg tables: DynamoDbTable )``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both.","title":" init "},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/-init-.html#init","text":"InProcessDynamoDbModule(vararg tables: DynamoDbTable )``InProcessDynamoDbModule(tables: List < DynamoDbTable >) Executes a DynamoDB service in-process per test. It clears the table content before each test starts. Note that this may not be used alongside DockerDynamoDbModule and @MiskExternalResource DockerDynamoDb . DynamoDB may execute in Docker or in-process, but never both.","title":"&lt;init&gt;"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/configure.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / InProcessDynamoDbModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provide-required-tables.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / InProcessDynamoDbModule / provideRequiredTables provideRequiredTables \u00b6 @Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provide-required-tables.html#providerequiredtables","text":"@Provides @Singleton fun provideRequiredTables(): List <RequiredDynamoDbTable>","title":"provideRequiredTables"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / InProcessDynamoDbModule / providesAmazonDynamoDBStreams providesAmazonDynamoDBStreams \u00b6 @Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient","title":"providesAmazonDynamoDBStreams - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b-streams.html#providesamazondynamodbstreams","text":"@Provides @Singleton fun providesAmazonDynamoDBStreams(testDynamoDb: TestDynamoDb ): DynamoDbStreamsClient","title":"providesAmazonDynamoDBStreams"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / InProcessDynamoDbModule / providesAmazonDynamoDB providesAmazonDynamoDB \u00b6 @Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient","title":"providesAmazonDynamoDB - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provides-amazon-dynamo-d-b.html#providesamazondynamodb","text":"@Provides @Singleton fun providesAmazonDynamoDB(testDynamoDb: TestDynamoDb ): DynamoDbClient","title":"providesAmazonDynamoDB"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provides-test-dynamo-db.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / InProcessDynamoDbModule / providesTestDynamoDb providesTestDynamoDb \u00b6 @Provides @Singleton fun providesTestDynamoDb(): TestDynamoDb","title":"providesTestDynamoDb - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-in-process-dynamo-db-module/provides-test-dynamo-db.html#providestestdynamodb","text":"@Provides @Singleton fun providesTestDynamoDb(): TestDynamoDb","title":"providesTestDynamoDb"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/index.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / TestDynamoDb TestDynamoDb \u00b6 class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule . Constructors \u00b6 Name Summary <init> TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule . Properties \u00b6 Name Summary service val service: TestDynamoDbService","title":"TestDynamoDb - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/index.html#testdynamodb","text":"class TestDynamoDb : Service Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"TestDynamoDb"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/index.html#constructors","text":"Name Summary <init> TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"Constructors"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/index.html#properties","text":"Name Summary service val service: TestDynamoDbService","title":"Properties"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/-init-.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / TestDynamoDb / <init> <init> \u00b6 TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":" init "},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/-init-.html#init","text":"TestDynamoDb(service: TestDynamoDbService) Thin wrapper to make TestDynamoDbService , which is not a @Singleton, compatible with ServiceModule .","title":"&lt;init&gt;"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/service.html","text":"misk-aws2-dynamodb-testing / misk.aws2.dynamodb.testing / TestDynamoDb / service service \u00b6 val service: TestDynamoDbService","title":"service - Misk"},{"location":"0.x/misk-aws2-dynamodb-testing/misk.aws2.dynamodb.testing/-test-dynamo-db/service.html#service","text":"val service: TestDynamoDbService","title":"service"},{"location":"0.x/misk-core/index.html","text":"misk-core Packages \u00b6 Name Summary misk.clustering misk.clustering.fake misk.clustering.fake.lease misk.clustering.lease misk.concurrent misk.config misk.healthchecks misk.logging misk.random misk.resources misk.retries misk.sampling misk.security.ssl misk.tokens misk.web.mediatype Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-core/index.html#packages","text":"Name Summary misk.clustering misk.clustering.fake misk.clustering.fake.lease misk.clustering.lease misk.concurrent misk.config misk.healthchecks misk.logging misk.random misk.resources misk.retries misk.sampling misk.security.ssl misk.tokens misk.web.mediatype","title":"Packages"},{"location":"0.x/misk-core/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-core/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.sampling.AlwaysSampler Sampler that always invokes an action misk.security.ssl.CertificateAndKey misk.security.ssl.CertStore A certificate and its private key. misk.security.ssl.CertStoreConfig misk.clustering.Cluster A Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers misk.clustering.ClusterHashRing A ClusterHashRing maps resources to cluster members based on a consistent hash misk.clustering.ClusterResourceMapper A ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Cluster s can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake) misk.clustering.ClusterService Marker interface for the service that produces a Cluster . misk.clustering.ClusterWatch A ClusterWatch is a callback function triggered when cluster membership changes misk.config.Config misk.clustering.DefaultCluster A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. misk.concurrent.ExecutorServiceFactory Inject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes. misk.clustering.fake.ExplicitClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed. misk.clustering.fake.FakeCluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes. misk.clustering.fake.FakeClusterModule FakeClusterModule installs fake implementations of the clustering primitives for use in tests misk.resources.FakeFilesModule Adds the provided fake files to the map used by FilesystemLoaderBackend . misk.clustering.fake.lease.FakeLeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired misk.clustering.fake.lease.FakeLeaseModule FakeLeaseModule installs support for leasing using fakes misk.tokens.FakeTokenGenerator misk.tokens.FakeTokenGeneratorModule misk.resources.ForFakeFiles misk.healthchecks.HealthCheck Allows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction , indicating that the app should not accept traffic. misk.healthchecks.HealthStatus java.security.KeyStore (extensions in package misk.security.ssl) mu.KLogger (extensions in package misk.logging) misk.clustering.lease.Lease A Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease . A ready service instance will automatically attempt to acquire leases that it thinks it should own (typically based on the resource being leased consistently hashing to the service instance), and will continue to maintain the lease for as long as it is still ready. Leases should be released if the service transitions into not ready; to avoid flapping, service lease owners may want to delay releasing leases until they\u2019ve been not ready for a particular amount of time. misk.clustering.lease.LeaseManager misk.web.mediatype.MediaRange An RFC-2616 media range okhttp3.MediaType (extensions in package misk.web.mediatype) misk.web.mediatype.MediaTypes misk.clustering.NoMembersAvailableException Thrown if the cluster does not have any members available. misk.sampling.PercentSampler A Sampler randomly invokes an action based on a sample percentage misk.random.Random Abstraction for Java\u2019s Random that allows for testing. misk.sampling.RateLimiter A deterministic testable rate limiter that uses two variables: misk.sampling.RateLimitingSampler misk.tokens.RealTokenGenerator misk.resources.ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. misk.resources.ResourceLoaderModule misk.logging.SampledLogger misk.sampling.Sampler misk.concurrent.Sleeper Abstraction for Thread.sleep() that allows for testing. misk.security.ssl.SslContextFactory misk.security.ssl.SslLoader Loads keys and certificates from the file system. kotlin.String (extensions in package misk.web.mediatype) misk.resources.TestingResourceLoaderModule Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend misk.random.ThreadLocalRandom Abstraction for Java\u2019s ThreadLocalRandom that allows for testing. misk.tokens.TokenGenerator Generates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a Crockford Base32 alphabet . This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0 , o , and \u2018O\u2019 are equivalent. misk.tokens.TokenGeneratorModule misk.security.ssl.TrustStore A set of trusted root certificates. misk.security.ssl.TrustStoreConfig","title":"All Types - Misk"},{"location":"0.x/misk-core/alltypes/index.html#all-types","text":"Name Summary misk.sampling.AlwaysSampler Sampler that always invokes an action misk.security.ssl.CertificateAndKey misk.security.ssl.CertStore A certificate and its private key. misk.security.ssl.CertStoreConfig misk.clustering.Cluster A Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers misk.clustering.ClusterHashRing A ClusterHashRing maps resources to cluster members based on a consistent hash misk.clustering.ClusterResourceMapper A ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Cluster s can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake) misk.clustering.ClusterService Marker interface for the service that produces a Cluster . misk.clustering.ClusterWatch A ClusterWatch is a callback function triggered when cluster membership changes misk.config.Config misk.clustering.DefaultCluster A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. misk.concurrent.ExecutorServiceFactory Inject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes. misk.clustering.fake.ExplicitClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed. misk.clustering.fake.FakeCluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes. misk.clustering.fake.FakeClusterModule FakeClusterModule installs fake implementations of the clustering primitives for use in tests misk.resources.FakeFilesModule Adds the provided fake files to the map used by FilesystemLoaderBackend . misk.clustering.fake.lease.FakeLeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired misk.clustering.fake.lease.FakeLeaseModule FakeLeaseModule installs support for leasing using fakes misk.tokens.FakeTokenGenerator misk.tokens.FakeTokenGeneratorModule misk.resources.ForFakeFiles misk.healthchecks.HealthCheck Allows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction , indicating that the app should not accept traffic. misk.healthchecks.HealthStatus java.security.KeyStore (extensions in package misk.security.ssl) mu.KLogger (extensions in package misk.logging) misk.clustering.lease.Lease A Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease . A ready service instance will automatically attempt to acquire leases that it thinks it should own (typically based on the resource being leased consistently hashing to the service instance), and will continue to maintain the lease for as long as it is still ready. Leases should be released if the service transitions into not ready; to avoid flapping, service lease owners may want to delay releasing leases until they\u2019ve been not ready for a particular amount of time. misk.clustering.lease.LeaseManager misk.web.mediatype.MediaRange An RFC-2616 media range okhttp3.MediaType (extensions in package misk.web.mediatype) misk.web.mediatype.MediaTypes misk.clustering.NoMembersAvailableException Thrown if the cluster does not have any members available. misk.sampling.PercentSampler A Sampler randomly invokes an action based on a sample percentage misk.random.Random Abstraction for Java\u2019s Random that allows for testing. misk.sampling.RateLimiter A deterministic testable rate limiter that uses two variables: misk.sampling.RateLimitingSampler misk.tokens.RealTokenGenerator misk.resources.ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. misk.resources.ResourceLoaderModule misk.logging.SampledLogger misk.sampling.Sampler misk.concurrent.Sleeper Abstraction for Thread.sleep() that allows for testing. misk.security.ssl.SslContextFactory misk.security.ssl.SslLoader Loads keys and certificates from the file system. kotlin.String (extensions in package misk.web.mediatype) misk.resources.TestingResourceLoaderModule Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend misk.random.ThreadLocalRandom Abstraction for Java\u2019s ThreadLocalRandom that allows for testing. misk.tokens.TokenGenerator Generates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a Crockford Base32 alphabet . This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0 , o , and \u2018O\u2019 are equivalent. misk.tokens.TokenGeneratorModule misk.security.ssl.TrustStore A set of trusted root certificates. misk.security.ssl.TrustStoreConfig","title":"All Types"},{"location":"0.x/misk-core/misk.clustering/index.html","text":"misk-core / misk.clustering Package misk.clustering \u00b6 Types \u00b6 Name Summary Cluster interface Cluster A Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers ClusterHashRing class ClusterHashRing : ClusterResourceMapper A ClusterHashRing maps resources to cluster members based on a consistent hash ClusterResourceMapper interface ClusterResourceMapper A ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Cluster s can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake) ClusterService interface ClusterService : Service Marker interface for the service that produces a Cluster . DefaultCluster class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. Exceptions \u00b6 Name Summary NoMembersAvailableException class NoMembersAvailableException : Exception Thrown if the cluster does not have any members available. Type Aliases \u00b6 Name Summary ClusterWatch typealias ClusterWatch = ( Cluster.Changes ) -> Unit A ClusterWatch is a callback function triggered when cluster membership changes","title":"Package misk.clustering - Misk"},{"location":"0.x/misk-core/misk.clustering/index.html#package-miskclustering","text":"","title":"Package misk.clustering"},{"location":"0.x/misk-core/misk.clustering/index.html#types","text":"Name Summary Cluster interface Cluster A Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers ClusterHashRing class ClusterHashRing : ClusterResourceMapper A ClusterHashRing maps resources to cluster members based on a consistent hash ClusterResourceMapper interface ClusterResourceMapper A ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Cluster s can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake) ClusterService interface ClusterService : Service Marker interface for the service that produces a Cluster . DefaultCluster class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes.","title":"Types"},{"location":"0.x/misk-core/misk.clustering/index.html#exceptions","text":"Name Summary NoMembersAvailableException class NoMembersAvailableException : Exception Thrown if the cluster does not have any members available.","title":"Exceptions"},{"location":"0.x/misk-core/misk.clustering/index.html#type-aliases","text":"Name Summary ClusterWatch typealias ClusterWatch = ( Cluster.Changes ) -> Unit A ClusterWatch is a callback function triggered when cluster membership changes","title":"Type Aliases"},{"location":"0.x/misk-core/misk.clustering/-cluster-service.html","text":"misk-core / misk.clustering / ClusterService ClusterService \u00b6 interface ClusterService : Service Marker interface for the service that produces a Cluster . Inheritors \u00b6 Name Summary DefaultCluster class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. FakeCluster class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes.","title":"ClusterService - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-service.html#clusterservice","text":"interface ClusterService : Service Marker interface for the service that produces a Cluster .","title":"ClusterService"},{"location":"0.x/misk-core/misk.clustering/-cluster-service.html#inheritors","text":"Name Summary DefaultCluster class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. FakeCluster class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes.","title":"Inheritors"},{"location":"0.x/misk-core/misk.clustering/-cluster-watch.html","text":"misk-core / misk.clustering / ClusterWatch ClusterWatch \u00b6 typealias ClusterWatch = ( Cluster.Changes ) -> Unit A ClusterWatch is a callback function triggered when cluster membership changes","title":"ClusterWatch - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-watch.html#clusterwatch","text":"typealias ClusterWatch = ( Cluster.Changes ) -> Unit A ClusterWatch is a callback function triggered when cluster membership changes","title":"ClusterWatch"},{"location":"0.x/misk-core/misk.clustering/-cluster/index.html","text":"misk-core / misk.clustering / Cluster Cluster \u00b6 interface Cluster A Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers Types \u00b6 Name Summary Changes data class Changes Member data class Member Snapshot data class Snapshot Snapshot is a consistent moment-in-time view of the cluster state Properties \u00b6 Name Summary snapshot abstract val snapshot: Cluster.Snapshot The current moment-in-time view of the cluster state Functions \u00b6 Name Summary newResourceMapper open fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper watch abstract fun watch(watch: ClusterWatch ): Unit Registers interest in cluster changes Inheritors \u00b6 Name Summary DefaultCluster class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. FakeCluster class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes.","title":"Cluster - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/index.html#cluster","text":"interface Cluster A Cluster provides access to cluster membership for a service, allowing instances of a service to monitor the state of its peers","title":"Cluster"},{"location":"0.x/misk-core/misk.clustering/-cluster/index.html#types","text":"Name Summary Changes data class Changes Member data class Member Snapshot data class Snapshot Snapshot is a consistent moment-in-time view of the cluster state","title":"Types"},{"location":"0.x/misk-core/misk.clustering/-cluster/index.html#properties","text":"Name Summary snapshot abstract val snapshot: Cluster.Snapshot The current moment-in-time view of the cluster state","title":"Properties"},{"location":"0.x/misk-core/misk.clustering/-cluster/index.html#functions","text":"Name Summary newResourceMapper open fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper watch abstract fun watch(watch: ClusterWatch ): Unit Registers interest in cluster changes","title":"Functions"},{"location":"0.x/misk-core/misk.clustering/-cluster/index.html#inheritors","text":"Name Summary DefaultCluster class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. FakeCluster class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes.","title":"Inheritors"},{"location":"0.x/misk-core/misk.clustering/-cluster/new-resource-mapper.html","text":"misk-core / misk.clustering / Cluster / newResourceMapper newResourceMapper \u00b6 open fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper Return A new ClusterResourceMapper for the given set of ready members","title":"newResourceMapper - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/new-resource-mapper.html#newresourcemapper","text":"open fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper Return A new ClusterResourceMapper for the given set of ready members","title":"newResourceMapper"},{"location":"0.x/misk-core/misk.clustering/-cluster/snapshot.html","text":"misk-core / misk.clustering / Cluster / snapshot snapshot \u00b6 abstract val snapshot: Cluster.Snapshot The current moment-in-time view of the cluster state","title":"snapshot - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/snapshot.html#snapshot","text":"abstract val snapshot: Cluster.Snapshot The current moment-in-time view of the cluster state","title":"snapshot"},{"location":"0.x/misk-core/misk.clustering/-cluster/watch.html","text":"misk-core / misk.clustering / Cluster / watch watch \u00b6 abstract fun watch(watch: ClusterWatch ): Unit Registers interest in cluster changes","title":"watch - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/watch.html#watch","text":"abstract fun watch(watch: ClusterWatch ): Unit Registers interest in cluster changes","title":"watch"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/index.html","text":"misk-core / misk.clustering / Cluster / Changes Changes \u00b6 data class Changes Constructors \u00b6 Name Summary <init> Changes(snapshot: Cluster.Snapshot , added: Set < Cluster.Member > = setOf(), removed: Set < Cluster.Member > = setOf()) Properties \u00b6 Name Summary added val added: Set < Cluster.Member > hasDiffs val hasDiffs: Boolean removed val removed: Set < Cluster.Member > snapshot val snapshot: Cluster.Snapshot","title":"Changes - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/index.html#changes","text":"data class Changes","title":"Changes"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/index.html#constructors","text":"Name Summary <init> Changes(snapshot: Cluster.Snapshot , added: Set < Cluster.Member > = setOf(), removed: Set < Cluster.Member > = setOf())","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/index.html#properties","text":"Name Summary added val added: Set < Cluster.Member > hasDiffs val hasDiffs: Boolean removed val removed: Set < Cluster.Member > snapshot val snapshot: Cluster.Snapshot","title":"Properties"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/-init-.html","text":"misk-core / misk.clustering / Cluster / Changes / <init> <init> \u00b6 Changes(snapshot: Cluster.Snapshot , added: Set < Cluster.Member > = setOf(), removed: Set < Cluster.Member > = setOf())","title":" init "},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/-init-.html#init","text":"Changes(snapshot: Cluster.Snapshot , added: Set < Cluster.Member > = setOf(), removed: Set < Cluster.Member > = setOf())","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/added.html","text":"misk-core / misk.clustering / Cluster / Changes / added added \u00b6 val added: Set < Cluster.Member >","title":"added - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/added.html#added","text":"val added: Set < Cluster.Member >","title":"added"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/has-diffs.html","text":"misk-core / misk.clustering / Cluster / Changes / hasDiffs hasDiffs \u00b6 val hasDiffs: Boolean","title":"hasDiffs - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/has-diffs.html#hasdiffs","text":"val hasDiffs: Boolean","title":"hasDiffs"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/removed.html","text":"misk-core / misk.clustering / Cluster / Changes / removed removed \u00b6 val removed: Set < Cluster.Member >","title":"removed - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/removed.html#removed","text":"val removed: Set < Cluster.Member >","title":"removed"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/snapshot.html","text":"misk-core / misk.clustering / Cluster / Changes / snapshot snapshot \u00b6 val snapshot: Cluster.Snapshot","title":"snapshot - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-changes/snapshot.html#snapshot","text":"val snapshot: Cluster.Snapshot","title":"snapshot"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/index.html","text":"misk-core / misk.clustering / Cluster / Member Member \u00b6 data class Member Constructors \u00b6 Name Summary <init> Member(name: String , ipAddress: String ) Properties \u00b6 Name Summary ipAddress val ipAddress: String name val name: String","title":"Member - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/index.html#member","text":"data class Member","title":"Member"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/index.html#constructors","text":"Name Summary <init> Member(name: String , ipAddress: String )","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/index.html#properties","text":"Name Summary ipAddress val ipAddress: String name val name: String","title":"Properties"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/-init-.html","text":"misk-core / misk.clustering / Cluster / Member / <init> <init> \u00b6 Member(name: String , ipAddress: String )","title":" init "},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/-init-.html#init","text":"Member(name: String , ipAddress: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/ip-address.html","text":"misk-core / misk.clustering / Cluster / Member / ipAddress ipAddress \u00b6 val ipAddress: String","title":"ipAddress - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/ip-address.html#ipaddress","text":"val ipAddress: String","title":"ipAddress"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/name.html","text":"misk-core / misk.clustering / Cluster / Member / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-member/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/index.html","text":"misk-core / misk.clustering / Cluster / Snapshot Snapshot \u00b6 data class Snapshot Snapshot is a consistent moment-in-time view of the cluster state Constructors \u00b6 Name Summary <init> Snapshot(self: Cluster.Member , readyMembers: Set < Cluster.Member >, selfReady: Boolean = readyMembers.any { it.name == self.name }, resourceMapper: ClusterResourceMapper ) Snapshot is a consistent moment-in-time view of the cluster state Properties \u00b6 Name Summary readyMembers val readyMembers: Set < Cluster.Member > All of the members of the cluster that are up and reporting as ready to handle traffic readyPeers val readyPeers: Set < Cluster.Member > The of the ready peers; basically all of the ready cluster members except sel resourceMapper val resourceMapper: ClusterResourceMapper A ClusterResourceMapper built from the ready members of this cluster self val self: Cluster.Member The member representing this instance of the service selfReady val selfReady: Boolean true if the current service instance is ready as perceived by the cluster manager","title":"Snapshot - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/index.html#snapshot","text":"data class Snapshot Snapshot is a consistent moment-in-time view of the cluster state","title":"Snapshot"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/index.html#constructors","text":"Name Summary <init> Snapshot(self: Cluster.Member , readyMembers: Set < Cluster.Member >, selfReady: Boolean = readyMembers.any { it.name == self.name }, resourceMapper: ClusterResourceMapper ) Snapshot is a consistent moment-in-time view of the cluster state","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/index.html#properties","text":"Name Summary readyMembers val readyMembers: Set < Cluster.Member > All of the members of the cluster that are up and reporting as ready to handle traffic readyPeers val readyPeers: Set < Cluster.Member > The of the ready peers; basically all of the ready cluster members except sel resourceMapper val resourceMapper: ClusterResourceMapper A ClusterResourceMapper built from the ready members of this cluster self val self: Cluster.Member The member representing this instance of the service selfReady val selfReady: Boolean true if the current service instance is ready as perceived by the cluster manager","title":"Properties"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/-init-.html","text":"misk-core / misk.clustering / Cluster / Snapshot / <init> <init> \u00b6 Snapshot(self: Cluster.Member , readyMembers: Set < Cluster.Member >, selfReady: Boolean = readyMembers.any { it.name == self.name }, resourceMapper: ClusterResourceMapper ) Snapshot is a consistent moment-in-time view of the cluster state","title":" init "},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/-init-.html#init","text":"Snapshot(self: Cluster.Member , readyMembers: Set < Cluster.Member >, selfReady: Boolean = readyMembers.any { it.name == self.name }, resourceMapper: ClusterResourceMapper ) Snapshot is a consistent moment-in-time view of the cluster state","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/ready-members.html","text":"misk-core / misk.clustering / Cluster / Snapshot / readyMembers readyMembers \u00b6 val readyMembers: Set < Cluster.Member > All of the members of the cluster that are up and reporting as ready to handle traffic","title":"readyMembers - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/ready-members.html#readymembers","text":"val readyMembers: Set < Cluster.Member > All of the members of the cluster that are up and reporting as ready to handle traffic","title":"readyMembers"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/ready-peers.html","text":"misk-core / misk.clustering / Cluster / Snapshot / readyPeers readyPeers \u00b6 val readyPeers: Set < Cluster.Member > The of the ready peers; basically all of the ready cluster members except sel","title":"readyPeers - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/ready-peers.html#readypeers","text":"val readyPeers: Set < Cluster.Member > The of the ready peers; basically all of the ready cluster members except sel","title":"readyPeers"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/resource-mapper.html","text":"misk-core / misk.clustering / Cluster / Snapshot / resourceMapper resourceMapper \u00b6 val resourceMapper: ClusterResourceMapper A ClusterResourceMapper built from the ready members of this cluster","title":"resourceMapper - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/resource-mapper.html#resourcemapper","text":"val resourceMapper: ClusterResourceMapper A ClusterResourceMapper built from the ready members of this cluster","title":"resourceMapper"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/self-ready.html","text":"misk-core / misk.clustering / Cluster / Snapshot / selfReady selfReady \u00b6 val selfReady: Boolean true if the current service instance is ready as perceived by the cluster manager","title":"selfReady - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/self-ready.html#selfready","text":"val selfReady: Boolean true if the current service instance is ready as perceived by the cluster manager","title":"selfReady"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/self.html","text":"misk-core / misk.clustering / Cluster / Snapshot / self self \u00b6 val self: Cluster.Member The member representing this instance of the service","title":"self - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster/-snapshot/self.html#self","text":"val self: Cluster.Member The member representing this instance of the service","title":"self"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/index.html","text":"misk-core / misk.clustering / ClusterHashRing ClusterHashRing \u00b6 class ClusterHashRing : ClusterResourceMapper A ClusterHashRing maps resources to cluster members based on a consistent hash Constructors \u00b6 Name Summary <init> ClusterHashRing(members: Collection < Cluster.Member >, hashFn: HashFunction = Hashing.murmur3_32(), vnodesCount: Int = 16) A ClusterHashRing maps resources to cluster members based on a consistent hash Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean get fun get(resourceId: String ): Cluster.Member hashCode fun hashCode(): Int","title":"ClusterHashRing - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/index.html#clusterhashring","text":"class ClusterHashRing : ClusterResourceMapper A ClusterHashRing maps resources to cluster members based on a consistent hash","title":"ClusterHashRing"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/index.html#constructors","text":"Name Summary <init> ClusterHashRing(members: Collection < Cluster.Member >, hashFn: HashFunction = Hashing.murmur3_32(), vnodesCount: Int = 16) A ClusterHashRing maps resources to cluster members based on a consistent hash","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean get fun get(resourceId: String ): Cluster.Member hashCode fun hashCode(): Int","title":"Functions"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/-init-.html","text":"misk-core / misk.clustering / ClusterHashRing / <init> <init> \u00b6 ClusterHashRing(members: Collection < Cluster.Member >, hashFn: HashFunction = Hashing.murmur3_32(), vnodesCount: Int = 16) A ClusterHashRing maps resources to cluster members based on a consistent hash","title":" init "},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/-init-.html#init","text":"ClusterHashRing(members: Collection < Cluster.Member >, hashFn: HashFunction = Hashing.murmur3_32(), vnodesCount: Int = 16) A ClusterHashRing maps resources to cluster members based on a consistent hash","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/equals.html","text":"misk-core / misk.clustering / ClusterHashRing / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/get.html","text":"misk-core / misk.clustering / ClusterHashRing / get get \u00b6 fun get(resourceId: String ): Cluster.Member Overrides ClusterResourceMapper.get Return The Cluster.Member that should own the given resource id","title":"get - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/get.html#get","text":"fun get(resourceId: String ): Cluster.Member Overrides ClusterResourceMapper.get Return The Cluster.Member that should own the given resource id","title":"get"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/hash-code.html","text":"misk-core / misk.clustering / ClusterHashRing / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-hash-ring/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-core/misk.clustering/-cluster-resource-mapper/index.html","text":"misk-core / misk.clustering / ClusterResourceMapper ClusterResourceMapper \u00b6 interface ClusterResourceMapper A ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Cluster s can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake) Functions \u00b6 Name Summary get abstract operator fun get(resourceId: String ): Cluster.Member Inheritors \u00b6 Name Summary ClusterHashRing class ClusterHashRing : ClusterResourceMapper A ClusterHashRing maps resources to cluster members based on a consistent hash ExplicitClusterResourceMapper class ExplicitClusterResourceMapper : ClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed.","title":"ClusterResourceMapper - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-resource-mapper/index.html#clusterresourcemapper","text":"interface ClusterResourceMapper A ClusterResourceMapper maps string based resource IDs onto members of a cluster for the purposes of resource ownership. The default ClusterResourceMapper is a ClusterHashRing which performs a consistent hash across the cluster member, but Cluster s can supply their own mappings if there is a mechanism specific to that cluster (or to supply a fake)","title":"ClusterResourceMapper"},{"location":"0.x/misk-core/misk.clustering/-cluster-resource-mapper/index.html#functions","text":"Name Summary get abstract operator fun get(resourceId: String ): Cluster.Member","title":"Functions"},{"location":"0.x/misk-core/misk.clustering/-cluster-resource-mapper/index.html#inheritors","text":"Name Summary ClusterHashRing class ClusterHashRing : ClusterResourceMapper A ClusterHashRing maps resources to cluster members based on a consistent hash ExplicitClusterResourceMapper class ExplicitClusterResourceMapper : ClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed.","title":"Inheritors"},{"location":"0.x/misk-core/misk.clustering/-cluster-resource-mapper/get.html","text":"misk-core / misk.clustering / ClusterResourceMapper / get get \u00b6 abstract operator fun get(resourceId: String ): Cluster.Member Exceptions \u00b6 NoMembersAvailableException - if there are no members in the cluster Return The Cluster.Member that should own the given resource id","title":"get - Misk"},{"location":"0.x/misk-core/misk.clustering/-cluster-resource-mapper/get.html#get","text":"abstract operator fun get(resourceId: String ): Cluster.Member","title":"get"},{"location":"0.x/misk-core/misk.clustering/-cluster-resource-mapper/get.html#exceptions","text":"NoMembersAvailableException - if there are no members in the cluster Return The Cluster.Member that should own the given resource id","title":"Exceptions"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/index.html","text":"misk-core / misk.clustering / DefaultCluster DefaultCluster \u00b6 @Singleton class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. Constructors \u00b6 Name Summary <init> DefaultCluster(self: Cluster.Member , newResourceMapperFn: (members: Set < Cluster.Member >) -> ClusterResourceMapper = { ClusterHashRing(it) }) A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes. Properties \u00b6 Name Summary snapshot val snapshot: Cluster.Snapshot The current moment-in-time view of the cluster state Functions \u00b6 Name Summary clusterChanged fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit Triggers a change to the cluster in response members becoming ready or not ready newResourceMapper fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper run fun run(): Unit Runs the internal event loop that handles requests to add watches or cluster changes. We use a single threaded event loop to ensure that watches get consistent diffs for the cluster without being racy or requiring locks that span application code (which might result in deadlocks). When a watch is registered, it is provided with the cluster membership as it is known at that time, and then receives diffs as they arrive. startUp fun startUp(): Unit syncPoint fun syncPoint(callback: () -> Unit ): Unit Triggers a callback once all of the actions on the queue have been processed. Useful for writing deterministic tests triggerShutdown fun triggerShutdown(): Unit watch fun watch(watch: ClusterWatch ): Unit Adds a new cluster watch Companion Object Properties \u00b6 Name Summary log val log: KLogger","title":"DefaultCluster - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/index.html#defaultcluster","text":"@Singleton class DefaultCluster : AbstractExecutionThreadService, Cluster , ClusterService A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes.","title":"DefaultCluster"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/index.html#constructors","text":"Name Summary <init> DefaultCluster(self: Cluster.Member , newResourceMapperFn: (members: Set < Cluster.Member >) -> ClusterResourceMapper = { ClusterHashRing(it) }) A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes.","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/index.html#properties","text":"Name Summary snapshot val snapshot: Cluster.Snapshot The current moment-in-time view of the cluster state","title":"Properties"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/index.html#functions","text":"Name Summary clusterChanged fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit Triggers a change to the cluster in response members becoming ready or not ready newResourceMapper fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper run fun run(): Unit Runs the internal event loop that handles requests to add watches or cluster changes. We use a single threaded event loop to ensure that watches get consistent diffs for the cluster without being racy or requiring locks that span application code (which might result in deadlocks). When a watch is registered, it is provided with the cluster membership as it is known at that time, and then receives diffs as they arrive. startUp fun startUp(): Unit syncPoint fun syncPoint(callback: () -> Unit ): Unit Triggers a callback once all of the actions on the queue have been processed. Useful for writing deterministic tests triggerShutdown fun triggerShutdown(): Unit watch fun watch(watch: ClusterWatch ): Unit Adds a new cluster watch","title":"Functions"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/index.html#companion-object-properties","text":"Name Summary log val log: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/-init-.html","text":"misk-core / misk.clustering / DefaultCluster / <init> <init> \u00b6 DefaultCluster(self: Cluster.Member , newResourceMapperFn: (members: Set < Cluster.Member >) -> ClusterResourceMapper = { ClusterHashRing(it) }) A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes.","title":" init "},{"location":"0.x/misk-core/misk.clustering/-default-cluster/-init-.html#init","text":"DefaultCluster(self: Cluster.Member , newResourceMapperFn: (members: Set < Cluster.Member >) -> ClusterResourceMapper = { ClusterHashRing(it) }) A DefaultCluster is the default implementation of the Cluster , which relies on an outside source such as a cluster watcher to inform it as members become ready or not ready. The DefaultCluster handles computing the actual cluster changes, and managing application watches that need to be triggered as the cluster changes.","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/cluster-changed.html","text":"misk-core / misk.clustering / DefaultCluster / clusterChanged clusterChanged \u00b6 fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit Triggers a change to the cluster in response members becoming ready or not ready","title":"clusterChanged - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/cluster-changed.html#clusterchanged","text":"fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit Triggers a change to the cluster in response members becoming ready or not ready","title":"clusterChanged"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/log.html","text":"misk-core / misk.clustering / DefaultCluster / log log \u00b6 val log: KLogger","title":"log - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/log.html#log","text":"val log: KLogger","title":"log"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/new-resource-mapper.html","text":"misk-core / misk.clustering / DefaultCluster / newResourceMapper newResourceMapper \u00b6 fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper Overrides Cluster.newResourceMapper Return A new ClusterResourceMapper for the given set of ready members","title":"newResourceMapper - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/new-resource-mapper.html#newresourcemapper","text":"fun newResourceMapper(readyMembers: Set < Cluster.Member >): ClusterResourceMapper Overrides Cluster.newResourceMapper Return A new ClusterResourceMapper for the given set of ready members","title":"newResourceMapper"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/run.html","text":"misk-core / misk.clustering / DefaultCluster / run run \u00b6 protected fun run(): Unit Runs the internal event loop that handles requests to add watches or cluster changes. We use a single threaded event loop to ensure that watches get consistent diffs for the cluster without being racy or requiring locks that span application code (which might result in deadlocks). When a watch is registered, it is provided with the cluster membership as it is known at that time, and then receives diffs as they arrive.","title":"run - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/run.html#run","text":"protected fun run(): Unit Runs the internal event loop that handles requests to add watches or cluster changes. We use a single threaded event loop to ensure that watches get consistent diffs for the cluster without being racy or requiring locks that span application code (which might result in deadlocks). When a watch is registered, it is provided with the cluster membership as it is known at that time, and then receives diffs as they arrive.","title":"run"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/snapshot.html","text":"misk-core / misk.clustering / DefaultCluster / snapshot snapshot \u00b6 val snapshot: Cluster.Snapshot Overrides Cluster.snapshot The current moment-in-time view of the cluster state","title":"snapshot - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/snapshot.html#snapshot","text":"val snapshot: Cluster.Snapshot Overrides Cluster.snapshot The current moment-in-time view of the cluster state","title":"snapshot"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/start-up.html","text":"misk-core / misk.clustering / DefaultCluster / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/sync-point.html","text":"misk-core / misk.clustering / DefaultCluster / syncPoint syncPoint \u00b6 fun syncPoint(callback: () -> Unit ): Unit Triggers a callback once all of the actions on the queue have been processed. Useful for writing deterministic tests","title":"syncPoint - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/sync-point.html#syncpoint","text":"fun syncPoint(callback: () -> Unit ): Unit Triggers a callback once all of the actions on the queue have been processed. Useful for writing deterministic tests","title":"syncPoint"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/trigger-shutdown.html","text":"misk-core / misk.clustering / DefaultCluster / triggerShutdown triggerShutdown \u00b6 protected fun triggerShutdown(): Unit","title":"triggerShutdown - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/trigger-shutdown.html#triggershutdown","text":"protected fun triggerShutdown(): Unit","title":"triggerShutdown"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/watch.html","text":"misk-core / misk.clustering / DefaultCluster / watch watch \u00b6 fun watch(watch: ClusterWatch ): Unit Overrides Cluster.watch Adds a new cluster watch","title":"watch - Misk"},{"location":"0.x/misk-core/misk.clustering/-default-cluster/watch.html#watch","text":"fun watch(watch: ClusterWatch ): Unit Overrides Cluster.watch Adds a new cluster watch","title":"watch"},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/index.html","text":"misk-core / misk.clustering / NoMembersAvailableException NoMembersAvailableException \u00b6 class NoMembersAvailableException : Exception Thrown if the cluster does not have any members available. Constructors \u00b6 Name Summary <init> NoMembersAvailableException(resourceId: String ) Thrown if the cluster does not have any members available. Properties \u00b6 Name Summary resourceId val resourceId: String","title":"NoMembersAvailableException - Misk"},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/index.html#nomembersavailableexception","text":"class NoMembersAvailableException : Exception Thrown if the cluster does not have any members available.","title":"NoMembersAvailableException"},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/index.html#constructors","text":"Name Summary <init> NoMembersAvailableException(resourceId: String ) Thrown if the cluster does not have any members available.","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/index.html#properties","text":"Name Summary resourceId val resourceId: String","title":"Properties"},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/-init-.html","text":"misk-core / misk.clustering / NoMembersAvailableException / <init> <init> \u00b6 NoMembersAvailableException(resourceId: String ) Thrown if the cluster does not have any members available.","title":" init "},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/-init-.html#init","text":"NoMembersAvailableException(resourceId: String ) Thrown if the cluster does not have any members available.","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/resource-id.html","text":"misk-core / misk.clustering / NoMembersAvailableException / resourceId resourceId \u00b6 val resourceId: String","title":"resourceId - Misk"},{"location":"0.x/misk-core/misk.clustering/-no-members-available-exception/resource-id.html#resourceid","text":"val resourceId: String","title":"resourceId"},{"location":"0.x/misk-core/misk.clustering.fake/index.html","text":"misk-core / misk.clustering.fake Package misk.clustering.fake \u00b6 Types \u00b6 Name Summary ExplicitClusterResourceMapper class ExplicitClusterResourceMapper : ClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed. FakeCluster class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes. FakeClusterModule class FakeClusterModule : KAbstractModule FakeClusterModule installs fake implementations of the clustering primitives for use in tests","title":"Package misk.clustering.fake - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/index.html#package-miskclusteringfake","text":"","title":"Package misk.clustering.fake"},{"location":"0.x/misk-core/misk.clustering.fake/index.html#types","text":"Name Summary ExplicitClusterResourceMapper class ExplicitClusterResourceMapper : ClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed. FakeCluster class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes. FakeClusterModule class FakeClusterModule : KAbstractModule FakeClusterModule installs fake implementations of the clustering primitives for use in tests","title":"Types"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/index.html","text":"misk-core / misk.clustering.fake / ExplicitClusterResourceMapper ExplicitClusterResourceMapper \u00b6 class ExplicitClusterResourceMapper : ClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed. Constructors \u00b6 Name Summary <init> ExplicitClusterResourceMapper() An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed. Functions \u00b6 Name Summary addMapping fun addMapping(resourceId: String , member: Cluster.Member ): Unit clearDefaultMapping fun clearDefaultMapping(): Unit get fun get(resourceId: String ): Cluster.Member removeMapping fun removeMapping(resourceId: String ): Unit setDefaultMapping fun setDefaultMapping(member: Cluster.Member ): Unit","title":"ExplicitClusterResourceMapper - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/index.html#explicitclusterresourcemapper","text":"class ExplicitClusterResourceMapper : ClusterResourceMapper An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed.","title":"ExplicitClusterResourceMapper"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/index.html#constructors","text":"Name Summary <init> ExplicitClusterResourceMapper() An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed.","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/index.html#functions","text":"Name Summary addMapping fun addMapping(resourceId: String , member: Cluster.Member ): Unit clearDefaultMapping fun clearDefaultMapping(): Unit get fun get(resourceId: String ): Cluster.Member removeMapping fun removeMapping(resourceId: String ): Unit setDefaultMapping fun setDefaultMapping(member: Cluster.Member ): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/-init-.html","text":"misk-core / misk.clustering.fake / ExplicitClusterResourceMapper / <init> <init> \u00b6 ExplicitClusterResourceMapper() An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed.","title":" init "},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/-init-.html#init","text":"ExplicitClusterResourceMapper() An ExplicitClusterResourceMapper is a ClusterResourceMapper where the mapping is explicit managed.","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/add-mapping.html","text":"misk-core / misk.clustering.fake / ExplicitClusterResourceMapper / addMapping addMapping \u00b6 fun addMapping(resourceId: String , member: Cluster.Member ): Unit","title":"addMapping - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/add-mapping.html#addmapping","text":"fun addMapping(resourceId: String , member: Cluster.Member ): Unit","title":"addMapping"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/clear-default-mapping.html","text":"misk-core / misk.clustering.fake / ExplicitClusterResourceMapper / clearDefaultMapping clearDefaultMapping \u00b6 fun clearDefaultMapping(): Unit","title":"clearDefaultMapping - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/clear-default-mapping.html#cleardefaultmapping","text":"fun clearDefaultMapping(): Unit","title":"clearDefaultMapping"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/get.html","text":"misk-core / misk.clustering.fake / ExplicitClusterResourceMapper / get get \u00b6 fun get(resourceId: String ): Cluster.Member Overrides ClusterResourceMapper.get Exceptions \u00b6 NoMembersAvailableException - if there are no members in the cluster Return The Cluster.Member that should own the given resource id","title":"get - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/get.html#get","text":"fun get(resourceId: String ): Cluster.Member Overrides ClusterResourceMapper.get","title":"get"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/get.html#exceptions","text":"NoMembersAvailableException - if there are no members in the cluster Return The Cluster.Member that should own the given resource id","title":"Exceptions"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/remove-mapping.html","text":"misk-core / misk.clustering.fake / ExplicitClusterResourceMapper / removeMapping removeMapping \u00b6 fun removeMapping(resourceId: String ): Unit","title":"removeMapping - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/remove-mapping.html#removemapping","text":"fun removeMapping(resourceId: String ): Unit","title":"removeMapping"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/set-default-mapping.html","text":"misk-core / misk.clustering.fake / ExplicitClusterResourceMapper / setDefaultMapping setDefaultMapping \u00b6 fun setDefaultMapping(member: Cluster.Member ): Unit","title":"setDefaultMapping - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-explicit-cluster-resource-mapper/set-default-mapping.html#setdefaultmapping","text":"fun setDefaultMapping(member: Cluster.Member ): Unit","title":"setDefaultMapping"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/index.html","text":"misk-core / misk.clustering.fake / FakeCluster FakeCluster \u00b6 @Singleton class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes. NB(mmihic): I\u2019d prefer for this to be in the misk-testing module, but it can\u2019t since it relies on DefaultCluster and we want to leave DefaultCluster internal Constructors \u00b6 Name Summary <init> FakeCluster(resourceMapper: ExplicitClusterResourceMapper ) FakeCluster() Properties \u00b6 Name Summary resourceMapper val resourceMapper: ExplicitClusterResourceMapper Functions \u00b6 Name Summary clusterChanged fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit watch fun watch(watch: ClusterWatch ): Unit Registers interest in cluster changes Companion Object Properties \u00b6 Name Summary self val self: Cluster.Member SELF_IP const val SELF_IP: String SELF_NAME const val SELF_NAME: String","title":"FakeCluster - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/index.html#fakecluster","text":"@Singleton class FakeCluster : ClusterService , Cluster A FakeCluster is a Cluster that is a fake. It delegates entirely to DefaultCluster , but allows us to keep DefaultCluster internal and make it clear that FakeCluster is only intended to be used for fakes. NB(mmihic): I\u2019d prefer for this to be in the misk-testing module, but it can\u2019t since it relies on DefaultCluster and we want to leave DefaultCluster internal","title":"FakeCluster"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/index.html#constructors","text":"Name Summary <init> FakeCluster(resourceMapper: ExplicitClusterResourceMapper ) FakeCluster()","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/index.html#properties","text":"Name Summary resourceMapper val resourceMapper: ExplicitClusterResourceMapper","title":"Properties"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/index.html#functions","text":"Name Summary clusterChanged fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit watch fun watch(watch: ClusterWatch ): Unit Registers interest in cluster changes","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/index.html#companion-object-properties","text":"Name Summary self val self: Cluster.Member SELF_IP const val SELF_IP: String SELF_NAME const val SELF_NAME: String","title":"Companion Object Properties"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/-init-.html","text":"misk-core / misk.clustering.fake / FakeCluster / <init> <init> \u00b6 FakeCluster(resourceMapper: ExplicitClusterResourceMapper ) FakeCluster()","title":" init "},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/-init-.html#init","text":"FakeCluster(resourceMapper: ExplicitClusterResourceMapper ) FakeCluster()","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/-s-e-l-f_-i-p.html","text":"misk-core / misk.clustering.fake / FakeCluster / SELF_IP SELF_IP \u00b6 const val SELF_IP: String","title":"SELF_IP - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/-s-e-l-f_-i-p.html#self_ip","text":"const val SELF_IP: String","title":"SELF_IP"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/-s-e-l-f_-n-a-m-e.html","text":"misk-core / misk.clustering.fake / FakeCluster / SELF_NAME SELF_NAME \u00b6 const val SELF_NAME: String","title":"SELF_NAME - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/-s-e-l-f_-n-a-m-e.html#self_name","text":"const val SELF_NAME: String","title":"SELF_NAME"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/cluster-changed.html","text":"misk-core / misk.clustering.fake / FakeCluster / clusterChanged clusterChanged \u00b6 fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit","title":"clusterChanged - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/cluster-changed.html#clusterchanged","text":"fun clusterChanged(membersBecomingReady: Set < Cluster.Member > = setOf(), membersBecomingNotReady: Set < Cluster.Member > = setOf()): Unit","title":"clusterChanged"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/resource-mapper.html","text":"misk-core / misk.clustering.fake / FakeCluster / resourceMapper resourceMapper \u00b6 val resourceMapper: ExplicitClusterResourceMapper","title":"resourceMapper - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/resource-mapper.html#resourcemapper","text":"val resourceMapper: ExplicitClusterResourceMapper","title":"resourceMapper"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/self.html","text":"misk-core / misk.clustering.fake / FakeCluster / self self \u00b6 @JvmStatic val self: Cluster.Member","title":"self - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/self.html#self","text":"@JvmStatic val self: Cluster.Member","title":"self"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/watch.html","text":"misk-core / misk.clustering.fake / FakeCluster / watch watch \u00b6 fun watch(watch: ClusterWatch ): Unit Overrides Cluster.watch Registers interest in cluster changes","title":"watch - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster/watch.html#watch","text":"fun watch(watch: ClusterWatch ): Unit Overrides Cluster.watch Registers interest in cluster changes","title":"watch"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/index.html","text":"misk-core / misk.clustering.fake / FakeClusterModule FakeClusterModule \u00b6 class FakeClusterModule : KAbstractModule FakeClusterModule installs fake implementations of the clustering primitives for use in tests Constructors \u00b6 Name Summary <init> FakeClusterModule() FakeClusterModule installs fake implementations of the clustering primitives for use in tests Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeClusterModule - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/index.html#fakeclustermodule","text":"class FakeClusterModule : KAbstractModule FakeClusterModule installs fake implementations of the clustering primitives for use in tests","title":"FakeClusterModule"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/index.html#constructors","text":"Name Summary <init> FakeClusterModule() FakeClusterModule installs fake implementations of the clustering primitives for use in tests","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/-init-.html","text":"misk-core / misk.clustering.fake / FakeClusterModule / <init> <init> \u00b6 FakeClusterModule() FakeClusterModule installs fake implementations of the clustering primitives for use in tests","title":" init "},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/-init-.html#init","text":"FakeClusterModule() FakeClusterModule installs fake implementations of the clustering primitives for use in tests","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/configure.html","text":"misk-core / misk.clustering.fake / FakeClusterModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-core/misk.clustering.fake/-fake-cluster-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-core/misk.clustering.fake.lease/index.html","text":"misk-core / misk.clustering.fake.lease Package misk.clustering.fake.lease \u00b6 Types \u00b6 Name Summary FakeLeaseManager class FakeLeaseManager : LeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired FakeLeaseModule class FakeLeaseModule : KAbstractModule FakeLeaseModule installs support for leasing using fakes","title":"Package misk.clustering.fake.lease - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/index.html#package-miskclusteringfakelease","text":"","title":"Package misk.clustering.fake.lease"},{"location":"0.x/misk-core/misk.clustering.fake.lease/index.html#types","text":"Name Summary FakeLeaseManager class FakeLeaseManager : LeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired FakeLeaseModule class FakeLeaseModule : KAbstractModule FakeLeaseModule installs support for leasing using fakes","title":"Types"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/index.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseManager FakeLeaseManager \u00b6 @Singleton class FakeLeaseManager : LeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired Constructors \u00b6 Name Summary <init> FakeLeaseManager() A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired Functions \u00b6 Name Summary isLeaseHeld fun isLeaseHeld(name: String ): Boolean markLeaseHeld fun markLeaseHeld(name: String ): Unit markLeaseHeldElsewhere fun markLeaseHeldElsewhere(name: String ): Unit requestLease fun requestLease(name: String ): Lease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system","title":"FakeLeaseManager - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/index.html#fakeleasemanager","text":"@Singleton class FakeLeaseManager : LeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired","title":"FakeLeaseManager"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/index.html#constructors","text":"Name Summary <init> FakeLeaseManager() A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/index.html#functions","text":"Name Summary isLeaseHeld fun isLeaseHeld(name: String ): Boolean markLeaseHeld fun markLeaseHeld(name: String ): Unit markLeaseHeldElsewhere fun markLeaseHeldElsewhere(name: String ): Unit requestLease fun requestLease(name: String ): Lease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/-init-.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseManager / <init> <init> \u00b6 FakeLeaseManager() A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired","title":" init "},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/-init-.html#init","text":"FakeLeaseManager() A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/is-lease-held.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseManager / isLeaseHeld isLeaseHeld \u00b6 fun isLeaseHeld(name: String ): Boolean","title":"isLeaseHeld - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/is-lease-held.html#isleaseheld","text":"fun isLeaseHeld(name: String ): Boolean","title":"isLeaseHeld"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/mark-lease-held-elsewhere.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseManager / markLeaseHeldElsewhere markLeaseHeldElsewhere \u00b6 fun markLeaseHeldElsewhere(name: String ): Unit","title":"markLeaseHeldElsewhere - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/mark-lease-held-elsewhere.html#markleaseheldelsewhere","text":"fun markLeaseHeldElsewhere(name: String ): Unit","title":"markLeaseHeldElsewhere"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/mark-lease-held.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseManager / markLeaseHeld markLeaseHeld \u00b6 fun markLeaseHeld(name: String ): Unit","title":"markLeaseHeld - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/mark-lease-held.html#markleaseheld","text":"fun markLeaseHeld(name: String ): Unit","title":"markLeaseHeld"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/request-lease.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseManager / requestLease requestLease \u00b6 fun requestLease(name: String ): Lease Overrides LeaseManager.requestLease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system","title":"requestLease - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-manager/request-lease.html#requestlease","text":"fun requestLease(name: String ): Lease Overrides LeaseManager.requestLease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system","title":"requestLease"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/index.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseModule FakeLeaseModule \u00b6 class FakeLeaseModule : KAbstractModule FakeLeaseModule installs support for leasing using fakes Constructors \u00b6 Name Summary <init> FakeLeaseModule() FakeLeaseModule installs support for leasing using fakes Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeLeaseModule - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/index.html#fakeleasemodule","text":"class FakeLeaseModule : KAbstractModule FakeLeaseModule installs support for leasing using fakes","title":"FakeLeaseModule"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/index.html#constructors","text":"Name Summary <init> FakeLeaseModule() FakeLeaseModule installs support for leasing using fakes","title":"Constructors"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/-init-.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseModule / <init> <init> \u00b6 FakeLeaseModule() FakeLeaseModule installs support for leasing using fakes","title":" init "},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/-init-.html#init","text":"FakeLeaseModule() FakeLeaseModule installs support for leasing using fakes","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/configure.html","text":"misk-core / misk.clustering.fake.lease / FakeLeaseModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-core/misk.clustering.fake.lease/-fake-lease-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-core/misk.clustering.lease/index.html","text":"misk-core / misk.clustering.lease Package misk.clustering.lease \u00b6 Types \u00b6 Name Summary Lease interface Lease A Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease . A ready service instance will automatically attempt to acquire leases that it thinks it should own (typically based on the resource being leased consistently hashing to the service instance), and will continue to maintain the lease for as long as it is still ready. Leases should be released if the service transitions into not ready; to avoid flapping, service lease owners may want to delay releasing leases until they\u2019ve been not ready for a particular amount of time. LeaseManager interface LeaseManager","title":"Package misk.clustering.lease - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/index.html#package-miskclusteringlease","text":"","title":"Package misk.clustering.lease"},{"location":"0.x/misk-core/misk.clustering.lease/index.html#types","text":"Name Summary Lease interface Lease A Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease . A ready service instance will automatically attempt to acquire leases that it thinks it should own (typically based on the resource being leased consistently hashing to the service instance), and will continue to maintain the lease for as long as it is still ready. Leases should be released if the service transitions into not ready; to avoid flapping, service lease owners may want to delay releasing leases until they\u2019ve been not ready for a particular amount of time. LeaseManager interface LeaseManager","title":"Types"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/index.html","text":"misk-core / misk.clustering.lease / Lease Lease \u00b6 interface Lease A Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease . A ready service instance will automatically attempt to acquire leases that it thinks it should own (typically based on the resource being leased consistently hashing to the service instance), and will continue to maintain the lease for as long as it is still ready. Leases should be released if the service transitions into not ready; to avoid flapping, service lease owners may want to delay releasing leases until they\u2019ve been not ready for a particular amount of time. Types \u00b6 Name Summary StateChangeListener interface StateChangeListener Properties \u00b6 Name Summary name abstract val name: String Functions \u00b6 Name Summary addListener abstract fun addListener(listener: Lease.StateChangeListener ): Unit Registers a listener that is called on lease state changes. checkHeld abstract fun checkHeld(): Boolean","title":"Lease - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/index.html#lease","text":"interface Lease A Lease is a cluster-wide time-based lock on a given resource. Leases are retrieved via LeaseManager.requestLease . A ready service instance will automatically attempt to acquire leases that it thinks it should own (typically based on the resource being leased consistently hashing to the service instance), and will continue to maintain the lease for as long as it is still ready. Leases should be released if the service transitions into not ready; to avoid flapping, service lease owners may want to delay releasing leases until they\u2019ve been not ready for a particular amount of time.","title":"Lease"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/index.html#types","text":"Name Summary StateChangeListener interface StateChangeListener","title":"Types"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/index.html#properties","text":"Name Summary name abstract val name: String","title":"Properties"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/index.html#functions","text":"Name Summary addListener abstract fun addListener(listener: Lease.StateChangeListener ): Unit Registers a listener that is called on lease state changes. checkHeld abstract fun checkHeld(): Boolean","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/add-listener.html","text":"misk-core / misk.clustering.lease / Lease / addListener addListener \u00b6 abstract fun addListener(listener: Lease.StateChangeListener ): Unit Registers a listener that is called on lease state changes.","title":"addListener - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/add-listener.html#addlistener","text":"abstract fun addListener(listener: Lease.StateChangeListener ): Unit Registers a listener that is called on lease state changes.","title":"addListener"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/check-held.html","text":"misk-core / misk.clustering.lease / Lease / checkHeld checkHeld \u00b6 abstract fun checkHeld(): Boolean Return true if the lease is owned by this process instance. This may involve remote calls, so it is marked as a function rather than a property to make the potential expense clearer","title":"checkHeld - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/check-held.html#checkheld","text":"abstract fun checkHeld(): Boolean Return true if the lease is owned by this process instance. This may involve remote calls, so it is marked as a function rather than a property to make the potential expense clearer","title":"checkHeld"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/name.html","text":"misk-core / misk.clustering.lease / Lease / name name \u00b6 abstract val name: String","title":"name - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/name.html#name","text":"abstract val name: String","title":"name"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/index.html","text":"misk-core / misk.clustering.lease / Lease / StateChangeListener StateChangeListener \u00b6 interface StateChangeListener Functions \u00b6 Name Summary afterAcquire abstract fun afterAcquire(lease: Lease ): Unit Called immediately after the lease is acquired. Also called immediately if the lease is already owned by this process instance when the listener is registered. beforeRelease abstract fun beforeRelease(lease: Lease ): Unit Called immediately before the lease is released.","title":"StateChangeListener - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/index.html#statechangelistener","text":"interface StateChangeListener","title":"StateChangeListener"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/index.html#functions","text":"Name Summary afterAcquire abstract fun afterAcquire(lease: Lease ): Unit Called immediately after the lease is acquired. Also called immediately if the lease is already owned by this process instance when the listener is registered. beforeRelease abstract fun beforeRelease(lease: Lease ): Unit Called immediately before the lease is released.","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/after-acquire.html","text":"misk-core / misk.clustering.lease / Lease / StateChangeListener / afterAcquire afterAcquire \u00b6 abstract fun afterAcquire(lease: Lease ): Unit Called immediately after the lease is acquired. Also called immediately if the lease is already owned by this process instance when the listener is registered. Parameters \u00b6 lease - the lease that is acquired","title":"afterAcquire - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/after-acquire.html#afteracquire","text":"abstract fun afterAcquire(lease: Lease ): Unit Called immediately after the lease is acquired. Also called immediately if the lease is already owned by this process instance when the listener is registered.","title":"afterAcquire"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/after-acquire.html#parameters","text":"lease - the lease that is acquired","title":"Parameters"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/before-release.html","text":"misk-core / misk.clustering.lease / Lease / StateChangeListener / beforeRelease beforeRelease \u00b6 abstract fun beforeRelease(lease: Lease ): Unit Called immediately before the lease is released. Parameters \u00b6 lease - the lease that is released","title":"beforeRelease - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/before-release.html#beforerelease","text":"abstract fun beforeRelease(lease: Lease ): Unit Called immediately before the lease is released.","title":"beforeRelease"},{"location":"0.x/misk-core/misk.clustering.lease/-lease/-state-change-listener/before-release.html#parameters","text":"lease - the lease that is released","title":"Parameters"},{"location":"0.x/misk-core/misk.clustering.lease/-lease-manager/index.html","text":"misk-core / misk.clustering.lease / LeaseManager LeaseManager \u00b6 interface LeaseManager Functions \u00b6 Name Summary requestLease abstract fun requestLease(name: String ): Lease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system Inheritors \u00b6 Name Summary FakeLeaseManager class FakeLeaseManager : LeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired","title":"LeaseManager - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease-manager/index.html#leasemanager","text":"interface LeaseManager","title":"LeaseManager"},{"location":"0.x/misk-core/misk.clustering.lease/-lease-manager/index.html#functions","text":"Name Summary requestLease abstract fun requestLease(name: String ): Lease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system","title":"Functions"},{"location":"0.x/misk-core/misk.clustering.lease/-lease-manager/index.html#inheritors","text":"Name Summary FakeLeaseManager class FakeLeaseManager : LeaseManager A FakeLeaseManager provides explicit control over leases for the purposes of testing. By default a lease is considered held, but it can be explicitly marked as not held if desired","title":"Inheritors"},{"location":"0.x/misk-core/misk.clustering.lease/-lease-manager/request-lease.html","text":"misk-core / misk.clustering.lease / LeaseManager / requestLease requestLease \u00b6 abstract fun requestLease(name: String ): Lease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system","title":"requestLease - Misk"},{"location":"0.x/misk-core/misk.clustering.lease/-lease-manager/request-lease.html#requestlease","text":"abstract fun requestLease(name: String ): Lease Registers interest in the lease with the given name. Service instances should register their interest in leases as soon as they know about them; this gives the process an opportunity to notify the underlying cluster system that it is interested in the lease, or to setup other background tasks to acquire the lease if necessary. Note that registering interest in a lease doesn\u2019t necessarily mean that this service instance will attempt to acquire the lease; many clustering systems will only try to acquire leases for resources that they think they should own based on some consistent hashing system","title":"requestLease"},{"location":"0.x/misk-core/misk.concurrent/index.html","text":"misk-core / misk.concurrent Package misk.concurrent \u00b6 Types \u00b6 Name Summary ExecutorServiceFactory interface ExecutorServiceFactory Inject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes. Sleeper interface Sleeper Abstraction for Thread.sleep() that allows for testing.","title":"Package misk.concurrent - Misk"},{"location":"0.x/misk-core/misk.concurrent/index.html#package-miskconcurrent","text":"","title":"Package misk.concurrent"},{"location":"0.x/misk-core/misk.concurrent/index.html#types","text":"Name Summary ExecutorServiceFactory interface ExecutorServiceFactory Inject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes. Sleeper interface Sleeper Abstraction for Thread.sleep() that allows for testing.","title":"Types"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/index.html","text":"misk-core / misk.concurrent / ExecutorServiceFactory ExecutorServiceFactory \u00b6 interface ExecutorServiceFactory Inject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes. For all functions, nameFormat a string in the format specified by ThreadFactoryBuilder.setNameFormat , like \u201crpc-pool-%d\u201d. If the string has a single %d placeholder it will be assigned sequentially. Omit the placeholder if only one thread will be required. Functions \u00b6 Name Summary fixed abstract fun fixed(nameFormat: String , threadCount: Int ): ExecutorService Returns an executor service that uses Executors.newFixedThreadPool . scheduled abstract fun scheduled(nameFormat: String , threadCount: Int ): ScheduledExecutorService Returns an executor service that uses Executors.newScheduledThreadPool . single abstract fun single(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newSingleThreadExecutor . unbounded abstract fun unbounded(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newCachedThreadPool .","title":"ExecutorServiceFactory - Misk"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/index.html#executorservicefactory","text":"interface ExecutorServiceFactory Inject this rather than using the Executors factory class to create thread pools. Executors created with this factory will automatically be shut down when the service or test completes. For all functions, nameFormat a string in the format specified by ThreadFactoryBuilder.setNameFormat , like \u201crpc-pool-%d\u201d. If the string has a single %d placeholder it will be assigned sequentially. Omit the placeholder if only one thread will be required.","title":"ExecutorServiceFactory"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/index.html#functions","text":"Name Summary fixed abstract fun fixed(nameFormat: String , threadCount: Int ): ExecutorService Returns an executor service that uses Executors.newFixedThreadPool . scheduled abstract fun scheduled(nameFormat: String , threadCount: Int ): ScheduledExecutorService Returns an executor service that uses Executors.newScheduledThreadPool . single abstract fun single(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newSingleThreadExecutor . unbounded abstract fun unbounded(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newCachedThreadPool .","title":"Functions"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/fixed.html","text":"misk-core / misk.concurrent / ExecutorServiceFactory / fixed fixed \u00b6 abstract fun fixed(nameFormat: String , threadCount: Int ): ExecutorService Returns an executor service that uses Executors.newFixedThreadPool .","title":"fixed - Misk"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/fixed.html#fixed","text":"abstract fun fixed(nameFormat: String , threadCount: Int ): ExecutorService Returns an executor service that uses Executors.newFixedThreadPool .","title":"fixed"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/scheduled.html","text":"misk-core / misk.concurrent / ExecutorServiceFactory / scheduled scheduled \u00b6 abstract fun scheduled(nameFormat: String , threadCount: Int ): ScheduledExecutorService Returns an executor service that uses Executors.newScheduledThreadPool .","title":"scheduled - Misk"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/scheduled.html#scheduled","text":"abstract fun scheduled(nameFormat: String , threadCount: Int ): ScheduledExecutorService Returns an executor service that uses Executors.newScheduledThreadPool .","title":"scheduled"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/single.html","text":"misk-core / misk.concurrent / ExecutorServiceFactory / single single \u00b6 abstract fun single(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newSingleThreadExecutor .","title":"single - Misk"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/single.html#single","text":"abstract fun single(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newSingleThreadExecutor .","title":"single"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/unbounded.html","text":"misk-core / misk.concurrent / ExecutorServiceFactory / unbounded unbounded \u00b6 abstract fun unbounded(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newCachedThreadPool .","title":"unbounded - Misk"},{"location":"0.x/misk-core/misk.concurrent/-executor-service-factory/unbounded.html#unbounded","text":"abstract fun unbounded(nameFormat: String ): ExecutorService Returns an executor service that uses Executors.newCachedThreadPool .","title":"unbounded"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/index.html","text":"misk-core / misk.concurrent / Sleeper Sleeper \u00b6 interface Sleeper Abstraction for Thread.sleep() that allows for testing. Functions \u00b6 Name Summary sleep abstract fun sleep(duration: Duration ): Unit Companion Object Properties \u00b6 Name Summary DEFAULT val DEFAULT: Sleeper","title":"Sleeper - Misk"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/index.html#sleeper","text":"interface Sleeper Abstraction for Thread.sleep() that allows for testing.","title":"Sleeper"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/index.html#functions","text":"Name Summary sleep abstract fun sleep(duration: Duration ): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/index.html#companion-object-properties","text":"Name Summary DEFAULT val DEFAULT: Sleeper","title":"Companion Object Properties"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/-d-e-f-a-u-l-t.html","text":"misk-core / misk.concurrent / Sleeper / DEFAULT DEFAULT \u00b6 val DEFAULT: Sleeper","title":"DEFAULT - Misk"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/-d-e-f-a-u-l-t.html#default","text":"val DEFAULT: Sleeper","title":"DEFAULT"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/sleep.html","text":"misk-core / misk.concurrent / Sleeper / sleep sleep \u00b6 abstract fun sleep(duration: Duration ): Unit","title":"sleep - Misk"},{"location":"0.x/misk-core/misk.concurrent/-sleeper/sleep.html#sleep","text":"abstract fun sleep(duration: Duration ): Unit","title":"sleep"},{"location":"0.x/misk-core/misk.config/index.html","text":"misk-core / misk.config Package misk.config \u00b6 Types \u00b6 Name Summary Config interface Config : Config","title":"Package misk.config - Misk"},{"location":"0.x/misk-core/misk.config/index.html#package-miskconfig","text":"","title":"Package misk.config"},{"location":"0.x/misk-core/misk.config/index.html#types","text":"Name Summary Config interface Config : Config","title":"Types"},{"location":"0.x/misk-core/misk.config/-config.html","text":"misk-core / misk.config / Config Config \u00b6 interface Config : Config","title":"Config - Misk"},{"location":"0.x/misk-core/misk.config/-config.html#config","text":"interface Config : Config","title":"Config"},{"location":"0.x/misk-core/misk.healthchecks/index.html","text":"misk-core / misk.healthchecks Package misk.healthchecks \u00b6 Types \u00b6 Name Summary HealthCheck interface HealthCheck Allows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction , indicating that the app should not accept traffic. HealthStatus data class HealthStatus","title":"Package misk.healthchecks - Misk"},{"location":"0.x/misk-core/misk.healthchecks/index.html#package-miskhealthchecks","text":"","title":"Package misk.healthchecks"},{"location":"0.x/misk-core/misk.healthchecks/index.html#types","text":"Name Summary HealthCheck interface HealthCheck Allows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction , indicating that the app should not accept traffic. HealthStatus data class HealthStatus","title":"Types"},{"location":"0.x/misk-core/misk.healthchecks/-health-check/index.html","text":"misk-core / misk.healthchecks / HealthCheck HealthCheck \u00b6 interface HealthCheck Allows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction , indicating that the app should not accept traffic. Functions \u00b6 Name Summary status abstract fun status(): HealthStatus Computes whether a component of an application is healthy. For example, an implementing class can check database connectivity.","title":"HealthCheck - Misk"},{"location":"0.x/misk-core/misk.healthchecks/-health-check/index.html#healthcheck","text":"interface HealthCheck Allows users to define custom health checks. An app with a failing HealthCheck will fail the readiness check in ReadinessCheckAction , indicating that the app should not accept traffic.","title":"HealthCheck"},{"location":"0.x/misk-core/misk.healthchecks/-health-check/index.html#functions","text":"Name Summary status abstract fun status(): HealthStatus Computes whether a component of an application is healthy. For example, an implementing class can check database connectivity.","title":"Functions"},{"location":"0.x/misk-core/misk.healthchecks/-health-check/status.html","text":"misk-core / misk.healthchecks / HealthCheck / status status \u00b6 abstract fun status(): HealthStatus Computes whether a component of an application is healthy. For example, an implementing class can check database connectivity.","title":"status - Misk"},{"location":"0.x/misk-core/misk.healthchecks/-health-check/status.html#status","text":"abstract fun status(): HealthStatus Computes whether a component of an application is healthy. For example, an implementing class can check database connectivity.","title":"status"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/index.html","text":"misk-core / misk.healthchecks / HealthStatus HealthStatus \u00b6 data class HealthStatus Constructors \u00b6 Name Summary <init> HealthStatus(isHealthy: Boolean , messages: List < String >) Properties \u00b6 Name Summary isHealthy val isHealthy: Boolean messages val messages: List < String > Companion Object Functions \u00b6 Name Summary healthy fun healthy(vararg messages: String ): HealthStatus unhealthy fun unhealthy(vararg messages: String ): HealthStatus","title":"HealthStatus - Misk"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/index.html#healthstatus","text":"data class HealthStatus","title":"HealthStatus"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/index.html#constructors","text":"Name Summary <init> HealthStatus(isHealthy: Boolean , messages: List < String >)","title":"Constructors"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/index.html#properties","text":"Name Summary isHealthy val isHealthy: Boolean messages val messages: List < String >","title":"Properties"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/index.html#companion-object-functions","text":"Name Summary healthy fun healthy(vararg messages: String ): HealthStatus unhealthy fun unhealthy(vararg messages: String ): HealthStatus","title":"Companion Object Functions"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/-init-.html","text":"misk-core / misk.healthchecks / HealthStatus / <init> <init> \u00b6 HealthStatus(isHealthy: Boolean , messages: List < String >)","title":" init "},{"location":"0.x/misk-core/misk.healthchecks/-health-status/-init-.html#init","text":"HealthStatus(isHealthy: Boolean , messages: List < String >)","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/healthy.html","text":"misk-core / misk.healthchecks / HealthStatus / healthy healthy \u00b6 fun healthy(vararg messages: String ): HealthStatus","title":"healthy - Misk"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/healthy.html#healthy","text":"fun healthy(vararg messages: String ): HealthStatus","title":"healthy"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/is-healthy.html","text":"misk-core / misk.healthchecks / HealthStatus / isHealthy isHealthy \u00b6 val isHealthy: Boolean","title":"isHealthy - Misk"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/is-healthy.html#ishealthy","text":"val isHealthy: Boolean","title":"isHealthy"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/messages.html","text":"misk-core / misk.healthchecks / HealthStatus / messages messages \u00b6 val messages: List < String >","title":"messages - Misk"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/messages.html#messages","text":"val messages: List < String >","title":"messages"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/unhealthy.html","text":"misk-core / misk.healthchecks / HealthStatus / unhealthy unhealthy \u00b6 fun unhealthy(vararg messages: String ): HealthStatus","title":"unhealthy - Misk"},{"location":"0.x/misk-core/misk.healthchecks/-health-status/unhealthy.html#unhealthy","text":"fun unhealthy(vararg messages: String ): HealthStatus","title":"unhealthy"},{"location":"0.x/misk-core/misk.logging/index.html","text":"misk-core / misk.logging Package misk.logging \u00b6 Types \u00b6 Name Summary SampledLogger class SampledLogger : KLogger Extensions for External Classes \u00b6 Name Summary mu.KLogger","title":"Package misk.logging - Misk"},{"location":"0.x/misk-core/misk.logging/index.html#package-misklogging","text":"","title":"Package misk.logging"},{"location":"0.x/misk-core/misk.logging/index.html#types","text":"Name Summary SampledLogger class SampledLogger : KLogger","title":"Types"},{"location":"0.x/misk-core/misk.logging/index.html#extensions-for-external-classes","text":"Name Summary mu.KLogger","title":"Extensions for External Classes"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/index.html","text":"misk-core / misk.logging / SampledLogger SampledLogger \u00b6 class SampledLogger : KLogger Constructors \u00b6 Name Summary <init> SampledLogger(underlyingLogger: KLogger, sampler: Sampler ) Properties \u00b6 Name Summary underlyingLogger val underlyingLogger: KLogger Functions \u00b6 Name Summary catching fun <T : Throwable > catching(throwable: T ): Unit debug fun debug(msg: () -> Any ?): Unit fun debug(t: Throwable ?, msg: () -> Any ?): Unit fun debug(marker: Marker?, msg: () -> Any ?): Unit fun debug(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun debug(msg: String ?): Unit fun debug(format: String ?, arg: Any ?): Unit fun debug(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(format: String ?, vararg arguments: Any ?): Unit fun debug(msg: String ?, t: Throwable ?): Unit fun debug(marker: Marker?, msg: String ?): Unit fun debug(marker: Marker?, format: String ?, arg: Any ?): Unit fun debug(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun debug(marker: Marker?, msg: String ?, t: Throwable ?): Unit entry fun entry(vararg argArray: Any ?): Unit error fun error(msg: () -> Any ?): Unit fun error(t: Throwable ?, msg: () -> Any ?): Unit fun error(marker: Marker?, msg: () -> Any ?): Unit fun error(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun error(msg: String ?): Unit fun error(format: String ?, arg: Any ?): Unit fun error(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(format: String ?, vararg arguments: Any ?): Unit fun error(msg: String ?, t: Throwable ?): Unit fun error(marker: Marker?, msg: String ?): Unit fun error(marker: Marker?, format: String ?, arg: Any ?): Unit fun error(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun error(marker: Marker?, msg: String ?, t: Throwable ?): Unit exit fun exit(): Unit fun <T> exit(result: T ): T getName fun getName(): String info fun info(msg: () -> Any ?): Unit fun info(t: Throwable ?, msg: () -> Any ?): Unit fun info(marker: Marker?, msg: () -> Any ?): Unit fun info(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun info(msg: String ?): Unit fun info(format: String ?, arg: Any ?): Unit fun info(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(format: String ?, vararg arguments: Any ?): Unit fun info(msg: String ?, t: Throwable ?): Unit fun info(marker: Marker?, msg: String ?): Unit fun info(marker: Marker?, format: String ?, arg: Any ?): Unit fun info(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun info(marker: Marker?, msg: String ?, t: Throwable ?): Unit isDebugEnabled fun isDebugEnabled(): Boolean fun isDebugEnabled(marker: Marker?): Boolean isErrorEnabled fun isErrorEnabled(): Boolean fun isErrorEnabled(marker: Marker?): Boolean isInfoEnabled fun isInfoEnabled(): Boolean fun isInfoEnabled(marker: Marker?): Boolean isTraceEnabled fun isTraceEnabled(): Boolean fun isTraceEnabled(marker: Marker?): Boolean isWarnEnabled fun isWarnEnabled(): Boolean fun isWarnEnabled(marker: Marker?): Boolean throwing fun <T : Throwable > throwing(throwable: T ): T trace fun trace(msg: () -> Any ?): Unit fun trace(t: Throwable ?, msg: () -> Any ?): Unit fun trace(marker: Marker?, msg: () -> Any ?): Unit fun trace(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun trace(msg: String ?): Unit fun trace(format: String ?, arg: Any ?): Unit fun trace(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(format: String ?, vararg arguments: Any ?): Unit fun trace(msg: String ?, t: Throwable ?): Unit fun trace(marker: Marker?, msg: String ?): Unit fun trace(marker: Marker?, format: String ?, arg: Any ?): Unit fun trace(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(marker: Marker?, format: String ?, vararg argArray: Any ?): Unit fun trace(marker: Marker?, msg: String ?, t: Throwable ?): Unit warn fun warn(msg: () -> Any ?): Unit fun warn(t: Throwable ?, msg: () -> Any ?): Unit fun warn(marker: Marker?, msg: () -> Any ?): Unit fun warn(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun warn(msg: String ?): Unit fun warn(format: String ?, arg: Any ?): Unit fun warn(format: String ?, vararg arguments: Any ?): Unit fun warn(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(msg: String ?, t: Throwable ?): Unit fun warn(marker: Marker?, msg: String ?): Unit fun warn(marker: Marker?, format: String ?, arg: Any ?): Unit fun warn(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun warn(marker: Marker?, msg: String ?, t: Throwable ?): Unit Extension Functions \u00b6 Name Summary sampled fun KLogger.sampled(sampler: Sampler ): KLogger Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton.","title":"SampledLogger - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/index.html#sampledlogger","text":"class SampledLogger : KLogger","title":"SampledLogger"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/index.html#constructors","text":"Name Summary <init> SampledLogger(underlyingLogger: KLogger, sampler: Sampler )","title":"Constructors"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/index.html#properties","text":"Name Summary underlyingLogger val underlyingLogger: KLogger","title":"Properties"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/index.html#functions","text":"Name Summary catching fun <T : Throwable > catching(throwable: T ): Unit debug fun debug(msg: () -> Any ?): Unit fun debug(t: Throwable ?, msg: () -> Any ?): Unit fun debug(marker: Marker?, msg: () -> Any ?): Unit fun debug(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun debug(msg: String ?): Unit fun debug(format: String ?, arg: Any ?): Unit fun debug(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(format: String ?, vararg arguments: Any ?): Unit fun debug(msg: String ?, t: Throwable ?): Unit fun debug(marker: Marker?, msg: String ?): Unit fun debug(marker: Marker?, format: String ?, arg: Any ?): Unit fun debug(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun debug(marker: Marker?, msg: String ?, t: Throwable ?): Unit entry fun entry(vararg argArray: Any ?): Unit error fun error(msg: () -> Any ?): Unit fun error(t: Throwable ?, msg: () -> Any ?): Unit fun error(marker: Marker?, msg: () -> Any ?): Unit fun error(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun error(msg: String ?): Unit fun error(format: String ?, arg: Any ?): Unit fun error(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(format: String ?, vararg arguments: Any ?): Unit fun error(msg: String ?, t: Throwable ?): Unit fun error(marker: Marker?, msg: String ?): Unit fun error(marker: Marker?, format: String ?, arg: Any ?): Unit fun error(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun error(marker: Marker?, msg: String ?, t: Throwable ?): Unit exit fun exit(): Unit fun <T> exit(result: T ): T getName fun getName(): String info fun info(msg: () -> Any ?): Unit fun info(t: Throwable ?, msg: () -> Any ?): Unit fun info(marker: Marker?, msg: () -> Any ?): Unit fun info(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun info(msg: String ?): Unit fun info(format: String ?, arg: Any ?): Unit fun info(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(format: String ?, vararg arguments: Any ?): Unit fun info(msg: String ?, t: Throwable ?): Unit fun info(marker: Marker?, msg: String ?): Unit fun info(marker: Marker?, format: String ?, arg: Any ?): Unit fun info(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun info(marker: Marker?, msg: String ?, t: Throwable ?): Unit isDebugEnabled fun isDebugEnabled(): Boolean fun isDebugEnabled(marker: Marker?): Boolean isErrorEnabled fun isErrorEnabled(): Boolean fun isErrorEnabled(marker: Marker?): Boolean isInfoEnabled fun isInfoEnabled(): Boolean fun isInfoEnabled(marker: Marker?): Boolean isTraceEnabled fun isTraceEnabled(): Boolean fun isTraceEnabled(marker: Marker?): Boolean isWarnEnabled fun isWarnEnabled(): Boolean fun isWarnEnabled(marker: Marker?): Boolean throwing fun <T : Throwable > throwing(throwable: T ): T trace fun trace(msg: () -> Any ?): Unit fun trace(t: Throwable ?, msg: () -> Any ?): Unit fun trace(marker: Marker?, msg: () -> Any ?): Unit fun trace(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun trace(msg: String ?): Unit fun trace(format: String ?, arg: Any ?): Unit fun trace(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(format: String ?, vararg arguments: Any ?): Unit fun trace(msg: String ?, t: Throwable ?): Unit fun trace(marker: Marker?, msg: String ?): Unit fun trace(marker: Marker?, format: String ?, arg: Any ?): Unit fun trace(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(marker: Marker?, format: String ?, vararg argArray: Any ?): Unit fun trace(marker: Marker?, msg: String ?, t: Throwable ?): Unit warn fun warn(msg: () -> Any ?): Unit fun warn(t: Throwable ?, msg: () -> Any ?): Unit fun warn(marker: Marker?, msg: () -> Any ?): Unit fun warn(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun warn(msg: String ?): Unit fun warn(format: String ?, arg: Any ?): Unit fun warn(format: String ?, vararg arguments: Any ?): Unit fun warn(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(msg: String ?, t: Throwable ?): Unit fun warn(marker: Marker?, msg: String ?): Unit fun warn(marker: Marker?, format: String ?, arg: Any ?): Unit fun warn(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun warn(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/index.html#extension-functions","text":"Name Summary sampled fun KLogger.sampled(sampler: Sampler ): KLogger Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton.","title":"Extension Functions"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/-init-.html","text":"misk-core / misk.logging / SampledLogger / <init> <init> \u00b6 SampledLogger(underlyingLogger: KLogger, sampler: Sampler )","title":" init "},{"location":"0.x/misk-core/misk.logging/-sampled-logger/-init-.html#init","text":"SampledLogger(underlyingLogger: KLogger, sampler: Sampler )","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/catching.html","text":"misk-core / misk.logging / SampledLogger / catching catching \u00b6 fun <T : Throwable > catching(throwable: T ): Unit","title":"catching - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/catching.html#catching","text":"fun <T : Throwable > catching(throwable: T ): Unit","title":"catching"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/debug.html","text":"misk-core / misk.logging / SampledLogger / debug debug \u00b6 fun debug(msg: () -> Any ?): Unit fun debug(t: Throwable ?, msg: () -> Any ?): Unit fun debug(marker: Marker?, msg: () -> Any ?): Unit fun debug(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun debug(msg: String ?): Unit fun debug(format: String ?, arg: Any ?): Unit fun debug(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(format: String ?, vararg arguments: Any ?): Unit fun debug(msg: String ?, t: Throwable ?): Unit fun debug(marker: Marker?, msg: String ?): Unit fun debug(marker: Marker?, format: String ?, arg: Any ?): Unit fun debug(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun debug(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"debug - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/debug.html#debug","text":"fun debug(msg: () -> Any ?): Unit fun debug(t: Throwable ?, msg: () -> Any ?): Unit fun debug(marker: Marker?, msg: () -> Any ?): Unit fun debug(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun debug(msg: String ?): Unit fun debug(format: String ?, arg: Any ?): Unit fun debug(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(format: String ?, vararg arguments: Any ?): Unit fun debug(msg: String ?, t: Throwable ?): Unit fun debug(marker: Marker?, msg: String ?): Unit fun debug(marker: Marker?, format: String ?, arg: Any ?): Unit fun debug(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun debug(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun debug(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"debug"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/entry.html","text":"misk-core / misk.logging / SampledLogger / entry entry \u00b6 fun entry(vararg argArray: Any ?): Unit","title":"entry - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/entry.html#entry","text":"fun entry(vararg argArray: Any ?): Unit","title":"entry"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/error.html","text":"misk-core / misk.logging / SampledLogger / error error \u00b6 fun error(msg: () -> Any ?): Unit fun error(t: Throwable ?, msg: () -> Any ?): Unit fun error(marker: Marker?, msg: () -> Any ?): Unit fun error(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun error(msg: String ?): Unit fun error(format: String ?, arg: Any ?): Unit fun error(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(format: String ?, vararg arguments: Any ?): Unit fun error(msg: String ?, t: Throwable ?): Unit fun error(marker: Marker?, msg: String ?): Unit fun error(marker: Marker?, format: String ?, arg: Any ?): Unit fun error(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun error(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"error - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/error.html#error","text":"fun error(msg: () -> Any ?): Unit fun error(t: Throwable ?, msg: () -> Any ?): Unit fun error(marker: Marker?, msg: () -> Any ?): Unit fun error(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun error(msg: String ?): Unit fun error(format: String ?, arg: Any ?): Unit fun error(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(format: String ?, vararg arguments: Any ?): Unit fun error(msg: String ?, t: Throwable ?): Unit fun error(marker: Marker?, msg: String ?): Unit fun error(marker: Marker?, format: String ?, arg: Any ?): Unit fun error(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun error(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun error(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"error"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/exit.html","text":"misk-core / misk.logging / SampledLogger / exit exit \u00b6 fun exit(): Unit fun <T> exit(result: T ): T","title":"exit - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/exit.html#exit","text":"fun exit(): Unit fun <T> exit(result: T ): T","title":"exit"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/get-name.html","text":"misk-core / misk.logging / SampledLogger / getName getName \u00b6 fun getName(): String","title":"getName - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/get-name.html#getname","text":"fun getName(): String","title":"getName"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/info.html","text":"misk-core / misk.logging / SampledLogger / info info \u00b6 fun info(msg: () -> Any ?): Unit fun info(t: Throwable ?, msg: () -> Any ?): Unit fun info(marker: Marker?, msg: () -> Any ?): Unit fun info(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun info(msg: String ?): Unit fun info(format: String ?, arg: Any ?): Unit fun info(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(format: String ?, vararg arguments: Any ?): Unit fun info(msg: String ?, t: Throwable ?): Unit fun info(marker: Marker?, msg: String ?): Unit fun info(marker: Marker?, format: String ?, arg: Any ?): Unit fun info(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun info(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"info - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/info.html#info","text":"fun info(msg: () -> Any ?): Unit fun info(t: Throwable ?, msg: () -> Any ?): Unit fun info(marker: Marker?, msg: () -> Any ?): Unit fun info(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun info(msg: String ?): Unit fun info(format: String ?, arg: Any ?): Unit fun info(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(format: String ?, vararg arguments: Any ?): Unit fun info(msg: String ?, t: Throwable ?): Unit fun info(marker: Marker?, msg: String ?): Unit fun info(marker: Marker?, format: String ?, arg: Any ?): Unit fun info(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun info(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun info(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"info"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-debug-enabled.html","text":"misk-core / misk.logging / SampledLogger / isDebugEnabled isDebugEnabled \u00b6 fun isDebugEnabled(): Boolean fun isDebugEnabled(marker: Marker?): Boolean","title":"isDebugEnabled - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-debug-enabled.html#isdebugenabled","text":"fun isDebugEnabled(): Boolean fun isDebugEnabled(marker: Marker?): Boolean","title":"isDebugEnabled"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-error-enabled.html","text":"misk-core / misk.logging / SampledLogger / isErrorEnabled isErrorEnabled \u00b6 fun isErrorEnabled(): Boolean fun isErrorEnabled(marker: Marker?): Boolean","title":"isErrorEnabled - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-error-enabled.html#iserrorenabled","text":"fun isErrorEnabled(): Boolean fun isErrorEnabled(marker: Marker?): Boolean","title":"isErrorEnabled"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-info-enabled.html","text":"misk-core / misk.logging / SampledLogger / isInfoEnabled isInfoEnabled \u00b6 fun isInfoEnabled(): Boolean fun isInfoEnabled(marker: Marker?): Boolean","title":"isInfoEnabled - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-info-enabled.html#isinfoenabled","text":"fun isInfoEnabled(): Boolean fun isInfoEnabled(marker: Marker?): Boolean","title":"isInfoEnabled"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-trace-enabled.html","text":"misk-core / misk.logging / SampledLogger / isTraceEnabled isTraceEnabled \u00b6 fun isTraceEnabled(): Boolean fun isTraceEnabled(marker: Marker?): Boolean","title":"isTraceEnabled - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-trace-enabled.html#istraceenabled","text":"fun isTraceEnabled(): Boolean fun isTraceEnabled(marker: Marker?): Boolean","title":"isTraceEnabled"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-warn-enabled.html","text":"misk-core / misk.logging / SampledLogger / isWarnEnabled isWarnEnabled \u00b6 fun isWarnEnabled(): Boolean fun isWarnEnabled(marker: Marker?): Boolean","title":"isWarnEnabled - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/is-warn-enabled.html#iswarnenabled","text":"fun isWarnEnabled(): Boolean fun isWarnEnabled(marker: Marker?): Boolean","title":"isWarnEnabled"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/throwing.html","text":"misk-core / misk.logging / SampledLogger / throwing throwing \u00b6 fun <T : Throwable > throwing(throwable: T ): T","title":"throwing - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/throwing.html#throwing","text":"fun <T : Throwable > throwing(throwable: T ): T","title":"throwing"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/trace.html","text":"misk-core / misk.logging / SampledLogger / trace trace \u00b6 fun trace(msg: () -> Any ?): Unit fun trace(t: Throwable ?, msg: () -> Any ?): Unit fun trace(marker: Marker?, msg: () -> Any ?): Unit fun trace(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun trace(msg: String ?): Unit fun trace(format: String ?, arg: Any ?): Unit fun trace(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(format: String ?, vararg arguments: Any ?): Unit fun trace(msg: String ?, t: Throwable ?): Unit fun trace(marker: Marker?, msg: String ?): Unit fun trace(marker: Marker?, format: String ?, arg: Any ?): Unit fun trace(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(marker: Marker?, format: String ?, vararg argArray: Any ?): Unit fun trace(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"trace - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/trace.html#trace","text":"fun trace(msg: () -> Any ?): Unit fun trace(t: Throwable ?, msg: () -> Any ?): Unit fun trace(marker: Marker?, msg: () -> Any ?): Unit fun trace(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun trace(msg: String ?): Unit fun trace(format: String ?, arg: Any ?): Unit fun trace(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(format: String ?, vararg arguments: Any ?): Unit fun trace(msg: String ?, t: Throwable ?): Unit fun trace(marker: Marker?, msg: String ?): Unit fun trace(marker: Marker?, format: String ?, arg: Any ?): Unit fun trace(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun trace(marker: Marker?, format: String ?, vararg argArray: Any ?): Unit fun trace(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"trace"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/underlying-logger.html","text":"misk-core / misk.logging / SampledLogger / underlyingLogger underlyingLogger \u00b6 val underlyingLogger: KLogger","title":"underlyingLogger - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/underlying-logger.html#underlyinglogger","text":"val underlyingLogger: KLogger","title":"underlyingLogger"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/warn.html","text":"misk-core / misk.logging / SampledLogger / warn warn \u00b6 fun warn(msg: () -> Any ?): Unit fun warn(t: Throwable ?, msg: () -> Any ?): Unit fun warn(marker: Marker?, msg: () -> Any ?): Unit fun warn(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun warn(msg: String ?): Unit fun warn(format: String ?, arg: Any ?): Unit fun warn(format: String ?, vararg arguments: Any ?): Unit fun warn(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(msg: String ?, t: Throwable ?): Unit fun warn(marker: Marker?, msg: String ?): Unit fun warn(marker: Marker?, format: String ?, arg: Any ?): Unit fun warn(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun warn(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"warn - Misk"},{"location":"0.x/misk-core/misk.logging/-sampled-logger/warn.html#warn","text":"fun warn(msg: () -> Any ?): Unit fun warn(t: Throwable ?, msg: () -> Any ?): Unit fun warn(marker: Marker?, msg: () -> Any ?): Unit fun warn(marker: Marker?, t: Throwable ?, msg: () -> Any ?): Unit fun warn(msg: String ?): Unit fun warn(format: String ?, arg: Any ?): Unit fun warn(format: String ?, vararg arguments: Any ?): Unit fun warn(format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(msg: String ?, t: Throwable ?): Unit fun warn(marker: Marker?, msg: String ?): Unit fun warn(marker: Marker?, format: String ?, arg: Any ?): Unit fun warn(marker: Marker?, format: String ?, arg1: Any ?, arg2: Any ?): Unit fun warn(marker: Marker?, format: String ?, vararg arguments: Any ?): Unit fun warn(marker: Marker?, msg: String ?, t: Throwable ?): Unit","title":"warn"},{"location":"0.x/misk-core/misk.logging/mu.-k-logger/index.html","text":"misk-core / misk.logging / mu.KLogger Extensions for mu.KLogger \u00b6 Name Summary sampled fun KLogger.sampled(sampler: Sampler ): KLogger Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton.","title":"Extensions for mu.KLogger - Misk"},{"location":"0.x/misk-core/misk.logging/mu.-k-logger/index.html#extensions-for-muklogger","text":"Name Summary sampled fun KLogger.sampled(sampler: Sampler ): KLogger Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton.","title":"Extensions for mu.KLogger"},{"location":"0.x/misk-core/misk.logging/mu.-k-logger/sampled.html","text":"misk-core / misk.logging / mu.KLogger / sampled sampled \u00b6 fun KLogger.sampled(sampler: Sampler ): KLogger Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton. To get a rate limited logger: val logger = getLogger().sampled(RateLimitingSampler(RATE_PER_SECOND)) To get a probabilistic sampler val logger = getLogger().sampled(PercentSampler(PERCENTAGE_TO_ALLOW))","title":"sampled - Misk"},{"location":"0.x/misk-core/misk.logging/mu.-k-logger/sampled.html#sampled","text":"fun KLogger.sampled(sampler: Sampler ): KLogger Returns a logger that samples logs. This logger MUST be instantiated statically, in a companion object or as a Singleton. To get a rate limited logger: val logger = getLogger().sampled(RateLimitingSampler(RATE_PER_SECOND)) To get a probabilistic sampler val logger = getLogger().sampled(PercentSampler(PERCENTAGE_TO_ALLOW))","title":"sampled"},{"location":"0.x/misk-core/misk.random/index.html","text":"misk-core / misk.random Package misk.random \u00b6 Types \u00b6 Name Summary Random open class Random : Random Abstraction for Java\u2019s Random that allows for testing. ThreadLocalRandom open class ThreadLocalRandom Abstraction for Java\u2019s ThreadLocalRandom that allows for testing.","title":"Package misk.random - Misk"},{"location":"0.x/misk-core/misk.random/index.html#package-miskrandom","text":"","title":"Package misk.random"},{"location":"0.x/misk-core/misk.random/index.html#types","text":"Name Summary Random open class Random : Random Abstraction for Java\u2019s Random that allows for testing. ThreadLocalRandom open class ThreadLocalRandom Abstraction for Java\u2019s ThreadLocalRandom that allows for testing.","title":"Types"},{"location":"0.x/misk-core/misk.random/-random/index.html","text":"misk-core / misk.random / Random Random \u00b6 @Singleton open class Random : Random Abstraction for Java\u2019s Random that allows for testing. Constructors \u00b6 Name Summary <init> Random() Abstraction for Java\u2019s Random that allows for testing.","title":"Random - Misk"},{"location":"0.x/misk-core/misk.random/-random/index.html#random","text":"@Singleton open class Random : Random Abstraction for Java\u2019s Random that allows for testing.","title":"Random"},{"location":"0.x/misk-core/misk.random/-random/index.html#constructors","text":"Name Summary <init> Random() Abstraction for Java\u2019s Random that allows for testing.","title":"Constructors"},{"location":"0.x/misk-core/misk.random/-random/-init-.html","text":"misk-core / misk.random / Random / <init> <init> \u00b6 Random() Abstraction for Java\u2019s Random that allows for testing.","title":" init "},{"location":"0.x/misk-core/misk.random/-random/-init-.html#init","text":"Random() Abstraction for Java\u2019s Random that allows for testing.","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.random/-thread-local-random/index.html","text":"misk-core / misk.random / ThreadLocalRandom ThreadLocalRandom \u00b6 @Singleton open class ThreadLocalRandom Abstraction for Java\u2019s ThreadLocalRandom that allows for testing. Constructors \u00b6 Name Summary <init> ThreadLocalRandom() Abstraction for Java\u2019s ThreadLocalRandom that allows for testing. Functions \u00b6 Name Summary current open fun current(): Random","title":"ThreadLocalRandom - Misk"},{"location":"0.x/misk-core/misk.random/-thread-local-random/index.html#threadlocalrandom","text":"@Singleton open class ThreadLocalRandom Abstraction for Java\u2019s ThreadLocalRandom that allows for testing.","title":"ThreadLocalRandom"},{"location":"0.x/misk-core/misk.random/-thread-local-random/index.html#constructors","text":"Name Summary <init> ThreadLocalRandom() Abstraction for Java\u2019s ThreadLocalRandom that allows for testing.","title":"Constructors"},{"location":"0.x/misk-core/misk.random/-thread-local-random/index.html#functions","text":"Name Summary current open fun current(): Random","title":"Functions"},{"location":"0.x/misk-core/misk.random/-thread-local-random/-init-.html","text":"misk-core / misk.random / ThreadLocalRandom / <init> <init> \u00b6 ThreadLocalRandom() Abstraction for Java\u2019s ThreadLocalRandom that allows for testing.","title":" init "},{"location":"0.x/misk-core/misk.random/-thread-local-random/-init-.html#init","text":"ThreadLocalRandom() Abstraction for Java\u2019s ThreadLocalRandom that allows for testing.","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.random/-thread-local-random/current.html","text":"misk-core / misk.random / ThreadLocalRandom / current current \u00b6 open fun current(): Random","title":"current - Misk"},{"location":"0.x/misk-core/misk.random/-thread-local-random/current.html#current","text":"open fun current(): Random","title":"current"},{"location":"0.x/misk-core/misk.resources/index.html","text":"misk-core / misk.resources Package misk.resources \u00b6 Types \u00b6 Name Summary FakeFilesModule class FakeFilesModule : KAbstractModule Adds the provided fake files to the map used by FilesystemLoaderBackend . ResourceLoader class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. ResourceLoaderModule class ResourceLoaderModule : KAbstractModule TestingResourceLoaderModule class TestingResourceLoaderModule : KAbstractModule Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend Annotations \u00b6 Name Summary ForFakeFiles annotation class ForFakeFiles","title":"Package misk.resources - Misk"},{"location":"0.x/misk-core/misk.resources/index.html#package-miskresources","text":"","title":"Package misk.resources"},{"location":"0.x/misk-core/misk.resources/index.html#types","text":"Name Summary FakeFilesModule class FakeFilesModule : KAbstractModule Adds the provided fake files to the map used by FilesystemLoaderBackend . ResourceLoader class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. ResourceLoaderModule class ResourceLoaderModule : KAbstractModule TestingResourceLoaderModule class TestingResourceLoaderModule : KAbstractModule Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend","title":"Types"},{"location":"0.x/misk-core/misk.resources/index.html#annotations","text":"Name Summary ForFakeFiles annotation class ForFakeFiles","title":"Annotations"},{"location":"0.x/misk-core/misk.resources/-fake-files-module/index.html","text":"misk-core / misk.resources / FakeFilesModule FakeFilesModule \u00b6 class FakeFilesModule : KAbstractModule Adds the provided fake files to the map used by FilesystemLoaderBackend . Constructors \u00b6 Name Summary <init> FakeFilesModule(fakeFiles: Map < String , String >) Adds the provided fake files to the map used by FilesystemLoaderBackend . Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeFilesModule - Misk"},{"location":"0.x/misk-core/misk.resources/-fake-files-module/index.html#fakefilesmodule","text":"class FakeFilesModule : KAbstractModule Adds the provided fake files to the map used by FilesystemLoaderBackend .","title":"FakeFilesModule"},{"location":"0.x/misk-core/misk.resources/-fake-files-module/index.html#constructors","text":"Name Summary <init> FakeFilesModule(fakeFiles: Map < String , String >) Adds the provided fake files to the map used by FilesystemLoaderBackend .","title":"Constructors"},{"location":"0.x/misk-core/misk.resources/-fake-files-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.resources/-fake-files-module/-init-.html","text":"misk-core / misk.resources / FakeFilesModule / <init> <init> \u00b6 FakeFilesModule(fakeFiles: Map < String , String >) Adds the provided fake files to the map used by FilesystemLoaderBackend .","title":" init "},{"location":"0.x/misk-core/misk.resources/-fake-files-module/-init-.html#init","text":"FakeFilesModule(fakeFiles: Map < String , String >) Adds the provided fake files to the map used by FilesystemLoaderBackend .","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.resources/-fake-files-module/configure.html","text":"misk-core / misk.resources / FakeFilesModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-core/misk.resources/-fake-files-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-core/misk.resources/-for-fake-files/index.html","text":"misk-core / misk.resources / ForFakeFiles ForFakeFiles \u00b6 @Qualifier annotation class ForFakeFiles Constructors \u00b6 Name Summary <init> ForFakeFiles()","title":"ForFakeFiles - Misk"},{"location":"0.x/misk-core/misk.resources/-for-fake-files/index.html#forfakefiles","text":"@Qualifier annotation class ForFakeFiles","title":"ForFakeFiles"},{"location":"0.x/misk-core/misk.resources/-for-fake-files/index.html#constructors","text":"Name Summary <init> ForFakeFiles()","title":"Constructors"},{"location":"0.x/misk-core/misk.resources/-for-fake-files/-init-.html","text":"misk-core / misk.resources / ForFakeFiles / <init> <init> \u00b6 ForFakeFiles()","title":" init "},{"location":"0.x/misk-core/misk.resources/-for-fake-files/-init-.html#init","text":"ForFakeFiles()","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.resources/-resource-loader/index.html","text":"misk-core / misk.resources / ResourceLoader ResourceLoader \u00b6 @Singleton class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key. Constructors \u00b6 Name Summary <init> ResourceLoader(backends: Map < String , Backend>) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Functions \u00b6 Name Summary copyTo fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir . exists fun exists(address: String ): Boolean Returns true if a resource at address exists. list fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address . open fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists. put fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly. requireUtf8 fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing. utf8 fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently. walk fun walk(address: String ): List < String > Companion Object Properties \u00b6 Name Summary SYSTEM val SYSTEM: ResourceLoader","title":"ResourceLoader - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/index.html#resourceloader","text":"@Singleton class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.","title":"ResourceLoader"},{"location":"0.x/misk-core/misk.resources/-resource-loader/index.html#constructors","text":"Name Summary <init> ResourceLoader(backends: Map < String , Backend>) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.","title":"Constructors"},{"location":"0.x/misk-core/misk.resources/-resource-loader/index.html#functions","text":"Name Summary copyTo fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir . exists fun exists(address: String ): Boolean Returns true if a resource at address exists. list fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address . open fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists. put fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly. requireUtf8 fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing. utf8 fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently. walk fun walk(address: String ): List < String >","title":"Functions"},{"location":"0.x/misk-core/misk.resources/-resource-loader/index.html#companion-object-properties","text":"Name Summary SYSTEM val SYSTEM: ResourceLoader","title":"Companion Object Properties"},{"location":"0.x/misk-core/misk.resources/-resource-loader/-init-.html","text":"misk-core / misk.resources / ResourceLoader / <init> <init> \u00b6 ResourceLoader(backends: Map < String , Backend>) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.","title":" init "},{"location":"0.x/misk-core/misk.resources/-resource-loader/-init-.html#init","text":"ResourceLoader(backends: Map < String , Backend>) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.resources/-resource-loader/-s-y-s-t-e-m.html","text":"misk-core / misk.resources / ResourceLoader / SYSTEM SYSTEM \u00b6 val SYSTEM: ResourceLoader","title":"SYSTEM - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/-s-y-s-t-e-m.html#system","text":"val SYSTEM: ResourceLoader","title":"SYSTEM"},{"location":"0.x/misk-core/misk.resources/-resource-loader/copy-to.html","text":"misk-core / misk.resources / ResourceLoader / copyTo copyTo \u00b6 fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir .","title":"copyTo - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/copy-to.html#copyto","text":"fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir .","title":"copyTo"},{"location":"0.x/misk-core/misk.resources/-resource-loader/exists.html","text":"misk-core / misk.resources / ResourceLoader / exists exists \u00b6 fun exists(address: String ): Boolean Returns true if a resource at address exists.","title":"exists - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/exists.html#exists","text":"fun exists(address: String ): Boolean Returns true if a resource at address exists.","title":"exists"},{"location":"0.x/misk-core/misk.resources/-resource-loader/list.html","text":"misk-core / misk.resources / ResourceLoader / list list \u00b6 fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address .","title":"list - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/list.html#list","text":"fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address .","title":"list"},{"location":"0.x/misk-core/misk.resources/-resource-loader/open.html","text":"misk-core / misk.resources / ResourceLoader / open open \u00b6 fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists.","title":"open - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/open.html#open","text":"fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists.","title":"open"},{"location":"0.x/misk-core/misk.resources/-resource-loader/put.html","text":"misk-core / misk.resources / ResourceLoader / put put \u00b6 fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly.","title":"put - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/put.html#put","text":"fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly.","title":"put"},{"location":"0.x/misk-core/misk.resources/-resource-loader/require-utf8.html","text":"misk-core / misk.resources / ResourceLoader / requireUtf8 requireUtf8 \u00b6 fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing.","title":"requireUtf8 - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/require-utf8.html#requireutf8","text":"fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing.","title":"requireUtf8"},{"location":"0.x/misk-core/misk.resources/-resource-loader/utf8.html","text":"misk-core / misk.resources / ResourceLoader / utf8 utf8 \u00b6 fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently.","title":"utf8 - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/utf8.html#utf8","text":"fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently.","title":"utf8"},{"location":"0.x/misk-core/misk.resources/-resource-loader/walk.html","text":"misk-core / misk.resources / ResourceLoader / walk walk \u00b6 fun walk(address: String ): List < String >","title":"walk - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader/walk.html#walk","text":"fun walk(address: String ): List < String >","title":"walk"},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/index.html","text":"misk-core / misk.resources / ResourceLoaderModule ResourceLoaderModule \u00b6 class ResourceLoaderModule : KAbstractModule Constructors \u00b6 Name Summary <init> ResourceLoaderModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"ResourceLoaderModule - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/index.html#resourceloadermodule","text":"class ResourceLoaderModule : KAbstractModule","title":"ResourceLoaderModule"},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/index.html#constructors","text":"Name Summary <init> ResourceLoaderModule()","title":"Constructors"},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/-init-.html","text":"misk-core / misk.resources / ResourceLoaderModule / <init> <init> \u00b6 ResourceLoaderModule()","title":" init "},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/-init-.html#init","text":"ResourceLoaderModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/configure.html","text":"misk-core / misk.resources / ResourceLoaderModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-core/misk.resources/-resource-loader-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/index.html","text":"misk-core / misk.resources / TestingResourceLoaderModule TestingResourceLoaderModule \u00b6 class TestingResourceLoaderModule : KAbstractModule Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend Constructors \u00b6 Name Summary <init> TestingResourceLoaderModule() Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend Functions \u00b6 Name Summary configure fun configure(): Unit","title":"TestingResourceLoaderModule - Misk"},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/index.html#testingresourceloadermodule","text":"class TestingResourceLoaderModule : KAbstractModule Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend","title":"TestingResourceLoaderModule"},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/index.html#constructors","text":"Name Summary <init> TestingResourceLoaderModule() Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend","title":"Constructors"},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/-init-.html","text":"misk-core / misk.resources / TestingResourceLoaderModule / <init> <init> \u00b6 TestingResourceLoaderModule() Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend","title":" init "},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/-init-.html#init","text":"TestingResourceLoaderModule() Can be used instead of ResourceLoaderModule in tests to load filesystem: resources using FakeFilesystemLoaderBackend","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/configure.html","text":"misk-core / misk.resources / TestingResourceLoaderModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-core/misk.resources/-testing-resource-loader-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-core/misk.retries/index.html","text":"misk-core / misk.retries Package misk.retries \u00b6 Functions \u00b6 Name Summary doNotRetry fun <T> doNotRetry(): RetryPolicy< Throwable > Returns a RetryPolicy that will throw the error that triggered the retry if it is type T . Otherwise, it voices no objection to retrying. retryWithHooks suspend fun <T> retryWithHooks(policy: RetryPolicy< Throwable >, beforeRetryHook: () -> Unit , op: () -> T ): T This is a retry helper function with some hooks.","title":"Package misk.retries - Misk"},{"location":"0.x/misk-core/misk.retries/index.html#package-miskretries","text":"","title":"Package misk.retries"},{"location":"0.x/misk-core/misk.retries/index.html#functions","text":"Name Summary doNotRetry fun <T> doNotRetry(): RetryPolicy< Throwable > Returns a RetryPolicy that will throw the error that triggered the retry if it is type T . Otherwise, it voices no objection to retrying. retryWithHooks suspend fun <T> retryWithHooks(policy: RetryPolicy< Throwable >, beforeRetryHook: () -> Unit , op: () -> T ): T This is a retry helper function with some hooks.","title":"Functions"},{"location":"0.x/misk-core/misk.retries/do-not-retry.html","text":"misk-core / misk.retries / doNotRetry doNotRetry \u00b6 inline fun <reified T> doNotRetry(): RetryPolicy< Throwable > Returns a RetryPolicy that will throw the error that triggered the retry if it is type T . Otherwise, it voices no objection to retrying.","title":"doNotRetry - Misk"},{"location":"0.x/misk-core/misk.retries/do-not-retry.html#donotretry","text":"inline fun <reified T> doNotRetry(): RetryPolicy< Throwable > Returns a RetryPolicy that will throw the error that triggered the retry if it is type T . Otherwise, it voices no objection to retrying.","title":"doNotRetry"},{"location":"0.x/misk-core/misk.retries/retry-with-hooks.html","text":"misk-core / misk.retries / retryWithHooks retryWithHooks \u00b6 suspend fun <T> retryWithHooks(policy: RetryPolicy< Throwable >, beforeRetryHook: () -> Unit , op: () -> T ): T This is a retry helper function with some hooks. beforeRetryHook is called before retries, but not before the first attempt. Use cases: Optimistic locking where the state needs to be reloaded on retries Re-establishing a connection when a request fails due to a connection dropping","title":"retryWithHooks - Misk"},{"location":"0.x/misk-core/misk.retries/retry-with-hooks.html#retrywithhooks","text":"suspend fun <T> retryWithHooks(policy: RetryPolicy< Throwable >, beforeRetryHook: () -> Unit , op: () -> T ): T This is a retry helper function with some hooks. beforeRetryHook is called before retries, but not before the first attempt. Use cases: Optimistic locking where the state needs to be reloaded on retries Re-establishing a connection when a request fails due to a connection dropping","title":"retryWithHooks"},{"location":"0.x/misk-core/misk.sampling/index.html","text":"misk-core / misk.sampling Package misk.sampling \u00b6 Types \u00b6 Name Summary AlwaysSampler class AlwaysSampler : Sampler Sampler that always invokes an action PercentSampler class PercentSampler : Sampler A Sampler randomly invokes an action based on a sample percentage RateLimiter class RateLimiter A deterministic testable rate limiter that uses two variables: RateLimitingSampler class RateLimitingSampler : Sampler Sampler interface Sampler","title":"Package misk.sampling - Misk"},{"location":"0.x/misk-core/misk.sampling/index.html#package-misksampling","text":"","title":"Package misk.sampling"},{"location":"0.x/misk-core/misk.sampling/index.html#types","text":"Name Summary AlwaysSampler class AlwaysSampler : Sampler Sampler that always invokes an action PercentSampler class PercentSampler : Sampler A Sampler randomly invokes an action based on a sample percentage RateLimiter class RateLimiter A deterministic testable rate limiter that uses two variables: RateLimitingSampler class RateLimitingSampler : Sampler Sampler interface Sampler","title":"Types"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/index.html","text":"misk-core / misk.sampling / AlwaysSampler AlwaysSampler \u00b6 @Singleton class AlwaysSampler : Sampler Sampler that always invokes an action Constructors \u00b6 Name Summary <init> AlwaysSampler() Sampler that always invokes an action Functions \u00b6 Name Summary sample fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true Inherited Functions \u00b6 Name Summary sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"AlwaysSampler - Misk"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/index.html#alwayssampler","text":"@Singleton class AlwaysSampler : Sampler Sampler that always invokes an action","title":"AlwaysSampler"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/index.html#constructors","text":"Name Summary <init> AlwaysSampler() Sampler that always invokes an action","title":"Constructors"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/index.html#functions","text":"Name Summary sample fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true","title":"Functions"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/index.html#inherited-functions","text":"Name Summary sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"Inherited Functions"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/-init-.html","text":"misk-core / misk.sampling / AlwaysSampler / <init> <init> \u00b6 AlwaysSampler() Sampler that always invokes an action","title":" init "},{"location":"0.x/misk-core/misk.sampling/-always-sampler/-init-.html#init","text":"AlwaysSampler() Sampler that always invokes an action","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/sample.html","text":"misk-core / misk.sampling / AlwaysSampler / sample sample \u00b6 fun sample(): Boolean Overrides Sampler.sample If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample - Misk"},{"location":"0.x/misk-core/misk.sampling/-always-sampler/sample.html#sample","text":"fun sample(): Boolean Overrides Sampler.sample If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/index.html","text":"misk-core / misk.sampling / PercentSampler PercentSampler \u00b6 class PercentSampler : Sampler A Sampler randomly invokes an action based on a sample percentage Constructors \u00b6 Name Summary <init> PercentSampler(samplePercentage: Int , random: () -> Int ) PercentSampler(samplePercentage: Int )``PercentSampler(samplePercentage: () -> Int , random: () -> Int = { ThreadLocalRandom.current().nextInt(0, 100) }) A Sampler randomly invokes an action based on a sample percentage Properties \u00b6 Name Summary random val random: () -> Int samplePercentage val samplePercentage: () -> Int Functions \u00b6 Name Summary sample fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true Inherited Functions \u00b6 Name Summary sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"PercentSampler - Misk"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/index.html#percentsampler","text":"class PercentSampler : Sampler A Sampler randomly invokes an action based on a sample percentage","title":"PercentSampler"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/index.html#constructors","text":"Name Summary <init> PercentSampler(samplePercentage: Int , random: () -> Int ) PercentSampler(samplePercentage: Int )``PercentSampler(samplePercentage: () -> Int , random: () -> Int = { ThreadLocalRandom.current().nextInt(0, 100) }) A Sampler randomly invokes an action based on a sample percentage","title":"Constructors"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/index.html#properties","text":"Name Summary random val random: () -> Int samplePercentage val samplePercentage: () -> Int","title":"Properties"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/index.html#functions","text":"Name Summary sample fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true","title":"Functions"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/index.html#inherited-functions","text":"Name Summary sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"Inherited Functions"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/-init-.html","text":"misk-core / misk.sampling / PercentSampler / <init> <init> \u00b6 PercentSampler(samplePercentage: Int , random: () -> Int ) PercentSampler(samplePercentage: Int )``PercentSampler(samplePercentage: () -> Int , random: () -> Int = { ThreadLocalRandom.current().nextInt(0, 100) }) A Sampler randomly invokes an action based on a sample percentage","title":" init "},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/-init-.html#init","text":"PercentSampler(samplePercentage: Int , random: () -> Int ) PercentSampler(samplePercentage: Int )``PercentSampler(samplePercentage: () -> Int , random: () -> Int = { ThreadLocalRandom.current().nextInt(0, 100) }) A Sampler randomly invokes an action based on a sample percentage","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/random.html","text":"misk-core / misk.sampling / PercentSampler / random random \u00b6 val random: () -> Int","title":"random - Misk"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/random.html#random","text":"val random: () -> Int","title":"random"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/sample-percentage.html","text":"misk-core / misk.sampling / PercentSampler / samplePercentage samplePercentage \u00b6 val samplePercentage: () -> Int","title":"samplePercentage - Misk"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/sample-percentage.html#samplepercentage","text":"val samplePercentage: () -> Int","title":"samplePercentage"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/sample.html","text":"misk-core / misk.sampling / PercentSampler / sample sample \u00b6 fun sample(): Boolean Overrides Sampler.sample If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample - Misk"},{"location":"0.x/misk-core/misk.sampling/-percent-sampler/sample.html#sample","text":"fun sample(): Boolean Overrides Sampler.sample If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/index.html","text":"misk-core / misk.sampling / RateLimiter RateLimiter \u00b6 class RateLimiter A deterministic testable rate limiter that uses two variables: Permits per second. This is the application\u2019s configured rate. We express as a per-second rate but use it as a time-between-permits. For example, 250 permits per second is a permit every 4 milliseconds. This may be zero, in which case all acquire attempts will return false. Window size. If the application specified 250 permits per second, that doesn\u2019t specify how many permits can be returned at once. An implementation could strictly return 1 permit every 4 milliseconds, or batches of 1000 permits every 4 seconds. This class hard codes the window size to 1 second. Small windows shrink batch sizes which is inefficient; large windows grow batch sizes which is bursty. This class uses 1 second to balance latency and throughput. The implementation tracks a future timestamp that permits are consumed until. This class is similar to Guava\u2019s rate limiter. Unlike Guava\u2019s rate limiter this class is testable by application code using the rate limiter. It also has very predictable behavior because its internal mechanisms are simpler than Guava\u2019s. Types \u00b6 Name Summary Factory class Factory Properties \u00b6 Name Summary permitsPerSecond var permitsPerSecond: Long Functions \u00b6 Name Summary tryAcquire fun tryAcquire(permitCount: Long , timeout: Long , unit: TimeUnit ): Boolean Attempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available.","title":"RateLimiter - Misk"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/index.html#ratelimiter","text":"class RateLimiter A deterministic testable rate limiter that uses two variables: Permits per second. This is the application\u2019s configured rate. We express as a per-second rate but use it as a time-between-permits. For example, 250 permits per second is a permit every 4 milliseconds. This may be zero, in which case all acquire attempts will return false. Window size. If the application specified 250 permits per second, that doesn\u2019t specify how many permits can be returned at once. An implementation could strictly return 1 permit every 4 milliseconds, or batches of 1000 permits every 4 seconds. This class hard codes the window size to 1 second. Small windows shrink batch sizes which is inefficient; large windows grow batch sizes which is bursty. This class uses 1 second to balance latency and throughput. The implementation tracks a future timestamp that permits are consumed until. This class is similar to Guava\u2019s rate limiter. Unlike Guava\u2019s rate limiter this class is testable by application code using the rate limiter. It also has very predictable behavior because its internal mechanisms are simpler than Guava\u2019s.","title":"RateLimiter"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/index.html#types","text":"Name Summary Factory class Factory","title":"Types"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/index.html#properties","text":"Name Summary permitsPerSecond var permitsPerSecond: Long","title":"Properties"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/index.html#functions","text":"Name Summary tryAcquire fun tryAcquire(permitCount: Long , timeout: Long , unit: TimeUnit ): Boolean Attempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available.","title":"Functions"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/permits-per-second.html","text":"misk-core / misk.sampling / RateLimiter / permitsPerSecond permitsPerSecond \u00b6 var permitsPerSecond: Long","title":"permitsPerSecond - Misk"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/permits-per-second.html#permitspersecond","text":"var permitsPerSecond: Long","title":"permitsPerSecond"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/try-acquire.html","text":"misk-core / misk.sampling / RateLimiter / tryAcquire tryAcquire \u00b6 fun tryAcquire(permitCount: Long , timeout: Long , unit: TimeUnit ): Boolean Attempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available. Returns true if permits were acquired. This always returns false if you request more than 1 window size worth of permits. If you need many permits, shrink your batch size. This is intended to smooth out consumption of the resources guarded by this rate limiter.","title":"tryAcquire - Misk"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/try-acquire.html#tryacquire","text":"fun tryAcquire(permitCount: Long , timeout: Long , unit: TimeUnit ): Boolean Attempt to acquire permitCount permits, sleeping up to timeout if necessary for them to become available. Returns true if permits were acquired. This always returns false if you request more than 1 window size worth of permits. If you need many permits, shrink your batch size. This is intended to smooth out consumption of the resources guarded by this rate limiter.","title":"tryAcquire"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/index.html","text":"misk-core / misk.sampling / RateLimiter / Factory Factory \u00b6 class Factory Constructors \u00b6 Name Summary <init> Factory(ticker: Ticker, sleeper: Sleeper ) Functions \u00b6 Name Summary create fun create(rate: Long ): RateLimiter","title":"Factory - Misk"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/index.html#factory","text":"class Factory","title":"Factory"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/index.html#constructors","text":"Name Summary <init> Factory(ticker: Ticker, sleeper: Sleeper )","title":"Constructors"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/index.html#functions","text":"Name Summary create fun create(rate: Long ): RateLimiter","title":"Functions"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/-init-.html","text":"misk-core / misk.sampling / RateLimiter / Factory / <init> <init> \u00b6 Factory(ticker: Ticker, sleeper: Sleeper )","title":" init "},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/-init-.html#init","text":"Factory(ticker: Ticker, sleeper: Sleeper )","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/create.html","text":"misk-core / misk.sampling / RateLimiter / Factory / create create \u00b6 fun create(rate: Long ): RateLimiter","title":"create - Misk"},{"location":"0.x/misk-core/misk.sampling/-rate-limiter/-factory/create.html#create","text":"fun create(rate: Long ): RateLimiter","title":"create"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/index.html","text":"misk-core / misk.sampling / RateLimitingSampler RateLimitingSampler \u00b6 class RateLimitingSampler : Sampler Constructors \u00b6 Name Summary <init> RateLimitingSampler(ratePerSecond: Long ) RateLimitingSampler(rateLimiter: RateLimiter ) Functions \u00b6 Name Summary sample fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true Inherited Functions \u00b6 Name Summary sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"RateLimitingSampler - Misk"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/index.html#ratelimitingsampler","text":"class RateLimitingSampler : Sampler","title":"RateLimitingSampler"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/index.html#constructors","text":"Name Summary <init> RateLimitingSampler(ratePerSecond: Long ) RateLimitingSampler(rateLimiter: RateLimiter )","title":"Constructors"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/index.html#functions","text":"Name Summary sample fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true","title":"Functions"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/index.html#inherited-functions","text":"Name Summary sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"Inherited Functions"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/-init-.html","text":"misk-core / misk.sampling / RateLimitingSampler / <init> <init> \u00b6 RateLimitingSampler(ratePerSecond: Long ) RateLimitingSampler(rateLimiter: RateLimiter )","title":" init "},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/-init-.html#init","text":"RateLimitingSampler(ratePerSecond: Long ) RateLimitingSampler(rateLimiter: RateLimiter )","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/sample.html","text":"misk-core / misk.sampling / RateLimitingSampler / sample sample \u00b6 fun sample(): Boolean Overrides Sampler.sample If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample - Misk"},{"location":"0.x/misk-core/misk.sampling/-rate-limiting-sampler/sample.html#sample","text":"fun sample(): Boolean Overrides Sampler.sample If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample"},{"location":"0.x/misk-core/misk.sampling/-sampler/index.html","text":"misk-core / misk.sampling / Sampler Sampler \u00b6 interface Sampler Functions \u00b6 Name Summary sample abstract fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda Inheritors \u00b6 Name Summary AlwaysSampler class AlwaysSampler : Sampler Sampler that always invokes an action PercentSampler class PercentSampler : Sampler A Sampler randomly invokes an action based on a sample percentage RateLimitingSampler class RateLimitingSampler : Sampler","title":"Sampler - Misk"},{"location":"0.x/misk-core/misk.sampling/-sampler/index.html#sampler","text":"interface Sampler","title":"Sampler"},{"location":"0.x/misk-core/misk.sampling/-sampler/index.html#functions","text":"Name Summary sample abstract fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true sampledCall open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"Functions"},{"location":"0.x/misk-core/misk.sampling/-sampler/index.html#inheritors","text":"Name Summary AlwaysSampler class AlwaysSampler : Sampler Sampler that always invokes an action PercentSampler class PercentSampler : Sampler A Sampler randomly invokes an action based on a sample percentage RateLimitingSampler class RateLimitingSampler : Sampler","title":"Inheritors"},{"location":"0.x/misk-core/misk.sampling/-sampler/sample.html","text":"misk-core / misk.sampling / Sampler / sample sample \u00b6 abstract fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample - Misk"},{"location":"0.x/misk-core/misk.sampling/-sampler/sample.html#sample","text":"abstract fun sample(): Boolean If an action should be taken based on the implementation\u2019s policy, returns true","title":"sample"},{"location":"0.x/misk-core/misk.sampling/-sampler/sampled-call.html","text":"misk-core / misk.sampling / Sampler / sampledCall sampledCall \u00b6 open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"sampledCall - Misk"},{"location":"0.x/misk-core/misk.sampling/-sampler/sampled-call.html#sampledcall","text":"open fun sampledCall(f: () -> Unit ): Unit If sample returns true, runs the given lambda","title":"sampledCall"},{"location":"0.x/misk-core/misk.security.ssl/index.html","text":"misk-core / misk.security.ssl Package misk.security.ssl \u00b6 Types \u00b6 Name Summary CertStoreConfig data class CertStoreConfig SslContextFactory class SslContextFactory SslLoader class SslLoader Loads keys and certificates from the file system. TrustStoreConfig data class TrustStoreConfig Type Aliases \u00b6 Name Summary CertificateAndKey typealias CertificateAndKey = CertificateAndKey CertStore typealias CertStore = CertStore A certificate and its private key. TrustStore typealias TrustStore = TrustStore A set of trusted root certificates. Extensions for External Classes \u00b6 Name Summary java.security.KeyStore","title":"Package misk.security.ssl - Misk"},{"location":"0.x/misk-core/misk.security.ssl/index.html#package-misksecurityssl","text":"","title":"Package misk.security.ssl"},{"location":"0.x/misk-core/misk.security.ssl/index.html#types","text":"Name Summary CertStoreConfig data class CertStoreConfig SslContextFactory class SslContextFactory SslLoader class SslLoader Loads keys and certificates from the file system. TrustStoreConfig data class TrustStoreConfig","title":"Types"},{"location":"0.x/misk-core/misk.security.ssl/index.html#type-aliases","text":"Name Summary CertificateAndKey typealias CertificateAndKey = CertificateAndKey CertStore typealias CertStore = CertStore A certificate and its private key. TrustStore typealias TrustStore = TrustStore A set of trusted root certificates.","title":"Type Aliases"},{"location":"0.x/misk-core/misk.security.ssl/index.html#extensions-for-external-classes","text":"Name Summary java.security.KeyStore","title":"Extensions for External Classes"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store.html","text":"misk-core / misk.security.ssl / CertStore CertStore \u00b6 typealias CertStore = CertStore A certificate and its private key.","title":"CertStore - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store.html#certstore","text":"typealias CertStore = CertStore A certificate and its private key.","title":"CertStore"},{"location":"0.x/misk-core/misk.security.ssl/-certificate-and-key.html","text":"misk-core / misk.security.ssl / CertificateAndKey CertificateAndKey \u00b6 typealias CertificateAndKey = CertificateAndKey","title":"CertificateAndKey - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-certificate-and-key.html#certificateandkey","text":"typealias CertificateAndKey = CertificateAndKey","title":"CertificateAndKey"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store.html","text":"misk-core / misk.security.ssl / TrustStore TrustStore \u00b6 typealias TrustStore = TrustStore A set of trusted root certificates.","title":"TrustStore - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store.html#truststore","text":"typealias TrustStore = TrustStore A set of trusted root certificates.","title":"TrustStore"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/index.html","text":"misk-core / misk.security.ssl / CertStoreConfig CertStoreConfig \u00b6 data class CertStoreConfig Constructors \u00b6 Name Summary <init> CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS) Properties \u00b6 Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String Functions \u00b6 Name Summary toWispConfig fun toWispConfig(): CertStoreConfig","title":"CertStoreConfig - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/index.html#certstoreconfig","text":"data class CertStoreConfig","title":"CertStoreConfig"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/index.html#constructors","text":"Name Summary <init> CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS)","title":"Constructors"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/index.html#properties","text":"Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String","title":"Properties"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/index.html#functions","text":"Name Summary toWispConfig fun toWispConfig(): CertStoreConfig","title":"Functions"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/-init-.html","text":"misk-core / misk.security.ssl / CertStoreConfig / <init> <init> \u00b6 CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS)","title":" init "},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/-init-.html#init","text":"CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS)","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/format.html","text":"misk-core / misk.security.ssl / CertStoreConfig / format format \u00b6 val format: String","title":"format - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/format.html#format","text":"val format: String","title":"format"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/passphrase.html","text":"misk-core / misk.security.ssl / CertStoreConfig / passphrase passphrase \u00b6 val passphrase: String ?","title":"passphrase - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/passphrase.html#passphrase","text":"val passphrase: String ?","title":"passphrase"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/resource.html","text":"misk-core / misk.security.ssl / CertStoreConfig / resource resource \u00b6 val resource: String","title":"resource - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/resource.html#resource","text":"val resource: String","title":"resource"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/to-wisp-config.html","text":"misk-core / misk.security.ssl / CertStoreConfig / toWispConfig toWispConfig \u00b6 fun toWispConfig(): CertStoreConfig","title":"toWispConfig - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-cert-store-config/to-wisp-config.html#towispconfig","text":"fun toWispConfig(): CertStoreConfig","title":"toWispConfig"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/index.html","text":"misk-core / misk.security.ssl / SslContextFactory SslContextFactory \u00b6 class SslContextFactory Constructors \u00b6 Name Summary <init> SslContextFactory(sslLoader: SslLoader ) Properties \u00b6 Name Summary delegate val delegate: SslContextFactory Functions \u00b6 Name Summary create fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext loadTrustManagers fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager >","title":"SslContextFactory - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/index.html#sslcontextfactory","text":"class SslContextFactory","title":"SslContextFactory"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/index.html#constructors","text":"Name Summary <init> SslContextFactory(sslLoader: SslLoader )","title":"Constructors"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/index.html#properties","text":"Name Summary delegate val delegate: SslContextFactory","title":"Properties"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/index.html#functions","text":"Name Summary create fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext loadTrustManagers fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager >","title":"Functions"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/-init-.html","text":"misk-core / misk.security.ssl / SslContextFactory / <init> <init> \u00b6 SslContextFactory(sslLoader: SslLoader )","title":" init "},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/-init-.html#init","text":"SslContextFactory(sslLoader: SslLoader )","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/create.html","text":"misk-core / misk.security.ssl / SslContextFactory / create create \u00b6 fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext Return A new SSLContext for the given certstore and optional truststore config","title":"create - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/create.html#create","text":"fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext Return A new SSLContext for the given certstore and optional truststore config","title":"create"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/delegate.html","text":"misk-core / misk.security.ssl / SslContextFactory / delegate delegate \u00b6 val delegate: SslContextFactory","title":"delegate - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/delegate.html#delegate","text":"val delegate: SslContextFactory","title":"delegate"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/load-trust-managers.html","text":"misk-core / misk.security.ssl / SslContextFactory / loadTrustManagers loadTrustManagers \u00b6 fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager > Return a set of TrustManager s based on the certificates in the given truststore","title":"loadTrustManagers - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-context-factory/load-trust-managers.html#loadtrustmanagers","text":"fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager > Return a set of TrustManager s based on the certificates in the given truststore","title":"loadTrustManagers"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/index.html","text":"misk-core / misk.security.ssl / SslLoader SslLoader \u00b6 class SslLoader Loads keys and certificates from the file system. Properties \u00b6 Name Summary delegate val delegate: SslLoader resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary loadCertStore fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore? loadTrustStore fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore? Companion Object Properties \u00b6 Name Summary FORMAT_JCEKS const val FORMAT_JCEKS: String FORMAT_JKS const val FORMAT_JKS: String FORMAT_PEM const val FORMAT_PEM: String","title":"SslLoader - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/index.html#sslloader","text":"class SslLoader Loads keys and certificates from the file system.","title":"SslLoader"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/index.html#properties","text":"Name Summary delegate val delegate: SslLoader resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/index.html#functions","text":"Name Summary loadCertStore fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore? loadTrustStore fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore?","title":"Functions"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/index.html#companion-object-properties","text":"Name Summary FORMAT_JCEKS const val FORMAT_JCEKS: String FORMAT_JKS const val FORMAT_JKS: String FORMAT_PEM const val FORMAT_PEM: String","title":"Companion Object Properties"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-c-e-k-s.html","text":"misk-core / misk.security.ssl / SslLoader / FORMAT_JCEKS FORMAT_JCEKS \u00b6 const val FORMAT_JCEKS: String","title":"FORMAT_JCEKS - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-c-e-k-s.html#format_jceks","text":"const val FORMAT_JCEKS: String","title":"FORMAT_JCEKS"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-k-s.html","text":"misk-core / misk.security.ssl / SslLoader / FORMAT_JKS FORMAT_JKS \u00b6 const val FORMAT_JKS: String","title":"FORMAT_JKS - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-k-s.html#format_jks","text":"const val FORMAT_JKS: String","title":"FORMAT_JKS"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/-f-o-r-m-a-t_-p-e-m.html","text":"misk-core / misk.security.ssl / SslLoader / FORMAT_PEM FORMAT_PEM \u00b6 const val FORMAT_PEM: String","title":"FORMAT_PEM - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/-f-o-r-m-a-t_-p-e-m.html#format_pem","text":"const val FORMAT_PEM: String","title":"FORMAT_PEM"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/delegate.html","text":"misk-core / misk.security.ssl / SslLoader / delegate delegate \u00b6 val delegate: SslLoader","title":"delegate - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/delegate.html#delegate","text":"val delegate: SslLoader","title":"delegate"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/load-cert-store.html","text":"misk-core / misk.security.ssl / SslLoader / loadCertStore loadCertStore \u00b6 fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore?","title":"loadCertStore - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/load-cert-store.html#loadcertstore","text":"fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore?","title":"loadCertStore"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/load-trust-store.html","text":"misk-core / misk.security.ssl / SslLoader / loadTrustStore loadTrustStore \u00b6 fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore?","title":"loadTrustStore - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/load-trust-store.html#loadtruststore","text":"fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore?","title":"loadTrustStore"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/resource-loader.html","text":"misk-core / misk.security.ssl / SslLoader / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-ssl-loader/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/index.html","text":"misk-core / misk.security.ssl / TrustStoreConfig TrustStoreConfig \u00b6 data class TrustStoreConfig Constructors \u00b6 Name Summary <init> TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS) Properties \u00b6 Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String Functions \u00b6 Name Summary toWispConfig fun toWispConfig(): TrustStoreConfig","title":"TrustStoreConfig - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/index.html#truststoreconfig","text":"data class TrustStoreConfig","title":"TrustStoreConfig"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/index.html#constructors","text":"Name Summary <init> TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS)","title":"Constructors"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/index.html#properties","text":"Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String","title":"Properties"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/index.html#functions","text":"Name Summary toWispConfig fun toWispConfig(): TrustStoreConfig","title":"Functions"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/-init-.html","text":"misk-core / misk.security.ssl / TrustStoreConfig / <init> <init> \u00b6 TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS)","title":" init "},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/-init-.html#init","text":"TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS)","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/format.html","text":"misk-core / misk.security.ssl / TrustStoreConfig / format format \u00b6 val format: String","title":"format - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/format.html#format","text":"val format: String","title":"format"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/passphrase.html","text":"misk-core / misk.security.ssl / TrustStoreConfig / passphrase passphrase \u00b6 val passphrase: String ?","title":"passphrase - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/passphrase.html#passphrase","text":"val passphrase: String ?","title":"passphrase"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/resource.html","text":"misk-core / misk.security.ssl / TrustStoreConfig / resource resource \u00b6 val resource: String","title":"resource - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/resource.html#resource","text":"val resource: String","title":"resource"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/to-wisp-config.html","text":"misk-core / misk.security.ssl / TrustStoreConfig / toWispConfig toWispConfig \u00b6 fun toWispConfig(): TrustStoreConfig","title":"toWispConfig - Misk"},{"location":"0.x/misk-core/misk.security.ssl/-trust-store-config/to-wisp-config.html#towispconfig","text":"fun toWispConfig(): TrustStoreConfig","title":"toWispConfig"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/index.html","text":"misk-core / misk.security.ssl / java.security.KeyStore Extensions for java.security.KeyStore \u00b6 Name Summary aliasesOfType fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > fun <T : Entry > KeyStore .aliasesOfType(): List < String > getCertificateAndKey fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey? getPrivateKey fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey getX509Certificate fun KeyStore .getX509Certificate(alias: String ): X509Certificate fun KeyStore .getX509Certificate(): X509Certificate getX509CertificateChain fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > fun KeyStore .getX509CertificateChain(): Array < X509Certificate > onlyAlias val KeyStore .onlyAlias: String","title":"Extensions for java.security.KeyStore - Misk"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/index.html#extensions-for-javasecuritykeystore","text":"Name Summary aliasesOfType fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > fun <T : Entry > KeyStore .aliasesOfType(): List < String > getCertificateAndKey fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey? getPrivateKey fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey getX509Certificate fun KeyStore .getX509Certificate(alias: String ): X509Certificate fun KeyStore .getX509Certificate(): X509Certificate getX509CertificateChain fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > fun KeyStore .getX509CertificateChain(): Array < X509Certificate > onlyAlias val KeyStore .onlyAlias: String","title":"Extensions for java.security.KeyStore"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/aliases-of-type.html","text":"misk-core / misk.security.ssl / java.security.KeyStore / aliasesOfType aliasesOfType \u00b6 fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > Return all aliases present in the keystore of a given entry type. inline fun <reified T : Entry > KeyStore .aliasesOfType(): List < String >","title":"aliasesOfType - Misk"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/aliases-of-type.html#aliasesoftype","text":"fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > Return all aliases present in the keystore of a given entry type. inline fun <reified T : Entry > KeyStore .aliasesOfType(): List < String >","title":"aliasesOfType"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-certificate-and-key.html","text":"misk-core / misk.security.ssl / java.security.KeyStore / getCertificateAndKey getCertificateAndKey \u00b6 fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? Return the certificate and key pair for the given alias fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey? Return the one and only CertificateAndKey in the keystore","title":"getCertificateAndKey - Misk"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-certificate-and-key.html#getcertificateandkey","text":"fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? Return the certificate and key pair for the given alias fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey? Return the one and only CertificateAndKey in the keystore","title":"getCertificateAndKey"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-private-key.html","text":"misk-core / misk.security.ssl / java.security.KeyStore / getPrivateKey getPrivateKey \u00b6 fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey Return the PrivateKey with the given alias fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey Return the one and only PrivateKey in the keystore","title":"getPrivateKey - Misk"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-private-key.html#getprivatekey","text":"fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey Return the PrivateKey with the given alias fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey Return the one and only PrivateKey in the keystore","title":"getPrivateKey"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-x509-certificate-chain.html","text":"misk-core / misk.security.ssl / java.security.KeyStore / getX509CertificateChain getX509CertificateChain \u00b6 fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > Return the X509Certificate chain with the provided alias fun KeyStore .getX509CertificateChain(): Array < X509Certificate > Return the one and only X509Certificate chain in the keystore","title":"getX509CertificateChain - Misk"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-x509-certificate-chain.html#getx509certificatechain","text":"fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > Return the X509Certificate chain with the provided alias fun KeyStore .getX509CertificateChain(): Array < X509Certificate > Return the one and only X509Certificate chain in the keystore","title":"getX509CertificateChain"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-x509-certificate.html","text":"misk-core / misk.security.ssl / java.security.KeyStore / getX509Certificate getX509Certificate \u00b6 fun KeyStore .getX509Certificate(alias: String ): X509Certificate Return The X509Certificate with the provided alias fun KeyStore .getX509Certificate(): X509Certificate Return the one and only X509Certificate in the keystore","title":"getX509Certificate - Misk"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/get-x509-certificate.html#getx509certificate","text":"fun KeyStore .getX509Certificate(alias: String ): X509Certificate Return The X509Certificate with the provided alias fun KeyStore .getX509Certificate(): X509Certificate Return the one and only X509Certificate in the keystore","title":"getX509Certificate"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/only-alias.html","text":"misk-core / misk.security.ssl / java.security.KeyStore / onlyAlias onlyAlias \u00b6 val KeyStore .onlyAlias: String Return the only alias in the keystore, if the keystore only has a single entry","title":"onlyAlias - Misk"},{"location":"0.x/misk-core/misk.security.ssl/java.security.-key-store/only-alias.html#onlyalias","text":"val KeyStore .onlyAlias: String Return the only alias in the keystore, if the keystore only has a single entry","title":"onlyAlias"},{"location":"0.x/misk-core/misk.tokens/index.html","text":"misk-core / misk.tokens Package misk.tokens \u00b6 Types \u00b6 Name Summary FakeTokenGenerator class FakeTokenGenerator : TokenGenerator FakeTokenGeneratorModule class FakeTokenGeneratorModule : KAbstractModule RealTokenGenerator class RealTokenGenerator : TokenGenerator TokenGenerator interface TokenGenerator Generates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a Crockford Base32 alphabet . This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0 , o , and \u2018O\u2019 are equivalent. TokenGeneratorModule class TokenGeneratorModule : KAbstractModule","title":"Package misk.tokens - Misk"},{"location":"0.x/misk-core/misk.tokens/index.html#package-misktokens","text":"","title":"Package misk.tokens"},{"location":"0.x/misk-core/misk.tokens/index.html#types","text":"Name Summary FakeTokenGenerator class FakeTokenGenerator : TokenGenerator FakeTokenGeneratorModule class FakeTokenGeneratorModule : KAbstractModule RealTokenGenerator class RealTokenGenerator : TokenGenerator TokenGenerator interface TokenGenerator Generates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a Crockford Base32 alphabet . This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0 , o , and \u2018O\u2019 are equivalent. TokenGeneratorModule class TokenGeneratorModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/index.html","text":"misk-core / misk.tokens / FakeTokenGenerator FakeTokenGenerator \u00b6 @Singleton class FakeTokenGenerator : TokenGenerator Constructors \u00b6 Name Summary <init> FakeTokenGenerator() Functions \u00b6 Name Summary generate fun generate(label: String ?, length: Int ): String","title":"FakeTokenGenerator - Misk"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/index.html#faketokengenerator","text":"@Singleton class FakeTokenGenerator : TokenGenerator","title":"FakeTokenGenerator"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/index.html#constructors","text":"Name Summary <init> FakeTokenGenerator()","title":"Constructors"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/index.html#functions","text":"Name Summary generate fun generate(label: String ?, length: Int ): String","title":"Functions"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/-init-.html","text":"misk-core / misk.tokens / FakeTokenGenerator / <init> <init> \u00b6 FakeTokenGenerator()","title":" init "},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/-init-.html#init","text":"FakeTokenGenerator()","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/generate.html","text":"misk-core / misk.tokens / FakeTokenGenerator / generate generate \u00b6 fun generate(label: String ?, length: Int ): String Overrides TokenGenerator.generate","title":"generate - Misk"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator/generate.html#generate","text":"fun generate(label: String ?, length: Int ): String Overrides TokenGenerator.generate","title":"generate"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/index.html","text":"misk-core / misk.tokens / FakeTokenGeneratorModule FakeTokenGeneratorModule \u00b6 class FakeTokenGeneratorModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeTokenGeneratorModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeTokenGeneratorModule - Misk"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/index.html#faketokengeneratormodule","text":"class FakeTokenGeneratorModule : KAbstractModule","title":"FakeTokenGeneratorModule"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/index.html#constructors","text":"Name Summary <init> FakeTokenGeneratorModule()","title":"Constructors"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/-init-.html","text":"misk-core / misk.tokens / FakeTokenGeneratorModule / <init> <init> \u00b6 FakeTokenGeneratorModule()","title":" init "},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/-init-.html#init","text":"FakeTokenGeneratorModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/configure.html","text":"misk-core / misk.tokens / FakeTokenGeneratorModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-core/misk.tokens/-fake-token-generator-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/index.html","text":"misk-core / misk.tokens / RealTokenGenerator RealTokenGenerator \u00b6 @Singleton class RealTokenGenerator : TokenGenerator Constructors \u00b6 Name Summary <init> RealTokenGenerator() Functions \u00b6 Name Summary generate fun generate(label: String ?, length: Int ): String","title":"RealTokenGenerator - Misk"},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/index.html#realtokengenerator","text":"@Singleton class RealTokenGenerator : TokenGenerator","title":"RealTokenGenerator"},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/index.html#constructors","text":"Name Summary <init> RealTokenGenerator()","title":"Constructors"},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/index.html#functions","text":"Name Summary generate fun generate(label: String ?, length: Int ): String","title":"Functions"},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/-init-.html","text":"misk-core / misk.tokens / RealTokenGenerator / <init> <init> \u00b6 RealTokenGenerator()","title":" init "},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/-init-.html#init","text":"RealTokenGenerator()","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/generate.html","text":"misk-core / misk.tokens / RealTokenGenerator / generate generate \u00b6 fun generate(label: String ?, length: Int ): String Overrides TokenGenerator.generate","title":"generate - Misk"},{"location":"0.x/misk-core/misk.tokens/-real-token-generator/generate.html#generate","text":"fun generate(label: String ?, length: Int ): String Overrides TokenGenerator.generate","title":"generate"},{"location":"0.x/misk-core/misk.tokens/-token-generator/index.html","text":"misk-core / misk.tokens / TokenGenerator TokenGenerator \u00b6 interface TokenGenerator Generates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a Crockford Base32 alphabet . This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0 , o , and \u2018O\u2019 are equivalent. For strength similar to a random UUID (122 bits of entropy), most callers should use the default length of 25 characters (125 bits). Using fewer characters risks collision, which may be acceptable for some use-cases. There is no practical benefit to using more than 25 characters. In production, staging, and development environments tokens are always created using SecureRandom . These are some sample production tokens: 75dsma7kscyvbgz7ea1yy3qe8 3zg6svk9hcpvqyhej41tdkaa0 gv7s8nkevt9d7aw2eb06g640e a17f7h6t853kzdqpc29qa8mnw In tests tokens are sequential and predictable. They are prefixed with an optional label that appears in the returned string and can be used as a namespace. It is okay to hardcode expected tokens in test cases! These are some sample testing tokens: cst0mer000000000000000035 payment000000000000000034 cst0mer000000000000000036 payment000000000000000035 Functions \u00b6 Name Summary generate abstract fun generate(label: String ? = null, length: Int = 25): String Companion Object Functions \u00b6 Name Summary canonicalize fun canonicalize(token: String ): String Returns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0 . Spaces are omitted. Inheritors \u00b6 Name Summary FakeTokenGenerator class FakeTokenGenerator : TokenGenerator RealTokenGenerator class RealTokenGenerator : TokenGenerator","title":"TokenGenerator - Misk"},{"location":"0.x/misk-core/misk.tokens/-token-generator/index.html#tokengenerator","text":"interface TokenGenerator Generates an secure, unguessable, alphanumeric token for use as a universally unique ID. Tokens are encoded with a Crockford Base32 alphabet . This alphabet contains a mix of lowercase characters and digits and is resistant to decoding errors; for example 0 , o , and \u2018O\u2019 are equivalent. For strength similar to a random UUID (122 bits of entropy), most callers should use the default length of 25 characters (125 bits). Using fewer characters risks collision, which may be acceptable for some use-cases. There is no practical benefit to using more than 25 characters. In production, staging, and development environments tokens are always created using SecureRandom . These are some sample production tokens: 75dsma7kscyvbgz7ea1yy3qe8 3zg6svk9hcpvqyhej41tdkaa0 gv7s8nkevt9d7aw2eb06g640e a17f7h6t853kzdqpc29qa8mnw In tests tokens are sequential and predictable. They are prefixed with an optional label that appears in the returned string and can be used as a namespace. It is okay to hardcode expected tokens in test cases! These are some sample testing tokens: cst0mer000000000000000035 payment000000000000000034 cst0mer000000000000000036 payment000000000000000035","title":"TokenGenerator"},{"location":"0.x/misk-core/misk.tokens/-token-generator/index.html#functions","text":"Name Summary generate abstract fun generate(label: String ? = null, length: Int = 25): String","title":"Functions"},{"location":"0.x/misk-core/misk.tokens/-token-generator/index.html#companion-object-functions","text":"Name Summary canonicalize fun canonicalize(token: String ): String Returns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0 . Spaces are omitted.","title":"Companion Object Functions"},{"location":"0.x/misk-core/misk.tokens/-token-generator/index.html#inheritors","text":"Name Summary FakeTokenGenerator class FakeTokenGenerator : TokenGenerator RealTokenGenerator class RealTokenGenerator : TokenGenerator","title":"Inheritors"},{"location":"0.x/misk-core/misk.tokens/-token-generator/canonicalize.html","text":"misk-core / misk.tokens / TokenGenerator / canonicalize canonicalize \u00b6 fun canonicalize(token: String ): String Returns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0 . Spaces are omitted. Call this when accepting tokens that may have been transcribed by a user. It is not necessary to canonicalize tokens that haven\u2019t been manually entered; they will already be in canonical form. Exceptions \u00b6 IllegalArgumentException - if token contains a character that cannot be mapped and that is not a space.","title":"canonicalize - Misk"},{"location":"0.x/misk-core/misk.tokens/-token-generator/canonicalize.html#canonicalize","text":"fun canonicalize(token: String ): String Returns a token semantically equal to token but using only characters from the Crockford Base32 alphabet. This maps visually similar characters like o to the corresponding encoding character like 0 . Spaces are omitted. Call this when accepting tokens that may have been transcribed by a user. It is not necessary to canonicalize tokens that haven\u2019t been manually entered; they will already be in canonical form.","title":"canonicalize"},{"location":"0.x/misk-core/misk.tokens/-token-generator/canonicalize.html#exceptions","text":"IllegalArgumentException - if token contains a character that cannot be mapped and that is not a space.","title":"Exceptions"},{"location":"0.x/misk-core/misk.tokens/-token-generator/generate.html","text":"misk-core / misk.tokens / TokenGenerator / generate generate \u00b6 abstract fun generate(label: String ? = null, length: Int = 25): String","title":"generate - Misk"},{"location":"0.x/misk-core/misk.tokens/-token-generator/generate.html#generate","text":"abstract fun generate(label: String ? = null, length: Int = 25): String","title":"generate"},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/index.html","text":"misk-core / misk.tokens / TokenGeneratorModule TokenGeneratorModule \u00b6 class TokenGeneratorModule : KAbstractModule Constructors \u00b6 Name Summary <init> TokenGeneratorModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"TokenGeneratorModule - Misk"},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/index.html#tokengeneratormodule","text":"class TokenGeneratorModule : KAbstractModule","title":"TokenGeneratorModule"},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/index.html#constructors","text":"Name Summary <init> TokenGeneratorModule()","title":"Constructors"},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/-init-.html","text":"misk-core / misk.tokens / TokenGeneratorModule / <init> <init> \u00b6 TokenGeneratorModule()","title":" init "},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/-init-.html#init","text":"TokenGeneratorModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/configure.html","text":"misk-core / misk.tokens / TokenGeneratorModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-core/misk.tokens/-token-generator-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-core/misk.web.mediatype/index.html","text":"misk-core / misk.web.mediatype Package misk.web.mediatype \u00b6 Types \u00b6 Name Summary MediaRange data class MediaRange : Comparable < MediaRange > An RFC-2616 media range MediaTypes object MediaTypes Extensions for External Classes \u00b6 Name Summary kotlin.String okhttp3.MediaType","title":"Package misk.web.mediatype - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/index.html#package-miskwebmediatype","text":"","title":"Package misk.web.mediatype"},{"location":"0.x/misk-core/misk.web.mediatype/index.html#types","text":"Name Summary MediaRange data class MediaRange : Comparable < MediaRange > An RFC-2616 media range MediaTypes object MediaTypes","title":"Types"},{"location":"0.x/misk-core/misk.web.mediatype/index.html#extensions-for-external-classes","text":"Name Summary kotlin.String okhttp3.MediaType","title":"Extensions for External Classes"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html","text":"misk-core / misk.web.mediatype / MediaRange MediaRange \u00b6 data class MediaRange : Comparable < MediaRange > An RFC-2616 media range Types \u00b6 Name Summary Matcher class Matcher : Comparable < MediaRange.Matcher > Constructors \u00b6 Name Summary <init> MediaRange(type: String , subtype: String , charset: Charset ? = null, qualityFactor: Double = 1.0, parameters: Map < String , String > = mapOf(), extensions: Map < String , String > = mapOf(), rawText: String ) An RFC-2616 media range Properties \u00b6 Name Summary charset val charset: Charset ? extensions val extensions: Map < String , String > parameters val parameters: Map < String , String > qualityFactor val qualityFactor: Double subtype val subtype: String type val type: String Functions \u00b6 Name Summary compareTo fun compareTo(other: MediaRange ): Int matcher fun matcher(mediaType: MediaType): MediaRange.Matcher ? toString fun toString(): String Companion Object Properties \u00b6 Name Summary ALL_MEDIA val ALL_MEDIA: MediaRange WILDCARD const val WILDCARD: String Companion Object Functions \u00b6 Name Summary parse fun parse(s: String ): MediaRange parseRanges fun parseRanges(s: String ): List < MediaRange >","title":"MediaRange - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html#mediarange","text":"data class MediaRange : Comparable < MediaRange > An RFC-2616 media range","title":"MediaRange"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html#types","text":"Name Summary Matcher class Matcher : Comparable < MediaRange.Matcher >","title":"Types"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html#constructors","text":"Name Summary <init> MediaRange(type: String , subtype: String , charset: Charset ? = null, qualityFactor: Double = 1.0, parameters: Map < String , String > = mapOf(), extensions: Map < String , String > = mapOf(), rawText: String ) An RFC-2616 media range","title":"Constructors"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html#properties","text":"Name Summary charset val charset: Charset ? extensions val extensions: Map < String , String > parameters val parameters: Map < String , String > qualityFactor val qualityFactor: Double subtype val subtype: String type val type: String","title":"Properties"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html#functions","text":"Name Summary compareTo fun compareTo(other: MediaRange ): Int matcher fun matcher(mediaType: MediaType): MediaRange.Matcher ? toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html#companion-object-properties","text":"Name Summary ALL_MEDIA val ALL_MEDIA: MediaRange WILDCARD const val WILDCARD: String","title":"Companion Object Properties"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/index.html#companion-object-functions","text":"Name Summary parse fun parse(s: String ): MediaRange parseRanges fun parseRanges(s: String ): List < MediaRange >","title":"Companion Object Functions"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-a-l-l_-m-e-d-i-a.html","text":"misk-core / misk.web.mediatype / MediaRange / ALL_MEDIA ALL_MEDIA \u00b6 val ALL_MEDIA: MediaRange","title":"ALL_MEDIA - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-a-l-l_-m-e-d-i-a.html#all_media","text":"val ALL_MEDIA: MediaRange","title":"ALL_MEDIA"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-init-.html","text":"misk-core / misk.web.mediatype / MediaRange / <init> <init> \u00b6 MediaRange(type: String , subtype: String , charset: Charset ? = null, qualityFactor: Double = 1.0, parameters: Map < String , String > = mapOf(), extensions: Map < String , String > = mapOf(), rawText: String ) An RFC-2616 media range","title":" init "},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-init-.html#init","text":"MediaRange(type: String , subtype: String , charset: Charset ? = null, qualityFactor: Double = 1.0, parameters: Map < String , String > = mapOf(), extensions: Map < String , String > = mapOf(), rawText: String ) An RFC-2616 media range","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-w-i-l-d-c-a-r-d.html","text":"misk-core / misk.web.mediatype / MediaRange / WILDCARD WILDCARD \u00b6 const val WILDCARD: String","title":"WILDCARD - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-w-i-l-d-c-a-r-d.html#wildcard","text":"const val WILDCARD: String","title":"WILDCARD"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/charset.html","text":"misk-core / misk.web.mediatype / MediaRange / charset charset \u00b6 val charset: Charset ?","title":"charset - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/charset.html#charset","text":"val charset: Charset ?","title":"charset"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/compare-to.html","text":"misk-core / misk.web.mediatype / MediaRange / compareTo compareTo \u00b6 fun compareTo(other: MediaRange ): Int","title":"compareTo - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/compare-to.html#compareto","text":"fun compareTo(other: MediaRange ): Int","title":"compareTo"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/extensions.html","text":"misk-core / misk.web.mediatype / MediaRange / extensions extensions \u00b6 val extensions: Map < String , String >","title":"extensions - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/extensions.html#extensions","text":"val extensions: Map < String , String >","title":"extensions"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/matcher.html","text":"misk-core / misk.web.mediatype / MediaRange / matcher matcher \u00b6 fun matcher(mediaType: MediaType): MediaRange.Matcher ?","title":"matcher - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/matcher.html#matcher","text":"fun matcher(mediaType: MediaType): MediaRange.Matcher ?","title":"matcher"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/parameters.html","text":"misk-core / misk.web.mediatype / MediaRange / parameters parameters \u00b6 val parameters: Map < String , String >","title":"parameters - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/parameters.html#parameters","text":"val parameters: Map < String , String >","title":"parameters"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/parse-ranges.html","text":"misk-core / misk.web.mediatype / MediaRange / parseRanges parseRanges \u00b6 fun parseRanges(s: String ): List < MediaRange >","title":"parseRanges - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/parse-ranges.html#parseranges","text":"fun parseRanges(s: String ): List < MediaRange >","title":"parseRanges"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/parse.html","text":"misk-core / misk.web.mediatype / MediaRange / parse parse \u00b6 fun parse(s: String ): MediaRange","title":"parse - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/parse.html#parse","text":"fun parse(s: String ): MediaRange","title":"parse"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/quality-factor.html","text":"misk-core / misk.web.mediatype / MediaRange / qualityFactor qualityFactor \u00b6 val qualityFactor: Double","title":"qualityFactor - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/quality-factor.html#qualityfactor","text":"val qualityFactor: Double","title":"qualityFactor"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/subtype.html","text":"misk-core / misk.web.mediatype / MediaRange / subtype subtype \u00b6 val subtype: String","title":"subtype - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/subtype.html#subtype","text":"val subtype: String","title":"subtype"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/to-string.html","text":"misk-core / misk.web.mediatype / MediaRange / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/type.html","text":"misk-core / misk.web.mediatype / MediaRange / type type \u00b6 val type: String","title":"type - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/type.html#type","text":"val type: String","title":"type"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/index.html","text":"misk-core / misk.web.mediatype / MediaRange / Matcher Matcher \u00b6 class Matcher : Comparable < MediaRange.Matcher > Constructors \u00b6 Name Summary <init> Matcher(mediaRange: MediaRange , matchesCharset: Boolean = false) Properties \u00b6 Name Summary matchesCharset val matchesCharset: Boolean mediaRange val mediaRange: MediaRange Functions \u00b6 Name Summary compareTo fun compareTo(other: MediaRange.Matcher ): Int toString fun toString(): String","title":"Matcher - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/index.html#matcher","text":"class Matcher : Comparable < MediaRange.Matcher >","title":"Matcher"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/index.html#constructors","text":"Name Summary <init> Matcher(mediaRange: MediaRange , matchesCharset: Boolean = false)","title":"Constructors"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/index.html#properties","text":"Name Summary matchesCharset val matchesCharset: Boolean mediaRange val mediaRange: MediaRange","title":"Properties"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/index.html#functions","text":"Name Summary compareTo fun compareTo(other: MediaRange.Matcher ): Int toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/-init-.html","text":"misk-core / misk.web.mediatype / MediaRange / Matcher / <init> <init> \u00b6 Matcher(mediaRange: MediaRange , matchesCharset: Boolean = false)","title":" init "},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/-init-.html#init","text":"Matcher(mediaRange: MediaRange , matchesCharset: Boolean = false)","title":"&lt;init&gt;"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/compare-to.html","text":"misk-core / misk.web.mediatype / MediaRange / Matcher / compareTo compareTo \u00b6 fun compareTo(other: MediaRange.Matcher ): Int","title":"compareTo - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/compare-to.html#compareto","text":"fun compareTo(other: MediaRange.Matcher ): Int","title":"compareTo"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/matches-charset.html","text":"misk-core / misk.web.mediatype / MediaRange / Matcher / matchesCharset matchesCharset \u00b6 val matchesCharset: Boolean","title":"matchesCharset - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/matches-charset.html#matchescharset","text":"val matchesCharset: Boolean","title":"matchesCharset"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/media-range.html","text":"misk-core / misk.web.mediatype / MediaRange / Matcher / mediaRange mediaRange \u00b6 val mediaRange: MediaRange","title":"mediaRange - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/media-range.html#mediarange","text":"val mediaRange: MediaRange","title":"mediaRange"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/to-string.html","text":"misk-core / misk.web.mediatype / MediaRange / Matcher / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-range/-matcher/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/index.html","text":"misk-core / misk.web.mediatype / MediaTypes MediaTypes \u00b6 object MediaTypes Properties \u00b6 Name Summary ALL const val ALL: String ALL_MEDIA_TYPE val ALL_MEDIA_TYPE: MediaType APPLICATION_FORM_URLENCODED const val APPLICATION_FORM_URLENCODED: String APPLICATION_GRPC const val APPLICATION_GRPC: String APPLICATION_GRPC_MEDIA_TYPE val APPLICATION_GRPC_MEDIA_TYPE: MediaType APPLICATION_JAVASCRIPT const val APPLICATION_JAVASCRIPT: String APPLICATION_JAVASCRIPT_MEDIA_TYPE val APPLICATION_JAVASCRIPT_MEDIA_TYPE: MediaType APPLICATION_JSON const val APPLICATION_JSON: String APPLICATION_JSON_MEDIA_TYPE val APPLICATION_JSON_MEDIA_TYPE: MediaType APPLICATION_OCTETSTREAM const val APPLICATION_OCTETSTREAM: String APPLICATION_OCTETSTREAM_MEDIA_TYPE val APPLICATION_OCTETSTREAM_MEDIA_TYPE: MediaType APPLICATION_PROTOBUF const val APPLICATION_PROTOBUF: String APPLICATION_PROTOBUF_MEDIA_TYPE val APPLICATION_PROTOBUF_MEDIA_TYPE: MediaType IMAGE_PNG const val IMAGE_PNG: String IMAGE_PNG_MEDIA_TYPE val IMAGE_PNG_MEDIA_TYPE: MediaType TEXT_CSS const val TEXT_CSS: String TEXT_CSS_MEDIA_TYPE val TEXT_CSS_MEDIA_TYPE: MediaType TEXT_HTML const val TEXT_HTML: String TEXT_HTML_MEDIA_TYPE val TEXT_HTML_MEDIA_TYPE: MediaType TEXT_PLAIN_UTF8 const val TEXT_PLAIN_UTF8: String TEXT_PLAIN_UTF8_MEDIA_TYPE val TEXT_PLAIN_UTF8_MEDIA_TYPE: MediaType Functions \u00b6 Name Summary fromFileExtension fun fromFileExtension(ext: String ): MediaType","title":"MediaTypes - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/index.html#mediatypes","text":"object MediaTypes","title":"MediaTypes"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/index.html#properties","text":"Name Summary ALL const val ALL: String ALL_MEDIA_TYPE val ALL_MEDIA_TYPE: MediaType APPLICATION_FORM_URLENCODED const val APPLICATION_FORM_URLENCODED: String APPLICATION_GRPC const val APPLICATION_GRPC: String APPLICATION_GRPC_MEDIA_TYPE val APPLICATION_GRPC_MEDIA_TYPE: MediaType APPLICATION_JAVASCRIPT const val APPLICATION_JAVASCRIPT: String APPLICATION_JAVASCRIPT_MEDIA_TYPE val APPLICATION_JAVASCRIPT_MEDIA_TYPE: MediaType APPLICATION_JSON const val APPLICATION_JSON: String APPLICATION_JSON_MEDIA_TYPE val APPLICATION_JSON_MEDIA_TYPE: MediaType APPLICATION_OCTETSTREAM const val APPLICATION_OCTETSTREAM: String APPLICATION_OCTETSTREAM_MEDIA_TYPE val APPLICATION_OCTETSTREAM_MEDIA_TYPE: MediaType APPLICATION_PROTOBUF const val APPLICATION_PROTOBUF: String APPLICATION_PROTOBUF_MEDIA_TYPE val APPLICATION_PROTOBUF_MEDIA_TYPE: MediaType IMAGE_PNG const val IMAGE_PNG: String IMAGE_PNG_MEDIA_TYPE val IMAGE_PNG_MEDIA_TYPE: MediaType TEXT_CSS const val TEXT_CSS: String TEXT_CSS_MEDIA_TYPE val TEXT_CSS_MEDIA_TYPE: MediaType TEXT_HTML const val TEXT_HTML: String TEXT_HTML_MEDIA_TYPE val TEXT_HTML_MEDIA_TYPE: MediaType TEXT_PLAIN_UTF8 const val TEXT_PLAIN_UTF8: String TEXT_PLAIN_UTF8_MEDIA_TYPE val TEXT_PLAIN_UTF8_MEDIA_TYPE: MediaType","title":"Properties"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/index.html#functions","text":"Name Summary fromFileExtension fun fromFileExtension(ext: String ): MediaType","title":"Functions"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-l-l.html","text":"misk-core / misk.web.mediatype / MediaTypes / ALL ALL \u00b6 const val ALL: String","title":"ALL - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-l-l.html#all","text":"const val ALL: String","title":"ALL"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-l-l_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / ALL_MEDIA_TYPE ALL_MEDIA_TYPE \u00b6 val ALL_MEDIA_TYPE: MediaType","title":"ALL_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-l-l_-m-e-d-i-a_-t-y-p-e.html#all_media_type","text":"val ALL_MEDIA_TYPE: MediaType","title":"ALL_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-f-o-r-m_-u-r-l-e-n-c-o-d-e-d.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_FORM_URLENCODED APPLICATION_FORM_URLENCODED \u00b6 const val APPLICATION_FORM_URLENCODED: String","title":"APPLICATION_FORM_URLENCODED - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-f-o-r-m_-u-r-l-e-n-c-o-d-e-d.html#application_form_urlencoded","text":"const val APPLICATION_FORM_URLENCODED: String","title":"APPLICATION_FORM_URLENCODED"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_GRPC APPLICATION_GRPC \u00b6 const val APPLICATION_GRPC: String","title":"APPLICATION_GRPC - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c.html#application_grpc","text":"const val APPLICATION_GRPC: String","title":"APPLICATION_GRPC"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_GRPC_MEDIA_TYPE APPLICATION_GRPC_MEDIA_TYPE \u00b6 val APPLICATION_GRPC_MEDIA_TYPE: MediaType","title":"APPLICATION_GRPC_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-g-r-p-c_-m-e-d-i-a_-t-y-p-e.html#application_grpc_media_type","text":"val APPLICATION_GRPC_MEDIA_TYPE: MediaType","title":"APPLICATION_GRPC_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_JAVASCRIPT APPLICATION_JAVASCRIPT \u00b6 const val APPLICATION_JAVASCRIPT: String","title":"APPLICATION_JAVASCRIPT - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t.html#application_javascript","text":"const val APPLICATION_JAVASCRIPT: String","title":"APPLICATION_JAVASCRIPT"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_JAVASCRIPT_MEDIA_TYPE APPLICATION_JAVASCRIPT_MEDIA_TYPE \u00b6 val APPLICATION_JAVASCRIPT_MEDIA_TYPE: MediaType","title":"APPLICATION_JAVASCRIPT_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a-s-c-r-i-p-t_-m-e-d-i-a_-t-y-p-e.html#application_javascript_media_type","text":"val APPLICATION_JAVASCRIPT_MEDIA_TYPE: MediaType","title":"APPLICATION_JAVASCRIPT_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_JSON APPLICATION_JSON \u00b6 const val APPLICATION_JSON: String","title":"APPLICATION_JSON - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n.html#application_json","text":"const val APPLICATION_JSON: String","title":"APPLICATION_JSON"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_JSON_MEDIA_TYPE APPLICATION_JSON_MEDIA_TYPE \u00b6 val APPLICATION_JSON_MEDIA_TYPE: MediaType","title":"APPLICATION_JSON_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n_-m-e-d-i-a_-t-y-p-e.html#application_json_media_type","text":"val APPLICATION_JSON_MEDIA_TYPE: MediaType","title":"APPLICATION_JSON_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_OCTETSTREAM APPLICATION_OCTETSTREAM \u00b6 const val APPLICATION_OCTETSTREAM: String","title":"APPLICATION_OCTETSTREAM - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m.html#application_octetstream","text":"const val APPLICATION_OCTETSTREAM: String","title":"APPLICATION_OCTETSTREAM"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_OCTETSTREAM_MEDIA_TYPE APPLICATION_OCTETSTREAM_MEDIA_TYPE \u00b6 val APPLICATION_OCTETSTREAM_MEDIA_TYPE: MediaType","title":"APPLICATION_OCTETSTREAM_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t-s-t-r-e-a-m_-m-e-d-i-a_-t-y-p-e.html#application_octetstream_media_type","text":"val APPLICATION_OCTETSTREAM_MEDIA_TYPE: MediaType","title":"APPLICATION_OCTETSTREAM_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_PROTOBUF APPLICATION_PROTOBUF \u00b6 const val APPLICATION_PROTOBUF: String","title":"APPLICATION_PROTOBUF - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f.html#application_protobuf","text":"const val APPLICATION_PROTOBUF: String","title":"APPLICATION_PROTOBUF"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / APPLICATION_PROTOBUF_MEDIA_TYPE APPLICATION_PROTOBUF_MEDIA_TYPE \u00b6 val APPLICATION_PROTOBUF_MEDIA_TYPE: MediaType","title":"APPLICATION_PROTOBUF_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-a-p-p-l-i-c-a-t-i-o-n_-p-r-o-t-o-b-u-f_-m-e-d-i-a_-t-y-p-e.html#application_protobuf_media_type","text":"val APPLICATION_PROTOBUF_MEDIA_TYPE: MediaType","title":"APPLICATION_PROTOBUF_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g.html","text":"misk-core / misk.web.mediatype / MediaTypes / IMAGE_PNG IMAGE_PNG \u00b6 const val IMAGE_PNG: String","title":"IMAGE_PNG - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g.html#image_png","text":"const val IMAGE_PNG: String","title":"IMAGE_PNG"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / IMAGE_PNG_MEDIA_TYPE IMAGE_PNG_MEDIA_TYPE \u00b6 val IMAGE_PNG_MEDIA_TYPE: MediaType","title":"IMAGE_PNG_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-i-m-a-g-e_-p-n-g_-m-e-d-i-a_-t-y-p-e.html#image_png_media_type","text":"val IMAGE_PNG_MEDIA_TYPE: MediaType","title":"IMAGE_PNG_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s.html","text":"misk-core / misk.web.mediatype / MediaTypes / TEXT_CSS TEXT_CSS \u00b6 const val TEXT_CSS: String","title":"TEXT_CSS - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s.html#text_css","text":"const val TEXT_CSS: String","title":"TEXT_CSS"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / TEXT_CSS_MEDIA_TYPE TEXT_CSS_MEDIA_TYPE \u00b6 val TEXT_CSS_MEDIA_TYPE: MediaType","title":"TEXT_CSS_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-c-s-s_-m-e-d-i-a_-t-y-p-e.html#text_css_media_type","text":"val TEXT_CSS_MEDIA_TYPE: MediaType","title":"TEXT_CSS_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l.html","text":"misk-core / misk.web.mediatype / MediaTypes / TEXT_HTML TEXT_HTML \u00b6 const val TEXT_HTML: String","title":"TEXT_HTML - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l.html#text_html","text":"const val TEXT_HTML: String","title":"TEXT_HTML"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / TEXT_HTML_MEDIA_TYPE TEXT_HTML_MEDIA_TYPE \u00b6 val TEXT_HTML_MEDIA_TYPE: MediaType","title":"TEXT_HTML_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-h-t-m-l_-m-e-d-i-a_-t-y-p-e.html#text_html_media_type","text":"val TEXT_HTML_MEDIA_TYPE: MediaType","title":"TEXT_HTML_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8.html","text":"misk-core / misk.web.mediatype / MediaTypes / TEXT_PLAIN_UTF8 TEXT_PLAIN_UTF8 \u00b6 const val TEXT_PLAIN_UTF8: String","title":"TEXT_PLAIN_UTF8 - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8.html#text_plain_utf8","text":"const val TEXT_PLAIN_UTF8: String","title":"TEXT_PLAIN_UTF8"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8_-m-e-d-i-a_-t-y-p-e.html","text":"misk-core / misk.web.mediatype / MediaTypes / TEXT_PLAIN_UTF8_MEDIA_TYPE TEXT_PLAIN_UTF8_MEDIA_TYPE \u00b6 val TEXT_PLAIN_UTF8_MEDIA_TYPE: MediaType","title":"TEXT_PLAIN_UTF8_MEDIA_TYPE - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/-t-e-x-t_-p-l-a-i-n_-u-t-f8_-m-e-d-i-a_-t-y-p-e.html#text_plain_utf8_media_type","text":"val TEXT_PLAIN_UTF8_MEDIA_TYPE: MediaType","title":"TEXT_PLAIN_UTF8_MEDIA_TYPE"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/from-file-extension.html","text":"misk-core / misk.web.mediatype / MediaTypes / fromFileExtension fromFileExtension \u00b6 fun fromFileExtension(ext: String ): MediaType","title":"fromFileExtension - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/-media-types/from-file-extension.html#fromfileextension","text":"fun fromFileExtension(ext: String ): MediaType","title":"fromFileExtension"},{"location":"0.x/misk-core/misk.web.mediatype/kotlin.-string/index.html","text":"misk-core / misk.web.mediatype / kotlin.String Extensions for kotlin.String \u00b6 Name Summary asMediaRange fun String .asMediaRange(): MediaRange asMediaType fun String .asMediaType(): MediaType","title":"Extensions for kotlin.String - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/kotlin.-string/index.html#extensions-for-kotlinstring","text":"Name Summary asMediaRange fun String .asMediaRange(): MediaRange asMediaType fun String .asMediaType(): MediaType","title":"Extensions for kotlin.String"},{"location":"0.x/misk-core/misk.web.mediatype/kotlin.-string/as-media-range.html","text":"misk-core / misk.web.mediatype / kotlin.String / asMediaRange asMediaRange \u00b6 fun String .asMediaRange(): MediaRange","title":"asMediaRange - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/kotlin.-string/as-media-range.html#asmediarange","text":"fun String .asMediaRange(): MediaRange","title":"asMediaRange"},{"location":"0.x/misk-core/misk.web.mediatype/kotlin.-string/as-media-type.html","text":"misk-core / misk.web.mediatype / kotlin.String / asMediaType asMediaType \u00b6 fun String .asMediaType(): MediaType","title":"asMediaType - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/kotlin.-string/as-media-type.html#asmediatype","text":"fun String .asMediaType(): MediaType","title":"asMediaType"},{"location":"0.x/misk-core/misk.web.mediatype/okhttp3.-media-type/index.html","text":"misk-core / misk.web.mediatype / okhttp3.MediaType Extensions for okhttp3.MediaType \u00b6 Name Summary compareTo fun MediaType.compareTo(other: MediaType): Int","title":"Extensions for okhttp3.MediaType - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/okhttp3.-media-type/index.html#extensions-for-okhttp3mediatype","text":"Name Summary compareTo fun MediaType.compareTo(other: MediaType): Int","title":"Extensions for okhttp3.MediaType"},{"location":"0.x/misk-core/misk.web.mediatype/okhttp3.-media-type/compare-to.html","text":"misk-core / misk.web.mediatype / okhttp3.MediaType / compareTo compareTo \u00b6 fun MediaType.compareTo(other: MediaType): Int","title":"compareTo - Misk"},{"location":"0.x/misk-core/misk.web.mediatype/okhttp3.-media-type/compare-to.html#compareto","text":"fun MediaType.compareTo(other: MediaType): Int","title":"compareTo"},{"location":"0.x/misk-cron/index.html","text":"misk-cron Packages \u00b6 Name Summary misk.cron Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-cron/index.html#packages","text":"Name Summary misk.cron","title":"Packages"},{"location":"0.x/misk-cron/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-cron/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.cron.CronEntryModule misk.cron.CronManager misk.cron.CronModule misk.cron.CronPattern misk.cron.FakeCronModule","title":"All Types - Misk"},{"location":"0.x/misk-cron/alltypes/index.html#all-types","text":"Name Summary misk.cron.CronEntryModule misk.cron.CronManager misk.cron.CronModule misk.cron.CronPattern misk.cron.FakeCronModule","title":"All Types"},{"location":"0.x/misk-cron/misk.cron/index.html","text":"misk-cron / misk.cron Package misk.cron \u00b6 Types \u00b6 Name Summary CronEntryModule class CronEntryModule<A : Runnable > : KAbstractModule CronManager class CronManager CronModule class CronModule : KAbstractModule FakeCronModule class FakeCronModule : KAbstractModule Annotations \u00b6 Name Summary CronPattern annotation class CronPattern","title":"Package misk.cron - Misk"},{"location":"0.x/misk-cron/misk.cron/index.html#package-miskcron","text":"","title":"Package misk.cron"},{"location":"0.x/misk-cron/misk.cron/index.html#types","text":"Name Summary CronEntryModule class CronEntryModule<A : Runnable > : KAbstractModule CronManager class CronManager CronModule class CronModule : KAbstractModule FakeCronModule class FakeCronModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-cron/misk.cron/index.html#annotations","text":"Name Summary CronPattern annotation class CronPattern","title":"Annotations"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/index.html","text":"misk-cron / misk.cron / CronEntryModule CronEntryModule \u00b6 class CronEntryModule<A : Runnable > : KAbstractModule Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <A : Runnable > create(): CronEntryModule < A >``fun <A : Runnable > create(cronRunnableClass: KClass < A >): CronEntryModule < A > Registers a cron runnable.","title":"CronEntryModule - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/index.html#cronentrymodule","text":"class CronEntryModule<A : Runnable > : KAbstractModule","title":"CronEntryModule"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/index.html#companion-object-functions","text":"Name Summary create fun <A : Runnable > create(): CronEntryModule < A >``fun <A : Runnable > create(cronRunnableClass: KClass < A >): CronEntryModule < A > Registers a cron runnable.","title":"Companion Object Functions"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/configure.html","text":"misk-cron / misk.cron / CronEntryModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/create.html","text":"misk-cron / misk.cron / CronEntryModule / create create \u00b6 inline fun <reified A : Runnable > create(): CronEntryModule < A >``fun <A : Runnable > create(cronRunnableClass: KClass < A >): CronEntryModule < A > Registers a cron runnable. Parameters \u00b6 cronRunnableClass - : The cron runnable to register.","title":"create - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/create.html#create","text":"inline fun <reified A : Runnable > create(): CronEntryModule < A >``fun <A : Runnable > create(cronRunnableClass: KClass < A >): CronEntryModule < A > Registers a cron runnable.","title":"create"},{"location":"0.x/misk-cron/misk.cron/-cron-entry-module/create.html#parameters","text":"cronRunnableClass - : The cron runnable to register.","title":"Parameters"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/index.html","text":"misk-cron / misk.cron / CronManager CronManager \u00b6 @Singleton class CronManager Types \u00b6 Name Summary CronEntry data class CronEntry Constructors \u00b6 Name Summary <init> CronManager() Functions \u00b6 Name Summary runReadyCrons fun runReadyCrons(lastRun: Instant ): Unit waitForCronsComplete fun waitForCronsComplete(): Unit","title":"CronManager - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/index.html#cronmanager","text":"@Singleton class CronManager","title":"CronManager"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/index.html#types","text":"Name Summary CronEntry data class CronEntry","title":"Types"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/index.html#constructors","text":"Name Summary <init> CronManager()","title":"Constructors"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/index.html#functions","text":"Name Summary runReadyCrons fun runReadyCrons(lastRun: Instant ): Unit waitForCronsComplete fun waitForCronsComplete(): Unit","title":"Functions"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-init-.html","text":"misk-cron / misk.cron / CronManager / <init> <init> \u00b6 CronManager()","title":" init "},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-init-.html#init","text":"CronManager()","title":"&lt;init&gt;"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/run-ready-crons.html","text":"misk-cron / misk.cron / CronManager / runReadyCrons runReadyCrons \u00b6 fun runReadyCrons(lastRun: Instant ): Unit","title":"runReadyCrons - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/run-ready-crons.html#runreadycrons","text":"fun runReadyCrons(lastRun: Instant ): Unit","title":"runReadyCrons"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/wait-for-crons-complete.html","text":"misk-cron / misk.cron / CronManager / waitForCronsComplete waitForCronsComplete \u00b6 fun waitForCronsComplete(): Unit","title":"waitForCronsComplete - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/wait-for-crons-complete.html#waitforcronscomplete","text":"fun waitForCronsComplete(): Unit","title":"waitForCronsComplete"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/index.html","text":"misk-cron / misk.cron / CronManager / CronEntry CronEntry \u00b6 data class CronEntry Constructors \u00b6 Name Summary <init> CronEntry(name: String , cronTab: String , executionTime: ExecutionTime, runnable: Runnable ) Properties \u00b6 Name Summary cronTab val cronTab: String executionTime val executionTime: ExecutionTime name val name: String runnable val runnable: Runnable","title":"CronEntry - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/index.html#cronentry","text":"data class CronEntry","title":"CronEntry"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/index.html#constructors","text":"Name Summary <init> CronEntry(name: String , cronTab: String , executionTime: ExecutionTime, runnable: Runnable )","title":"Constructors"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/index.html#properties","text":"Name Summary cronTab val cronTab: String executionTime val executionTime: ExecutionTime name val name: String runnable val runnable: Runnable","title":"Properties"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/-init-.html","text":"misk-cron / misk.cron / CronManager / CronEntry / <init> <init> \u00b6 CronEntry(name: String , cronTab: String , executionTime: ExecutionTime, runnable: Runnable )","title":" init "},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/-init-.html#init","text":"CronEntry(name: String , cronTab: String , executionTime: ExecutionTime, runnable: Runnable )","title":"&lt;init&gt;"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/cron-tab.html","text":"misk-cron / misk.cron / CronManager / CronEntry / cronTab cronTab \u00b6 val cronTab: String","title":"cronTab - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/cron-tab.html#crontab","text":"val cronTab: String","title":"cronTab"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/execution-time.html","text":"misk-cron / misk.cron / CronManager / CronEntry / executionTime executionTime \u00b6 val executionTime: ExecutionTime","title":"executionTime - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/execution-time.html#executiontime","text":"val executionTime: ExecutionTime","title":"executionTime"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/name.html","text":"misk-cron / misk.cron / CronManager / CronEntry / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/runnable.html","text":"misk-cron / misk.cron / CronManager / CronEntry / runnable runnable \u00b6 val runnable: Runnable","title":"runnable - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-manager/-cron-entry/runnable.html#runnable","text":"val runnable: Runnable","title":"runnable"},{"location":"0.x/misk-cron/misk.cron/-cron-module/index.html","text":"misk-cron / misk.cron / CronModule CronModule \u00b6 class CronModule : KAbstractModule Constructors \u00b6 Name Summary <init> CronModule(zoneId: ZoneId , threadPoolSize: Int = 10) Functions \u00b6 Name Summary configure fun configure(): Unit provideTaskQueue fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue","title":"CronModule - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-module/index.html#cronmodule","text":"class CronModule : KAbstractModule","title":"CronModule"},{"location":"0.x/misk-cron/misk.cron/-cron-module/index.html#constructors","text":"Name Summary <init> CronModule(zoneId: ZoneId , threadPoolSize: Int = 10)","title":"Constructors"},{"location":"0.x/misk-cron/misk.cron/-cron-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideTaskQueue fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue","title":"Functions"},{"location":"0.x/misk-cron/misk.cron/-cron-module/-init-.html","text":"misk-cron / misk.cron / CronModule / <init> <init> \u00b6 CronModule(zoneId: ZoneId , threadPoolSize: Int = 10)","title":" init "},{"location":"0.x/misk-cron/misk.cron/-cron-module/-init-.html#init","text":"CronModule(zoneId: ZoneId , threadPoolSize: Int = 10)","title":"&lt;init&gt;"},{"location":"0.x/misk-cron/misk.cron/-cron-module/configure.html","text":"misk-cron / misk.cron / CronModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-cron/misk.cron/-cron-module/provide-task-queue.html","text":"misk-cron / misk.cron / CronModule / provideTaskQueue provideTaskQueue \u00b6 @Provides fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue","title":"provideTaskQueue - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-module/provide-task-queue.html#providetaskqueue","text":"@Provides fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue","title":"provideTaskQueue"},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/index.html","text":"misk-cron / misk.cron / CronPattern CronPattern \u00b6 @Target([AnnotationTarget.CLASS]) annotation class CronPattern Constructors \u00b6 Name Summary <init> CronPattern(pattern: String ) Properties \u00b6 Name Summary pattern val pattern: String","title":"CronPattern - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/index.html#cronpattern","text":"@Target([AnnotationTarget.CLASS]) annotation class CronPattern","title":"CronPattern"},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/index.html#constructors","text":"Name Summary <init> CronPattern(pattern: String )","title":"Constructors"},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/index.html#properties","text":"Name Summary pattern val pattern: String","title":"Properties"},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/-init-.html","text":"misk-cron / misk.cron / CronPattern / <init> <init> \u00b6 CronPattern(pattern: String )","title":" init "},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/-init-.html#init","text":"CronPattern(pattern: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/pattern.html","text":"misk-cron / misk.cron / CronPattern / pattern pattern \u00b6 val pattern: String","title":"pattern - Misk"},{"location":"0.x/misk-cron/misk.cron/-cron-pattern/pattern.html#pattern","text":"val pattern: String","title":"pattern"},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/index.html","text":"misk-cron / misk.cron / FakeCronModule FakeCronModule \u00b6 class FakeCronModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeCronModule(zoneId: ZoneId , threadPoolSize: Int = 10) Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeCronModule - Misk"},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/index.html#fakecronmodule","text":"class FakeCronModule : KAbstractModule","title":"FakeCronModule"},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/index.html#constructors","text":"Name Summary <init> FakeCronModule(zoneId: ZoneId , threadPoolSize: Int = 10)","title":"Constructors"},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/-init-.html","text":"misk-cron / misk.cron / FakeCronModule / <init> <init> \u00b6 FakeCronModule(zoneId: ZoneId , threadPoolSize: Int = 10)","title":" init "},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/-init-.html#init","text":"FakeCronModule(zoneId: ZoneId , threadPoolSize: Int = 10)","title":"&lt;init&gt;"},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/configure.html","text":"misk-cron / misk.cron / FakeCronModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-cron/misk.cron/-fake-cron-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-crypto/index.html","text":"misk-crypto Packages \u00b6 Name Summary misk.crypto misk.crypto.pgp Index \u00b6 All Types","title":"misk-crypto"},{"location":"0.x/misk-crypto/index.html#packages","text":"Name Summary misk.crypto misk.crypto.pgp","title":"Packages"},{"location":"0.x/misk-crypto/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-crypto/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.crypto.AeadKeyManager Holds a map of every Aead key name to its primitive listed in the configuration for this app. misk.crypto.AwsKmsClientModule AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials misk.crypto.BucketNameSource Bind this to an instance to control how external buckets are referenced. misk.crypto.CiphertextFormat Wraps a ciphertext and the encryption context associated with it in a ByteArray . misk.crypto.CryptoConfig Main configuration object representing to be used in the app. misk.crypto.CryptoModule Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager . misk.crypto.CryptoTestModule This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. misk.crypto.DeterministicAeadKeyManager Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. misk.crypto.DigitalSignature misk.crypto.DigitalSignatureKeyManager Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. misk.crypto.ExternalDataKeys This annotation is used to decorate the collection of external data keys used in the service. misk.crypto.ExternalKeyManagerException Thrown on creation if external key does not exist. misk.crypto.ExternalKeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys . misk.crypto.FakeExternalKeyManagerModule misk.crypto.FakeKeyResolver misk.crypto.GcpKmsClientModule GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. misk.crypto.HybridDecryptKeyManager Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. misk.crypto.HybridEncryptKeyManager Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. misk.crypto.Key Describes a specific key misk.crypto.KeyAlias A KeyAlias is how we refer to a Tink keyset. misk.crypto.KeyNotFoundException misk.crypto.KeyReader misk.crypto.KeyResolver KeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated. misk.crypto.KeyType Supported key types misk.crypto.LocalConfigKeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key. com.google.crypto.tink.Mac (extensions in package misk.crypto) misk.crypto.MacKeyManager Holds a map of every Mac key name to its primitive listed in the configuration for this app. misk.crypto.MappedKeyManager misk.crypto.MiskAWSKMS This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service misk.crypto.MiskKmsClient This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys misk.crypto.pgp.PgpDecrypter A PgpDecrypter is tied to a private PGP key which it uses to decrypt messages. misk.crypto.PgpDecrypterManager Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. misk.crypto.pgp.PgpEncrypter A PgpEncrypter is tied to a public PGP key which it uses to encrypt messages. misk.crypto.PgpEncrypterManager Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. misk.crypto.S3KeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. misk.crypto.ServiceKeys This annotation is used to decorate the collection of service keys used in the service. misk.crypto.StreamingAeadKeyManager Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app.","title":"All Types - Misk"},{"location":"0.x/misk-crypto/alltypes/index.html#all-types","text":"Name Summary misk.crypto.AeadKeyManager Holds a map of every Aead key name to its primitive listed in the configuration for this app. misk.crypto.AwsKmsClientModule AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials misk.crypto.BucketNameSource Bind this to an instance to control how external buckets are referenced. misk.crypto.CiphertextFormat Wraps a ciphertext and the encryption context associated with it in a ByteArray . misk.crypto.CryptoConfig Main configuration object representing to be used in the app. misk.crypto.CryptoModule Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager . misk.crypto.CryptoTestModule This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. misk.crypto.DeterministicAeadKeyManager Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. misk.crypto.DigitalSignature misk.crypto.DigitalSignatureKeyManager Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. misk.crypto.ExternalDataKeys This annotation is used to decorate the collection of external data keys used in the service. misk.crypto.ExternalKeyManagerException Thrown on creation if external key does not exist. misk.crypto.ExternalKeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys . misk.crypto.FakeExternalKeyManagerModule misk.crypto.FakeKeyResolver misk.crypto.GcpKmsClientModule GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. misk.crypto.HybridDecryptKeyManager Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. misk.crypto.HybridEncryptKeyManager Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. misk.crypto.Key Describes a specific key misk.crypto.KeyAlias A KeyAlias is how we refer to a Tink keyset. misk.crypto.KeyNotFoundException misk.crypto.KeyReader misk.crypto.KeyResolver KeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated. misk.crypto.KeyType Supported key types misk.crypto.LocalConfigKeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key. com.google.crypto.tink.Mac (extensions in package misk.crypto) misk.crypto.MacKeyManager Holds a map of every Mac key name to its primitive listed in the configuration for this app. misk.crypto.MappedKeyManager misk.crypto.MiskAWSKMS This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service misk.crypto.MiskKmsClient This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys misk.crypto.pgp.PgpDecrypter A PgpDecrypter is tied to a private PGP key which it uses to decrypt messages. misk.crypto.PgpDecrypterManager Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. misk.crypto.pgp.PgpEncrypter A PgpEncrypter is tied to a public PGP key which it uses to encrypt messages. misk.crypto.PgpEncrypterManager Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. misk.crypto.S3KeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. misk.crypto.ServiceKeys This annotation is used to decorate the collection of service keys used in the service. misk.crypto.StreamingAeadKeyManager Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app.","title":"All Types"},{"location":"0.x/misk-crypto/misk.crypto/index.html","text":"misk-crypto / misk.crypto Package misk.crypto \u00b6 Types \u00b6 Name Summary AeadKeyManager class AeadKeyManager : MappedKeyManager <Aead> Holds a map of every Aead key name to its primitive listed in the configuration for this app. AwsKmsClientModule class AwsKmsClientModule : KAbstractModule AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials BucketNameSource interface BucketNameSource Bind this to an instance to control how external buckets are referenced. CiphertextFormat class CiphertextFormat Wraps a ciphertext and the encryption context associated with it in a ByteArray . CryptoConfig data class CryptoConfig : Config Main configuration object representing to be used in the app. CryptoModule class CryptoModule : KAbstractModule Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager . CryptoTestModule class CryptoTestModule : KAbstractModule This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. DeterministicAeadKeyManager class DeterministicAeadKeyManager : MappedKeyManager <DeterministicAead> Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. DigitalSignature data class DigitalSignature DigitalSignatureKeyManager class DigitalSignatureKeyManager : MappedKeyManager < DigitalSignature > Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. ExternalKeyResolver interface ExternalKeyResolver : KeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys . FakeExternalKeyManagerModule class FakeExternalKeyManagerModule : KAbstractModule FakeKeyResolver class FakeKeyResolver : KeyResolver GcpKmsClientModule class GcpKmsClientModule : KAbstractModule GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. HybridDecryptKeyManager class HybridDecryptKeyManager : MappedKeyManager <HybridDecrypt> Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. HybridEncryptKeyManager class HybridEncryptKeyManager : MappedKeyManager <HybridEncrypt> Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. Key data class Key : Config Describes a specific key KeyReader open class KeyReader KeyResolver interface KeyResolver KeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated. KeyType enum class KeyType Supported key types LocalConfigKeyResolver class LocalConfigKeyResolver : KeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key. MacKeyManager class MacKeyManager : MappedKeyManager <Mac> Holds a map of every Mac key name to its primitive listed in the configuration for this app. MappedKeyManager sealed class MappedKeyManager<KeyT> PgpDecrypterManager class PgpDecrypterManager : MappedKeyManager < PgpDecrypter > Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. PgpEncrypterManager class PgpEncrypterManager : MappedKeyManager < PgpEncrypter > Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. S3KeyResolver class S3KeyResolver : ExternalKeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. StreamingAeadKeyManager class StreamingAeadKeyManager : MappedKeyManager <StreamingAead> Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app. Annotations \u00b6 Name Summary ExternalDataKeys annotation class ExternalDataKeys This annotation is used to decorate the collection of external data keys used in the service. MiskAWSKMS annotation class MiskAWSKMS This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service MiskKmsClient annotation class MiskKmsClient This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys ServiceKeys annotation class ServiceKeys This annotation is used to decorate the collection of service keys used in the service. Exceptions \u00b6 Name Summary ExternalKeyManagerException class ExternalKeyManagerException : IOException Thrown on creation if external key does not exist. KeyNotFoundException class KeyNotFoundException : GeneralSecurityException Type Aliases \u00b6 Name Summary KeyAlias typealias KeyAlias = String A KeyAlias is how we refer to a Tink keyset. Extensions for External Classes \u00b6 Name Summary com.google.crypto.tink.Mac","title":"Package misk.crypto - Misk"},{"location":"0.x/misk-crypto/misk.crypto/index.html#package-miskcrypto","text":"","title":"Package misk.crypto"},{"location":"0.x/misk-crypto/misk.crypto/index.html#types","text":"Name Summary AeadKeyManager class AeadKeyManager : MappedKeyManager <Aead> Holds a map of every Aead key name to its primitive listed in the configuration for this app. AwsKmsClientModule class AwsKmsClientModule : KAbstractModule AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials BucketNameSource interface BucketNameSource Bind this to an instance to control how external buckets are referenced. CiphertextFormat class CiphertextFormat Wraps a ciphertext and the encryption context associated with it in a ByteArray . CryptoConfig data class CryptoConfig : Config Main configuration object representing to be used in the app. CryptoModule class CryptoModule : KAbstractModule Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager . CryptoTestModule class CryptoTestModule : KAbstractModule This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. DeterministicAeadKeyManager class DeterministicAeadKeyManager : MappedKeyManager <DeterministicAead> Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. DigitalSignature data class DigitalSignature DigitalSignatureKeyManager class DigitalSignatureKeyManager : MappedKeyManager < DigitalSignature > Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. ExternalKeyResolver interface ExternalKeyResolver : KeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys . FakeExternalKeyManagerModule class FakeExternalKeyManagerModule : KAbstractModule FakeKeyResolver class FakeKeyResolver : KeyResolver GcpKmsClientModule class GcpKmsClientModule : KAbstractModule GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. HybridDecryptKeyManager class HybridDecryptKeyManager : MappedKeyManager <HybridDecrypt> Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. HybridEncryptKeyManager class HybridEncryptKeyManager : MappedKeyManager <HybridEncrypt> Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. Key data class Key : Config Describes a specific key KeyReader open class KeyReader KeyResolver interface KeyResolver KeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated. KeyType enum class KeyType Supported key types LocalConfigKeyResolver class LocalConfigKeyResolver : KeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key. MacKeyManager class MacKeyManager : MappedKeyManager <Mac> Holds a map of every Mac key name to its primitive listed in the configuration for this app. MappedKeyManager sealed class MappedKeyManager<KeyT> PgpDecrypterManager class PgpDecrypterManager : MappedKeyManager < PgpDecrypter > Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. PgpEncrypterManager class PgpEncrypterManager : MappedKeyManager < PgpEncrypter > Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. S3KeyResolver class S3KeyResolver : ExternalKeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. StreamingAeadKeyManager class StreamingAeadKeyManager : MappedKeyManager <StreamingAead> Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app.","title":"Types"},{"location":"0.x/misk-crypto/misk.crypto/index.html#annotations","text":"Name Summary ExternalDataKeys annotation class ExternalDataKeys This annotation is used to decorate the collection of external data keys used in the service. MiskAWSKMS annotation class MiskAWSKMS This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service MiskKmsClient annotation class MiskKmsClient This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys ServiceKeys annotation class ServiceKeys This annotation is used to decorate the collection of service keys used in the service.","title":"Annotations"},{"location":"0.x/misk-crypto/misk.crypto/index.html#exceptions","text":"Name Summary ExternalKeyManagerException class ExternalKeyManagerException : IOException Thrown on creation if external key does not exist. KeyNotFoundException class KeyNotFoundException : GeneralSecurityException","title":"Exceptions"},{"location":"0.x/misk-crypto/misk.crypto/index.html#type-aliases","text":"Name Summary KeyAlias typealias KeyAlias = String A KeyAlias is how we refer to a Tink keyset.","title":"Type Aliases"},{"location":"0.x/misk-crypto/misk.crypto/index.html#extensions-for-external-classes","text":"Name Summary com.google.crypto.tink.Mac","title":"Extensions for External Classes"},{"location":"0.x/misk-crypto/misk.crypto/-aead-key-manager.html","text":"misk-crypto / misk.crypto / AeadKeyManager AeadKeyManager \u00b6 @Singleton class AeadKeyManager : MappedKeyManager <Aead> Holds a map of every Aead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an Aead dynamically: val myKey: Aead = aeadKeyManager[\"myKey\"] Note: Aead instances provided by this module are envelope Aead instances. This means that all data is encrypted with an ephemeral data encryption key (DEK), which is then protected by a key-encryption key (KEK) and stored inline with ciphertext. This effectively means that ciphertext will be a bit larger than the plaintext, and that migrating keys (KEKs) should not require the re-encryption of stored data. Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"AeadKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-aead-key-manager.html#aeadkeymanager","text":"@Singleton class AeadKeyManager : MappedKeyManager <Aead> Holds a map of every Aead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an Aead dynamically: val myKey: Aead = aeadKeyManager[\"myKey\"] Note: Aead instances provided by this module are envelope Aead instances. This means that all data is encrypted with an ephemeral data encryption key (DEK), which is then protected by a key-encryption key (KEK) and stored inline with ciphertext. This effectively means that ciphertext will be a bit larger than the plaintext, and that migrating keys (KEKs) should not require the re-encryption of stored data.","title":"AeadKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-aead-key-manager.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-deterministic-aead-key-manager.html","text":"misk-crypto / misk.crypto / DeterministicAeadKeyManager DeterministicAeadKeyManager \u00b6 @Singleton class DeterministicAeadKeyManager : MappedKeyManager <DeterministicAead> Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an DeterministicAead dynamically: val myKey: DeterministicAead = deterministicAeadKeyManager[\"myKey\"] Note that DeterministicAead objects do not provide secrecy to the same level as AEAD do, since multiple plaintexts encrypted with the same key will produce identical ciphertext. This behavior is desirable when querying data via its ciphertext (i.e. equality will hold), but an attacker can detect repeated plaintexts. Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"DeterministicAeadKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-deterministic-aead-key-manager.html#deterministicaeadkeymanager","text":"@Singleton class DeterministicAeadKeyManager : MappedKeyManager <DeterministicAead> Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an DeterministicAead dynamically: val myKey: DeterministicAead = deterministicAeadKeyManager[\"myKey\"] Note that DeterministicAead objects do not provide secrecy to the same level as AEAD do, since multiple plaintexts encrypted with the same key will produce identical ciphertext. This behavior is desirable when querying data via its ciphertext (i.e. equality will hold), but an attacker can detect repeated plaintexts.","title":"DeterministicAeadKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-deterministic-aead-key-manager.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-resolver.html","text":"misk-crypto / misk.crypto / ExternalKeyResolver ExternalKeyResolver \u00b6 interface ExternalKeyResolver : KeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys . Inherited Properties \u00b6 Name Summary allKeyAliases abstract val allKeyAliases: Map < KeyAlias , KeyType > Inherited Functions \u00b6 Name Summary getKeyByAlias abstract fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias. Inheritors \u00b6 Name Summary S3KeyResolver class S3KeyResolver : ExternalKeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region.","title":"ExternalKeyResolver - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-resolver.html#externalkeyresolver","text":"interface ExternalKeyResolver : KeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys .","title":"ExternalKeyResolver"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-resolver.html#inherited-properties","text":"Name Summary allKeyAliases abstract val allKeyAliases: Map < KeyAlias , KeyType >","title":"Inherited Properties"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-resolver.html#inherited-functions","text":"Name Summary getKeyByAlias abstract fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-resolver.html#inheritors","text":"Name Summary S3KeyResolver class S3KeyResolver : ExternalKeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region.","title":"Inheritors"},{"location":"0.x/misk-crypto/misk.crypto/-hybrid-decrypt-key-manager.html","text":"misk-crypto / misk.crypto / HybridDecryptKeyManager HybridDecryptKeyManager \u00b6 @Singleton class HybridDecryptKeyManager : MappedKeyManager <HybridDecrypt> Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. Users may this class to obtain a HybridDecrypt object dynamically: val hybridDecrypt: HybridDecrypt = hybridKeyManager[\"myHybridKey\"] Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"HybridDecryptKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-hybrid-decrypt-key-manager.html#hybriddecryptkeymanager","text":"@Singleton class HybridDecryptKeyManager : MappedKeyManager <HybridDecrypt> Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. Users may this class to obtain a HybridDecrypt object dynamically: val hybridDecrypt: HybridDecrypt = hybridKeyManager[\"myHybridKey\"]","title":"HybridDecryptKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-hybrid-decrypt-key-manager.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-hybrid-encrypt-key-manager.html","text":"misk-crypto / misk.crypto / HybridEncryptKeyManager HybridEncryptKeyManager \u00b6 @Singleton class HybridEncryptKeyManager : MappedKeyManager <HybridEncrypt> Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. Users may use this class to obtain a HybridEncrypt object dynamically: val hybridEncrypt: HybridEncrypt = hybridKeyManager[\"myHybridKey\"] Note: Hybrid encryption is intentionally divided to 2 separate key managers, HybridEncryptKeyManager and HybridDecryptKeyManager , so that the public portion of the keyset could be exported to other services. This configuration helps achieve the goal of allowing some services to encrypt only and other services to both encrypt and decrypt. Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"HybridEncryptKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-hybrid-encrypt-key-manager.html#hybridencryptkeymanager","text":"@Singleton class HybridEncryptKeyManager : MappedKeyManager <HybridEncrypt> Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. Users may use this class to obtain a HybridEncrypt object dynamically: val hybridEncrypt: HybridEncrypt = hybridKeyManager[\"myHybridKey\"] Note: Hybrid encryption is intentionally divided to 2 separate key managers, HybridEncryptKeyManager and HybridDecryptKeyManager , so that the public portion of the keyset could be exported to other services. This configuration helps achieve the goal of allowing some services to encrypt only and other services to both encrypt and decrypt.","title":"HybridEncryptKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-hybrid-encrypt-key-manager.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-key-alias.html","text":"misk-crypto / misk.crypto / KeyAlias KeyAlias \u00b6 typealias KeyAlias = String A KeyAlias is how we refer to a Tink keyset.","title":"KeyAlias - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-alias.html#keyalias","text":"typealias KeyAlias = String A KeyAlias is how we refer to a Tink keyset.","title":"KeyAlias"},{"location":"0.x/misk-crypto/misk.crypto/-mac-key-manager.html","text":"misk-crypto / misk.crypto / MacKeyManager MacKeyManager \u00b6 @Singleton class MacKeyManager : MappedKeyManager <Mac> Holds a map of every Mac key name to its primitive listed in the configuration for this app. Users may use this class to obtain a Mac object dynamically: val hmac: Mac = macKeyManager[\"myHmac\"] Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"MacKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-mac-key-manager.html#mackeymanager","text":"@Singleton class MacKeyManager : MappedKeyManager <Mac> Holds a map of every Mac key name to its primitive listed in the configuration for this app. Users may use this class to obtain a Mac object dynamically: val hmac: Mac = macKeyManager[\"myHmac\"]","title":"MacKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-mac-key-manager.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/index.html","text":"misk-crypto / misk.crypto / AwsKmsClientModule AwsKmsClientModule \u00b6 class AwsKmsClientModule : KAbstractModule AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials Constructors \u00b6 Name Summary <init> AwsKmsClientModule(credentialsPath: String ? = null) AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials Functions \u00b6 Name Summary getKmsClient fun getKmsClient(): KmsClient","title":"AwsKmsClientModule - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/index.html#awskmsclientmodule","text":"class AwsKmsClientModule : KAbstractModule AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials","title":"AwsKmsClientModule"},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/index.html#constructors","text":"Name Summary <init> AwsKmsClientModule(credentialsPath: String ? = null) AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/index.html#functions","text":"Name Summary getKmsClient fun getKmsClient(): KmsClient","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/-init-.html","text":"misk-crypto / misk.crypto / AwsKmsClientModule / <init> <init> \u00b6 AwsKmsClientModule(credentialsPath: String ? = null) AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/-init-.html#init","text":"AwsKmsClientModule(credentialsPath: String ? = null) AWS specific KMS client module. Currently uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in AwsKmsClient.withDefaultCredentials","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/get-kms-client.html","text":"misk-crypto / misk.crypto / AwsKmsClientModule / getKmsClient getKmsClient \u00b6 @Provides fun getKmsClient(): KmsClient","title":"getKmsClient - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-aws-kms-client-module/get-kms-client.html#getkmsclient","text":"@Provides fun getKmsClient(): KmsClient","title":"getKmsClient"},{"location":"0.x/misk-crypto/misk.crypto/-bucket-name-source/index.html","text":"misk-crypto / misk.crypto / BucketNameSource BucketNameSource \u00b6 interface BucketNameSource Bind this to an instance to control how external buckets are referenced. Functions \u00b6 Name Summary getBucketName abstract fun getBucketName(deployment: Deployment): String Name of the bucket that stores keys getBucketRegion open fun getBucketRegion(deployment: Deployment): String ? The region that the bucket lives in.","title":"BucketNameSource - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-bucket-name-source/index.html#bucketnamesource","text":"interface BucketNameSource Bind this to an instance to control how external buckets are referenced.","title":"BucketNameSource"},{"location":"0.x/misk-crypto/misk.crypto/-bucket-name-source/index.html#functions","text":"Name Summary getBucketName abstract fun getBucketName(deployment: Deployment): String Name of the bucket that stores keys getBucketRegion open fun getBucketRegion(deployment: Deployment): String ? The region that the bucket lives in.","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-name.html","text":"misk-crypto / misk.crypto / BucketNameSource / getBucketName getBucketName \u00b6 abstract fun getBucketName(deployment: Deployment): String Name of the bucket that stores keys","title":"getBucketName - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-name.html#getbucketname","text":"abstract fun getBucketName(deployment: Deployment): String Name of the bucket that stores keys","title":"getBucketName"},{"location":"0.x/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-region.html","text":"misk-crypto / misk.crypto / BucketNameSource / getBucketRegion getBucketRegion \u00b6 open fun getBucketRegion(deployment: Deployment): String ? The region that the bucket lives in. Returns null for same region as the service.","title":"getBucketRegion - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-bucket-name-source/get-bucket-region.html#getbucketregion","text":"open fun getBucketRegion(deployment: Deployment): String ? The region that the bucket lives in. Returns null for same region as the service.","title":"getBucketRegion"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/index.html","text":"misk-crypto / misk.crypto / CiphertextFormat CiphertextFormat \u00b6 class CiphertextFormat Wraps a ciphertext and the encryption context associated with it in a ByteArray . Misk uses Tink to encrypt data, which uses Encryption Context (EC), or Additional Authentication Data (AAD) to authenticate ciphertext. This class introduces a new, higher level abstraction, that\u2019ll be used instead of the AAD byte array interfaces Tink exposes to users. The main reasons to do this are: Preventing the misuse of AAD Preventing undecipherable ciphertext from being created Exposing a friendlier user interface Encryption Context Specification \u00b6 Map<String, String> The map must contain at least 1 entry No blank/empty/null strings in either the map\u2019s keys or values The map is optional, and can be completely omitted from the encryption operation The encryption context will be serialized using the following format: [ AAD: [ varint: pair count ] [ pairs: ( [ varint: key length ] [ ByteArray: key ] [ varint: value length ] [ ByteArray: value ] )* ] ] The final output will be serialized using the following format: [ 0xEE: magic+version ] [ varint: AAD length ] [ AAD ] [ tink ciphertext ] For the full documentation of the CiphertextFormat serialization, read FORMAT.md Exceptions \u00b6 Name Summary EncryptionContextMismatchException class EncryptionContextMismatchException : GeneralSecurityException InvalidCiphertextFormatException class InvalidCiphertextFormatException : GeneralSecurityException InvalidEncryptionContextException class InvalidEncryptionContextException : GeneralSecurityException MissingEncryptionContextException class MissingEncryptionContextException : GeneralSecurityException UnexpectedEncryptionContextException class UnexpectedEncryptionContextException : GeneralSecurityException Companion Object Properties \u00b6 Name Summary CURRENT_VERSION const val CURRENT_VERSION: Int Current version of the encryption packet schema Companion Object Functions \u00b6 Name Summary deserialize fun deserialize(serialized: ByteArray , context: Map < String , String >?): Pair < ByteArray , ByteArray ?> Extracts the ciphertext and associated authentication data from the serialized ByteArray. deserializeFleFormat fun deserializeFleFormat(serialized: ByteArray ): Pair < ByteArray , Map < String , String ?>> Extracts the ciphertext and encryption context from the serialized ByteArray. serialize fun serialize(ciphertext: ByteArray , aad: ByteArray ?): ByteArray Serializes the given ciphertext and associated encryption context to a ByteArray serializeEncryptionContext fun serializeEncryptionContext(context: Map < String , String >?): ByteArray ? Serializes the encryption context to a ByteArray so it could be passed to Tink\u2019s encryption/decryption methods.","title":"CiphertextFormat - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/index.html#ciphertextformat","text":"class CiphertextFormat Wraps a ciphertext and the encryption context associated with it in a ByteArray . Misk uses Tink to encrypt data, which uses Encryption Context (EC), or Additional Authentication Data (AAD) to authenticate ciphertext. This class introduces a new, higher level abstraction, that\u2019ll be used instead of the AAD byte array interfaces Tink exposes to users. The main reasons to do this are: Preventing the misuse of AAD Preventing undecipherable ciphertext from being created Exposing a friendlier user interface","title":"CiphertextFormat"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/index.html#encryption-context-specification","text":"Map<String, String> The map must contain at least 1 entry No blank/empty/null strings in either the map\u2019s keys or values The map is optional, and can be completely omitted from the encryption operation The encryption context will be serialized using the following format: [ AAD: [ varint: pair count ] [ pairs: ( [ varint: key length ] [ ByteArray: key ] [ varint: value length ] [ ByteArray: value ] )* ] ] The final output will be serialized using the following format: [ 0xEE: magic+version ] [ varint: AAD length ] [ AAD ] [ tink ciphertext ] For the full documentation of the CiphertextFormat serialization, read FORMAT.md","title":"Encryption Context Specification"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/index.html#exceptions","text":"Name Summary EncryptionContextMismatchException class EncryptionContextMismatchException : GeneralSecurityException InvalidCiphertextFormatException class InvalidCiphertextFormatException : GeneralSecurityException InvalidEncryptionContextException class InvalidEncryptionContextException : GeneralSecurityException MissingEncryptionContextException class MissingEncryptionContextException : GeneralSecurityException UnexpectedEncryptionContextException class UnexpectedEncryptionContextException : GeneralSecurityException","title":"Exceptions"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/index.html#companion-object-properties","text":"Name Summary CURRENT_VERSION const val CURRENT_VERSION: Int Current version of the encryption packet schema","title":"Companion Object Properties"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/index.html#companion-object-functions","text":"Name Summary deserialize fun deserialize(serialized: ByteArray , context: Map < String , String >?): Pair < ByteArray , ByteArray ?> Extracts the ciphertext and associated authentication data from the serialized ByteArray. deserializeFleFormat fun deserializeFleFormat(serialized: ByteArray ): Pair < ByteArray , Map < String , String ?>> Extracts the ciphertext and encryption context from the serialized ByteArray. serialize fun serialize(ciphertext: ByteArray , aad: ByteArray ?): ByteArray Serializes the given ciphertext and associated encryption context to a ByteArray serializeEncryptionContext fun serializeEncryptionContext(context: Map < String , String >?): ByteArray ? Serializes the encryption context to a ByteArray so it could be passed to Tink\u2019s encryption/decryption methods.","title":"Companion Object Functions"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-c-u-r-r-e-n-t_-v-e-r-s-i-o-n.html","text":"misk-crypto / misk.crypto / CiphertextFormat / CURRENT_VERSION CURRENT_VERSION \u00b6 const val CURRENT_VERSION: Int Current version of the encryption packet schema","title":"CURRENT_VERSION - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-c-u-r-r-e-n-t_-v-e-r-s-i-o-n.html#current_version","text":"const val CURRENT_VERSION: Int Current version of the encryption packet schema","title":"CURRENT_VERSION"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/deserialize-fle-format.html","text":"misk-crypto / misk.crypto / CiphertextFormat / deserializeFleFormat deserializeFleFormat \u00b6 fun deserializeFleFormat(serialized: ByteArray ): Pair < ByteArray , Map < String , String ?>> Extracts the ciphertext and encryption context from the serialized ByteArray. This method is meant to be used with field-level-encryption in Hibernate only.","title":"deserializeFleFormat - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/deserialize-fle-format.html#deserializefleformat","text":"fun deserializeFleFormat(serialized: ByteArray ): Pair < ByteArray , Map < String , String ?>> Extracts the ciphertext and encryption context from the serialized ByteArray. This method is meant to be used with field-level-encryption in Hibernate only.","title":"deserializeFleFormat"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/deserialize.html","text":"misk-crypto / misk.crypto / CiphertextFormat / deserialize deserialize \u00b6 fun deserialize(serialized: ByteArray , context: Map < String , String >?): Pair < ByteArray , ByteArray ?> Extracts the ciphertext and associated authentication data from the serialized ByteArray. This method also compares the given context to the serialized AAD and will throw an exception if they do not match.","title":"deserialize - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/deserialize.html#deserialize","text":"fun deserialize(serialized: ByteArray , context: Map < String , String >?): Pair < ByteArray , ByteArray ?> Extracts the ciphertext and associated authentication data from the serialized ByteArray. This method also compares the given context to the serialized AAD and will throw an exception if they do not match.","title":"deserialize"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/serialize-encryption-context.html","text":"misk-crypto / misk.crypto / CiphertextFormat / serializeEncryptionContext serializeEncryptionContext \u00b6 fun serializeEncryptionContext(context: Map < String , String >?): ByteArray ? Serializes the encryption context to a ByteArray so it could be passed to Tink\u2019s encryption/decryption methods.","title":"serializeEncryptionContext - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/serialize-encryption-context.html#serializeencryptioncontext","text":"fun serializeEncryptionContext(context: Map < String , String >?): ByteArray ? Serializes the encryption context to a ByteArray so it could be passed to Tink\u2019s encryption/decryption methods.","title":"serializeEncryptionContext"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/serialize.html","text":"misk-crypto / misk.crypto / CiphertextFormat / serialize serialize \u00b6 fun serialize(ciphertext: ByteArray , aad: ByteArray ?): ByteArray Serializes the given ciphertext and associated encryption context to a ByteArray","title":"serialize - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/serialize.html#serialize","text":"fun serialize(ciphertext: ByteArray , aad: ByteArray ?): ByteArray Serializes the given ciphertext and associated encryption context to a ByteArray","title":"serialize"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/index.html","text":"misk-crypto / misk.crypto / CiphertextFormat / EncryptionContextMismatchException EncryptionContextMismatchException \u00b6 class EncryptionContextMismatchException : GeneralSecurityException Constructors \u00b6 Name Summary <init> EncryptionContextMismatchException(message: String )","title":"EncryptionContextMismatchException - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/index.html#encryptioncontextmismatchexception","text":"class EncryptionContextMismatchException : GeneralSecurityException","title":"EncryptionContextMismatchException"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/index.html#constructors","text":"Name Summary <init> EncryptionContextMismatchException(message: String )","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/-init-.html","text":"misk-crypto / misk.crypto / CiphertextFormat / EncryptionContextMismatchException / <init> <init> \u00b6 EncryptionContextMismatchException(message: String )","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-encryption-context-mismatch-exception/-init-.html#init","text":"EncryptionContextMismatchException(message: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/index.html","text":"misk-crypto / misk.crypto / CiphertextFormat / InvalidCiphertextFormatException InvalidCiphertextFormatException \u00b6 class InvalidCiphertextFormatException : GeneralSecurityException Constructors \u00b6 Name Summary <init> InvalidCiphertextFormatException(message: String )","title":"InvalidCiphertextFormatException - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/index.html#invalidciphertextformatexception","text":"class InvalidCiphertextFormatException : GeneralSecurityException","title":"InvalidCiphertextFormatException"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/index.html#constructors","text":"Name Summary <init> InvalidCiphertextFormatException(message: String )","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/-init-.html","text":"misk-crypto / misk.crypto / CiphertextFormat / InvalidCiphertextFormatException / <init> <init> \u00b6 InvalidCiphertextFormatException(message: String )","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-ciphertext-format-exception/-init-.html#init","text":"InvalidCiphertextFormatException(message: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/index.html","text":"misk-crypto / misk.crypto / CiphertextFormat / InvalidEncryptionContextException InvalidEncryptionContextException \u00b6 class InvalidEncryptionContextException : GeneralSecurityException Constructors \u00b6 Name Summary <init> InvalidEncryptionContextException(message: String )","title":"InvalidEncryptionContextException - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/index.html#invalidencryptioncontextexception","text":"class InvalidEncryptionContextException : GeneralSecurityException","title":"InvalidEncryptionContextException"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/index.html#constructors","text":"Name Summary <init> InvalidEncryptionContextException(message: String )","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/-init-.html","text":"misk-crypto / misk.crypto / CiphertextFormat / InvalidEncryptionContextException / <init> <init> \u00b6 InvalidEncryptionContextException(message: String )","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-invalid-encryption-context-exception/-init-.html#init","text":"InvalidEncryptionContextException(message: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/index.html","text":"misk-crypto / misk.crypto / CiphertextFormat / MissingEncryptionContextException MissingEncryptionContextException \u00b6 class MissingEncryptionContextException : GeneralSecurityException Constructors \u00b6 Name Summary <init> MissingEncryptionContextException()","title":"MissingEncryptionContextException - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/index.html#missingencryptioncontextexception","text":"class MissingEncryptionContextException : GeneralSecurityException","title":"MissingEncryptionContextException"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/index.html#constructors","text":"Name Summary <init> MissingEncryptionContextException()","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/-init-.html","text":"misk-crypto / misk.crypto / CiphertextFormat / MissingEncryptionContextException / <init> <init> \u00b6 MissingEncryptionContextException()","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-missing-encryption-context-exception/-init-.html#init","text":"MissingEncryptionContextException()","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/index.html","text":"misk-crypto / misk.crypto / CiphertextFormat / UnexpectedEncryptionContextException UnexpectedEncryptionContextException \u00b6 class UnexpectedEncryptionContextException : GeneralSecurityException Constructors \u00b6 Name Summary <init> UnexpectedEncryptionContextException()","title":"UnexpectedEncryptionContextException - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/index.html#unexpectedencryptioncontextexception","text":"class UnexpectedEncryptionContextException : GeneralSecurityException","title":"UnexpectedEncryptionContextException"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/index.html#constructors","text":"Name Summary <init> UnexpectedEncryptionContextException()","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/-init-.html","text":"misk-crypto / misk.crypto / CiphertextFormat / UnexpectedEncryptionContextException / <init> <init> \u00b6 UnexpectedEncryptionContextException()","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-ciphertext-format/-unexpected-encryption-context-exception/-init-.html#init","text":"UnexpectedEncryptionContextException()","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/index.html","text":"misk-crypto / misk.crypto / CryptoConfig CryptoConfig \u00b6 data class CryptoConfig : Config Main configuration object representing to be used in the app. Constructors \u00b6 Name Summary <init> CryptoConfig(keys: List < Key >?, kms_uri: String , external_data_keys: Map < KeyAlias , KeyType >? = null) Main configuration object representing to be used in the app. Properties \u00b6 Name Summary external_data_keys val external_data_keys: Map < KeyAlias , KeyType >? The key references (map of alias to type) of keys we want to use that are loaded from an external key source, such as an S3 bucket. keys val keys: List < Key >? kms_uri val kms_uri: String The KMS\u2019 key URI. For GCP users that may look like: gcp-kms://projects/<project>/locations/<location>/keyRings/<keyRing>/cryptoKeys/<key> For AWS users the Key URI looks like: aws-kms://arn:aws:kms:<region>:<account-id>:key/<key-id>","title":"CryptoConfig - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/index.html#cryptoconfig","text":"data class CryptoConfig : Config Main configuration object representing to be used in the app.","title":"CryptoConfig"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/index.html#constructors","text":"Name Summary <init> CryptoConfig(keys: List < Key >?, kms_uri: String , external_data_keys: Map < KeyAlias , KeyType >? = null) Main configuration object representing to be used in the app.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/index.html#properties","text":"Name Summary external_data_keys val external_data_keys: Map < KeyAlias , KeyType >? The key references (map of alias to type) of keys we want to use that are loaded from an external key source, such as an S3 bucket. keys val keys: List < Key >? kms_uri val kms_uri: String The KMS\u2019 key URI. For GCP users that may look like: gcp-kms://projects/<project>/locations/<location>/keyRings/<keyRing>/cryptoKeys/<key> For AWS users the Key URI looks like: aws-kms://arn:aws:kms:<region>:<account-id>:key/<key-id>","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/-init-.html","text":"misk-crypto / misk.crypto / CryptoConfig / <init> <init> \u00b6 CryptoConfig(keys: List < Key >?, kms_uri: String , external_data_keys: Map < KeyAlias , KeyType >? = null) Main configuration object representing to be used in the app.","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/-init-.html#init","text":"CryptoConfig(keys: List < Key >?, kms_uri: String , external_data_keys: Map < KeyAlias , KeyType >? = null) Main configuration object representing to be used in the app.","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/external_data_keys.html","text":"misk-crypto / misk.crypto / CryptoConfig / external_data_keys external_data_keys \u00b6 val external_data_keys: Map < KeyAlias , KeyType >? The key references (map of alias to type) of keys we want to use that are loaded from an external key source, such as an S3 bucket.","title":"external_data_keys - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/external_data_keys.html#external_data_keys","text":"val external_data_keys: Map < KeyAlias , KeyType >? The key references (map of alias to type) of keys we want to use that are loaded from an external key source, such as an S3 bucket.","title":"external_data_keys"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/keys.html","text":"misk-crypto / misk.crypto / CryptoConfig / keys keys \u00b6 val keys: List < Key >?","title":"keys - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/keys.html#keys","text":"val keys: List < Key >?","title":"keys"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/kms_uri.html","text":"misk-crypto / misk.crypto / CryptoConfig / kms_uri kms_uri \u00b6 val kms_uri: String The KMS\u2019 key URI. For GCP users that may look like: gcp-kms://projects/<project>/locations/<location>/keyRings/<keyRing>/cryptoKeys/<key> For AWS users the Key URI looks like: aws-kms://arn:aws:kms:<region>:<account-id>:key/<key-id>","title":"kms_uri - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-config/kms_uri.html#kms_uri","text":"val kms_uri: String The KMS\u2019 key URI. For GCP users that may look like: gcp-kms://projects/<project>/locations/<location>/keyRings/<keyRing>/cryptoKeys/<key> For AWS users the Key URI looks like: aws-kms://arn:aws:kms:<region>:<account-id>:key/<key-id>","title":"kms_uri"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/index.html","text":"misk-crypto / misk.crypto / CryptoModule CryptoModule \u00b6 class CryptoModule : KAbstractModule Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager . Constructors \u00b6 Name Summary <init> CryptoModule(config: CryptoConfig ) Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager . Functions \u00b6 Name Summary configure fun configure(): Unit","title":"CryptoModule - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/index.html#cryptomodule","text":"class CryptoModule : KAbstractModule Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager .","title":"CryptoModule"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/index.html#constructors","text":"Name Summary <init> CryptoModule(config: CryptoConfig ) Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager .","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/-init-.html","text":"misk-crypto / misk.crypto / CryptoModule / <init> <init> \u00b6 CryptoModule(config: CryptoConfig ) Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager .","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/-init-.html#init","text":"CryptoModule(config: CryptoConfig ) Configures and registers the keys listed in the configuration file. Each key is read, decrypted, and then bound via Google Guice and added to a MappedKeyManager .","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/configure.html","text":"misk-crypto / misk.crypto / CryptoModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/index.html","text":"misk-crypto / misk.crypto / CryptoTestModule CryptoTestModule \u00b6 class CryptoTestModule : KAbstractModule This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. This module will read the exact same configuration files as the real application, but will not use the key material specified in the configuration. Instead, it\u2019ll generate a random keyset handle for each named key. Constructors \u00b6 Name Summary <init> CryptoTestModule(config: CryptoConfig ? = null) This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"CryptoTestModule - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/index.html#cryptotestmodule","text":"class CryptoTestModule : KAbstractModule This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. This module will read the exact same configuration files as the real application, but will not use the key material specified in the configuration. Instead, it\u2019ll generate a random keyset handle for each named key.","title":"CryptoTestModule"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/index.html#constructors","text":"Name Summary <init> CryptoTestModule(config: CryptoConfig ? = null) This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/-init-.html","text":"misk-crypto / misk.crypto / CryptoTestModule / <init> <init> \u00b6 CryptoTestModule(config: CryptoConfig ? = null) This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. This module will read the exact same configuration files as the real application, but will not use the key material specified in the configuration. Instead, it\u2019ll generate a random keyset handle for each named key.","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/-init-.html#init","text":"CryptoTestModule(config: CryptoConfig ? = null) This module should be used for testing purposes only. It generates random keys for each key name specified in the configuration and uses FakeKmsClient instead of a real KMS service. This module will read the exact same configuration files as the real application, but will not use the key material specified in the configuration. Instead, it\u2019ll generate a random keyset handle for each named key.","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/configure.html","text":"misk-crypto / misk.crypto / CryptoTestModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-crypto-test-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/index.html","text":"misk-crypto / misk.crypto / DigitalSignature DigitalSignature \u00b6 data class DigitalSignature Constructors \u00b6 Name Summary <init> DigitalSignature(signer: PublicKeySign, verifier: PublicKeyVerify) Properties \u00b6 Name Summary signer val signer: PublicKeySign verifier val verifier: PublicKeyVerify","title":"DigitalSignature - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/index.html#digitalsignature","text":"data class DigitalSignature","title":"DigitalSignature"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/index.html#constructors","text":"Name Summary <init> DigitalSignature(signer: PublicKeySign, verifier: PublicKeyVerify)","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/index.html#properties","text":"Name Summary signer val signer: PublicKeySign verifier val verifier: PublicKeyVerify","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/-init-.html","text":"misk-crypto / misk.crypto / DigitalSignature / <init> <init> \u00b6 DigitalSignature(signer: PublicKeySign, verifier: PublicKeyVerify)","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/-init-.html#init","text":"DigitalSignature(signer: PublicKeySign, verifier: PublicKeyVerify)","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/signer.html","text":"misk-crypto / misk.crypto / DigitalSignature / signer signer \u00b6 val signer: PublicKeySign","title":"signer - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/signer.html#signer","text":"val signer: PublicKeySign","title":"signer"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/verifier.html","text":"misk-crypto / misk.crypto / DigitalSignature / verifier verifier \u00b6 val verifier: PublicKeyVerify","title":"verifier - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature/verifier.html#verifier","text":"val verifier: PublicKeyVerify","title":"verifier"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/index.html","text":"misk-crypto / misk.crypto / DigitalSignatureKeyManager DigitalSignatureKeyManager \u00b6 @Singleton class DigitalSignatureKeyManager : MappedKeyManager < DigitalSignature > Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. Users may use this class to obtain a PublicKeySign to sign data or PublicKeyVerify to verify the integrity of a message dynamically: val signer: PublicKeySign = keyManager.getSigner(\"myDigitalSignatureKey\") val verifier: PublicKeyVerify = keyManager.getVerifier(\"mySigitalSignatureKey\") val signature = signer.sign(data) verifier.verify(signature, data) Functions \u00b6 Name Summary getSigner fun getSigner(name: String ): PublicKeySign getVerifier fun getVerifier(name: String ): PublicKeyVerify Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"DigitalSignatureKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/index.html#digitalsignaturekeymanager","text":"@Singleton class DigitalSignatureKeyManager : MappedKeyManager < DigitalSignature > Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. Users may use this class to obtain a PublicKeySign to sign data or PublicKeyVerify to verify the integrity of a message dynamically: val signer: PublicKeySign = keyManager.getSigner(\"myDigitalSignatureKey\") val verifier: PublicKeyVerify = keyManager.getVerifier(\"mySigitalSignatureKey\") val signature = signer.sign(data) verifier.verify(signature, data)","title":"DigitalSignatureKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/index.html#functions","text":"Name Summary getSigner fun getSigner(name: String ): PublicKeySign getVerifier fun getVerifier(name: String ): PublicKeyVerify","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/index.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/get-signer.html","text":"misk-crypto / misk.crypto / DigitalSignatureKeyManager / getSigner getSigner \u00b6 fun getSigner(name: String ): PublicKeySign","title":"getSigner - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/get-signer.html#getsigner","text":"fun getSigner(name: String ): PublicKeySign","title":"getSigner"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/get-verifier.html","text":"misk-crypto / misk.crypto / DigitalSignatureKeyManager / getVerifier getVerifier \u00b6 fun getVerifier(name: String ): PublicKeyVerify","title":"getVerifier - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-digital-signature-key-manager/get-verifier.html#getverifier","text":"fun getVerifier(name: String ): PublicKeyVerify","title":"getVerifier"},{"location":"0.x/misk-crypto/misk.crypto/-external-data-keys/index.html","text":"misk-crypto / misk.crypto / ExternalDataKeys ExternalDataKeys \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class ExternalDataKeys This annotation is used to decorate the collection of external data keys used in the service. External data keys are defined in the configuration as a Map < KeyAlias , KeyType >. This annotation can be useful for cases where one would need access to all external data keys available to the service. Constructors \u00b6 Name Summary <init> ExternalDataKeys() This annotation is used to decorate the collection of external data keys used in the service.","title":"ExternalDataKeys - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-external-data-keys/index.html#externaldatakeys","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class ExternalDataKeys This annotation is used to decorate the collection of external data keys used in the service. External data keys are defined in the configuration as a Map < KeyAlias , KeyType >. This annotation can be useful for cases where one would need access to all external data keys available to the service.","title":"ExternalDataKeys"},{"location":"0.x/misk-crypto/misk.crypto/-external-data-keys/index.html#constructors","text":"Name Summary <init> ExternalDataKeys() This annotation is used to decorate the collection of external data keys used in the service.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-external-data-keys/-init-.html","text":"misk-crypto / misk.crypto / ExternalDataKeys / <init> <init> \u00b6 ExternalDataKeys() This annotation is used to decorate the collection of external data keys used in the service. External data keys are defined in the configuration as a Map < KeyAlias , KeyType >. This annotation can be useful for cases where one would need access to all external data keys available to the service.","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-external-data-keys/-init-.html#init","text":"ExternalDataKeys() This annotation is used to decorate the collection of external data keys used in the service. External data keys are defined in the configuration as a Map < KeyAlias , KeyType >. This annotation can be useful for cases where one would need access to all external data keys available to the service.","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-manager-exception/index.html","text":"misk-crypto / misk.crypto / ExternalKeyManagerException ExternalKeyManagerException \u00b6 class ExternalKeyManagerException : IOException Thrown on creation if external key does not exist. Constructors \u00b6 Name Summary <init> ExternalKeyManagerException(message: String ) Thrown on creation if external key does not exist.","title":"ExternalKeyManagerException - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-manager-exception/index.html#externalkeymanagerexception","text":"class ExternalKeyManagerException : IOException Thrown on creation if external key does not exist.","title":"ExternalKeyManagerException"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-manager-exception/index.html#constructors","text":"Name Summary <init> ExternalKeyManagerException(message: String ) Thrown on creation if external key does not exist.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-external-key-manager-exception/-init-.html","text":"misk-crypto / misk.crypto / ExternalKeyManagerException / <init> <init> \u00b6 ExternalKeyManagerException(message: String ) Thrown on creation if external key does not exist.","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-external-key-manager-exception/-init-.html#init","text":"ExternalKeyManagerException(message: String ) Thrown on creation if external key does not exist.","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/index.html","text":"misk-crypto / misk.crypto / FakeExternalKeyManagerModule FakeExternalKeyManagerModule \u00b6 class FakeExternalKeyManagerModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeExternalKeyManagerModule(config: CryptoConfig ) Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeExternalKeyManagerModule - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/index.html#fakeexternalkeymanagermodule","text":"class FakeExternalKeyManagerModule : KAbstractModule","title":"FakeExternalKeyManagerModule"},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/index.html#constructors","text":"Name Summary <init> FakeExternalKeyManagerModule(config: CryptoConfig )","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/-init-.html","text":"misk-crypto / misk.crypto / FakeExternalKeyManagerModule / <init> <init> \u00b6 FakeExternalKeyManagerModule(config: CryptoConfig )","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/-init-.html#init","text":"FakeExternalKeyManagerModule(config: CryptoConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/configure.html","text":"misk-crypto / misk.crypto / FakeExternalKeyManagerModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-fake-external-key-manager-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/index.html","text":"misk-crypto / misk.crypto / FakeKeyResolver FakeKeyResolver \u00b6 class FakeKeyResolver : KeyResolver Constructors \u00b6 Name Summary <init> FakeKeyResolver(aliases: Map < KeyAlias , KeyType >) FakeKeyResolver(rawKeys: List < Key >) Properties \u00b6 Name Summary allKeyAliases val allKeyAliases: Map < KeyAlias , KeyType > Functions \u00b6 Name Summary getKeyByAlias fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"FakeKeyResolver - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/index.html#fakekeyresolver","text":"class FakeKeyResolver : KeyResolver","title":"FakeKeyResolver"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/index.html#constructors","text":"Name Summary <init> FakeKeyResolver(aliases: Map < KeyAlias , KeyType >) FakeKeyResolver(rawKeys: List < Key >)","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/index.html#properties","text":"Name Summary allKeyAliases val allKeyAliases: Map < KeyAlias , KeyType >","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/index.html#functions","text":"Name Summary getKeyByAlias fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/-init-.html","text":"misk-crypto / misk.crypto / FakeKeyResolver / <init> <init> \u00b6 FakeKeyResolver(aliases: Map < KeyAlias , KeyType >) FakeKeyResolver(rawKeys: List < Key >)","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/-init-.html#init","text":"FakeKeyResolver(aliases: Map < KeyAlias , KeyType >) FakeKeyResolver(rawKeys: List < Key >)","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/all-key-aliases.html","text":"misk-crypto / misk.crypto / FakeKeyResolver / allKeyAliases allKeyAliases \u00b6 val allKeyAliases: Map < KeyAlias , KeyType > Overrides KeyResolver.allKeyAliases","title":"allKeyAliases - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/all-key-aliases.html#allkeyaliases","text":"val allKeyAliases: Map < KeyAlias , KeyType > Overrides KeyResolver.allKeyAliases","title":"allKeyAliases"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/get-key-by-alias.html","text":"misk-crypto / misk.crypto / FakeKeyResolver / getKeyByAlias getKeyByAlias \u00b6 fun getKeyByAlias(alias: KeyAlias ): Key ? Overrides KeyResolver.getKeyByAlias Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-fake-key-resolver/get-key-by-alias.html#getkeybyalias","text":"fun getKeyByAlias(alias: KeyAlias ): Key ? Overrides KeyResolver.getKeyByAlias Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias"},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/index.html","text":"misk-crypto / misk.crypto / GcpKmsClientModule GcpKmsClientModule \u00b6 class GcpKmsClientModule : KAbstractModule GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in GcpKmsClient.withDefaultCredentials Constructors \u00b6 Name Summary <init> GcpKmsClientModule(credentialsPath: String ? = null) GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. Functions \u00b6 Name Summary getKmsClient fun getKmsClient(): KmsClient","title":"GcpKmsClientModule - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/index.html#gcpkmsclientmodule","text":"class GcpKmsClientModule : KAbstractModule GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in GcpKmsClient.withDefaultCredentials","title":"GcpKmsClientModule"},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/index.html#constructors","text":"Name Summary <init> GcpKmsClientModule(credentialsPath: String ? = null) GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/index.html#functions","text":"Name Summary getKmsClient fun getKmsClient(): KmsClient","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/-init-.html","text":"misk-crypto / misk.crypto / GcpKmsClientModule / <init> <init> \u00b6 GcpKmsClientModule(credentialsPath: String ? = null) GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in GcpKmsClient.withDefaultCredentials","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/-init-.html#init","text":"GcpKmsClientModule(credentialsPath: String ? = null) GCP specific KMS client module. Uses a file path to a JSON credentials file to initialize the client. If no file is provided, tries to initialize the client using the default credentials path as specified in GcpKmsClient.withDefaultCredentials","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/get-kms-client.html","text":"misk-crypto / misk.crypto / GcpKmsClientModule / getKmsClient getKmsClient \u00b6 @Provides fun getKmsClient(): KmsClient","title":"getKmsClient - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-gcp-kms-client-module/get-kms-client.html#getkmsclient","text":"@Provides fun getKmsClient(): KmsClient","title":"getKmsClient"},{"location":"0.x/misk-crypto/misk.crypto/-key/index.html","text":"misk-crypto / misk.crypto / Key Key \u00b6 data class Key : Config Describes a specific key Constructors \u00b6 Name Summary <init> Key(key_name: String , key_type: KeyType , encrypted_key: Secret< String >? = null, kms_uri: String ? = null) Describes a specific key Properties \u00b6 Name Summary encrypted_key val encrypted_key: Secret< String >? In config it\u2019s the path to a file containing the encrypted key material in Tink\u2019s JSON format. However MiskConfig will read the contents of the file, so this variable is the file\u2019s contents. key_name val key_name: String Descriptive short string for the key. This name will be used when injecting the corresponding key object in the app, like: key_type val key_type: KeyType Type of Tink primitive to initialize. kms_uri val kms_uri: String ? A key-specific, and region-specific KMS uri that was used to encrypt this key.","title":"Key - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key/index.html#key","text":"data class Key : Config Describes a specific key","title":"Key"},{"location":"0.x/misk-crypto/misk.crypto/-key/index.html#constructors","text":"Name Summary <init> Key(key_name: String , key_type: KeyType , encrypted_key: Secret< String >? = null, kms_uri: String ? = null) Describes a specific key","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-key/index.html#properties","text":"Name Summary encrypted_key val encrypted_key: Secret< String >? In config it\u2019s the path to a file containing the encrypted key material in Tink\u2019s JSON format. However MiskConfig will read the contents of the file, so this variable is the file\u2019s contents. key_name val key_name: String Descriptive short string for the key. This name will be used when injecting the corresponding key object in the app, like: key_type val key_type: KeyType Type of Tink primitive to initialize. kms_uri val kms_uri: String ? A key-specific, and region-specific KMS uri that was used to encrypt this key.","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-key/-init-.html","text":"misk-crypto / misk.crypto / Key / <init> <init> \u00b6 Key(key_name: String , key_type: KeyType , encrypted_key: Secret< String >? = null, kms_uri: String ? = null) Describes a specific key","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-key/-init-.html#init","text":"Key(key_name: String , key_type: KeyType , encrypted_key: Secret< String >? = null, kms_uri: String ? = null) Describes a specific key","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-key/encrypted_key.html","text":"misk-crypto / misk.crypto / Key / encrypted_key encrypted_key \u00b6 val encrypted_key: Secret< String >? In config it\u2019s the path to a file containing the encrypted key material in Tink\u2019s JSON format. However MiskConfig will read the contents of the file, so this variable is the file\u2019s contents.","title":"encrypted_key - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key/encrypted_key.html#encrypted_key","text":"val encrypted_key: Secret< String >? In config it\u2019s the path to a file containing the encrypted key material in Tink\u2019s JSON format. However MiskConfig will read the contents of the file, so this variable is the file\u2019s contents.","title":"encrypted_key"},{"location":"0.x/misk-crypto/misk.crypto/-key/key_name.html","text":"misk-crypto / misk.crypto / Key / key_name key_name \u00b6 val key_name: String Descriptive short string for the key. This name will be used when injecting the corresponding key object in the app, like: @Inject @Named(\"keyName\") lateinit var myKey: Aead","title":"key_name - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key/key_name.html#key_name","text":"val key_name: String Descriptive short string for the key. This name will be used when injecting the corresponding key object in the app, like: @Inject @Named(\"keyName\") lateinit var myKey: Aead","title":"key_name"},{"location":"0.x/misk-crypto/misk.crypto/-key/key_type.html","text":"misk-crypto / misk.crypto / Key / key_type key_type \u00b6 val key_type: KeyType Type of Tink primitive to initialize.","title":"key_type - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key/key_type.html#key_type","text":"val key_type: KeyType Type of Tink primitive to initialize.","title":"key_type"},{"location":"0.x/misk-crypto/misk.crypto/-key/kms_uri.html","text":"misk-crypto / misk.crypto / Key / kms_uri kms_uri \u00b6 val kms_uri: String ? A key-specific, and region-specific KMS uri that was used to encrypt this key.","title":"kms_uri - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key/kms_uri.html#kms_uri","text":"val kms_uri: String ? A key-specific, and region-specific KMS uri that was used to encrypt this key.","title":"kms_uri"},{"location":"0.x/misk-crypto/misk.crypto/-key-not-found-exception/index.html","text":"misk-crypto / misk.crypto / KeyNotFoundException KeyNotFoundException \u00b6 class KeyNotFoundException : GeneralSecurityException Constructors \u00b6 Name Summary <init> KeyNotFoundException(message: String ? = null, cause: Throwable ? = null)","title":"KeyNotFoundException - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-not-found-exception/index.html#keynotfoundexception","text":"class KeyNotFoundException : GeneralSecurityException","title":"KeyNotFoundException"},{"location":"0.x/misk-crypto/misk.crypto/-key-not-found-exception/index.html#constructors","text":"Name Summary <init> KeyNotFoundException(message: String ? = null, cause: Throwable ? = null)","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-key-not-found-exception/-init-.html","text":"misk-crypto / misk.crypto / KeyNotFoundException / <init> <init> \u00b6 KeyNotFoundException(message: String ? = null, cause: Throwable ? = null)","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-key-not-found-exception/-init-.html#init","text":"KeyNotFoundException(message: String ? = null, cause: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/index.html","text":"misk-crypto / misk.crypto / KeyReader KeyReader \u00b6 open class KeyReader Constructors \u00b6 Name Summary <init> KeyReader() Properties \u00b6 Name Summary keySources lateinit var keySources: Set < KeyResolver > kmsClient lateinit var kmsClient: KmsClient Functions \u00b6 Name Summary getRawKey fun getRawKey(alias: KeyAlias ): Key readKey fun readKey(alias: KeyAlias ): KeysetHandle Companion Object Properties \u00b6 Name Summary KEK_TEMPLATE val KEK_TEMPLATE: KeyTemplate","title":"KeyReader - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/index.html#keyreader","text":"open class KeyReader","title":"KeyReader"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/index.html#constructors","text":"Name Summary <init> KeyReader()","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/index.html#properties","text":"Name Summary keySources lateinit var keySources: Set < KeyResolver > kmsClient lateinit var kmsClient: KmsClient","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/index.html#functions","text":"Name Summary getRawKey fun getRawKey(alias: KeyAlias ): Key readKey fun readKey(alias: KeyAlias ): KeysetHandle","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/index.html#companion-object-properties","text":"Name Summary KEK_TEMPLATE val KEK_TEMPLATE: KeyTemplate","title":"Companion Object Properties"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/-init-.html","text":"misk-crypto / misk.crypto / KeyReader / <init> <init> \u00b6 KeyReader()","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/-init-.html#init","text":"KeyReader()","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/-k-e-k_-t-e-m-p-l-a-t-e.html","text":"misk-crypto / misk.crypto / KeyReader / KEK_TEMPLATE KEK_TEMPLATE \u00b6 val KEK_TEMPLATE: KeyTemplate","title":"KEK_TEMPLATE - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/-k-e-k_-t-e-m-p-l-a-t-e.html#kek_template","text":"val KEK_TEMPLATE: KeyTemplate","title":"KEK_TEMPLATE"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/get-raw-key.html","text":"misk-crypto / misk.crypto / KeyReader / getRawKey getRawKey \u00b6 protected fun getRawKey(alias: KeyAlias ): Key","title":"getRawKey - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/get-raw-key.html#getrawkey","text":"protected fun getRawKey(alias: KeyAlias ): Key","title":"getRawKey"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/key-sources.html","text":"misk-crypto / misk.crypto / KeyReader / keySources keySources \u00b6 lateinit var keySources: Set < KeyResolver >","title":"keySources - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/key-sources.html#keysources","text":"lateinit var keySources: Set < KeyResolver >","title":"keySources"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/kms-client.html","text":"misk-crypto / misk.crypto / KeyReader / kmsClient kmsClient \u00b6 lateinit var kmsClient: KmsClient","title":"kmsClient - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/kms-client.html#kmsclient","text":"lateinit var kmsClient: KmsClient","title":"kmsClient"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/read-key.html","text":"misk-crypto / misk.crypto / KeyReader / readKey readKey \u00b6 fun readKey(alias: KeyAlias ): KeysetHandle","title":"readKey - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-reader/read-key.html#readkey","text":"fun readKey(alias: KeyAlias ): KeysetHandle","title":"readKey"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/index.html","text":"misk-crypto / misk.crypto / KeyResolver KeyResolver \u00b6 interface KeyResolver KeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated. Properties \u00b6 Name Summary allKeyAliases abstract val allKeyAliases: Map < KeyAlias , KeyType > Functions \u00b6 Name Summary getKeyByAlias abstract fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias. Inheritors \u00b6 Name Summary ExternalKeyResolver interface ExternalKeyResolver : KeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys . FakeKeyResolver class FakeKeyResolver : KeyResolver LocalConfigKeyResolver class LocalConfigKeyResolver : KeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key.","title":"KeyResolver - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/index.html#keyresolver","text":"interface KeyResolver KeyResolver provides an interface to access keys indexed by aliases. Optionally, callers can register a callback to be invoked when a key is updated.","title":"KeyResolver"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/index.html#properties","text":"Name Summary allKeyAliases abstract val allKeyAliases: Map < KeyAlias , KeyType >","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/index.html#functions","text":"Name Summary getKeyByAlias abstract fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/index.html#inheritors","text":"Name Summary ExternalKeyResolver interface ExternalKeyResolver : KeyResolver ExternalKeyResolver is used to access keys stored externally from the service. For example, for keys listed in CryptoConfig.external_data_keys . FakeKeyResolver class FakeKeyResolver : KeyResolver LocalConfigKeyResolver class LocalConfigKeyResolver : KeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key.","title":"Inheritors"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/all-key-aliases.html","text":"misk-crypto / misk.crypto / KeyResolver / allKeyAliases allKeyAliases \u00b6 abstract val allKeyAliases: Map < KeyAlias , KeyType >","title":"allKeyAliases - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/all-key-aliases.html#allkeyaliases","text":"abstract val allKeyAliases: Map < KeyAlias , KeyType >","title":"allKeyAliases"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/get-key-by-alias.html","text":"misk-crypto / misk.crypto / KeyResolver / getKeyByAlias getKeyByAlias \u00b6 abstract fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-resolver/get-key-by-alias.html#getkeybyalias","text":"abstract fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/index.html","text":"misk-crypto / misk.crypto / KeyType KeyType \u00b6 enum class KeyType Supported key types Enum Values \u00b6 Name Summary AEAD DAEAD MAC DIGITAL_SIGNATURE HYBRID_ENCRYPT HYBRID_ENCRYPT_DECRYPT STREAMING_AEAD PGP_DECRYPT PGP_ENCRYPT","title":"KeyType - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/index.html#keytype","text":"enum class KeyType Supported key types","title":"KeyType"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/index.html#enum-values","text":"Name Summary AEAD DAEAD MAC DIGITAL_SIGNATURE HYBRID_ENCRYPT HYBRID_ENCRYPT_DECRYPT STREAMING_AEAD PGP_DECRYPT PGP_ENCRYPT","title":"Enum Values"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-a-e-a-d.html","text":"misk-crypto / misk.crypto / KeyType / AEAD AEAD \u00b6 AEAD","title":"AEAD - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-a-e-a-d.html#aead","text":"AEAD","title":"AEAD"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-d-a-e-a-d.html","text":"misk-crypto / misk.crypto / KeyType / DAEAD DAEAD \u00b6 DAEAD","title":"DAEAD - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-d-a-e-a-d.html#daead","text":"DAEAD","title":"DAEAD"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-d-i-g-i-t-a-l_-s-i-g-n-a-t-u-r-e.html","text":"misk-crypto / misk.crypto / KeyType / DIGITAL_SIGNATURE DIGITAL_SIGNATURE \u00b6 DIGITAL_SIGNATURE","title":"DIGITAL_SIGNATURE - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-d-i-g-i-t-a-l_-s-i-g-n-a-t-u-r-e.html#digital_signature","text":"DIGITAL_SIGNATURE","title":"DIGITAL_SIGNATURE"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t.html","text":"misk-crypto / misk.crypto / KeyType / HYBRID_ENCRYPT HYBRID_ENCRYPT \u00b6 HYBRID_ENCRYPT","title":"HYBRID_ENCRYPT - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t.html#hybrid_encrypt","text":"HYBRID_ENCRYPT","title":"HYBRID_ENCRYPT"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t_-d-e-c-r-y-p-t.html","text":"misk-crypto / misk.crypto / KeyType / HYBRID_ENCRYPT_DECRYPT HYBRID_ENCRYPT_DECRYPT \u00b6 HYBRID_ENCRYPT_DECRYPT","title":"HYBRID_ENCRYPT_DECRYPT - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-h-y-b-r-i-d_-e-n-c-r-y-p-t_-d-e-c-r-y-p-t.html#hybrid_encrypt_decrypt","text":"HYBRID_ENCRYPT_DECRYPT","title":"HYBRID_ENCRYPT_DECRYPT"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-m-a-c.html","text":"misk-crypto / misk.crypto / KeyType / MAC MAC \u00b6 MAC","title":"MAC - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-m-a-c.html#mac","text":"MAC","title":"MAC"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-p-g-p_-d-e-c-r-y-p-t.html","text":"misk-crypto / misk.crypto / KeyType / PGP_DECRYPT PGP_DECRYPT \u00b6 PGP_DECRYPT","title":"PGP_DECRYPT - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-p-g-p_-d-e-c-r-y-p-t.html#pgp_decrypt","text":"PGP_DECRYPT","title":"PGP_DECRYPT"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-p-g-p_-e-n-c-r-y-p-t.html","text":"misk-crypto / misk.crypto / KeyType / PGP_ENCRYPT PGP_ENCRYPT \u00b6 PGP_ENCRYPT","title":"PGP_ENCRYPT - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-p-g-p_-e-n-c-r-y-p-t.html#pgp_encrypt","text":"PGP_ENCRYPT","title":"PGP_ENCRYPT"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-s-t-r-e-a-m-i-n-g_-a-e-a-d.html","text":"misk-crypto / misk.crypto / KeyType / STREAMING_AEAD STREAMING_AEAD \u00b6 STREAMING_AEAD","title":"STREAMING_AEAD - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-key-type/-s-t-r-e-a-m-i-n-g_-a-e-a-d.html#streaming_aead","text":"STREAMING_AEAD","title":"STREAMING_AEAD"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/index.html","text":"misk-crypto / misk.crypto / LocalConfigKeyResolver LocalConfigKeyResolver \u00b6 class LocalConfigKeyResolver : KeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key. Constructors \u00b6 Name Summary <init> LocalConfigKeyResolver(keys: List < Key >, defaultKmsUri: String ) LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key. Properties \u00b6 Name Summary allKeyAliases val allKeyAliases: Map < KeyAlias , KeyType > Functions \u00b6 Name Summary getKeyByAlias fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"LocalConfigKeyResolver - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/index.html#localconfigkeyresolver","text":"class LocalConfigKeyResolver : KeyResolver LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key.","title":"LocalConfigKeyResolver"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/index.html#constructors","text":"Name Summary <init> LocalConfigKeyResolver(keys: List < Key >, defaultKmsUri: String ) LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/index.html#properties","text":"Name Summary allKeyAliases val allKeyAliases: Map < KeyAlias , KeyType >","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/index.html#functions","text":"Name Summary getKeyByAlias fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/-init-.html","text":"misk-crypto / misk.crypto / LocalConfigKeyResolver / <init> <init> \u00b6 LocalConfigKeyResolver(keys: List < Key >, defaultKmsUri: String ) LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key.","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/-init-.html#init","text":"LocalConfigKeyResolver(keys: List < Key >, defaultKmsUri: String ) LocalConfigKeyResolver provides keys that are stored locally and protected by a single KMS key.","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/all-key-aliases.html","text":"misk-crypto / misk.crypto / LocalConfigKeyResolver / allKeyAliases allKeyAliases \u00b6 val allKeyAliases: Map < KeyAlias , KeyType > Overrides KeyResolver.allKeyAliases","title":"allKeyAliases - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/all-key-aliases.html#allkeyaliases","text":"val allKeyAliases: Map < KeyAlias , KeyType > Overrides KeyResolver.allKeyAliases","title":"allKeyAliases"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/get-key-by-alias.html","text":"misk-crypto / misk.crypto / LocalConfigKeyResolver / getKeyByAlias getKeyByAlias \u00b6 fun getKeyByAlias(alias: KeyAlias ): Key ? Overrides KeyResolver.getKeyByAlias Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-local-config-key-resolver/get-key-by-alias.html#getkeybyalias","text":"fun getKeyByAlias(alias: KeyAlias ): Key ? Overrides KeyResolver.getKeyByAlias Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/index.html","text":"misk-crypto / misk.crypto / MappedKeyManager MappedKeyManager \u00b6 sealed class MappedKeyManager<KeyT> Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T Inheritors \u00b6 Name Summary AeadKeyManager class AeadKeyManager : MappedKeyManager <Aead> Holds a map of every Aead key name to its primitive listed in the configuration for this app. DeterministicAeadKeyManager class DeterministicAeadKeyManager : MappedKeyManager <DeterministicAead> Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. DigitalSignatureKeyManager class DigitalSignatureKeyManager : MappedKeyManager < DigitalSignature > Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. HybridDecryptKeyManager class HybridDecryptKeyManager : MappedKeyManager <HybridDecrypt> Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. HybridEncryptKeyManager class HybridEncryptKeyManager : MappedKeyManager <HybridEncrypt> Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. MacKeyManager class MacKeyManager : MappedKeyManager <Mac> Holds a map of every Mac key name to its primitive listed in the configuration for this app. PgpDecrypterManager class PgpDecrypterManager : MappedKeyManager < PgpDecrypter > Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. PgpEncrypterManager class PgpEncrypterManager : MappedKeyManager < PgpEncrypter > Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. StreamingAeadKeyManager class StreamingAeadKeyManager : MappedKeyManager <StreamingAead> Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app.","title":"MappedKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/index.html#mappedkeymanager","text":"sealed class MappedKeyManager<KeyT>","title":"MappedKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/index.html#functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/index.html#inheritors","text":"Name Summary AeadKeyManager class AeadKeyManager : MappedKeyManager <Aead> Holds a map of every Aead key name to its primitive listed in the configuration for this app. DeterministicAeadKeyManager class DeterministicAeadKeyManager : MappedKeyManager <DeterministicAead> Holds a map of every DeterministicAead key name to its primitive listed in the configuration for this app. DigitalSignatureKeyManager class DigitalSignatureKeyManager : MappedKeyManager < DigitalSignature > Holds a map of every key name to its corresponding PublicKeySign and PublicKeyVerify primitives. HybridDecryptKeyManager class HybridDecryptKeyManager : MappedKeyManager <HybridDecrypt> Holds a map of every HybridDecrypt key name to its corresponding primitive listed in the configuration for this app. HybridEncryptKeyManager class HybridEncryptKeyManager : MappedKeyManager <HybridEncrypt> Holds a map of every HybridEncrypt key name to its corresponding primitive listed in the configuration for this app. MacKeyManager class MacKeyManager : MappedKeyManager <Mac> Holds a map of every Mac key name to its primitive listed in the configuration for this app. PgpDecrypterManager class PgpDecrypterManager : MappedKeyManager < PgpDecrypter > Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. PgpEncrypterManager class PgpEncrypterManager : MappedKeyManager < PgpEncrypter > Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. StreamingAeadKeyManager class StreamingAeadKeyManager : MappedKeyManager <StreamingAead> Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app.","title":"Inheritors"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/get-named-instance.html","text":"misk-crypto / misk.crypto / MappedKeyManager / getNamedInstance getNamedInstance \u00b6 protected fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"getNamedInstance - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/get-named-instance.html#getnamedinstance","text":"protected fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"getNamedInstance"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/get.html","text":"misk-crypto / misk.crypto / MappedKeyManager / get get \u00b6 operator fun get(name: String ): KeyT","title":"get - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-mapped-key-manager/get.html#get","text":"operator fun get(name: String ): KeyT","title":"get"},{"location":"0.x/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/index.html","text":"misk-crypto / misk.crypto / MiskAWSKMS MiskAWSKMS \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class MiskAWSKMS This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service Constructors \u00b6 Name Summary <init> MiskAWSKMS() This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service","title":"MiskAWSKMS - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/index.html#miskawskms","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class MiskAWSKMS This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service","title":"MiskAWSKMS"},{"location":"0.x/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/index.html#constructors","text":"Name Summary <init> MiskAWSKMS() This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/-init-.html","text":"misk-crypto / misk.crypto / MiskAWSKMS / <init> <init> \u00b6 MiskAWSKMS() This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-misk-a-w-s-k-m-s/-init-.html#init","text":"MiskAWSKMS() This annotation is used to specify which com.amazonaws.services.kms.AWSKMS instance should be used by misk to construct a KmsClient and communicate with the KMS service","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-misk-kms-client/index.html","text":"misk-crypto / misk.crypto / MiskKmsClient MiskKmsClient \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class MiskKmsClient This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys Constructors \u00b6 Name Summary <init> MiskKmsClient() This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys","title":"MiskKmsClient - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-misk-kms-client/index.html#miskkmsclient","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class MiskKmsClient This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys","title":"MiskKmsClient"},{"location":"0.x/misk-crypto/misk.crypto/-misk-kms-client/index.html#constructors","text":"Name Summary <init> MiskKmsClient() This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-misk-kms-client/-init-.html","text":"misk-crypto / misk.crypto / MiskKmsClient / <init> <init> \u00b6 MiskKmsClient() This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-misk-kms-client/-init-.html#init","text":"MiskKmsClient() This annotation is used to specify the KmsClient that\u2019s being used by misk to load encryption keys","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-decrypter-manager/index.html","text":"misk-crypto / misk.crypto / PgpDecrypterManager PgpDecrypterManager \u00b6 @Singleton class PgpDecrypterManager : MappedKeyManager < PgpDecrypter > Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpDecrypter dynamically: val myKey: PgpDecrypter = pgpDecrypterManager[\"myKey\"] Constructors \u00b6 Name Summary <init> PgpDecrypterManager(injector: Injector) Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"PgpDecrypterManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-decrypter-manager/index.html#pgpdecryptermanager","text":"@Singleton class PgpDecrypterManager : MappedKeyManager < PgpDecrypter > Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpDecrypter dynamically: val myKey: PgpDecrypter = pgpDecrypterManager[\"myKey\"]","title":"PgpDecrypterManager"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-decrypter-manager/index.html#constructors","text":"Name Summary <init> PgpDecrypterManager(injector: Injector) Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-decrypter-manager/index.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-decrypter-manager/-init-.html","text":"misk-crypto / misk.crypto / PgpDecrypterManager / <init> <init> \u00b6 PgpDecrypterManager(injector: Injector) Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpDecrypter dynamically: val myKey: PgpDecrypter = pgpDecrypterManager[\"myKey\"]","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-pgp-decrypter-manager/-init-.html#init","text":"PgpDecrypterManager(injector: Injector) Holds a map of every PgpDecrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpDecrypter dynamically: val myKey: PgpDecrypter = pgpDecrypterManager[\"myKey\"]","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-encrypter-manager/index.html","text":"misk-crypto / misk.crypto / PgpEncrypterManager PgpEncrypterManager \u00b6 @Singleton class PgpEncrypterManager : MappedKeyManager < PgpEncrypter > Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpEncrypter dynamically: val myKey: PgpEncrypter = pgpEncrypterManager[\"myKey\"] Constructors \u00b6 Name Summary <init> PgpEncrypterManager(injector: Injector) Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"PgpEncrypterManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-encrypter-manager/index.html#pgpencryptermanager","text":"@Singleton class PgpEncrypterManager : MappedKeyManager < PgpEncrypter > Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpEncrypter dynamically: val myKey: PgpEncrypter = pgpEncrypterManager[\"myKey\"]","title":"PgpEncrypterManager"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-encrypter-manager/index.html#constructors","text":"Name Summary <init> PgpEncrypterManager(injector: Injector) Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-encrypter-manager/index.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-pgp-encrypter-manager/-init-.html","text":"misk-crypto / misk.crypto / PgpEncrypterManager / <init> <init> \u00b6 PgpEncrypterManager(injector: Injector) Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpEncrypter dynamically: val myKey: PgpEncrypter = pgpEncrypterManager[\"myKey\"]","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-pgp-encrypter-manager/-init-.html#init","text":"PgpEncrypterManager(injector: Injector) Holds a map of every PgpEncrypter key name to its primitive listed in the configuration for this app. Users may use this object to obtain an PgpEncrypter dynamically: val myKey: PgpEncrypter = pgpEncrypterManager[\"myKey\"]","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/index.html","text":"misk-crypto / misk.crypto / S3KeyResolver S3KeyResolver \u00b6 class S3KeyResolver : ExternalKeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. For example, if we are to load a key aliased by \u201cexample_key\u201d in the staging environment, we\u2019d expect the following layout: bucket \u21b3 example_key \u21b3 us-east-1 \u21b3 us-west-2 And the metadata of the region-specified object will contain the KMS key arn that was used to protect it under the key x-amz-meta-kms-key-arn, and the type of the key under x-amz-meta-key-type. These keys are exposed in the S3 api without the x-amz-meta- prefix. The envelope scheme itself is from misk-crypto and is defined in KeyReader If a requested key alias does not exist, this will raise a ExternalKeyManagerException Constructors \u00b6 Name Summary <init> S3KeyResolver(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map < KeyAlias , KeyType >, bucketNameSource: BucketNameSource ` = object : BucketNameSource { override fun getBucketName(deployment: Deployment) = deployment.mapToEnvironmentName() }, awsCredentials: AWSCredentialsProvider)` S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. Properties \u00b6 Name Summary allKeyAliases val allKeyAliases: Map < KeyAlias , KeyType > Functions \u00b6 Name Summary getKeyByAlias fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"S3KeyResolver - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/index.html#s3keyresolver","text":"class S3KeyResolver : ExternalKeyResolver S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. For example, if we are to load a key aliased by \u201cexample_key\u201d in the staging environment, we\u2019d expect the following layout: bucket \u21b3 example_key \u21b3 us-east-1 \u21b3 us-west-2 And the metadata of the region-specified object will contain the KMS key arn that was used to protect it under the key x-amz-meta-kms-key-arn, and the type of the key under x-amz-meta-key-type. These keys are exposed in the S3 api without the x-amz-meta- prefix. The envelope scheme itself is from misk-crypto and is defined in KeyReader If a requested key alias does not exist, this will raise a ExternalKeyManagerException","title":"S3KeyResolver"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/index.html#constructors","text":"Name Summary <init> S3KeyResolver(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map < KeyAlias , KeyType >, bucketNameSource: BucketNameSource ` = object : BucketNameSource { override fun getBucketName(deployment: Deployment) = deployment.mapToEnvironmentName() }, awsCredentials: AWSCredentialsProvider)` S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/index.html#properties","text":"Name Summary allKeyAliases val allKeyAliases: Map < KeyAlias , KeyType >","title":"Properties"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/index.html#functions","text":"Name Summary getKeyByAlias fun getKeyByAlias(alias: KeyAlias ): Key ? Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/-init-.html","text":"misk-crypto / misk.crypto / S3KeyResolver / <init> <init> \u00b6 S3KeyResolver(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map < KeyAlias , KeyType >, bucketNameSource: BucketNameSource = object : BucketNameSource { override fun getBucketName(deployment: Deployment) = deployment.mapToEnvironmentName() }, awsCredentials: AWSCredentialsProvider) S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. For example, if we are to load a key aliased by \u201cexample_key\u201d in the staging environment, we\u2019d expect the following layout: bucket \u21b3 example_key \u21b3 us-east-1 \u21b3 us-west-2 And the metadata of the region-specified object will contain the KMS key arn that was used to protect it under the key x-amz-meta-kms-key-arn, and the type of the key under x-amz-meta-key-type. These keys are exposed in the S3 api without the x-amz-meta- prefix. The envelope scheme itself is from misk-crypto and is defined in KeyReader If a requested key alias does not exist, this will raise a ExternalKeyManagerException","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/-init-.html#init","text":"S3KeyResolver(deployment: Deployment, defaultS3: AmazonS3, allKeyAliases: Map < KeyAlias , KeyType >, bucketNameSource: BucketNameSource = object : BucketNameSource { override fun getBucketName(deployment: Deployment) = deployment.mapToEnvironmentName() }, awsCredentials: AWSCredentialsProvider) S3KeyResolver implements an KeyResolver that fetches Tink keysets from an S3 bucket. Keysets are indexed by an alias and a region, and are encrypted with a key in the KMS using an envelope key encryption scheme. Each Keyset is protected by a KMS key in each service region. For example, if we are to load a key aliased by \u201cexample_key\u201d in the staging environment, we\u2019d expect the following layout: bucket \u21b3 example_key \u21b3 us-east-1 \u21b3 us-west-2 And the metadata of the region-specified object will contain the KMS key arn that was used to protect it under the key x-amz-meta-kms-key-arn, and the type of the key under x-amz-meta-key-type. These keys are exposed in the S3 api without the x-amz-meta- prefix. The envelope scheme itself is from misk-crypto and is defined in KeyReader If a requested key alias does not exist, this will raise a ExternalKeyManagerException","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/all-key-aliases.html","text":"misk-crypto / misk.crypto / S3KeyResolver / allKeyAliases allKeyAliases \u00b6 val allKeyAliases: Map < KeyAlias , KeyType > Overrides KeyResolver.allKeyAliases","title":"allKeyAliases - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/all-key-aliases.html#allkeyaliases","text":"val allKeyAliases: Map < KeyAlias , KeyType > Overrides KeyResolver.allKeyAliases","title":"allKeyAliases"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/get-key-by-alias.html","text":"misk-crypto / misk.crypto / S3KeyResolver / getKeyByAlias getKeyByAlias \u00b6 fun getKeyByAlias(alias: KeyAlias ): Key ? Overrides KeyResolver.getKeyByAlias Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-s3-key-resolver/get-key-by-alias.html#getkeybyalias","text":"fun getKeyByAlias(alias: KeyAlias ): Key ? Overrides KeyResolver.getKeyByAlias Fetch and return a Key (includes contents, type and a KMS ARN) by its alias.","title":"getKeyByAlias"},{"location":"0.x/misk-crypto/misk.crypto/-service-keys/index.html","text":"misk-crypto / misk.crypto / ServiceKeys ServiceKeys \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class ServiceKeys This annotation is used to decorate the collection of service keys used in the service. This annotation can be useful for cases where one would need access to all service keys as a Map < KeyAlias , KeyType > Constructors \u00b6 Name Summary <init> ServiceKeys() This annotation is used to decorate the collection of service keys used in the service.","title":"ServiceKeys - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-service-keys/index.html#servicekeys","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.VALUE_PARAMETER]) annotation class ServiceKeys This annotation is used to decorate the collection of service keys used in the service. This annotation can be useful for cases where one would need access to all service keys as a Map < KeyAlias , KeyType >","title":"ServiceKeys"},{"location":"0.x/misk-crypto/misk.crypto/-service-keys/index.html#constructors","text":"Name Summary <init> ServiceKeys() This annotation is used to decorate the collection of service keys used in the service.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-service-keys/-init-.html","text":"misk-crypto / misk.crypto / ServiceKeys / <init> <init> \u00b6 ServiceKeys() This annotation is used to decorate the collection of service keys used in the service. This annotation can be useful for cases where one would need access to all service keys as a Map < KeyAlias , KeyType >","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-service-keys/-init-.html#init","text":"ServiceKeys() This annotation is used to decorate the collection of service keys used in the service. This annotation can be useful for cases where one would need access to all service keys as a Map < KeyAlias , KeyType >","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/-streaming-aead-key-manager/index.html","text":"misk-crypto / misk.crypto / StreamingAeadKeyManager StreamingAeadKeyManager \u00b6 @Singleton class StreamingAeadKeyManager : MappedKeyManager <StreamingAead> Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an StreamingAead dynamically: val myKey: StreamingAead = streamingAeadKeyManager[\"myKey\"] Note: StreamingAead is useful when the data to be encrypted is too large to be processed in a single step. Typical use cases include encryption of large files or encryption of live data streams Constructors \u00b6 Name Summary <init> StreamingAeadKeyManager(injector: Injector) Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app. Inherited Functions \u00b6 Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"StreamingAeadKeyManager - Misk"},{"location":"0.x/misk-crypto/misk.crypto/-streaming-aead-key-manager/index.html#streamingaeadkeymanager","text":"@Singleton class StreamingAeadKeyManager : MappedKeyManager <StreamingAead> Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an StreamingAead dynamically: val myKey: StreamingAead = streamingAeadKeyManager[\"myKey\"] Note: StreamingAead is useful when the data to be encrypted is too large to be processed in a single step. Typical use cases include encryption of large files or encryption of live data streams","title":"StreamingAeadKeyManager"},{"location":"0.x/misk-crypto/misk.crypto/-streaming-aead-key-manager/index.html#constructors","text":"Name Summary <init> StreamingAeadKeyManager(injector: Injector) Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app.","title":"Constructors"},{"location":"0.x/misk-crypto/misk.crypto/-streaming-aead-key-manager/index.html#inherited-functions","text":"Name Summary get operator fun get(name: String ): KeyT getNamedInstance fun <T> getNamedInstance(klass: Class < T >, name: String ): T","title":"Inherited Functions"},{"location":"0.x/misk-crypto/misk.crypto/-streaming-aead-key-manager/-init-.html","text":"misk-crypto / misk.crypto / StreamingAeadKeyManager / <init> <init> \u00b6 StreamingAeadKeyManager(injector: Injector) Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an StreamingAead dynamically: val myKey: StreamingAead = streamingAeadKeyManager[\"myKey\"] Note: StreamingAead is useful when the data to be encrypted is too large to be processed in a single step. Typical use cases include encryption of large files or encryption of live data streams","title":" init "},{"location":"0.x/misk-crypto/misk.crypto/-streaming-aead-key-manager/-init-.html#init","text":"StreamingAeadKeyManager(injector: Injector) Holds a map of every StreamingAead key name to its primitive listed in the configuration for this app. Users may use this object to obtain an StreamingAead dynamically: val myKey: StreamingAead = streamingAeadKeyManager[\"myKey\"] Note: StreamingAead is useful when the data to be encrypted is too large to be processed in a single step. Typical use cases include encryption of large files or encryption of live data streams","title":"&lt;init&gt;"},{"location":"0.x/misk-crypto/misk.crypto/com.google.crypto.tink.-mac/index.html","text":"misk-crypto / misk.crypto / com.google.crypto.tink.Mac Extensions for com.google.crypto.tink.Mac \u00b6 Name Summary computeMac fun Mac.computeMac(data: String ): String Extension function for conveniently computing an HMAC and encoding it with Base64. verifyMac fun Mac.verifyMac(tag: String , data: String ): Unit Extension function for conveniently verifying a message\u2019s authenticity. This function expects the tag string variable to contain a Base64 encoded array of bytes.","title":"Extensions for com.google.crypto.tink.Mac - Misk"},{"location":"0.x/misk-crypto/misk.crypto/com.google.crypto.tink.-mac/index.html#extensions-for-comgooglecryptotinkmac","text":"Name Summary computeMac fun Mac.computeMac(data: String ): String Extension function for conveniently computing an HMAC and encoding it with Base64. verifyMac fun Mac.verifyMac(tag: String , data: String ): Unit Extension function for conveniently verifying a message\u2019s authenticity. This function expects the tag string variable to contain a Base64 encoded array of bytes.","title":"Extensions for com.google.crypto.tink.Mac"},{"location":"0.x/misk-crypto/misk.crypto/com.google.crypto.tink.-mac/compute-mac.html","text":"misk-crypto / misk.crypto / com.google.crypto.tink.Mac / computeMac computeMac \u00b6 fun Mac.computeMac(data: String ): String Extension function for conveniently computing an HMAC and encoding it with Base64.","title":"computeMac - Misk"},{"location":"0.x/misk-crypto/misk.crypto/com.google.crypto.tink.-mac/compute-mac.html#computemac","text":"fun Mac.computeMac(data: String ): String Extension function for conveniently computing an HMAC and encoding it with Base64.","title":"computeMac"},{"location":"0.x/misk-crypto/misk.crypto/com.google.crypto.tink.-mac/verify-mac.html","text":"misk-crypto / misk.crypto / com.google.crypto.tink.Mac / verifyMac verifyMac \u00b6 fun Mac.verifyMac(tag: String , data: String ): Unit Extension function for conveniently verifying a message\u2019s authenticity. This function expects the tag string variable to contain a Base64 encoded array of bytes.","title":"verifyMac - Misk"},{"location":"0.x/misk-crypto/misk.crypto/com.google.crypto.tink.-mac/verify-mac.html#verifymac","text":"fun Mac.verifyMac(tag: String , data: String ): Unit Extension function for conveniently verifying a message\u2019s authenticity. This function expects the tag string variable to contain a Base64 encoded array of bytes.","title":"verifyMac"},{"location":"0.x/misk-crypto/misk.crypto.pgp/index.html","text":"misk-crypto / misk.crypto.pgp Package misk.crypto.pgp \u00b6 Types \u00b6 Name Summary PgpDecrypter interface PgpDecrypter A PgpDecrypter is tied to a private PGP key which it uses to decrypt messages. PgpEncrypter interface PgpEncrypter A PgpEncrypter is tied to a public PGP key which it uses to encrypt messages.","title":"Package misk.crypto.pgp - Misk"},{"location":"0.x/misk-crypto/misk.crypto.pgp/index.html#package-miskcryptopgp","text":"","title":"Package misk.crypto.pgp"},{"location":"0.x/misk-crypto/misk.crypto.pgp/index.html#types","text":"Name Summary PgpDecrypter interface PgpDecrypter A PgpDecrypter is tied to a private PGP key which it uses to decrypt messages. PgpEncrypter interface PgpEncrypter A PgpEncrypter is tied to a public PGP key which it uses to encrypt messages.","title":"Types"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-decrypter/index.html","text":"misk-crypto / misk.crypto.pgp / PgpDecrypter PgpDecrypter \u00b6 interface PgpDecrypter A PgpDecrypter is tied to a private PGP key which it uses to decrypt messages. Functions \u00b6 Name Summary decrypt abstract fun decrypt(ciphertext: ByteArray ): ByteArray","title":"PgpDecrypter - Misk"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-decrypter/index.html#pgpdecrypter","text":"interface PgpDecrypter A PgpDecrypter is tied to a private PGP key which it uses to decrypt messages.","title":"PgpDecrypter"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-decrypter/index.html#functions","text":"Name Summary decrypt abstract fun decrypt(ciphertext: ByteArray ): ByteArray","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-decrypter/decrypt.html","text":"misk-crypto / misk.crypto.pgp / PgpDecrypter / decrypt decrypt \u00b6 abstract fun decrypt(ciphertext: ByteArray ): ByteArray","title":"decrypt - Misk"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-decrypter/decrypt.html#decrypt","text":"abstract fun decrypt(ciphertext: ByteArray ): ByteArray","title":"decrypt"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-encrypter/index.html","text":"misk-crypto / misk.crypto.pgp / PgpEncrypter PgpEncrypter \u00b6 interface PgpEncrypter A PgpEncrypter is tied to a public PGP key which it uses to encrypt messages. Functions \u00b6 Name Summary encrypt abstract fun encrypt(plaintext: ByteArray , armored: Boolean ): ByteArray Encrypts the given byte array. Armored refers to whether to output in a text format or not.","title":"PgpEncrypter - Misk"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-encrypter/index.html#pgpencrypter","text":"interface PgpEncrypter A PgpEncrypter is tied to a public PGP key which it uses to encrypt messages.","title":"PgpEncrypter"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-encrypter/index.html#functions","text":"Name Summary encrypt abstract fun encrypt(plaintext: ByteArray , armored: Boolean ): ByteArray Encrypts the given byte array. Armored refers to whether to output in a text format or not.","title":"Functions"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-encrypter/encrypt.html","text":"misk-crypto / misk.crypto.pgp / PgpEncrypter / encrypt encrypt \u00b6 abstract fun encrypt(plaintext: ByteArray , armored: Boolean ): ByteArray Encrypts the given byte array. Armored refers to whether to output in a text format or not. For example, with armored we get output like: -----BEGIN PGP MESSAGE----- Version: BCPG C# v1.6.1.0 hQIMA0tM4ZUzpKCkAQ//ZO8hVhp6LMxshCLqcqgPkXcU1kBHPQjiUBs6QPxaQFcg PIXJEdZWQ1RkMUKdCfzjvevizi/2NWAwZ797fELdbpVyH6JI2Me1Ov10f8qgYvbG V0GJ3loRt84KjKdVocKguJVfMvOeMVJanPpxfPt3Ak+Nt/voZHmJdTkV4cjWTmcU x31xqc5LZcvgF4Lv+ZcMw090b281yMENwALnvQJ9FQg5WTfZ+YautUMwWGk8W8XM H3tYkdh3jKizy8YTw+zfVDn1yhw2BgSFp0QIgHIQQ2Q2gyknRfj4zdfs/4bZYcu1 KNgj9op/IejZNstP9JWw4labC78nTIW5s1f0LWF5hhZUkxeAOEyVluUVJgEw44B4 LKb0p/8jb4J/dVrsmaTDOONZ48wtNjZOTV61DhCnn+UiNVSfQe6I7XMtFpEH0PN4 WzermmeEgjw1MADeh0jg/9wMM/p9UnTxihGQrPRgHYUu45jI3ys3qArsD2GvAi9y QYqsuRJNB7EEu2clBRASA3zoWkpqbs3H9S2fB9Sf9ZzZTPCzowOdK1oe0vlMVt3A mCILe05s2nowwBrBWu4PHUTkllsnLliHhrihu9sqXCHy6u1pdNQMvJgY6kbgQmsG bVY+brdkLdQ1BxbTT1YixzLm//zqMqGC1ZJUsr5PAIbNtyKK6u6+mCkZj0Y3fU3J Il0x5V09QcC9AHyxJ8VMOxzhQZjwVYNtD6SGeY8jOyfUScY= =DHKq -----END PGP MESSAGE----- Without the armored encoding we would get binary data which isn\u2019t viewable in text format.","title":"encrypt - Misk"},{"location":"0.x/misk-crypto/misk.crypto.pgp/-pgp-encrypter/encrypt.html#encrypt","text":"abstract fun encrypt(plaintext: ByteArray , armored: Boolean ): ByteArray Encrypts the given byte array. Armored refers to whether to output in a text format or not. For example, with armored we get output like: -----BEGIN PGP MESSAGE----- Version: BCPG C# v1.6.1.0 hQIMA0tM4ZUzpKCkAQ//ZO8hVhp6LMxshCLqcqgPkXcU1kBHPQjiUBs6QPxaQFcg PIXJEdZWQ1RkMUKdCfzjvevizi/2NWAwZ797fELdbpVyH6JI2Me1Ov10f8qgYvbG V0GJ3loRt84KjKdVocKguJVfMvOeMVJanPpxfPt3Ak+Nt/voZHmJdTkV4cjWTmcU x31xqc5LZcvgF4Lv+ZcMw090b281yMENwALnvQJ9FQg5WTfZ+YautUMwWGk8W8XM H3tYkdh3jKizy8YTw+zfVDn1yhw2BgSFp0QIgHIQQ2Q2gyknRfj4zdfs/4bZYcu1 KNgj9op/IejZNstP9JWw4labC78nTIW5s1f0LWF5hhZUkxeAOEyVluUVJgEw44B4 LKb0p/8jb4J/dVrsmaTDOONZ48wtNjZOTV61DhCnn+UiNVSfQe6I7XMtFpEH0PN4 WzermmeEgjw1MADeh0jg/9wMM/p9UnTxihGQrPRgHYUu45jI3ys3qArsD2GvAi9y QYqsuRJNB7EEu2clBRASA3zoWkpqbs3H9S2fB9Sf9ZzZTPCzowOdK1oe0vlMVt3A mCILe05s2nowwBrBWu4PHUTkllsnLliHhrihu9sqXCHy6u1pdNQMvJgY6kbgQmsG bVY+brdkLdQ1BxbTT1YixzLm//zqMqGC1ZJUsr5PAIbNtyKK6u6+mCkZj0Y3fU3J Il0x5V09QcC9AHyxJ8VMOxzhQZjwVYNtD6SGeY8jOyfUScY= =DHKq -----END PGP MESSAGE----- Without the armored encoding we would get binary data which isn\u2019t viewable in text format.","title":"encrypt"},{"location":"0.x/misk-datadog/index.html","text":"misk-datadog Packages \u00b6 Name Summary misk.tracing.backends.datadog Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-datadog/index.html#packages","text":"Name Summary misk.tracing.backends.datadog","title":"Packages"},{"location":"0.x/misk-datadog/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-datadog/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.tracing.backends.datadog.DatadogTracingBackendModule Binds the datadog tracer to opentracing\u2019s Tracer misk.tracing.backends.datadog.MDCScopeListener A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":"All Types - Misk"},{"location":"0.x/misk-datadog/alltypes/index.html#all-types","text":"Name Summary misk.tracing.backends.datadog.DatadogTracingBackendModule Binds the datadog tracer to opentracing\u2019s Tracer misk.tracing.backends.datadog.MDCScopeListener A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":"All Types"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/index.html","text":"misk-datadog / misk.tracing.backends.datadog Package misk.tracing.backends.datadog \u00b6 Types \u00b6 Name Summary DatadogTracingBackendModule class DatadogTracingBackendModule : KAbstractModule Binds the datadog tracer to opentracing\u2019s Tracer MDCScopeListener class MDCScopeListener : ScopeListener A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":"Package misk.tracing.backends.datadog - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/index.html#package-misktracingbackendsdatadog","text":"","title":"Package misk.tracing.backends.datadog"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/index.html#types","text":"Name Summary DatadogTracingBackendModule class DatadogTracingBackendModule : KAbstractModule Binds the datadog tracer to opentracing\u2019s Tracer MDCScopeListener class MDCScopeListener : ScopeListener A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":"Types"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/index.html","text":"misk-datadog / misk.tracing.backends.datadog / DatadogTracingBackendModule DatadogTracingBackendModule \u00b6 class DatadogTracingBackendModule : KAbstractModule Binds the datadog tracer to opentracing\u2019s Tracer Constructors \u00b6 Name Summary <init> DatadogTracingBackendModule() Binds the datadog tracer to opentracing\u2019s Tracer Functions \u00b6 Name Summary configure fun configure(): Unit","title":"DatadogTracingBackendModule - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/index.html#datadogtracingbackendmodule","text":"class DatadogTracingBackendModule : KAbstractModule Binds the datadog tracer to opentracing\u2019s Tracer","title":"DatadogTracingBackendModule"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/index.html#constructors","text":"Name Summary <init> DatadogTracingBackendModule() Binds the datadog tracer to opentracing\u2019s Tracer","title":"Constructors"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/-init-.html","text":"misk-datadog / misk.tracing.backends.datadog / DatadogTracingBackendModule / <init> <init> \u00b6 DatadogTracingBackendModule() Binds the datadog tracer to opentracing\u2019s Tracer","title":" init "},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/-init-.html#init","text":"DatadogTracingBackendModule() Binds the datadog tracer to opentracing\u2019s Tracer","title":"&lt;init&gt;"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/configure.html","text":"misk-datadog / misk.tracing.backends.datadog / DatadogTracingBackendModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-datadog-tracing-backend-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/index.html","text":"misk-datadog / misk.tracing.backends.datadog / MDCScopeListener MDCScopeListener \u00b6 class MDCScopeListener : ScopeListener A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed. Constructors \u00b6 Name Summary <init> MDCScopeListener() A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed. Functions \u00b6 Name Summary afterScopeActivated fun afterScopeActivated(): Unit afterScopeClosed fun afterScopeClosed(): Unit Companion Object Properties \u00b6 Name Summary log val log: KLogger MDC_SPAN_ID const val MDC_SPAN_ID: String MDC_TRACE_ID const val MDC_TRACE_ID: String","title":"MDCScopeListener - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/index.html#mdcscopelistener","text":"class MDCScopeListener : ScopeListener A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":"MDCScopeListener"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/index.html#constructors","text":"Name Summary <init> MDCScopeListener() A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":"Constructors"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/index.html#functions","text":"Name Summary afterScopeActivated fun afterScopeActivated(): Unit afterScopeClosed fun afterScopeClosed(): Unit","title":"Functions"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/index.html#companion-object-properties","text":"Name Summary log val log: KLogger MDC_SPAN_ID const val MDC_SPAN_ID: String MDC_TRACE_ID const val MDC_TRACE_ID: String","title":"Companion Object Properties"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/-init-.html","text":"misk-datadog / misk.tracing.backends.datadog / MDCScopeListener / <init> <init> \u00b6 MDCScopeListener() A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":" init "},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/-init-.html#init","text":"MDCScopeListener() A scope listener that updates the MDC with the trace and span reference anytime a new scope is activated or closed.","title":"&lt;init&gt;"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/-m-d-c_-s-p-a-n_-i-d.html","text":"misk-datadog / misk.tracing.backends.datadog / MDCScopeListener / MDC_SPAN_ID MDC_SPAN_ID \u00b6 const val MDC_SPAN_ID: String","title":"MDC_SPAN_ID - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/-m-d-c_-s-p-a-n_-i-d.html#mdc_span_id","text":"const val MDC_SPAN_ID: String","title":"MDC_SPAN_ID"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/-m-d-c_-t-r-a-c-e_-i-d.html","text":"misk-datadog / misk.tracing.backends.datadog / MDCScopeListener / MDC_TRACE_ID MDC_TRACE_ID \u00b6 const val MDC_TRACE_ID: String","title":"MDC_TRACE_ID - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/-m-d-c_-t-r-a-c-e_-i-d.html#mdc_trace_id","text":"const val MDC_TRACE_ID: String","title":"MDC_TRACE_ID"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/after-scope-activated.html","text":"misk-datadog / misk.tracing.backends.datadog / MDCScopeListener / afterScopeActivated afterScopeActivated \u00b6 fun afterScopeActivated(): Unit","title":"afterScopeActivated - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/after-scope-activated.html#afterscopeactivated","text":"fun afterScopeActivated(): Unit","title":"afterScopeActivated"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/after-scope-closed.html","text":"misk-datadog / misk.tracing.backends.datadog / MDCScopeListener / afterScopeClosed afterScopeClosed \u00b6 fun afterScopeClosed(): Unit","title":"afterScopeClosed - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/after-scope-closed.html#afterscopeclosed","text":"fun afterScopeClosed(): Unit","title":"afterScopeClosed"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/log.html","text":"misk-datadog / misk.tracing.backends.datadog / MDCScopeListener / log log \u00b6 val log: KLogger","title":"log - Misk"},{"location":"0.x/misk-datadog/misk.tracing.backends.datadog/-m-d-c-scope-listener/log.html#log","text":"val log: KLogger","title":"log"},{"location":"0.x/misk-eventrouter/index.html","text":"misk-eventrouter Packages \u00b6 Name Summary misk.eventrouter Index \u00b6 All Types","title":"misk-eventrouter"},{"location":"0.x/misk-eventrouter/index.html#packages","text":"Name Summary misk.eventrouter","title":"Packages"},{"location":"0.x/misk-eventrouter/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-eventrouter/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.eventrouter.ClusterSnapshot misk.eventrouter.ConsistentHashing misk.eventrouter.EventRouter misk.eventrouter.EventRouterTester misk.eventrouter.EventRouterTestingModule misk.eventrouter.KubernetesHealthCheck misk.eventrouter.Listener misk.eventrouter.RealEventRouterModule misk.eventrouter.SocketEvent misk.eventrouter.SocketEventJsonAdapter misk.eventrouter.Subscription misk.eventrouter.Topic","title":"All Types - Misk"},{"location":"0.x/misk-eventrouter/alltypes/index.html#all-types","text":"Name Summary misk.eventrouter.ClusterSnapshot misk.eventrouter.ConsistentHashing misk.eventrouter.EventRouter misk.eventrouter.EventRouterTester misk.eventrouter.EventRouterTestingModule misk.eventrouter.KubernetesHealthCheck misk.eventrouter.Listener misk.eventrouter.RealEventRouterModule misk.eventrouter.SocketEvent misk.eventrouter.SocketEventJsonAdapter misk.eventrouter.Subscription misk.eventrouter.Topic","title":"All Types"},{"location":"0.x/misk-eventrouter/misk.eventrouter/index.html","text":"misk-eventrouter / misk.eventrouter Package misk.eventrouter \u00b6 Types \u00b6 Name Summary ClusterSnapshot data class ClusterSnapshot ConsistentHashing class ConsistentHashing : ClusterMapper EventRouter interface EventRouter EventRouterTester class EventRouterTester EventRouterTestingModule class EventRouterTestingModule : KAbstractModule KubernetesHealthCheck class KubernetesHealthCheck : HealthCheck Listener interface Listener<T : Any > RealEventRouterModule class RealEventRouterModule : KAbstractModule SocketEvent sealed class SocketEvent SocketEventJsonAdapter object SocketEventJsonAdapter Subscription interface Subscription<T : Any > Topic interface Topic<T : Any >","title":"Package misk.eventrouter - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/index.html#package-miskeventrouter","text":"","title":"Package misk.eventrouter"},{"location":"0.x/misk-eventrouter/misk.eventrouter/index.html#types","text":"Name Summary ClusterSnapshot data class ClusterSnapshot ConsistentHashing class ConsistentHashing : ClusterMapper EventRouter interface EventRouter EventRouterTester class EventRouterTester EventRouterTestingModule class EventRouterTestingModule : KAbstractModule KubernetesHealthCheck class KubernetesHealthCheck : HealthCheck Listener interface Listener<T : Any > RealEventRouterModule class RealEventRouterModule : KAbstractModule SocketEvent sealed class SocketEvent SocketEventJsonAdapter object SocketEventJsonAdapter Subscription interface Subscription<T : Any > Topic interface Topic<T : Any >","title":"Types"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/index.html","text":"misk-eventrouter / misk.eventrouter / ClusterSnapshot ClusterSnapshot \u00b6 data class ClusterSnapshot Constructors \u00b6 Name Summary <init> ClusterSnapshot(hosts: List < String >, self: String ) Properties \u00b6 Name Summary hosts val hosts: List < String > self val self: String Functions \u00b6 Name Summary toString fun toString(): String","title":"ClusterSnapshot - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/index.html#clustersnapshot","text":"data class ClusterSnapshot","title":"ClusterSnapshot"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/index.html#constructors","text":"Name Summary <init> ClusterSnapshot(hosts: List < String >, self: String )","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/index.html#properties","text":"Name Summary hosts val hosts: List < String > self val self: String","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/index.html#functions","text":"Name Summary toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/-init-.html","text":"misk-eventrouter / misk.eventrouter / ClusterSnapshot / <init> <init> \u00b6 ClusterSnapshot(hosts: List < String >, self: String )","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/-init-.html#init","text":"ClusterSnapshot(hosts: List < String >, self: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/hosts.html","text":"misk-eventrouter / misk.eventrouter / ClusterSnapshot / hosts hosts \u00b6 val hosts: List < String >","title":"hosts - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/hosts.html#hosts","text":"val hosts: List < String >","title":"hosts"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/self.html","text":"misk-eventrouter / misk.eventrouter / ClusterSnapshot / self self \u00b6 val self: String","title":"self - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/self.html#self","text":"val self: String","title":"self"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/to-string.html","text":"misk-eventrouter / misk.eventrouter / ClusterSnapshot / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-cluster-snapshot/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/index.html","text":"misk-eventrouter / misk.eventrouter / ConsistentHashing ConsistentHashing \u00b6 @Singleton class ConsistentHashing : ClusterMapper Constructors \u00b6 Name Summary <init> ConsistentHashing(hashFunction: HashFunction = Hashing.murmur3_32(), mod: Long = 65536L, virtualPoints: Int = 16) Functions \u00b6 Name Summary topicToHost fun topicToHost(clusterSnapshot: ClusterSnapshot , topic: String ): String","title":"ConsistentHashing - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/index.html#consistenthashing","text":"@Singleton class ConsistentHashing : ClusterMapper","title":"ConsistentHashing"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/index.html#constructors","text":"Name Summary <init> ConsistentHashing(hashFunction: HashFunction = Hashing.murmur3_32(), mod: Long = 65536L, virtualPoints: Int = 16)","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/index.html#functions","text":"Name Summary topicToHost fun topicToHost(clusterSnapshot: ClusterSnapshot , topic: String ): String","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/-init-.html","text":"misk-eventrouter / misk.eventrouter / ConsistentHashing / <init> <init> \u00b6 ConsistentHashing(hashFunction: HashFunction = Hashing.murmur3_32(), mod: Long = 65536L, virtualPoints: Int = 16)","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/-init-.html#init","text":"ConsistentHashing(hashFunction: HashFunction = Hashing.murmur3_32(), mod: Long = 65536L, virtualPoints: Int = 16)","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/topic-to-host.html","text":"misk-eventrouter / misk.eventrouter / ConsistentHashing / topicToHost topicToHost \u00b6 fun topicToHost(clusterSnapshot: ClusterSnapshot , topic: String ): String","title":"topicToHost - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-consistent-hashing/topic-to-host.html#topictohost","text":"fun topicToHost(clusterSnapshot: ClusterSnapshot , topic: String ): String","title":"topicToHost"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router/index.html","text":"misk-eventrouter / misk.eventrouter / EventRouter EventRouter \u00b6 interface EventRouter Functions \u00b6 Name Summary getTopic abstract fun <T : Any > getTopic(name: String ): Topic < T >","title":"EventRouter - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router/index.html#eventrouter","text":"interface EventRouter","title":"EventRouter"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router/index.html#functions","text":"Name Summary getTopic abstract fun <T : Any > getTopic(name: String ): Topic < T >","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router/get-topic.html","text":"misk-eventrouter / misk.eventrouter / EventRouter / getTopic getTopic \u00b6 abstract fun <T : Any > getTopic(name: String ): Topic < T >","title":"getTopic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router/get-topic.html#gettopic","text":"abstract fun <T : Any > getTopic(name: String ): Topic < T >","title":"getTopic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/index.html","text":"misk-eventrouter / misk.eventrouter / EventRouterTester EventRouterTester \u00b6 class EventRouterTester Constructors \u00b6 Name Summary <init> EventRouterTester() Functions \u00b6 Name Summary processEverything fun processEverything(): Unit","title":"EventRouterTester - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/index.html#eventroutertester","text":"class EventRouterTester","title":"EventRouterTester"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/index.html#constructors","text":"Name Summary <init> EventRouterTester()","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/index.html#functions","text":"Name Summary processEverything fun processEverything(): Unit","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/-init-.html","text":"misk-eventrouter / misk.eventrouter / EventRouterTester / <init> <init> \u00b6 EventRouterTester()","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/-init-.html#init","text":"EventRouterTester()","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/process-everything.html","text":"misk-eventrouter / misk.eventrouter / EventRouterTester / processEverything processEverything \u00b6 fun processEverything(): Unit","title":"processEverything - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-tester/process-everything.html#processeverything","text":"fun processEverything(): Unit","title":"processEverything"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/index.html","text":"misk-eventrouter / misk.eventrouter / EventRouterTestingModule EventRouterTestingModule \u00b6 class EventRouterTestingModule : KAbstractModule Parameters \u00b6 distributed - true if the caller may create multiple instances of EventRouter. In this case the caller is responsible for calling EventRouter.joinCluster on each. Constructors \u00b6 Name Summary <init> EventRouterTestingModule() Properties \u00b6 Name Summary distributed val distributed: Boolean true if the caller may create multiple instances of EventRouter. In this case the caller is responsible for calling EventRouter.joinCluster on each. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"EventRouterTestingModule - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/index.html#eventroutertestingmodule","text":"class EventRouterTestingModule : KAbstractModule","title":"EventRouterTestingModule"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/index.html#parameters","text":"distributed - true if the caller may create multiple instances of EventRouter. In this case the caller is responsible for calling EventRouter.joinCluster on each.","title":"Parameters"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/index.html#constructors","text":"Name Summary <init> EventRouterTestingModule()","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/index.html#properties","text":"Name Summary distributed val distributed: Boolean true if the caller may create multiple instances of EventRouter. In this case the caller is responsible for calling EventRouter.joinCluster on each.","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/-init-.html","text":"misk-eventrouter / misk.eventrouter / EventRouterTestingModule / <init> <init> \u00b6 EventRouterTestingModule()","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/-init-.html#init","text":"EventRouterTestingModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/configure.html","text":"misk-eventrouter / misk.eventrouter / EventRouterTestingModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/distributed.html","text":"misk-eventrouter / misk.eventrouter / EventRouterTestingModule / distributed distributed \u00b6 val distributed: Boolean true if the caller may create multiple instances of EventRouter. In this case the caller is responsible for calling EventRouter.joinCluster on each.","title":"distributed - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-event-router-testing-module/distributed.html#distributed","text":"val distributed: Boolean true if the caller may create multiple instances of EventRouter. In this case the caller is responsible for calling EventRouter.joinCluster on each.","title":"distributed"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/index.html","text":"misk-eventrouter / misk.eventrouter / KubernetesHealthCheck KubernetesHealthCheck \u00b6 @Singleton class KubernetesHealthCheck : HealthCheck Constructors \u00b6 Name Summary <init> KubernetesHealthCheck() Functions \u00b6 Name Summary status fun status(): HealthStatus","title":"KubernetesHealthCheck - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/index.html#kuberneteshealthcheck","text":"@Singleton class KubernetesHealthCheck : HealthCheck","title":"KubernetesHealthCheck"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/index.html#constructors","text":"Name Summary <init> KubernetesHealthCheck()","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/index.html#functions","text":"Name Summary status fun status(): HealthStatus","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/-init-.html","text":"misk-eventrouter / misk.eventrouter / KubernetesHealthCheck / <init> <init> \u00b6 KubernetesHealthCheck()","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/-init-.html#init","text":"KubernetesHealthCheck()","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/status.html","text":"misk-eventrouter / misk.eventrouter / KubernetesHealthCheck / status status \u00b6 fun status(): HealthStatus","title":"status - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-kubernetes-health-check/status.html#status","text":"fun status(): HealthStatus","title":"status"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/index.html","text":"misk-eventrouter / misk.eventrouter / Listener Listener \u00b6 interface Listener<T : Any > Functions \u00b6 Name Summary onClose abstract fun onClose(subscription: Subscription < T >): Unit onEvent abstract fun onEvent(subscription: Subscription < T >, event: T ): Unit onOpen abstract fun onOpen(subscription: Subscription < T >): Unit","title":"Listener - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/index.html#listener","text":"interface Listener<T : Any >","title":"Listener"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/index.html#functions","text":"Name Summary onClose abstract fun onClose(subscription: Subscription < T >): Unit onEvent abstract fun onEvent(subscription: Subscription < T >, event: T ): Unit onOpen abstract fun onOpen(subscription: Subscription < T >): Unit","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/on-close.html","text":"misk-eventrouter / misk.eventrouter / Listener / onClose onClose \u00b6 abstract fun onClose(subscription: Subscription < T >): Unit","title":"onClose - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/on-close.html#onclose","text":"abstract fun onClose(subscription: Subscription < T >): Unit","title":"onClose"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/on-event.html","text":"misk-eventrouter / misk.eventrouter / Listener / onEvent onEvent \u00b6 abstract fun onEvent(subscription: Subscription < T >, event: T ): Unit","title":"onEvent - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/on-event.html#onevent","text":"abstract fun onEvent(subscription: Subscription < T >, event: T ): Unit","title":"onEvent"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/on-open.html","text":"misk-eventrouter / misk.eventrouter / Listener / onOpen onOpen \u00b6 abstract fun onOpen(subscription: Subscription < T >): Unit","title":"onOpen - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-listener/on-open.html#onopen","text":"abstract fun onOpen(subscription: Subscription < T >): Unit","title":"onOpen"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/index.html","text":"misk-eventrouter / misk.eventrouter / RealEventRouterModule RealEventRouterModule \u00b6 class RealEventRouterModule : KAbstractModule Constructors \u00b6 Name Summary <init> RealEventRouterModule(deployment: Deployment) Properties \u00b6 Name Summary deployment val deployment: Deployment Functions \u00b6 Name Summary actionExecutor fun actionExecutor(): ExecutorService configure fun configure(): Unit kubernetesExecutor fun kubernetesExecutor(): ExecutorService subscriberExecutor fun subscriberExecutor(): ExecutorService","title":"RealEventRouterModule - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/index.html#realeventroutermodule","text":"class RealEventRouterModule : KAbstractModule","title":"RealEventRouterModule"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/index.html#constructors","text":"Name Summary <init> RealEventRouterModule(deployment: Deployment)","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/index.html#properties","text":"Name Summary deployment val deployment: Deployment","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/index.html#functions","text":"Name Summary actionExecutor fun actionExecutor(): ExecutorService configure fun configure(): Unit kubernetesExecutor fun kubernetesExecutor(): ExecutorService subscriberExecutor fun subscriberExecutor(): ExecutorService","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/-init-.html","text":"misk-eventrouter / misk.eventrouter / RealEventRouterModule / <init> <init> \u00b6 RealEventRouterModule(deployment: Deployment)","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/-init-.html#init","text":"RealEventRouterModule(deployment: Deployment)","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/action-executor.html","text":"misk-eventrouter / misk.eventrouter / RealEventRouterModule / actionExecutor actionExecutor \u00b6 @Provides @Singleton fun actionExecutor(): ExecutorService","title":"actionExecutor - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/action-executor.html#actionexecutor","text":"@Provides @Singleton fun actionExecutor(): ExecutorService","title":"actionExecutor"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/configure.html","text":"misk-eventrouter / misk.eventrouter / RealEventRouterModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/deployment.html","text":"misk-eventrouter / misk.eventrouter / RealEventRouterModule / deployment deployment \u00b6 val deployment: Deployment","title":"deployment - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/deployment.html#deployment","text":"val deployment: Deployment","title":"deployment"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/kubernetes-executor.html","text":"misk-eventrouter / misk.eventrouter / RealEventRouterModule / kubernetesExecutor kubernetesExecutor \u00b6 @Provides @Singleton fun kubernetesExecutor(): ExecutorService","title":"kubernetesExecutor - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/kubernetes-executor.html#kubernetesexecutor","text":"@Provides @Singleton fun kubernetesExecutor(): ExecutorService","title":"kubernetesExecutor"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/subscriber-executor.html","text":"misk-eventrouter / misk.eventrouter / RealEventRouterModule / subscriberExecutor subscriberExecutor \u00b6 @Provides @Singleton fun subscriberExecutor(): ExecutorService","title":"subscriberExecutor - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-real-event-router-module/subscriber-executor.html#subscriberexecutor","text":"@Provides @Singleton fun subscriberExecutor(): ExecutorService","title":"subscriberExecutor"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/index.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent SocketEvent \u00b6 sealed class SocketEvent Types \u00b6 Name Summary Ack data class Ack : SocketEvent Event data class Event : SocketEvent Subscribe data class Subscribe : SocketEvent UnknownItem object UnknownItem : SocketEvent Unsubscribe data class Unsubscribe : SocketEvent Inheritors \u00b6 Name Summary Ack data class Ack : SocketEvent Event data class Event : SocketEvent Subscribe data class Subscribe : SocketEvent UnknownItem object UnknownItem : SocketEvent Unsubscribe data class Unsubscribe : SocketEvent","title":"SocketEvent - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/index.html#socketevent","text":"sealed class SocketEvent","title":"SocketEvent"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/index.html#types","text":"Name Summary Ack data class Ack : SocketEvent Event data class Event : SocketEvent Subscribe data class Subscribe : SocketEvent UnknownItem object UnknownItem : SocketEvent Unsubscribe data class Unsubscribe : SocketEvent","title":"Types"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/index.html#inheritors","text":"Name Summary Ack data class Ack : SocketEvent Event data class Event : SocketEvent Subscribe data class Subscribe : SocketEvent UnknownItem object UnknownItem : SocketEvent Unsubscribe data class Unsubscribe : SocketEvent","title":"Inheritors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unknown-item.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / UnknownItem UnknownItem \u00b6 object UnknownItem : SocketEvent","title":"UnknownItem - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unknown-item.html#unknownitem","text":"object UnknownItem : SocketEvent","title":"UnknownItem"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/index.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Ack Ack \u00b6 data class Ack : SocketEvent Constructors \u00b6 Name Summary <init> Ack(topic: String ) Properties \u00b6 Name Summary topic val topic: String","title":"Ack - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/index.html#ack","text":"data class Ack : SocketEvent","title":"Ack"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/index.html#constructors","text":"Name Summary <init> Ack(topic: String )","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/index.html#properties","text":"Name Summary topic val topic: String","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/-init-.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Ack / <init> <init> \u00b6 Ack(topic: String )","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/-init-.html#init","text":"Ack(topic: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/topic.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Ack / topic topic \u00b6 val topic: String","title":"topic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-ack/topic.html#topic","text":"val topic: String","title":"topic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/index.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Event Event \u00b6 data class Event : SocketEvent Constructors \u00b6 Name Summary <init> Event(topic: String , message: String ) Properties \u00b6 Name Summary message val message: String topic val topic: String","title":"Event - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/index.html#event","text":"data class Event : SocketEvent","title":"Event"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/index.html#constructors","text":"Name Summary <init> Event(topic: String , message: String )","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/index.html#properties","text":"Name Summary message val message: String topic val topic: String","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/-init-.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Event / <init> <init> \u00b6 Event(topic: String , message: String )","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/-init-.html#init","text":"Event(topic: String , message: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/message.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Event / message message \u00b6 val message: String","title":"message - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/message.html#message","text":"val message: String","title":"message"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/topic.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Event / topic topic \u00b6 val topic: String","title":"topic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-event/topic.html#topic","text":"val topic: String","title":"topic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/index.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Subscribe Subscribe \u00b6 data class Subscribe : SocketEvent Constructors \u00b6 Name Summary <init> Subscribe(topic: String ) Properties \u00b6 Name Summary topic val topic: String","title":"Subscribe - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/index.html#subscribe","text":"data class Subscribe : SocketEvent","title":"Subscribe"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/index.html#constructors","text":"Name Summary <init> Subscribe(topic: String )","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/index.html#properties","text":"Name Summary topic val topic: String","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/-init-.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Subscribe / <init> <init> \u00b6 Subscribe(topic: String )","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/-init-.html#init","text":"Subscribe(topic: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/topic.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Subscribe / topic topic \u00b6 val topic: String","title":"topic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-subscribe/topic.html#topic","text":"val topic: String","title":"topic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/index.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Unsubscribe Unsubscribe \u00b6 data class Unsubscribe : SocketEvent Constructors \u00b6 Name Summary <init> Unsubscribe(topic: String ) Properties \u00b6 Name Summary topic val topic: String","title":"Unsubscribe - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/index.html#unsubscribe","text":"data class Unsubscribe : SocketEvent","title":"Unsubscribe"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/index.html#constructors","text":"Name Summary <init> Unsubscribe(topic: String )","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/index.html#properties","text":"Name Summary topic val topic: String","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/-init-.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Unsubscribe / <init> <init> \u00b6 Unsubscribe(topic: String )","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/-init-.html#init","text":"Unsubscribe(topic: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/topic.html","text":"misk-eventrouter / misk.eventrouter / SocketEvent / Unsubscribe / topic topic \u00b6 val topic: String","title":"topic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event/-unsubscribe/topic.html#topic","text":"val topic: String","title":"topic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/index.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter SocketEventJsonAdapter \u00b6 object SocketEventJsonAdapter Types \u00b6 Name Summary SocketEventJson data class SocketEventJson Functions \u00b6 Name Summary fromJson fun fromJson(json: SocketEventJsonAdapter.SocketEventJson ): SocketEvent toJson fun toJson(item: SocketEvent ): SocketEventJsonAdapter.SocketEventJson","title":"SocketEventJsonAdapter - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/index.html#socketeventjsonadapter","text":"object SocketEventJsonAdapter","title":"SocketEventJsonAdapter"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/index.html#types","text":"Name Summary SocketEventJson data class SocketEventJson","title":"Types"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/index.html#functions","text":"Name Summary fromJson fun fromJson(json: SocketEventJsonAdapter.SocketEventJson ): SocketEvent toJson fun toJson(item: SocketEvent ): SocketEventJsonAdapter.SocketEventJson","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/from-json.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter / fromJson fromJson \u00b6 fun fromJson(json: SocketEventJsonAdapter.SocketEventJson ): SocketEvent","title":"fromJson - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/from-json.html#fromjson","text":"fun fromJson(json: SocketEventJsonAdapter.SocketEventJson ): SocketEvent","title":"fromJson"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/to-json.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter / toJson toJson \u00b6 fun toJson(item: SocketEvent ): SocketEventJsonAdapter.SocketEventJson","title":"toJson - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/to-json.html#tojson","text":"fun toJson(item: SocketEvent ): SocketEventJsonAdapter.SocketEventJson","title":"toJson"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/index.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter / SocketEventJson SocketEventJson \u00b6 data class SocketEventJson Constructors \u00b6 Name Summary <init> SocketEventJson(type: String , topic: String ?, message: String ?) Properties \u00b6 Name Summary message val message: String ? topic val topic: String ? type val type: String","title":"SocketEventJson - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/index.html#socketeventjson","text":"data class SocketEventJson","title":"SocketEventJson"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/index.html#constructors","text":"Name Summary <init> SocketEventJson(type: String , topic: String ?, message: String ?)","title":"Constructors"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/index.html#properties","text":"Name Summary message val message: String ? topic val topic: String ? type val type: String","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/-init-.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter / SocketEventJson / <init> <init> \u00b6 SocketEventJson(type: String , topic: String ?, message: String ?)","title":" init "},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/-init-.html#init","text":"SocketEventJson(type: String , topic: String ?, message: String ?)","title":"&lt;init&gt;"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/message.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter / SocketEventJson / message message \u00b6 val message: String ?","title":"message - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/message.html#message","text":"val message: String ?","title":"message"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/topic.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter / SocketEventJson / topic topic \u00b6 val topic: String ?","title":"topic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/topic.html#topic","text":"val topic: String ?","title":"topic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/type.html","text":"misk-eventrouter / misk.eventrouter / SocketEventJsonAdapter / SocketEventJson / type type \u00b6 val type: String","title":"type - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-socket-event-json-adapter/-socket-event-json/type.html#type","text":"val type: String","title":"type"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/index.html","text":"misk-eventrouter / misk.eventrouter / Subscription Subscription \u00b6 interface Subscription<T : Any > Properties \u00b6 Name Summary topic abstract val topic: Topic < T > Functions \u00b6 Name Summary cancel abstract fun cancel(): Unit","title":"Subscription - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/index.html#subscription","text":"interface Subscription<T : Any >","title":"Subscription"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/index.html#properties","text":"Name Summary topic abstract val topic: Topic < T >","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/index.html#functions","text":"Name Summary cancel abstract fun cancel(): Unit","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/cancel.html","text":"misk-eventrouter / misk.eventrouter / Subscription / cancel cancel \u00b6 abstract fun cancel(): Unit","title":"cancel - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/cancel.html#cancel","text":"abstract fun cancel(): Unit","title":"cancel"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/topic.html","text":"misk-eventrouter / misk.eventrouter / Subscription / topic topic \u00b6 abstract val topic: Topic < T >","title":"topic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-subscription/topic.html#topic","text":"abstract val topic: Topic < T >","title":"topic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/index.html","text":"misk-eventrouter / misk.eventrouter / Topic Topic \u00b6 interface Topic<T : Any > Properties \u00b6 Name Summary name abstract val name: String Functions \u00b6 Name Summary publish abstract fun publish(event: T ): Unit subscribe abstract fun subscribe(listener: Listener < T >): Subscription < T >","title":"Topic - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/index.html#topic","text":"interface Topic<T : Any >","title":"Topic"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/index.html#properties","text":"Name Summary name abstract val name: String","title":"Properties"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/index.html#functions","text":"Name Summary publish abstract fun publish(event: T ): Unit subscribe abstract fun subscribe(listener: Listener < T >): Subscription < T >","title":"Functions"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/name.html","text":"misk-eventrouter / misk.eventrouter / Topic / name name \u00b6 abstract val name: String","title":"name - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/name.html#name","text":"abstract val name: String","title":"name"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/publish.html","text":"misk-eventrouter / misk.eventrouter / Topic / publish publish \u00b6 abstract fun publish(event: T ): Unit","title":"publish - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/publish.html#publish","text":"abstract fun publish(event: T ): Unit","title":"publish"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/subscribe.html","text":"misk-eventrouter / misk.eventrouter / Topic / subscribe subscribe \u00b6 abstract fun subscribe(listener: Listener < T >): Subscription < T >","title":"subscribe - Misk"},{"location":"0.x/misk-eventrouter/misk.eventrouter/-topic/subscribe.html#subscribe","text":"abstract fun subscribe(listener: Listener < T >): Subscription < T >","title":"subscribe"},{"location":"0.x/misk-events/index.html","text":"misk-events Index \u00b6 All Types","title":"misk-events"},{"location":"0.x/misk-events/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-events/alltypes.html","text":"All Types \u00b6 Name Summary","title":"All Types - Misk"},{"location":"0.x/misk-events/alltypes.html#all-types","text":"Name Summary","title":"All Types"},{"location":"0.x/misk-events-core/index.html","text":"misk-events-core Index \u00b6 All Types","title":"misk-events-core"},{"location":"0.x/misk-events-core/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-events-core/alltypes.html","text":"All Types \u00b6 Name Summary","title":"All Types - Misk"},{"location":"0.x/misk-events-core/alltypes.html#all-types","text":"Name Summary","title":"All Types"},{"location":"0.x/misk-events-testing/index.html","text":"misk-events-testing Index \u00b6 All Types","title":"Index - Misk"},{"location":"0.x/misk-events-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-events-testing/alltypes.html","text":"All Types \u00b6 Name Summary","title":"All Types - Misk"},{"location":"0.x/misk-events-testing/alltypes.html#all-types","text":"Name Summary","title":"All Types"},{"location":"0.x/misk-feature/index.html","text":"misk-feature Packages \u00b6 Name Summary misk.feature Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-feature/index.html#packages","text":"Name Summary misk.feature","title":"Packages"},{"location":"0.x/misk-feature/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-feature/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.feature.Attributes misk.feature.DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. misk.feature.Feature misk.feature.FeatureFlags Interface for evaluating feature flags. misk.feature.FeatureService Marker interface to integrate with the misk service graph. misk.feature.TrackerReference wisp.feature.TrackerReference (extensions in package misk.feature)","title":"All Types - Misk"},{"location":"0.x/misk-feature/alltypes/index.html#all-types","text":"Name Summary misk.feature.Attributes misk.feature.DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. misk.feature.Feature misk.feature.FeatureFlags Interface for evaluating feature flags. misk.feature.FeatureService Marker interface to integrate with the misk service graph. misk.feature.TrackerReference wisp.feature.TrackerReference (extensions in package misk.feature)","title":"All Types"},{"location":"0.x/misk-feature/misk.feature/index.html","text":"misk-feature / misk.feature Package misk.feature \u00b6 Types \u00b6 Name Summary Attributes class Attributes : Attributes DynamicConfig interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. Feature class Feature : Feature FeatureFlags interface FeatureFlags Interface for evaluating feature flags. FeatureService interface FeatureService : Service Marker interface to integrate with the misk service graph. TrackerReference interface TrackerReference : TrackerReference Extensions for External Classes \u00b6 Name Summary wisp.feature.TrackerReference Functions \u00b6 Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Package misk.feature - Misk"},{"location":"0.x/misk-feature/misk.feature/index.html#package-miskfeature","text":"","title":"Package misk.feature"},{"location":"0.x/misk-feature/misk.feature/index.html#types","text":"Name Summary Attributes class Attributes : Attributes DynamicConfig interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. Feature class Feature : Feature FeatureFlags interface FeatureFlags Interface for evaluating feature flags. FeatureService interface FeatureService : Service Marker interface to integrate with the misk service graph. TrackerReference interface TrackerReference : TrackerReference","title":"Types"},{"location":"0.x/misk-feature/misk.feature/index.html#extensions-for-external-classes","text":"Name Summary wisp.feature.TrackerReference","title":"Extensions for External Classes"},{"location":"0.x/misk-feature/misk.feature/index.html#functions","text":"Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/misk-feature/misk.feature/-feature-service.html","text":"misk-feature / misk.feature / FeatureService FeatureService \u00b6 interface FeatureService : Service Marker interface to integrate with the misk service graph.","title":"FeatureService - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-service.html#featureservice","text":"interface FeatureService : Service Marker interface to integrate with the misk service graph.","title":"FeatureService"},{"location":"0.x/misk-feature/misk.feature/-tracker-reference.html","text":"misk-feature / misk.feature / TrackerReference TrackerReference \u00b6 interface TrackerReference : TrackerReference Extension Functions \u00b6 Name Summary toMisk fun TrackerReference.toMisk(): TrackerReference","title":"TrackerReference - Misk"},{"location":"0.x/misk-feature/misk.feature/-tracker-reference.html#trackerreference","text":"interface TrackerReference : TrackerReference","title":"TrackerReference"},{"location":"0.x/misk-feature/misk.feature/-tracker-reference.html#extension-functions","text":"Name Summary toMisk fun TrackerReference.toMisk(): TrackerReference","title":"Extension Functions"},{"location":"0.x/misk-feature/misk.feature/get-enum.html","text":"misk-feature / misk.feature / getEnum getEnum \u00b6 inline fun <reified T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T inline fun <reified T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getEnum - Misk"},{"location":"0.x/misk-feature/misk.feature/get-enum.html#getenum","text":"inline fun <reified T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T inline fun <reified T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getEnum"},{"location":"0.x/misk-feature/misk.feature/get-json.html","text":"misk-feature / misk.feature / getJson getJson \u00b6 inline fun <reified T> DynamicConfig .getJson(feature: Feature ): T inline fun <reified T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getJson - Misk"},{"location":"0.x/misk-feature/misk.feature/get-json.html#getjson","text":"inline fun <reified T> DynamicConfig .getJson(feature: Feature ): T inline fun <reified T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getJson"},{"location":"0.x/misk-feature/misk.feature/track-enum.html","text":"misk-feature / misk.feature / trackEnum trackEnum \u00b6 inline fun <reified T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/misk-feature/misk.feature/track-enum.html#trackenum","text":"inline fun <reified T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum"},{"location":"0.x/misk-feature/misk.feature/track-json.html","text":"misk-feature / misk.feature / trackJson trackJson \u00b6 inline fun <reified T> DynamicConfig .trackJson(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/misk-feature/misk.feature/track-json.html#trackjson","text":"inline fun <reified T> DynamicConfig .trackJson(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson"},{"location":"0.x/misk-feature/misk.feature/-attributes/index.html","text":"misk-feature / misk.feature / Attributes Attributes \u00b6 class Attributes : Attributes Constructors \u00b6 Name Summary <init> Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false)","title":"Attributes - Misk"},{"location":"0.x/misk-feature/misk.feature/-attributes/index.html#attributes","text":"class Attributes : Attributes","title":"Attributes"},{"location":"0.x/misk-feature/misk.feature/-attributes/index.html#constructors","text":"Name Summary <init> Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false)","title":"Constructors"},{"location":"0.x/misk-feature/misk.feature/-attributes/-init-.html","text":"misk-feature / misk.feature / Attributes / <init> <init> \u00b6 Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false)","title":" init "},{"location":"0.x/misk-feature/misk.feature/-attributes/-init-.html#init","text":"Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false)","title":"&lt;init&gt;"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/index.html","text":"misk-feature / misk.feature / DynamicConfig DynamicConfig \u00b6 interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. Functions \u00b6 Name Summary getBoolean abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag. getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag. getInt abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag. getJson abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag. getString abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag. trackBoolean abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. trackInt abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. trackJson abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. trackString abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value. Extension Functions \u00b6 Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"DynamicConfig - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/index.html#dynamicconfig","text":"interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys.","title":"DynamicConfig"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/index.html#functions","text":"Name Summary getBoolean abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag. getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag. getInt abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag. getJson abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag. getString abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag. trackBoolean abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. trackInt abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. trackJson abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. trackString abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value.","title":"Functions"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/index.html#extension-functions","text":"Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Extension Functions"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-boolean.html","text":"misk-feature / misk.feature / DynamicConfig / getBoolean getBoolean \u00b6 abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag.","title":"getBoolean - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-boolean.html#getboolean","text":"abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag.","title":"getBoolean"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-enum.html","text":"misk-feature / misk.feature / DynamicConfig / getEnum getEnum \u00b6 abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag.","title":"getEnum - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-enum.html#getenum","text":"abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag.","title":"getEnum"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-int.html","text":"misk-feature / misk.feature / DynamicConfig / getInt getInt \u00b6 abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag.","title":"getInt - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-int.html#getint","text":"abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag.","title":"getInt"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-json.html","text":"misk-feature / misk.feature / DynamicConfig / getJson getJson \u00b6 abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag.","title":"getJson - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-json.html#getjson","text":"abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag.","title":"getJson"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-string.html","text":"misk-feature / misk.feature / DynamicConfig / getString getString \u00b6 abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag.","title":"getString - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/get-string.html#getstring","text":"abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag.","title":"getString"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-boolean.html","text":"misk-feature / misk.feature / DynamicConfig / trackBoolean trackBoolean \u00b6 abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackBoolean - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-boolean.html#trackboolean","text":"abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackBoolean"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-enum.html","text":"misk-feature / misk.feature / DynamicConfig / trackEnum trackEnum \u00b6 abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackEnum - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-enum.html#trackenum","text":"abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackEnum"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-int.html","text":"misk-feature / misk.feature / DynamicConfig / trackInt trackInt \u00b6 abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackInt - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-int.html#trackint","text":"abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackInt"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-json.html","text":"misk-feature / misk.feature / DynamicConfig / trackJson trackJson \u00b6 abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackJson - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-json.html#trackjson","text":"abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackJson"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-string.html","text":"misk-feature / misk.feature / DynamicConfig / trackString trackString \u00b6 abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackString - Misk"},{"location":"0.x/misk-feature/misk.feature/-dynamic-config/track-string.html#trackstring","text":"abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackString"},{"location":"0.x/misk-feature/misk.feature/-feature/index.html","text":"misk-feature / misk.feature / Feature Feature \u00b6 class Feature : Feature Constructors \u00b6 Name Summary <init> Feature(name: String )","title":"Feature - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature/index.html#feature","text":"class Feature : Feature","title":"Feature"},{"location":"0.x/misk-feature/misk.feature/-feature/index.html#constructors","text":"Name Summary <init> Feature(name: String )","title":"Constructors"},{"location":"0.x/misk-feature/misk.feature/-feature/-init-.html","text":"misk-feature / misk.feature / Feature / <init> <init> \u00b6 Feature(name: String )","title":" init "},{"location":"0.x/misk-feature/misk.feature/-feature/-init-.html#init","text":"Feature(name: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/index.html","text":"misk-feature / misk.feature / FeatureFlags FeatureFlags \u00b6 interface FeatureFlags Interface for evaluating feature flags. Functions \u00b6 Name Summary getBoolean abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. open fun getBoolean(feature: Feature , key: String ): Boolean getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T getInt abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. open fun getInt(feature: Feature , key: String ): Int getJson abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes. open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T getString abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. open fun getString(feature: Feature , key: String ): String trackBoolean abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes. open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Extension Functions \u00b6 Name Summary getEnum fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"FeatureFlags - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/index.html#featureflags","text":"interface FeatureFlags Interface for evaluating feature flags.","title":"FeatureFlags"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/index.html#functions","text":"Name Summary getBoolean abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. open fun getBoolean(feature: Feature , key: String ): Boolean getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T getInt abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. open fun getInt(feature: Feature , key: String ): Int getJson abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes. open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T getString abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. open fun getString(feature: Feature , key: String ): String trackBoolean abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes. open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/index.html#extension-functions","text":"Name Summary getEnum fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Extension Functions"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-boolean.html","text":"misk-feature / misk.feature / FeatureFlags / getBoolean getBoolean \u00b6 abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. See Also getEnum open fun getBoolean(feature: Feature , key: String ): Boolean","title":"getBoolean - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-boolean.html#getboolean","text":"abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. See Also getEnum open fun getBoolean(feature: Feature , key: String ): Boolean","title":"getBoolean"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-enum.html","text":"misk-feature / misk.feature / FeatureFlags / getEnum getEnum \u00b6 abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes. Parameters \u00b6 feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation. Exceptions \u00b6 RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T","title":"getEnum - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-enum.html#getenum","text":"abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes.","title":"getEnum"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-enum.html#parameters","text":"feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation.","title":"Parameters"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-enum.html#exceptions","text":"RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T","title":"Exceptions"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-int.html","text":"misk-feature / misk.feature / FeatureFlags / getInt getInt \u00b6 abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. See Also getEnum open fun getInt(feature: Feature , key: String ): Int","title":"getInt - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-int.html#getint","text":"abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. See Also getEnum open fun getInt(feature: Feature , key: String ): Int","title":"getInt"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-json.html","text":"misk-feature / misk.feature / FeatureFlags / getJson getJson \u00b6 abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes. Parameters \u00b6 clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also getEnum open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T","title":"getJson - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-json.html#getjson","text":"abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes.","title":"getJson"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-json.html#parameters","text":"clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also getEnum open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T","title":"Parameters"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-string.html","text":"misk-feature / misk.feature / FeatureFlags / getString getString \u00b6 abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. See Also getEnum open fun getString(feature: Feature , key: String ): String","title":"getString - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/get-string.html#getstring","text":"abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. See Also getEnum open fun getString(feature: Feature , key: String ): String","title":"getString"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-boolean.html","text":"misk-feature / misk.feature / FeatureFlags / trackBoolean trackBoolean \u00b6 abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. See Also trackEnum open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-boolean.html#trackboolean","text":"abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. See Also trackEnum open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-enum.html","text":"misk-feature / misk.feature / FeatureFlags / trackEnum trackEnum \u00b6 abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes. Parameters \u00b6 feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation. tracker - a tracker to be registered for processing of changed values Exceptions \u00b6 RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. Return a reference to the registered tracker allowing to un-register it open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-enum.html#trackenum","text":"abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes.","title":"trackEnum"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-enum.html#parameters","text":"feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation. tracker - a tracker to be registered for processing of changed values","title":"Parameters"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-enum.html#exceptions","text":"RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. Return a reference to the registered tracker allowing to un-register it open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Exceptions"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-int.html","text":"misk-feature / misk.feature / FeatureFlags / trackInt trackInt \u00b6 abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. See Also trackEnum open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-int.html#trackint","text":"abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. See Also trackEnum open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-json.html","text":"misk-feature / misk.feature / FeatureFlags / trackJson trackJson \u00b6 abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes. Parameters \u00b6 clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also trackEnum open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-json.html#trackjson","text":"abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes.","title":"trackJson"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-json.html#parameters","text":"clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also trackEnum open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Parameters"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-string.html","text":"misk-feature / misk.feature / FeatureFlags / trackString trackString \u00b6 abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. See Also trackEnum open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString - Misk"},{"location":"0.x/misk-feature/misk.feature/-feature-flags/track-string.html#trackstring","text":"abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. See Also trackEnum open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString"},{"location":"0.x/misk-feature/misk.feature/wisp.feature.-tracker-reference/index.html","text":"misk-feature / misk.feature / wisp.feature.TrackerReference Extensions for wisp.feature.TrackerReference \u00b6 Name Summary toMisk fun TrackerReference.toMisk(): TrackerReference","title":"Extensions for wisp.feature.TrackerReference - Misk"},{"location":"0.x/misk-feature/misk.feature/wisp.feature.-tracker-reference/index.html#extensions-for-wispfeaturetrackerreference","text":"Name Summary toMisk fun TrackerReference.toMisk(): TrackerReference","title":"Extensions for wisp.feature.TrackerReference"},{"location":"0.x/misk-feature/misk.feature/wisp.feature.-tracker-reference/to-misk.html","text":"misk-feature / misk.feature / wisp.feature.TrackerReference / toMisk toMisk \u00b6 fun TrackerReference.toMisk(): TrackerReference","title":"toMisk - Misk"},{"location":"0.x/misk-feature/misk.feature/wisp.feature.-tracker-reference/to-misk.html#tomisk","text":"fun TrackerReference.toMisk(): TrackerReference","title":"toMisk"},{"location":"0.x/misk-feature-testing/index.html","text":"misk-feature-testing Packages \u00b6 Name Summary misk.feature.testing Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-feature-testing/index.html#packages","text":"Name Summary misk.feature.testing","title":"Packages"},{"location":"0.x/misk-feature-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-feature-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.feature.testing.FakeFeatureFlags In-memory test implementation of FeatureFlags that allows flags to be overridden. misk.feature.testing.FakeFeatureFlagsModule Binds a FakeFeatureFlags that allows tests to override values.","title":"All Types - Misk"},{"location":"0.x/misk-feature-testing/alltypes/index.html#all-types","text":"Name Summary misk.feature.testing.FakeFeatureFlags In-memory test implementation of FeatureFlags that allows flags to be overridden. misk.feature.testing.FakeFeatureFlagsModule Binds a FakeFeatureFlags that allows tests to override values.","title":"All Types"},{"location":"0.x/misk-feature-testing/misk.feature.testing/index.html","text":"misk-feature-testing / misk.feature.testing Package misk.feature.testing \u00b6 Types \u00b6 Name Summary FakeFeatureFlags class FakeFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden. FakeFeatureFlagsModule class FakeFeatureFlagsModule : KAbstractModule Binds a FakeFeatureFlags that allows tests to override values.","title":"Package misk.feature.testing - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/index.html#package-miskfeaturetesting","text":"","title":"Package misk.feature.testing"},{"location":"0.x/misk-feature-testing/misk.feature.testing/index.html#types","text":"Name Summary FakeFeatureFlags class FakeFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden. FakeFeatureFlagsModule class FakeFeatureFlagsModule : KAbstractModule Binds a FakeFeatureFlags that allows tests to override values.","title":"Types"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/index.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags FakeFeatureFlags \u00b6 @Singleton class FakeFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden. Constructors \u00b6 Name Summary <init> FakeFeatureFlags(moshi: Provider<Moshi>) In-memory test implementation of FeatureFlags that allows flags to be overridden. Properties \u00b6 Name Summary moshi val moshi: Provider<Moshi> Functions \u00b6 Name Summary getBoolean fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T getInt fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int getJson fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T getString fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String override fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit overrideJson fun <T> overrideJson(feature: Feature, value: T ): Unit overrideJsonString fun overrideJsonString(feature: Feature, json: String ): Unit overrideKey fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit overrideKeyJson fun <T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit reset fun reset(): Unit shutDown fun shutDown(): Unit startUp fun startUp(): Unit trackBoolean fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Companion Object Properties \u00b6 Name Summary defaultAttributes val defaultAttributes: Attributes KEY const val KEY: String","title":"FakeFeatureFlags - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/index.html#fakefeatureflags","text":"@Singleton class FakeFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"FakeFeatureFlags"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/index.html#constructors","text":"Name Summary <init> FakeFeatureFlags(moshi: Provider<Moshi>) In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"Constructors"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/index.html#properties","text":"Name Summary moshi val moshi: Provider<Moshi>","title":"Properties"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/index.html#functions","text":"Name Summary getBoolean fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T getInt fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int getJson fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T getString fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String override fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit overrideJson fun <T> overrideJson(feature: Feature, value: T ): Unit overrideJsonString fun overrideJsonString(feature: Feature, json: String ): Unit overrideKey fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit overrideKeyJson fun <T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit reset fun reset(): Unit shutDown fun shutDown(): Unit startUp fun startUp(): Unit trackBoolean fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/index.html#companion-object-properties","text":"Name Summary defaultAttributes val defaultAttributes: Attributes KEY const val KEY: String","title":"Companion Object Properties"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/-init-.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / <init> <init> \u00b6 FakeFeatureFlags(moshi: Provider<Moshi>) In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":" init "},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/-init-.html#init","text":"FakeFeatureFlags(moshi: Provider<Moshi>) In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"&lt;init&gt;"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/-k-e-y.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / KEY KEY \u00b6 const val KEY: String","title":"KEY - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/-k-e-y.html#key","text":"const val KEY: String","title":"KEY"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/default-attributes.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / defaultAttributes defaultAttributes \u00b6 val defaultAttributes: Attributes","title":"defaultAttributes - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/default-attributes.html#defaultattributes","text":"val defaultAttributes: Attributes","title":"defaultAttributes"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-boolean.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / getBoolean getBoolean \u00b6 fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean","title":"getBoolean - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-boolean.html#getboolean","text":"fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean","title":"getBoolean"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-enum.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / getEnum getEnum \u00b6 fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T","title":"getEnum - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-enum.html#getenum","text":"fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T","title":"getEnum"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-int.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / getInt getInt \u00b6 fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int","title":"getInt - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-int.html#getint","text":"fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int","title":"getInt"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-json.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / getJson getJson \u00b6 fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T","title":"getJson - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-json.html#getjson","text":"fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T","title":"getJson"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-string.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / getString getString \u00b6 fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String","title":"getString - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/get-string.html#getstring","text":"fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String","title":"getString"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/moshi.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / moshi moshi \u00b6 val moshi: Provider<Moshi>","title":"moshi - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/moshi.html#moshi","text":"val moshi: Provider<Moshi>","title":"moshi"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-json-string.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / overrideJsonString overrideJsonString \u00b6 fun overrideJsonString(feature: Feature, json: String ): Unit","title":"overrideJsonString - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-json-string.html#overridejsonstring","text":"fun overrideJsonString(feature: Feature, json: String ): Unit","title":"overrideJsonString"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-json.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / overrideJson overrideJson \u00b6 inline fun <reified T> overrideJson(feature: Feature, value: T ): Unit","title":"overrideJson - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-json.html#overridejson","text":"inline fun <reified T> overrideJson(feature: Feature, value: T ): Unit","title":"overrideJson"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-key-json.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / overrideKeyJson overrideKeyJson \u00b6 @JvmOverloads inline fun <reified T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKeyJson - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-key-json.html#overridekeyjson","text":"@JvmOverloads inline fun <reified T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKeyJson"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-key.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / overrideKey overrideKey \u00b6 @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit @JvmOverloads fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKey - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override-key.html#overridekey","text":"@JvmOverloads fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit @JvmOverloads fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKey"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / override override \u00b6 fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit","title":"override - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/override.html#override","text":"fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit","title":"override"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/reset.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / reset reset \u00b6 fun reset(): Unit","title":"reset - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/reset.html#reset","text":"fun reset(): Unit","title":"reset"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/shut-down.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/start-up.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-boolean.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / trackBoolean trackBoolean \u00b6 fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-boolean.html#trackboolean","text":"fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-enum.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / trackEnum trackEnum \u00b6 fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-enum.html#trackenum","text":"fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-int.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / trackInt trackInt \u00b6 fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-int.html#trackint","text":"fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-json.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / trackJson trackJson \u00b6 fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-json.html#trackjson","text":"fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-string.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlags / trackString trackString \u00b6 fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags/track-string.html#trackstring","text":"fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/index.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlagsModule FakeFeatureFlagsModule \u00b6 class FakeFeatureFlagsModule : KAbstractModule Binds a FakeFeatureFlags that allows tests to override values. Constructors \u00b6 Name Summary <init> FakeFeatureFlagsModule(qualifier: KClass <out Annotation >? = null) Binds a FakeFeatureFlags that allows tests to override values. Functions \u00b6 Name Summary configure fun configure(): Unit withOverrides fun withOverrides(lambda: FakeFeatureFlags .() -> Unit ): FakeFeatureFlagsModule Add overrides for the feature flags. Allows flags to be overridden at module instantiation instead of within individual test classes.","title":"FakeFeatureFlagsModule - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/index.html#fakefeatureflagsmodule","text":"class FakeFeatureFlagsModule : KAbstractModule Binds a FakeFeatureFlags that allows tests to override values.","title":"FakeFeatureFlagsModule"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/index.html#constructors","text":"Name Summary <init> FakeFeatureFlagsModule(qualifier: KClass <out Annotation >? = null) Binds a FakeFeatureFlags that allows tests to override values.","title":"Constructors"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/index.html#functions","text":"Name Summary configure fun configure(): Unit withOverrides fun withOverrides(lambda: FakeFeatureFlags .() -> Unit ): FakeFeatureFlagsModule Add overrides for the feature flags. Allows flags to be overridden at module instantiation instead of within individual test classes.","title":"Functions"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/-init-.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlagsModule / <init> <init> \u00b6 FakeFeatureFlagsModule(qualifier: KClass <out Annotation >? = null) Binds a FakeFeatureFlags that allows tests to override values.","title":" init "},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/-init-.html#init","text":"FakeFeatureFlagsModule(qualifier: KClass <out Annotation >? = null) Binds a FakeFeatureFlags that allows tests to override values.","title":"&lt;init&gt;"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/configure.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlagsModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/with-overrides.html","text":"misk-feature-testing / misk.feature.testing / FakeFeatureFlagsModule / withOverrides withOverrides \u00b6 fun withOverrides(lambda: FakeFeatureFlags .() -> Unit ): FakeFeatureFlagsModule Add overrides for the feature flags. Allows flags to be overridden at module instantiation instead of within individual test classes. Usage: install(FakeFeatureFlagsModule().withOverrides { override(Feature(\"foo\"), true) })","title":"withOverrides - Misk"},{"location":"0.x/misk-feature-testing/misk.feature.testing/-fake-feature-flags-module/with-overrides.html#withoverrides","text":"fun withOverrides(lambda: FakeFeatureFlags .() -> Unit ): FakeFeatureFlagsModule Add overrides for the feature flags. Allows flags to be overridden at module instantiation instead of within individual test classes. Usage: install(FakeFeatureFlagsModule().withOverrides { override(Feature(\"foo\"), true) })","title":"withOverrides"},{"location":"0.x/misk-gcp/index.html","text":"misk-gcp Packages \u00b6 Name Summary misk.cloud.gcp misk.cloud.gcp.datastore misk.cloud.gcp.logging misk.cloud.gcp.security.keys misk.cloud.gcp.storage misk.cloud.gcp.tracing misk.logging Index \u00b6 All Types","title":"misk-gcp"},{"location":"0.x/misk-gcp/index.html#packages","text":"Name Summary misk.cloud.gcp misk.cloud.gcp.datastore misk.cloud.gcp.logging misk.cloud.gcp.security.keys misk.cloud.gcp.storage misk.cloud.gcp.tracing misk.logging","title":"Packages"},{"location":"0.x/misk-gcp/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-gcp/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.cloud.gcp.storage.BaseCustomStorageRpc Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract. com.google.cloud.datastore.Blob (extensions in package misk.cloud.gcp.datastore) com.google.cloud.storage.BlobId (extensions in package misk.cloud.gcp.storage) com.google.cloud.datastore.Entity.Builder (extensions in package misk.cloud.gcp.datastore) misk.cloud.gcp.datastore.DatastoreConfig Configuration for talking to Google datastore com.google.cloud.datastore.Entity (extensions in package misk.cloud.gcp.datastore) java.nio.channels.FileChannel (extensions in package misk.cloud.gcp.storage) misk.cloud.gcp.security.keys.GcpKeyLocation misk.cloud.gcp.security.keys.GcpKeyManagementModule misk.cloud.gcp.security.keys.GcpKmsConfig misk.cloud.gcp.GoogleCloudModule Installs support for talking to real GCP services, either direct or via emulator misk.cloud.gcp.datastore.Keys misk.cloud.gcp.storage.LocalStorageConfig Configuration for local (emulated) storage misk.cloud.gcp.storage.LocalStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. com.google.api.gax.paging.Page (extensions in package misk.cloud.gcp.storage) com.google.cloud.datastore.QueryResults (extensions in package misk.cloud.gcp.datastore) com.google.cloud.ReadChannel (extensions in package misk.cloud.gcp.storage) misk.cloud.gcp.logging.StackDriverLoggingConfig misk.cloud.gcp.storage.StorageConfig Configuration for talking to Google Cloud Storage misk.cloud.gcp.tracing.TracingLoggingEnhancer Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender misk.cloud.gcp.TransportConfig Transport configuration for GCP services.","title":"All Types - Misk"},{"location":"0.x/misk-gcp/alltypes/index.html#all-types","text":"Name Summary misk.cloud.gcp.storage.BaseCustomStorageRpc Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract. com.google.cloud.datastore.Blob (extensions in package misk.cloud.gcp.datastore) com.google.cloud.storage.BlobId (extensions in package misk.cloud.gcp.storage) com.google.cloud.datastore.Entity.Builder (extensions in package misk.cloud.gcp.datastore) misk.cloud.gcp.datastore.DatastoreConfig Configuration for talking to Google datastore com.google.cloud.datastore.Entity (extensions in package misk.cloud.gcp.datastore) java.nio.channels.FileChannel (extensions in package misk.cloud.gcp.storage) misk.cloud.gcp.security.keys.GcpKeyLocation misk.cloud.gcp.security.keys.GcpKeyManagementModule misk.cloud.gcp.security.keys.GcpKmsConfig misk.cloud.gcp.GoogleCloudModule Installs support for talking to real GCP services, either direct or via emulator misk.cloud.gcp.datastore.Keys misk.cloud.gcp.storage.LocalStorageConfig Configuration for local (emulated) storage misk.cloud.gcp.storage.LocalStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. com.google.api.gax.paging.Page (extensions in package misk.cloud.gcp.storage) com.google.cloud.datastore.QueryResults (extensions in package misk.cloud.gcp.datastore) com.google.cloud.ReadChannel (extensions in package misk.cloud.gcp.storage) misk.cloud.gcp.logging.StackDriverLoggingConfig misk.cloud.gcp.storage.StorageConfig Configuration for talking to Google Cloud Storage misk.cloud.gcp.tracing.TracingLoggingEnhancer Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender misk.cloud.gcp.TransportConfig Transport configuration for GCP services.","title":"All Types"},{"location":"0.x/misk-gcp/misk.cloud.gcp/index.html","text":"misk-gcp / misk.cloud.gcp Package misk.cloud.gcp \u00b6 Types \u00b6 Name Summary GoogleCloudModule class GoogleCloudModule : KAbstractModule Installs support for talking to real GCP services, either direct or via emulator TransportConfig data class TransportConfig Transport configuration for GCP services.","title":"Package misk.cloud.gcp - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/index.html#package-miskcloudgcp","text":"","title":"Package misk.cloud.gcp"},{"location":"0.x/misk-gcp/misk.cloud.gcp/index.html#types","text":"Name Summary GoogleCloudModule class GoogleCloudModule : KAbstractModule Installs support for talking to real GCP services, either direct or via emulator TransportConfig data class TransportConfig Transport configuration for GCP services.","title":"Types"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/index.html","text":"misk-gcp / misk.cloud.gcp / GoogleCloudModule GoogleCloudModule \u00b6 class GoogleCloudModule : KAbstractModule Installs support for talking to real GCP services, either direct or via emulator Constructors \u00b6 Name Summary <init> GoogleCloudModule(datastoreConfig: DatastoreConfig , storageConfig: StorageConfig ) Installs support for talking to real GCP services, either direct or via emulator Functions \u00b6 Name Summary configure fun configure(): Unit provideCloudDatastore fun provideCloudDatastore(credentials: Credentials, config: DatastoreConfig ): Datastore provideCloudStorage fun provideCloudStorage(credentials: Credentials, config: StorageConfig ): Storage provideServiceCredentials fun provideServiceCredentials(deployment: Deployment): Credentials","title":"GoogleCloudModule - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/index.html#googlecloudmodule","text":"class GoogleCloudModule : KAbstractModule Installs support for talking to real GCP services, either direct or via emulator","title":"GoogleCloudModule"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/index.html#constructors","text":"Name Summary <init> GoogleCloudModule(datastoreConfig: DatastoreConfig , storageConfig: StorageConfig ) Installs support for talking to real GCP services, either direct or via emulator","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideCloudDatastore fun provideCloudDatastore(credentials: Credentials, config: DatastoreConfig ): Datastore provideCloudStorage fun provideCloudStorage(credentials: Credentials, config: StorageConfig ): Storage provideServiceCredentials fun provideServiceCredentials(deployment: Deployment): Credentials","title":"Functions"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/-init-.html","text":"misk-gcp / misk.cloud.gcp / GoogleCloudModule / <init> <init> \u00b6 GoogleCloudModule(datastoreConfig: DatastoreConfig , storageConfig: StorageConfig ) Installs support for talking to real GCP services, either direct or via emulator","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/-init-.html#init","text":"GoogleCloudModule(datastoreConfig: DatastoreConfig , storageConfig: StorageConfig ) Installs support for talking to real GCP services, either direct or via emulator","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/configure.html","text":"misk-gcp / misk.cloud.gcp / GoogleCloudModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-datastore.html","text":"misk-gcp / misk.cloud.gcp / GoogleCloudModule / provideCloudDatastore provideCloudDatastore \u00b6 @Provides fun provideCloudDatastore(credentials: Credentials, config: DatastoreConfig ): Datastore","title":"provideCloudDatastore - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-datastore.html#provideclouddatastore","text":"@Provides fun provideCloudDatastore(credentials: Credentials, config: DatastoreConfig ): Datastore","title":"provideCloudDatastore"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-storage.html","text":"misk-gcp / misk.cloud.gcp / GoogleCloudModule / provideCloudStorage provideCloudStorage \u00b6 @Provides fun provideCloudStorage(credentials: Credentials, config: StorageConfig ): Storage","title":"provideCloudStorage - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-cloud-storage.html#providecloudstorage","text":"@Provides fun provideCloudStorage(credentials: Credentials, config: StorageConfig ): Storage","title":"provideCloudStorage"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-service-credentials.html","text":"misk-gcp / misk.cloud.gcp / GoogleCloudModule / provideServiceCredentials provideServiceCredentials \u00b6 @Provides fun provideServiceCredentials(deployment: Deployment): Credentials","title":"provideServiceCredentials - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-google-cloud-module/provide-service-credentials.html#provideservicecredentials","text":"@Provides fun provideServiceCredentials(deployment: Deployment): Credentials","title":"provideServiceCredentials"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/index.html","text":"misk-gcp / misk.cloud.gcp / TransportConfig TransportConfig \u00b6 data class TransportConfig Transport configuration for GCP services. Constructors \u00b6 Name Summary <init> TransportConfig(connect_timeout_ms: Int = -1, read_timeout_ms: Int = -1, host: String ? = null) Transport configuration for GCP services. Properties \u00b6 Name Summary connect_timeout_ms val connect_timeout_ms: Int host val host: String ? read_timeout_ms val read_timeout_ms: Int","title":"TransportConfig - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/index.html#transportconfig","text":"data class TransportConfig Transport configuration for GCP services.","title":"TransportConfig"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/index.html#constructors","text":"Name Summary <init> TransportConfig(connect_timeout_ms: Int = -1, read_timeout_ms: Int = -1, host: String ? = null) Transport configuration for GCP services.","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/index.html#properties","text":"Name Summary connect_timeout_ms val connect_timeout_ms: Int host val host: String ? read_timeout_ms val read_timeout_ms: Int","title":"Properties"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/-init-.html","text":"misk-gcp / misk.cloud.gcp / TransportConfig / <init> <init> \u00b6 TransportConfig(connect_timeout_ms: Int = -1, read_timeout_ms: Int = -1, host: String ? = null) Transport configuration for GCP services.","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/-init-.html#init","text":"TransportConfig(connect_timeout_ms: Int = -1, read_timeout_ms: Int = -1, host: String ? = null) Transport configuration for GCP services.","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/connect_timeout_ms.html","text":"misk-gcp / misk.cloud.gcp / TransportConfig / connect_timeout_ms connect_timeout_ms \u00b6 val connect_timeout_ms: Int","title":"connect_timeout_ms - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/connect_timeout_ms.html#connect_timeout_ms","text":"val connect_timeout_ms: Int","title":"connect_timeout_ms"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/host.html","text":"misk-gcp / misk.cloud.gcp / TransportConfig / host host \u00b6 val host: String ?","title":"host - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/host.html#host","text":"val host: String ?","title":"host"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/read_timeout_ms.html","text":"misk-gcp / misk.cloud.gcp / TransportConfig / read_timeout_ms read_timeout_ms \u00b6 val read_timeout_ms: Int","title":"read_timeout_ms - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp/-transport-config/read_timeout_ms.html#read_timeout_ms","text":"val read_timeout_ms: Int","title":"read_timeout_ms"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/index.html","text":"misk-gcp / misk.cloud.gcp.datastore Package misk.cloud.gcp.datastore \u00b6 Types \u00b6 Name Summary DatastoreConfig data class DatastoreConfig : Config Configuration for talking to Google datastore Keys object Keys Extensions for External Classes \u00b6 Name Summary com.google.cloud.datastore.Blob com.google.cloud.datastore.Entity com.google.cloud.datastore.Entity.Builder com.google.cloud.datastore.QueryResults","title":"Package misk.cloud.gcp.datastore - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/index.html#package-miskcloudgcpdatastore","text":"","title":"Package misk.cloud.gcp.datastore"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/index.html#types","text":"Name Summary DatastoreConfig data class DatastoreConfig : Config Configuration for talking to Google datastore Keys object Keys","title":"Types"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/index.html#extensions-for-external-classes","text":"Name Summary com.google.cloud.datastore.Blob com.google.cloud.datastore.Entity com.google.cloud.datastore.Entity.Builder com.google.cloud.datastore.QueryResults","title":"Extensions for External Classes"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/index.html","text":"misk-gcp / misk.cloud.gcp.datastore / DatastoreConfig DatastoreConfig \u00b6 data class DatastoreConfig : Config Configuration for talking to Google datastore Constructors \u00b6 Name Summary <init> DatastoreConfig(transport: TransportConfig = TransportConfig()) Configuration for talking to Google datastore Properties \u00b6 Name Summary transport val transport: TransportConfig","title":"DatastoreConfig - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/index.html#datastoreconfig","text":"data class DatastoreConfig : Config Configuration for talking to Google datastore","title":"DatastoreConfig"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/index.html#constructors","text":"Name Summary <init> DatastoreConfig(transport: TransportConfig = TransportConfig()) Configuration for talking to Google datastore","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/index.html#properties","text":"Name Summary transport val transport: TransportConfig","title":"Properties"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/-init-.html","text":"misk-gcp / misk.cloud.gcp.datastore / DatastoreConfig / <init> <init> \u00b6 DatastoreConfig(transport: TransportConfig = TransportConfig()) Configuration for talking to Google datastore","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/-init-.html#init","text":"DatastoreConfig(transport: TransportConfig = TransportConfig()) Configuration for talking to Google datastore","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/transport.html","text":"misk-gcp / misk.cloud.gcp.datastore / DatastoreConfig / transport transport \u00b6 val transport: TransportConfig","title":"transport - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-datastore-config/transport.html#transport","text":"val transport: TransportConfig","title":"transport"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-keys/index.html","text":"misk-gcp / misk.cloud.gcp.datastore / Keys Keys \u00b6 object Keys Functions \u00b6 Name Summary newKey fun newKey(projectId: String , kind: String , id: Long ): Key fun newKey(projectId: String , kind: String , name: String ): Key","title":"Keys - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-keys/index.html#keys","text":"object Keys","title":"Keys"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-keys/index.html#functions","text":"Name Summary newKey fun newKey(projectId: String , kind: String , id: Long ): Key fun newKey(projectId: String , kind: String , name: String ): Key","title":"Functions"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-keys/new-key.html","text":"misk-gcp / misk.cloud.gcp.datastore / Keys / newKey newKey \u00b6 fun newKey(projectId: String , kind: String , id: Long ): Key fun newKey(projectId: String , kind: String , name: String ): Key","title":"newKey - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/-keys/new-key.html#newkey","text":"fun newKey(projectId: String , kind: String , id: Long ): Key fun newKey(projectId: String , kind: String , name: String ): Key","title":"newKey"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-blob/index.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.Blob Extensions for com.google.cloud.datastore.Blob \u00b6 Name Summary toByteString fun Blob.toByteString(): ByteString","title":"Extensions for com.google.cloud.datastore.Blob - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-blob/index.html#extensions-for-comgoogleclouddatastoreblob","text":"Name Summary toByteString fun Blob.toByteString(): ByteString","title":"Extensions for com.google.cloud.datastore.Blob"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-blob/to-byte-string.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.Blob / toByteString toByteString \u00b6 fun Blob.toByteString(): ByteString","title":"toByteString - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-blob/to-byte-string.html#tobytestring","text":"fun Blob.toByteString(): ByteString","title":"toByteString"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity/index.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.Entity Extensions for com.google.cloud.datastore.Entity \u00b6 Name Summary getByteString fun Entity.getByteString(name: String ): ByteString getProto fun <T> Entity.getProto(name: String , protoAdapter: ProtoAdapter< T >): T","title":"Extensions for com.google.cloud.datastore.Entity - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity/index.html#extensions-for-comgoogleclouddatastoreentity","text":"Name Summary getByteString fun Entity.getByteString(name: String ): ByteString getProto fun <T> Entity.getProto(name: String , protoAdapter: ProtoAdapter< T >): T","title":"Extensions for com.google.cloud.datastore.Entity"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity/get-byte-string.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.Entity / getByteString getByteString \u00b6 fun Entity.getByteString(name: String ): ByteString","title":"getByteString - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity/get-byte-string.html#getbytestring","text":"fun Entity.getByteString(name: String ): ByteString","title":"getByteString"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity/get-proto.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.Entity / getProto getProto \u00b6 fun <T> Entity.getProto(name: String , protoAdapter: ProtoAdapter< T >): T","title":"getProto - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity/get-proto.html#getproto","text":"fun <T> Entity.getProto(name: String , protoAdapter: ProtoAdapter< T >): T","title":"getProto"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity.-builder/index.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.Entity.Builder Extensions for com.google.cloud.datastore.Entity.Builder \u00b6 Name Summary set fun Builder.set(name: String , bytes: ByteString): Builder","title":"Extensions for com.google.cloud.datastore.Entity.Builder - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity.-builder/index.html#extensions-for-comgoogleclouddatastoreentitybuilder","text":"Name Summary set fun Builder.set(name: String , bytes: ByteString): Builder","title":"Extensions for com.google.cloud.datastore.Entity.Builder"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity.-builder/set.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.Entity.Builder / set set \u00b6 fun Builder.set(name: String , bytes: ByteString): Builder","title":"set - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-entity.-builder/set.html#set","text":"fun Builder.set(name: String , bytes: ByteString): Builder","title":"set"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-query-results/index.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.QueryResults Extensions for com.google.cloud.datastore.QueryResults \u00b6 Name Summary asList fun <T> QueryResults< T >.asList(): List < T >","title":"Extensions for com.google.cloud.datastore.QueryResults - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-query-results/index.html#extensions-for-comgoogleclouddatastorequeryresults","text":"Name Summary asList fun <T> QueryResults< T >.asList(): List < T >","title":"Extensions for com.google.cloud.datastore.QueryResults"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-query-results/as-list.html","text":"misk-gcp / misk.cloud.gcp.datastore / com.google.cloud.datastore.QueryResults / asList asList \u00b6 fun <T> QueryResults< T >.asList(): List < T >","title":"asList - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.datastore/com.google.cloud.datastore.-query-results/as-list.html#aslist","text":"fun <T> QueryResults< T >.asList(): List < T >","title":"asList"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/index.html","text":"misk-gcp / misk.cloud.gcp.logging Package misk.cloud.gcp.logging \u00b6 Types \u00b6 Name Summary StackDriverLoggingConfig data class StackDriverLoggingConfig : Config","title":"Package misk.cloud.gcp.logging - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/index.html#package-miskcloudgcplogging","text":"","title":"Package misk.cloud.gcp.logging"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/index.html#types","text":"Name Summary StackDriverLoggingConfig data class StackDriverLoggingConfig : Config","title":"Types"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/index.html","text":"misk-gcp / misk.cloud.gcp.logging / StackDriverLoggingConfig StackDriverLoggingConfig \u00b6 data class StackDriverLoggingConfig : Config Constructors \u00b6 Name Summary <init> StackDriverLoggingConfig(flush_level: Level = Level.ERROR, filter_level: Level = Level.INFO, resource_type: String ?, log: String = \"java.log\") Properties \u00b6 Name Summary filter_level val filter_level: Level flush_level val flush_level: Level log val log: String resource_type val resource_type: String ?","title":"StackDriverLoggingConfig - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/index.html#stackdriverloggingconfig","text":"data class StackDriverLoggingConfig : Config","title":"StackDriverLoggingConfig"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/index.html#constructors","text":"Name Summary <init> StackDriverLoggingConfig(flush_level: Level = Level.ERROR, filter_level: Level = Level.INFO, resource_type: String ?, log: String = \"java.log\")","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/index.html#properties","text":"Name Summary filter_level val filter_level: Level flush_level val flush_level: Level log val log: String resource_type val resource_type: String ?","title":"Properties"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/-init-.html","text":"misk-gcp / misk.cloud.gcp.logging / StackDriverLoggingConfig / <init> <init> \u00b6 StackDriverLoggingConfig(flush_level: Level = Level.ERROR, filter_level: Level = Level.INFO, resource_type: String ?, log: String = \"java.log\")","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/-init-.html#init","text":"StackDriverLoggingConfig(flush_level: Level = Level.ERROR, filter_level: Level = Level.INFO, resource_type: String ?, log: String = \"java.log\")","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/filter_level.html","text":"misk-gcp / misk.cloud.gcp.logging / StackDriverLoggingConfig / filter_level filter_level \u00b6 val filter_level: Level","title":"filter_level - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/filter_level.html#filter_level","text":"val filter_level: Level","title":"filter_level"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/flush_level.html","text":"misk-gcp / misk.cloud.gcp.logging / StackDriverLoggingConfig / flush_level flush_level \u00b6 val flush_level: Level","title":"flush_level - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/flush_level.html#flush_level","text":"val flush_level: Level","title":"flush_level"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/log.html","text":"misk-gcp / misk.cloud.gcp.logging / StackDriverLoggingConfig / log log \u00b6 val log: String","title":"log - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/log.html#log","text":"val log: String","title":"log"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/resource_type.html","text":"misk-gcp / misk.cloud.gcp.logging / StackDriverLoggingConfig / resource_type resource_type \u00b6 val resource_type: String ?","title":"resource_type - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.logging/-stack-driver-logging-config/resource_type.html#resource_type","text":"val resource_type: String ?","title":"resource_type"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/index.html","text":"misk-gcp / misk.cloud.gcp.security.keys Package misk.cloud.gcp.security.keys \u00b6 Types \u00b6 Name Summary GcpKeyLocation data class GcpKeyLocation GcpKeyManagementModule class GcpKeyManagementModule : KAbstractModule GcpKmsConfig data class GcpKmsConfig : Config","title":"Package misk.cloud.gcp.security.keys - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/index.html#package-miskcloudgcpsecuritykeys","text":"","title":"Package misk.cloud.gcp.security.keys"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/index.html#types","text":"Name Summary GcpKeyLocation data class GcpKeyLocation GcpKeyManagementModule class GcpKeyManagementModule : KAbstractModule GcpKmsConfig data class GcpKmsConfig : Config","title":"Types"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/index.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyLocation GcpKeyLocation \u00b6 data class GcpKeyLocation Constructors \u00b6 Name Summary <init> GcpKeyLocation(location: String , key_ring: String , key_name: String ) Properties \u00b6 Name Summary key_name val key_name: String key_ring val key_ring: String location val location: String path val path: String","title":"GcpKeyLocation - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/index.html#gcpkeylocation","text":"data class GcpKeyLocation","title":"GcpKeyLocation"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/index.html#constructors","text":"Name Summary <init> GcpKeyLocation(location: String , key_ring: String , key_name: String )","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/index.html#properties","text":"Name Summary key_name val key_name: String key_ring val key_ring: String location val location: String path val path: String","title":"Properties"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/-init-.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyLocation / <init> <init> \u00b6 GcpKeyLocation(location: String , key_ring: String , key_name: String )","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/-init-.html#init","text":"GcpKeyLocation(location: String , key_ring: String , key_name: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_name.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyLocation / key_name key_name \u00b6 val key_name: String","title":"key_name - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_name.html#key_name","text":"val key_name: String","title":"key_name"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_ring.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyLocation / key_ring key_ring \u00b6 val key_ring: String","title":"key_ring - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/key_ring.html#key_ring","text":"val key_ring: String","title":"key_ring"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/location.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyLocation / location location \u00b6 val location: String","title":"location - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/location.html#location","text":"val location: String","title":"location"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/path.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyLocation / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-location/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/index.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyManagementModule GcpKeyManagementModule \u00b6 class GcpKeyManagementModule : KAbstractModule Constructors \u00b6 Name Summary <init> GcpKeyManagementModule(config: GcpKmsConfig ) Functions \u00b6 Name Summary configure fun configure(): Unit providesKms fun providesKms(appName: String ): CloudKMS","title":"GcpKeyManagementModule - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/index.html#gcpkeymanagementmodule","text":"class GcpKeyManagementModule : KAbstractModule","title":"GcpKeyManagementModule"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/index.html#constructors","text":"Name Summary <init> GcpKeyManagementModule(config: GcpKmsConfig )","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/index.html#functions","text":"Name Summary configure fun configure(): Unit providesKms fun providesKms(appName: String ): CloudKMS","title":"Functions"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/-init-.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyManagementModule / <init> <init> \u00b6 GcpKeyManagementModule(config: GcpKmsConfig )","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/-init-.html#init","text":"GcpKeyManagementModule(config: GcpKmsConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/configure.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyManagementModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/provides-kms.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKeyManagementModule / providesKms providesKms \u00b6 @Provides @Singleton fun providesKms(appName: String ): CloudKMS","title":"providesKms - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-key-management-module/provides-kms.html#provideskms","text":"@Provides @Singleton fun providesKms(appName: String ): CloudKMS","title":"providesKms"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/index.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKmsConfig GcpKmsConfig \u00b6 data class GcpKmsConfig : Config Constructors \u00b6 Name Summary <init> GcpKmsConfig(project_id: String , key_locations: Map < String , GcpKeyLocation >) Properties \u00b6 Name Summary key_locations val key_locations: Map < String , GcpKeyLocation > project_id val project_id: String","title":"GcpKmsConfig - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/index.html#gcpkmsconfig","text":"data class GcpKmsConfig : Config","title":"GcpKmsConfig"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/index.html#constructors","text":"Name Summary <init> GcpKmsConfig(project_id: String , key_locations: Map < String , GcpKeyLocation >)","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/index.html#properties","text":"Name Summary key_locations val key_locations: Map < String , GcpKeyLocation > project_id val project_id: String","title":"Properties"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/-init-.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKmsConfig / <init> <init> \u00b6 GcpKmsConfig(project_id: String , key_locations: Map < String , GcpKeyLocation >)","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/-init-.html#init","text":"GcpKmsConfig(project_id: String , key_locations: Map < String , GcpKeyLocation >)","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/key_locations.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKmsConfig / key_locations key_locations \u00b6 val key_locations: Map < String , GcpKeyLocation >","title":"key_locations - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/key_locations.html#key_locations","text":"val key_locations: Map < String , GcpKeyLocation >","title":"key_locations"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/project_id.html","text":"misk-gcp / misk.cloud.gcp.security.keys / GcpKmsConfig / project_id project_id \u00b6 val project_id: String","title":"project_id - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.security.keys/-gcp-kms-config/project_id.html#project_id","text":"val project_id: String","title":"project_id"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/index.html","text":"misk-gcp / misk.cloud.gcp.storage Package misk.cloud.gcp.storage \u00b6 Types \u00b6 Name Summary BaseCustomStorageRpc abstract class BaseCustomStorageRpc : StorageRpc Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract. LocalStorageConfig data class LocalStorageConfig Configuration for local (emulated) storage LocalStorageRpc class LocalStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. StorageConfig data class StorageConfig : Config Configuration for talking to Google Cloud Storage Extensions for External Classes \u00b6 Name Summary com.google.api.gax.paging.Page com.google.cloud.ReadChannel com.google.cloud.storage.BlobId java.nio.channels.FileChannel","title":"Package misk.cloud.gcp.storage - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/index.html#package-miskcloudgcpstorage","text":"","title":"Package misk.cloud.gcp.storage"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/index.html#types","text":"Name Summary BaseCustomStorageRpc abstract class BaseCustomStorageRpc : StorageRpc Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract. LocalStorageConfig data class LocalStorageConfig Configuration for local (emulated) storage LocalStorageRpc class LocalStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. StorageConfig data class StorageConfig : Config Configuration for talking to Google Cloud Storage","title":"Types"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/index.html#extensions-for-external-classes","text":"Name Summary com.google.api.gax.paging.Page com.google.cloud.ReadChannel com.google.cloud.storage.BlobId java.nio.channels.FileChannel","title":"Extensions for External Classes"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/index.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc BaseCustomStorageRpc \u00b6 abstract class BaseCustomStorageRpc : StorageRpc Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract. Constructors \u00b6 Name Summary <init> BaseCustomStorageRpc() Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract. Functions \u00b6 Name Summary compose open fun compose(sources: Iterable <StorageObject>?, target: StorageObject?, targetOptions: Map <Option, *>?): StorageObject continueRewrite open fun continueRewrite(previousResponse: RewriteResponse): RewriteResponse create open fun create(bucket: Bucket, options: Map <Option, *>): Bucket createAcl open fun createAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun createAcl(acl: ObjectAccessControl?): ObjectAccessControl createBatch open fun createBatch(): RpcBatch createDefaultAcl open fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl createNotification open fun createNotification(bucket: String ?, notification: Notification?): Notification delete open fun delete(bucket: Bucket, options: Map <Option, *>): Boolean deleteAcl open fun deleteAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): Boolean open fun deleteAcl(bucket: String ?, object: String ?, generation: Long ?, entity: String ?): Boolean deleteDefaultAcl open fun deleteDefaultAcl(bucket: String ?, entity: String ?): Boolean deleteNotification open fun deleteNotification(bucket: String ?, notification: String ?): Boolean get open fun get(bucket: Bucket, options: Map <Option, *>): Bucket? getAcl open fun getAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): BucketAccessControl open fun getAcl(bucket: String ?, obj: String ?, generation: Long ?, entity: String ?): ObjectAccessControl getDefaultAcl open fun getDefaultAcl(bucket: String ?, entity: String ?): ObjectAccessControl getIamPolicy open fun getIamPolicy(bucket: String ?, options: Map <Option, *>?): Policy getServiceAccount open fun getServiceAccount(projectId: String ?): ServiceAccount list open fun list(options: Map <Option, *>?): Tuple< String , Iterable <Bucket>> listAcls open fun listAcls(bucket: String ?, options: Map <Option, *>?): List <BucketAccessControl> open fun listAcls(bucket: String ?, obj: String ?, generation: Long ?): List <ObjectAccessControl> listDefaultAcls open fun listDefaultAcls(bucket: String ?): MutableList <ObjectAccessControl> listNotifications open fun listNotifications(bucket: String ?): List <Notification> lockRetentionPolicy open fun lockRetentionPolicy(bucket: Bucket?, options: Map <Option, *>?): Bucket open open fun open(signedURL: String ?): String patch open fun patch(bucket: Bucket, options: Map <Option, *>): Bucket? open fun patch(obj: StorageObject, options: Map <Option, *>): StorageObject? patchAcl open fun patchAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControl patchDefaultAcl open fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl read open fun read(from: StorageObject?, options: Map <Option, *>?, position: Long , bytes: Int ): Tuple< String , ByteArray > setIamPolicy open fun setIamPolicy(bucket: String ?, policy: Policy?, options: Map <Option, *>?): Policy testIamPermissions open fun testIamPermissions(bucket: String , permissions: List < String >, options: Map <Option, *>): TestIamPermissionsResponse Inheritors \u00b6 Name Summary LocalStorageRpc class LocalStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete.","title":"BaseCustomStorageRpc - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/index.html#basecustomstoragerpc","text":"abstract class BaseCustomStorageRpc : StorageRpc Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract.","title":"BaseCustomStorageRpc"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/index.html#constructors","text":"Name Summary <init> BaseCustomStorageRpc() Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract.","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/index.html#functions","text":"Name Summary compose open fun compose(sources: Iterable <StorageObject>?, target: StorageObject?, targetOptions: Map <Option, *>?): StorageObject continueRewrite open fun continueRewrite(previousResponse: RewriteResponse): RewriteResponse create open fun create(bucket: Bucket, options: Map <Option, *>): Bucket createAcl open fun createAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun createAcl(acl: ObjectAccessControl?): ObjectAccessControl createBatch open fun createBatch(): RpcBatch createDefaultAcl open fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl createNotification open fun createNotification(bucket: String ?, notification: Notification?): Notification delete open fun delete(bucket: Bucket, options: Map <Option, *>): Boolean deleteAcl open fun deleteAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): Boolean open fun deleteAcl(bucket: String ?, object: String ?, generation: Long ?, entity: String ?): Boolean deleteDefaultAcl open fun deleteDefaultAcl(bucket: String ?, entity: String ?): Boolean deleteNotification open fun deleteNotification(bucket: String ?, notification: String ?): Boolean get open fun get(bucket: Bucket, options: Map <Option, *>): Bucket? getAcl open fun getAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): BucketAccessControl open fun getAcl(bucket: String ?, obj: String ?, generation: Long ?, entity: String ?): ObjectAccessControl getDefaultAcl open fun getDefaultAcl(bucket: String ?, entity: String ?): ObjectAccessControl getIamPolicy open fun getIamPolicy(bucket: String ?, options: Map <Option, *>?): Policy getServiceAccount open fun getServiceAccount(projectId: String ?): ServiceAccount list open fun list(options: Map <Option, *>?): Tuple< String , Iterable <Bucket>> listAcls open fun listAcls(bucket: String ?, options: Map <Option, *>?): List <BucketAccessControl> open fun listAcls(bucket: String ?, obj: String ?, generation: Long ?): List <ObjectAccessControl> listDefaultAcls open fun listDefaultAcls(bucket: String ?): MutableList <ObjectAccessControl> listNotifications open fun listNotifications(bucket: String ?): List <Notification> lockRetentionPolicy open fun lockRetentionPolicy(bucket: Bucket?, options: Map <Option, *>?): Bucket open open fun open(signedURL: String ?): String patch open fun patch(bucket: Bucket, options: Map <Option, *>): Bucket? open fun patch(obj: StorageObject, options: Map <Option, *>): StorageObject? patchAcl open fun patchAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControl patchDefaultAcl open fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl read open fun read(from: StorageObject?, options: Map <Option, *>?, position: Long , bytes: Int ): Tuple< String , ByteArray > setIamPolicy open fun setIamPolicy(bucket: String ?, policy: Policy?, options: Map <Option, *>?): Policy testIamPermissions open fun testIamPermissions(bucket: String , permissions: List < String >, options: Map <Option, *>): TestIamPermissionsResponse","title":"Functions"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/index.html#inheritors","text":"Name Summary LocalStorageRpc class LocalStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete.","title":"Inheritors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/-init-.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / <init> <init> \u00b6 BaseCustomStorageRpc() Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract.","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/-init-.html#init","text":"BaseCustomStorageRpc() Base for custom storage implementations. Most operations on custom storage are unsupported; only those minimal methods requiring implementation are left abstract.","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/compose.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / compose compose \u00b6 open fun compose(sources: Iterable <StorageObject>?, target: StorageObject?, targetOptions: Map <Option, *>?): StorageObject","title":"compose - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/compose.html#compose","text":"open fun compose(sources: Iterable <StorageObject>?, target: StorageObject?, targetOptions: Map <Option, *>?): StorageObject","title":"compose"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/continue-rewrite.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / continueRewrite continueRewrite \u00b6 open fun continueRewrite(previousResponse: RewriteResponse): RewriteResponse","title":"continueRewrite - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/continue-rewrite.html#continuerewrite","text":"open fun continueRewrite(previousResponse: RewriteResponse): RewriteResponse","title":"continueRewrite"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / createAcl createAcl \u00b6 open fun createAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun createAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"createAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-acl.html#createacl","text":"open fun createAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun createAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"createAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-batch.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / createBatch createBatch \u00b6 open fun createBatch(): RpcBatch","title":"createBatch - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-batch.html#createbatch","text":"open fun createBatch(): RpcBatch","title":"createBatch"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-default-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / createDefaultAcl createDefaultAcl \u00b6 open fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"createDefaultAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-default-acl.html#createdefaultacl","text":"open fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"createDefaultAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-notification.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / createNotification createNotification \u00b6 open fun createNotification(bucket: String ?, notification: Notification?): Notification","title":"createNotification - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create-notification.html#createnotification","text":"open fun createNotification(bucket: String ?, notification: Notification?): Notification","title":"createNotification"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / create create \u00b6 open fun create(bucket: Bucket, options: Map <Option, *>): Bucket","title":"create - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/create.html#create","text":"open fun create(bucket: Bucket, options: Map <Option, *>): Bucket","title":"create"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / deleteAcl deleteAcl \u00b6 open fun deleteAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): Boolean open fun deleteAcl(bucket: String ?, object: String ?, generation: Long ?, entity: String ?): Boolean","title":"deleteAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-acl.html#deleteacl","text":"open fun deleteAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): Boolean open fun deleteAcl(bucket: String ?, object: String ?, generation: Long ?, entity: String ?): Boolean","title":"deleteAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-default-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / deleteDefaultAcl deleteDefaultAcl \u00b6 open fun deleteDefaultAcl(bucket: String ?, entity: String ?): Boolean","title":"deleteDefaultAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-default-acl.html#deletedefaultacl","text":"open fun deleteDefaultAcl(bucket: String ?, entity: String ?): Boolean","title":"deleteDefaultAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-notification.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / deleteNotification deleteNotification \u00b6 open fun deleteNotification(bucket: String ?, notification: String ?): Boolean","title":"deleteNotification - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete-notification.html#deletenotification","text":"open fun deleteNotification(bucket: String ?, notification: String ?): Boolean","title":"deleteNotification"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / delete delete \u00b6 open fun delete(bucket: Bucket, options: Map <Option, *>): Boolean","title":"delete - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/delete.html#delete","text":"open fun delete(bucket: Bucket, options: Map <Option, *>): Boolean","title":"delete"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / getAcl getAcl \u00b6 open fun getAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): BucketAccessControl open fun getAcl(bucket: String ?, obj: String ?, generation: Long ?, entity: String ?): ObjectAccessControl","title":"getAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-acl.html#getacl","text":"open fun getAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): BucketAccessControl open fun getAcl(bucket: String ?, obj: String ?, generation: Long ?, entity: String ?): ObjectAccessControl","title":"getAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-default-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / getDefaultAcl getDefaultAcl \u00b6 open fun getDefaultAcl(bucket: String ?, entity: String ?): ObjectAccessControl","title":"getDefaultAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-default-acl.html#getdefaultacl","text":"open fun getDefaultAcl(bucket: String ?, entity: String ?): ObjectAccessControl","title":"getDefaultAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-iam-policy.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / getIamPolicy getIamPolicy \u00b6 open fun getIamPolicy(bucket: String ?, options: Map <Option, *>?): Policy","title":"getIamPolicy - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-iam-policy.html#getiampolicy","text":"open fun getIamPolicy(bucket: String ?, options: Map <Option, *>?): Policy","title":"getIamPolicy"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-service-account.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / getServiceAccount getServiceAccount \u00b6 open fun getServiceAccount(projectId: String ?): ServiceAccount","title":"getServiceAccount - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get-service-account.html#getserviceaccount","text":"open fun getServiceAccount(projectId: String ?): ServiceAccount","title":"getServiceAccount"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / get get \u00b6 open fun get(bucket: Bucket, options: Map <Option, *>): Bucket?","title":"get - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/get.html#get","text":"open fun get(bucket: Bucket, options: Map <Option, *>): Bucket?","title":"get"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-acls.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / listAcls listAcls \u00b6 open fun listAcls(bucket: String ?, options: Map <Option, *>?): List <BucketAccessControl> open fun listAcls(bucket: String ?, obj: String ?, generation: Long ?): List <ObjectAccessControl>","title":"listAcls - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-acls.html#listacls","text":"open fun listAcls(bucket: String ?, options: Map <Option, *>?): List <BucketAccessControl> open fun listAcls(bucket: String ?, obj: String ?, generation: Long ?): List <ObjectAccessControl>","title":"listAcls"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-default-acls.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / listDefaultAcls listDefaultAcls \u00b6 open fun listDefaultAcls(bucket: String ?): MutableList <ObjectAccessControl>","title":"listDefaultAcls - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-default-acls.html#listdefaultacls","text":"open fun listDefaultAcls(bucket: String ?): MutableList <ObjectAccessControl>","title":"listDefaultAcls"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-notifications.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / listNotifications listNotifications \u00b6 open fun listNotifications(bucket: String ?): List <Notification>","title":"listNotifications - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list-notifications.html#listnotifications","text":"open fun listNotifications(bucket: String ?): List <Notification>","title":"listNotifications"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / list list \u00b6 open fun list(options: Map <Option, *>?): Tuple< String , Iterable <Bucket>>","title":"list - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/list.html#list","text":"open fun list(options: Map <Option, *>?): Tuple< String , Iterable <Bucket>>","title":"list"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/lock-retention-policy.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / lockRetentionPolicy lockRetentionPolicy \u00b6 open fun lockRetentionPolicy(bucket: Bucket?, options: Map <Option, *>?): Bucket","title":"lockRetentionPolicy - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/lock-retention-policy.html#lockretentionpolicy","text":"open fun lockRetentionPolicy(bucket: Bucket?, options: Map <Option, *>?): Bucket","title":"lockRetentionPolicy"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/open.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / open open \u00b6 open fun open(signedURL: String ?): String","title":"open - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/open.html#open","text":"open fun open(signedURL: String ?): String","title":"open"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / patchAcl patchAcl \u00b6 open fun patchAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"patchAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-acl.html#patchacl","text":"open fun patchAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"patchAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-default-acl.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / patchDefaultAcl patchDefaultAcl \u00b6 open fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"patchDefaultAcl - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch-default-acl.html#patchdefaultacl","text":"open fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl","title":"patchDefaultAcl"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / patch patch \u00b6 open fun patch(bucket: Bucket, options: Map <Option, *>): Bucket? open fun patch(obj: StorageObject, options: Map <Option, *>): StorageObject?","title":"patch - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/patch.html#patch","text":"open fun patch(bucket: Bucket, options: Map <Option, *>): Bucket? open fun patch(obj: StorageObject, options: Map <Option, *>): StorageObject?","title":"patch"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/read.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / read read \u00b6 open fun read(from: StorageObject?, options: Map <Option, *>?, position: Long , bytes: Int ): Tuple< String , ByteArray >","title":"read - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/read.html#read","text":"open fun read(from: StorageObject?, options: Map <Option, *>?, position: Long , bytes: Int ): Tuple< String , ByteArray >","title":"read"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/set-iam-policy.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / setIamPolicy setIamPolicy \u00b6 open fun setIamPolicy(bucket: String ?, policy: Policy?, options: Map <Option, *>?): Policy","title":"setIamPolicy - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/set-iam-policy.html#setiampolicy","text":"open fun setIamPolicy(bucket: String ?, policy: Policy?, options: Map <Option, *>?): Policy","title":"setIamPolicy"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/test-iam-permissions.html","text":"misk-gcp / misk.cloud.gcp.storage / BaseCustomStorageRpc / testIamPermissions testIamPermissions \u00b6 open fun testIamPermissions(bucket: String , permissions: List < String >, options: Map <Option, *>): TestIamPermissionsResponse","title":"testIamPermissions - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-base-custom-storage-rpc/test-iam-permissions.html#testiampermissions","text":"open fun testIamPermissions(bucket: String , permissions: List < String >, options: Map <Option, *>): TestIamPermissionsResponse","title":"testIamPermissions"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/index.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageConfig LocalStorageConfig \u00b6 data class LocalStorageConfig Configuration for local (emulated) storage Constructors \u00b6 Name Summary <init> LocalStorageConfig(data_dir: String ) Configuration for local (emulated) storage Properties \u00b6 Name Summary data_dir val data_dir: String","title":"LocalStorageConfig - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/index.html#localstorageconfig","text":"data class LocalStorageConfig Configuration for local (emulated) storage","title":"LocalStorageConfig"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/index.html#constructors","text":"Name Summary <init> LocalStorageConfig(data_dir: String ) Configuration for local (emulated) storage","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/index.html#properties","text":"Name Summary data_dir val data_dir: String","title":"Properties"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/-init-.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageConfig / <init> <init> \u00b6 LocalStorageConfig(data_dir: String ) Configuration for local (emulated) storage","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/-init-.html#init","text":"LocalStorageConfig(data_dir: String ) Configuration for local (emulated) storage","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/data_dir.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageConfig / data_dir data_dir \u00b6 val data_dir: String","title":"data_dir - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-config/data_dir.html#data_dir","text":"val data_dir: String","title":"data_dir"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/index.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc LocalStorageRpc \u00b6 class LocalStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. The implementation uses file locks to support multiple local processes accessing the same storage directory. Whenever a blob is updated, the local store will acquire an exclusive lock on a corresponding lock file, releasing that lock when the update is complete (or when the process dies). It\u2019s slightly more complicated since we need to deal with the possibility that writer stops partway through without the process failing; in those cases we don\u2019t want to prevent subsequent updates from other processes. Write process: on open acquire a read lock read metadata constraints, and create a new target metadata object for the next generation release read lock create a new temp file for receiving the update generate an upload id, save the temp file location + target metadata + constraints in-memory associated with the upload id on write write to the temp file for that upload id on finish acquire a write lock, read the latest metadata for the blob and re-check constraints to make sure nothing changed underneath (e.g. a concurrent upload for that blob did not complete) copy from the temp file to a new file in the content directory, appending the new generation number. This is done as an atomic move + overwrite write updated metadata to the metadata file. This is done as an atomic move + overwrite. Until this is complete, the new version of the content is not accessible to readers. release the write lock remove the content file for the prior generation If a writer fails between open and finish, all that happens is we have abandoned temp files If a writer fails after moving the temp file to the contents directory but before updating the metadata, then we have a bad content file for that generation sitting in the content directory. Since the metadata hasn\u2019t been updated with the new generation, this content is not readable, and a subsequent write will overwrite it. If a writer fails after updating the metadata but before removing the prior generation content file, we\u2019ll have left an abandoned content file. A garbage collection process can be run to clean these up eventually Read process acquire a read lock read the metadata for the blob and check constraints (including etag) read the raw bytes from the content file release the read lock Clients use etags to detect when a blob is updated while a progressive download is in place; the etag returned from a prior read is sent in subsequent reads. We simply use the generation number as the etag value. Constructors \u00b6 Name Summary <init> LocalStorageRpc(root: Path `, moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build())` Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. Functions \u00b6 Name Summary create fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject? delete fun delete(obj: StorageObject, options: Map <Option, *>): Boolean get fun get(obj: StorageObject, options: Map <Option, *>): StorageObject? list fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>> load fun load(obj: StorageObject, options: Map <Option, *>): ByteArray open fun open(obj: StorageObject, options: Map <Option, *>): String openRewrite fun openRewrite(request: RewriteRequest): RewriteResponse read fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long write fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit Inherited Functions \u00b6 Name Summary compose open fun compose(sources: Iterable <StorageObject>?, target: StorageObject?, targetOptions: Map <Option, *>?): StorageObject continueRewrite open fun continueRewrite(previousResponse: RewriteResponse): RewriteResponse create open fun create(bucket: Bucket, options: Map <Option, *>): Bucket createAcl open fun createAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun createAcl(acl: ObjectAccessControl?): ObjectAccessControl createBatch open fun createBatch(): RpcBatch createDefaultAcl open fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl createNotification open fun createNotification(bucket: String ?, notification: Notification?): Notification delete open fun delete(bucket: Bucket, options: Map <Option, *>): Boolean deleteAcl open fun deleteAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): Boolean open fun deleteAcl(bucket: String ?, object: String ?, generation: Long ?, entity: String ?): Boolean deleteDefaultAcl open fun deleteDefaultAcl(bucket: String ?, entity: String ?): Boolean deleteNotification open fun deleteNotification(bucket: String ?, notification: String ?): Boolean get open fun get(bucket: Bucket, options: Map <Option, *>): Bucket? getAcl open fun getAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): BucketAccessControl open fun getAcl(bucket: String ?, obj: String ?, generation: Long ?, entity: String ?): ObjectAccessControl getDefaultAcl open fun getDefaultAcl(bucket: String ?, entity: String ?): ObjectAccessControl getIamPolicy open fun getIamPolicy(bucket: String ?, options: Map <Option, *>?): Policy getServiceAccount open fun getServiceAccount(projectId: String ?): ServiceAccount list open fun list(options: Map <Option, *>?): Tuple< String , Iterable <Bucket>> listAcls open fun listAcls(bucket: String ?, options: Map <Option, *>?): List <BucketAccessControl> open fun listAcls(bucket: String ?, obj: String ?, generation: Long ?): List <ObjectAccessControl> listDefaultAcls open fun listDefaultAcls(bucket: String ?): MutableList <ObjectAccessControl> listNotifications open fun listNotifications(bucket: String ?): List <Notification> lockRetentionPolicy open fun lockRetentionPolicy(bucket: Bucket?, options: Map <Option, *>?): Bucket open open fun open(signedURL: String ?): String patch open fun patch(bucket: Bucket, options: Map <Option, *>): Bucket? open fun patch(obj: StorageObject, options: Map <Option, *>): StorageObject? patchAcl open fun patchAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControl patchDefaultAcl open fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl read open fun read(from: StorageObject?, options: Map <Option, *>?, position: Long , bytes: Int ): Tuple< String , ByteArray > setIamPolicy open fun setIamPolicy(bucket: String ?, policy: Policy?, options: Map <Option, *>?): Policy testIamPermissions open fun testIamPermissions(bucket: String , permissions: List < String >, options: Map <Option, *>): TestIamPermissionsResponse","title":"LocalStorageRpc - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/index.html#localstoragerpc","text":"class LocalStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. The implementation uses file locks to support multiple local processes accessing the same storage directory. Whenever a blob is updated, the local store will acquire an exclusive lock on a corresponding lock file, releasing that lock when the update is complete (or when the process dies). It\u2019s slightly more complicated since we need to deal with the possibility that writer stops partway through without the process failing; in those cases we don\u2019t want to prevent subsequent updates from other processes. Write process: on open acquire a read lock read metadata constraints, and create a new target metadata object for the next generation release read lock create a new temp file for receiving the update generate an upload id, save the temp file location + target metadata + constraints in-memory associated with the upload id on write write to the temp file for that upload id on finish acquire a write lock, read the latest metadata for the blob and re-check constraints to make sure nothing changed underneath (e.g. a concurrent upload for that blob did not complete) copy from the temp file to a new file in the content directory, appending the new generation number. This is done as an atomic move + overwrite write updated metadata to the metadata file. This is done as an atomic move + overwrite. Until this is complete, the new version of the content is not accessible to readers. release the write lock remove the content file for the prior generation If a writer fails between open and finish, all that happens is we have abandoned temp files If a writer fails after moving the temp file to the contents directory but before updating the metadata, then we have a bad content file for that generation sitting in the content directory. Since the metadata hasn\u2019t been updated with the new generation, this content is not readable, and a subsequent write will overwrite it. If a writer fails after updating the metadata but before removing the prior generation content file, we\u2019ll have left an abandoned content file. A garbage collection process can be run to clean these up eventually Read process acquire a read lock read the metadata for the blob and check constraints (including etag) read the raw bytes from the content file release the read lock Clients use etags to detect when a blob is updated while a progressive download is in place; the etag returned from a prior read is sent in subsequent reads. We simply use the generation number as the etag value.","title":"LocalStorageRpc"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/index.html#constructors","text":"Name Summary <init> LocalStorageRpc(root: Path `, moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build())` Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete.","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/index.html#functions","text":"Name Summary create fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject? delete fun delete(obj: StorageObject, options: Map <Option, *>): Boolean get fun get(obj: StorageObject, options: Map <Option, *>): StorageObject? list fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>> load fun load(obj: StorageObject, options: Map <Option, *>): ByteArray open fun open(obj: StorageObject, options: Map <Option, *>): String openRewrite fun openRewrite(request: RewriteRequest): RewriteResponse read fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long write fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit","title":"Functions"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/index.html#inherited-functions","text":"Name Summary compose open fun compose(sources: Iterable <StorageObject>?, target: StorageObject?, targetOptions: Map <Option, *>?): StorageObject continueRewrite open fun continueRewrite(previousResponse: RewriteResponse): RewriteResponse create open fun create(bucket: Bucket, options: Map <Option, *>): Bucket createAcl open fun createAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun createAcl(acl: ObjectAccessControl?): ObjectAccessControl createBatch open fun createBatch(): RpcBatch createDefaultAcl open fun createDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl createNotification open fun createNotification(bucket: String ?, notification: Notification?): Notification delete open fun delete(bucket: Bucket, options: Map <Option, *>): Boolean deleteAcl open fun deleteAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): Boolean open fun deleteAcl(bucket: String ?, object: String ?, generation: Long ?, entity: String ?): Boolean deleteDefaultAcl open fun deleteDefaultAcl(bucket: String ?, entity: String ?): Boolean deleteNotification open fun deleteNotification(bucket: String ?, notification: String ?): Boolean get open fun get(bucket: Bucket, options: Map <Option, *>): Bucket? getAcl open fun getAcl(bucket: String ?, entity: String ?, options: Map <Option, *>?): BucketAccessControl open fun getAcl(bucket: String ?, obj: String ?, generation: Long ?, entity: String ?): ObjectAccessControl getDefaultAcl open fun getDefaultAcl(bucket: String ?, entity: String ?): ObjectAccessControl getIamPolicy open fun getIamPolicy(bucket: String ?, options: Map <Option, *>?): Policy getServiceAccount open fun getServiceAccount(projectId: String ?): ServiceAccount list open fun list(options: Map <Option, *>?): Tuple< String , Iterable <Bucket>> listAcls open fun listAcls(bucket: String ?, options: Map <Option, *>?): List <BucketAccessControl> open fun listAcls(bucket: String ?, obj: String ?, generation: Long ?): List <ObjectAccessControl> listDefaultAcls open fun listDefaultAcls(bucket: String ?): MutableList <ObjectAccessControl> listNotifications open fun listNotifications(bucket: String ?): List <Notification> lockRetentionPolicy open fun lockRetentionPolicy(bucket: Bucket?, options: Map <Option, *>?): Bucket open open fun open(signedURL: String ?): String patch open fun patch(bucket: Bucket, options: Map <Option, *>): Bucket? open fun patch(obj: StorageObject, options: Map <Option, *>): StorageObject? patchAcl open fun patchAcl(acl: BucketAccessControl?, options: Map <Option, *>?): BucketAccessControl open fun patchAcl(acl: ObjectAccessControl?): ObjectAccessControl patchDefaultAcl open fun patchDefaultAcl(acl: ObjectAccessControl?): ObjectAccessControl read open fun read(from: StorageObject?, options: Map <Option, *>?, position: Long , bytes: Int ): Tuple< String , ByteArray > setIamPolicy open fun setIamPolicy(bucket: String ?, policy: Policy?, options: Map <Option, *>?): Policy testIamPermissions open fun testIamPermissions(bucket: String , permissions: List < String >, options: Map <Option, *>): TestIamPermissionsResponse","title":"Inherited Functions"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/-init-.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / <init> <init> \u00b6 LocalStorageRpc(root: Path , moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build()) Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. The implementation uses file locks to support multiple local processes accessing the same storage directory. Whenever a blob is updated, the local store will acquire an exclusive lock on a corresponding lock file, releasing that lock when the update is complete (or when the process dies). It\u2019s slightly more complicated since we need to deal with the possibility that writer stops partway through without the process failing; in those cases we don\u2019t want to prevent subsequent updates from other processes. Write process: on open acquire a read lock read metadata constraints, and create a new target metadata object for the next generation release read lock create a new temp file for receiving the update generate an upload id, save the temp file location + target metadata + constraints in-memory associated with the upload id on write write to the temp file for that upload id on finish acquire a write lock, read the latest metadata for the blob and re-check constraints to make sure nothing changed underneath (e.g. a concurrent upload for that blob did not complete) copy from the temp file to a new file in the content directory, appending the new generation number. This is done as an atomic move + overwrite write updated metadata to the metadata file. This is done as an atomic move + overwrite. Until this is complete, the new version of the content is not accessible to readers. release the write lock remove the content file for the prior generation If a writer fails between open and finish, all that happens is we have abandoned temp files If a writer fails after moving the temp file to the contents directory but before updating the metadata, then we have a bad content file for that generation sitting in the content directory. Since the metadata hasn\u2019t been updated with the new generation, this content is not readable, and a subsequent write will overwrite it. If a writer fails after updating the metadata but before removing the prior generation content file, we\u2019ll have left an abandoned content file. A garbage collection process can be run to clean these up eventually Read process acquire a read lock read the metadata for the blob and check constraints (including etag) read the raw bytes from the content file release the read lock Clients use etags to detect when a blob is updated while a progressive download is in place; the etag returned from a prior read is sent in subsequent reads. We simply use the generation number as the etag value.","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/-init-.html#init","text":"LocalStorageRpc(root: Path , moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build()) Implementation of StorageRpc that is backed by local disk storage. Useful for running in development mode on local machines, since there is no GCS emulator available. Files are stored with the generation version appended as an extension suffix, with a symlink existing for the latest generation. To preserve GCS atomicity semantics, progressive uploads are handled by storing the interim uploaded data in a temporary file based off the latest generation, then doing a rename to the new generation once the upload is complete. The implementation uses file locks to support multiple local processes accessing the same storage directory. Whenever a blob is updated, the local store will acquire an exclusive lock on a corresponding lock file, releasing that lock when the update is complete (or when the process dies). It\u2019s slightly more complicated since we need to deal with the possibility that writer stops partway through without the process failing; in those cases we don\u2019t want to prevent subsequent updates from other processes. Write process: on open acquire a read lock read metadata constraints, and create a new target metadata object for the next generation release read lock create a new temp file for receiving the update generate an upload id, save the temp file location + target metadata + constraints in-memory associated with the upload id on write write to the temp file for that upload id on finish acquire a write lock, read the latest metadata for the blob and re-check constraints to make sure nothing changed underneath (e.g. a concurrent upload for that blob did not complete) copy from the temp file to a new file in the content directory, appending the new generation number. This is done as an atomic move + overwrite write updated metadata to the metadata file. This is done as an atomic move + overwrite. Until this is complete, the new version of the content is not accessible to readers. release the write lock remove the content file for the prior generation If a writer fails between open and finish, all that happens is we have abandoned temp files If a writer fails after moving the temp file to the contents directory but before updating the metadata, then we have a bad content file for that generation sitting in the content directory. Since the metadata hasn\u2019t been updated with the new generation, this content is not readable, and a subsequent write will overwrite it. If a writer fails after updating the metadata but before removing the prior generation content file, we\u2019ll have left an abandoned content file. A garbage collection process can be run to clean these up eventually Read process acquire a read lock read the metadata for the blob and check constraints (including etag) read the raw bytes from the content file release the read lock Clients use etags to detect when a blob is updated while a progressive download is in place; the etag returned from a prior read is sent in subsequent reads. We simply use the generation number as the etag value.","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/create.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / create create \u00b6 fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject?","title":"create - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/create.html#create","text":"fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject?","title":"create"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/delete.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / delete delete \u00b6 fun delete(obj: StorageObject, options: Map <Option, *>): Boolean","title":"delete - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/delete.html#delete","text":"fun delete(obj: StorageObject, options: Map <Option, *>): Boolean","title":"delete"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/get.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / get get \u00b6 fun get(obj: StorageObject, options: Map <Option, *>): StorageObject?","title":"get - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/get.html#get","text":"fun get(obj: StorageObject, options: Map <Option, *>): StorageObject?","title":"get"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/list.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / list list \u00b6 fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>>","title":"list - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/list.html#list","text":"fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>>","title":"list"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/load.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / load load \u00b6 fun load(obj: StorageObject, options: Map <Option, *>): ByteArray","title":"load - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/load.html#load","text":"fun load(obj: StorageObject, options: Map <Option, *>): ByteArray","title":"load"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open-rewrite.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / openRewrite openRewrite \u00b6 fun openRewrite(request: RewriteRequest): RewriteResponse","title":"openRewrite - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open-rewrite.html#openrewrite","text":"fun openRewrite(request: RewriteRequest): RewriteResponse","title":"openRewrite"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / open open \u00b6 fun open(obj: StorageObject, options: Map <Option, *>): String","title":"open - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/open.html#open","text":"fun open(obj: StorageObject, options: Map <Option, *>): String","title":"open"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/read.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / read read \u00b6 fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long","title":"read - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/read.html#read","text":"fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long","title":"read"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/write.html","text":"misk-gcp / misk.cloud.gcp.storage / LocalStorageRpc / write write \u00b6 fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit","title":"write - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-local-storage-rpc/write.html#write","text":"fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit","title":"write"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/index.html","text":"misk-gcp / misk.cloud.gcp.storage / StorageConfig StorageConfig \u00b6 data class StorageConfig : Config Configuration for talking to Google Cloud Storage Constructors \u00b6 Name Summary <init> StorageConfig(use_local_storage: Boolean = false, local_storage: LocalStorageConfig ? = null, transport: TransportConfig = TransportConfig()) Configuration for talking to Google Cloud Storage Properties \u00b6 Name Summary local_storage val local_storage: LocalStorageConfig ? transport val transport: TransportConfig use_local_storage val use_local_storage: Boolean","title":"StorageConfig - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/index.html#storageconfig","text":"data class StorageConfig : Config Configuration for talking to Google Cloud Storage","title":"StorageConfig"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/index.html#constructors","text":"Name Summary <init> StorageConfig(use_local_storage: Boolean = false, local_storage: LocalStorageConfig ? = null, transport: TransportConfig = TransportConfig()) Configuration for talking to Google Cloud Storage","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/index.html#properties","text":"Name Summary local_storage val local_storage: LocalStorageConfig ? transport val transport: TransportConfig use_local_storage val use_local_storage: Boolean","title":"Properties"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/-init-.html","text":"misk-gcp / misk.cloud.gcp.storage / StorageConfig / <init> <init> \u00b6 StorageConfig(use_local_storage: Boolean = false, local_storage: LocalStorageConfig ? = null, transport: TransportConfig = TransportConfig()) Configuration for talking to Google Cloud Storage","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/-init-.html#init","text":"StorageConfig(use_local_storage: Boolean = false, local_storage: LocalStorageConfig ? = null, transport: TransportConfig = TransportConfig()) Configuration for talking to Google Cloud Storage","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/local_storage.html","text":"misk-gcp / misk.cloud.gcp.storage / StorageConfig / local_storage local_storage \u00b6 val local_storage: LocalStorageConfig ?","title":"local_storage - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/local_storage.html#local_storage","text":"val local_storage: LocalStorageConfig ?","title":"local_storage"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/transport.html","text":"misk-gcp / misk.cloud.gcp.storage / StorageConfig / transport transport \u00b6 val transport: TransportConfig","title":"transport - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/transport.html#transport","text":"val transport: TransportConfig","title":"transport"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/use_local_storage.html","text":"misk-gcp / misk.cloud.gcp.storage / StorageConfig / use_local_storage use_local_storage \u00b6 val use_local_storage: Boolean","title":"use_local_storage - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/-storage-config/use_local_storage.html#use_local_storage","text":"val use_local_storage: Boolean","title":"use_local_storage"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.api.gax.paging.-page/index.html","text":"misk-gcp / misk.cloud.gcp.storage / com.google.api.gax.paging.Page Extensions for com.google.api.gax.paging.Page \u00b6 Name Summary blobIds val Page<Blob>.blobIds: List <BlobId!> toList fun <T> Page< T >.toList(): List < T >","title":"Extensions for com.google.api.gax.paging.Page - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.api.gax.paging.-page/index.html#extensions-for-comgoogleapigaxpagingpage","text":"Name Summary blobIds val Page<Blob>.blobIds: List <BlobId!> toList fun <T> Page< T >.toList(): List < T >","title":"Extensions for com.google.api.gax.paging.Page"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.api.gax.paging.-page/blob-ids.html","text":"misk-gcp / misk.cloud.gcp.storage / com.google.api.gax.paging.Page / blobIds blobIds \u00b6 val Page<Blob>.blobIds: List <BlobId!> Return a list containing just the ids of the blobs in the page","title":"blobIds - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.api.gax.paging.-page/blob-ids.html#blobids","text":"val Page<Blob>.blobIds: List <BlobId!> Return a list containing just the ids of the blobs in the page","title":"blobIds"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.api.gax.paging.-page/to-list.html","text":"misk-gcp / misk.cloud.gcp.storage / com.google.api.gax.paging.Page / toList toList \u00b6 fun <T> Page< T >.toList(): List < T > Return a list containing all of the elements in this page","title":"toList - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.api.gax.paging.-page/to-list.html#tolist","text":"fun <T> Page< T >.toList(): List < T > Return a list containing all of the elements in this page","title":"toList"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.-read-channel/index.html","text":"misk-gcp / misk.cloud.gcp.storage / com.google.cloud.ReadChannel Extensions for com.google.cloud.ReadChannel \u00b6 Name Summary forEachChunk fun ReadChannel.forEachChunk(buffer: ByteBuffer , action: ( ByteBuffer , Int ) -> Unit ): Unit Runs the given block for each chunk on a given channel fun ReadChannel.forEachChunk(chunkSize: Int , action: ( ByteBuffer , Int ) -> Unit ): Unit","title":"Extensions for com.google.cloud.ReadChannel - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.-read-channel/index.html#extensions-for-comgooglecloudreadchannel","text":"Name Summary forEachChunk fun ReadChannel.forEachChunk(buffer: ByteBuffer , action: ( ByteBuffer , Int ) -> Unit ): Unit Runs the given block for each chunk on a given channel fun ReadChannel.forEachChunk(chunkSize: Int , action: ( ByteBuffer , Int ) -> Unit ): Unit","title":"Extensions for com.google.cloud.ReadChannel"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.-read-channel/for-each-chunk.html","text":"misk-gcp / misk.cloud.gcp.storage / com.google.cloud.ReadChannel / forEachChunk forEachChunk \u00b6 fun ReadChannel.forEachChunk(buffer: ByteBuffer , action: ( ByteBuffer , Int ) -> Unit ): Unit Runs the given block for each chunk on a given channel fun ReadChannel.forEachChunk(chunkSize: Int , action: ( ByteBuffer , Int ) -> Unit ): Unit","title":"forEachChunk - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.-read-channel/for-each-chunk.html#foreachchunk","text":"fun ReadChannel.forEachChunk(buffer: ByteBuffer , action: ( ByteBuffer , Int ) -> Unit ): Unit Runs the given block for each chunk on a given channel fun ReadChannel.forEachChunk(chunkSize: Int , action: ( ByteBuffer , Int ) -> Unit ): Unit","title":"forEachChunk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.storage.-blob-id/index.html","text":"misk-gcp / misk.cloud.gcp.storage / com.google.cloud.storage.BlobId Extensions for com.google.cloud.storage.BlobId \u00b6 Name Summary compareTo fun BlobId.compareTo(other: BlobId): Int","title":"Extensions for com.google.cloud.storage.BlobId - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.storage.-blob-id/index.html#extensions-for-comgooglecloudstorageblobid","text":"Name Summary compareTo fun BlobId.compareTo(other: BlobId): Int","title":"Extensions for com.google.cloud.storage.BlobId"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.storage.-blob-id/compare-to.html","text":"misk-gcp / misk.cloud.gcp.storage / com.google.cloud.storage.BlobId / compareTo compareTo \u00b6 fun BlobId.compareTo(other: BlobId): Int Return compares one blob id to another; orders by bucket, then name, then generation","title":"compareTo - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/com.google.cloud.storage.-blob-id/compare-to.html#compareto","text":"fun BlobId.compareTo(other: BlobId): Int Return compares one blob id to another; orders by bucket, then name, then generation","title":"compareTo"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/java.nio.channels.-file-channel/index.html","text":"misk-gcp / misk.cloud.gcp.storage / java.nio.channels.FileChannel Extensions for java.nio.channels.FileChannel \u00b6 Name Summary withLock fun <T> FileChannel .withLock(shared: Boolean , action: () -> T ): T","title":"Extensions for java.nio.channels.FileChannel - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/java.nio.channels.-file-channel/index.html#extensions-for-javaniochannelsfilechannel","text":"Name Summary withLock fun <T> FileChannel .withLock(shared: Boolean , action: () -> T ): T","title":"Extensions for java.nio.channels.FileChannel"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/java.nio.channels.-file-channel/with-lock.html","text":"misk-gcp / misk.cloud.gcp.storage / java.nio.channels.FileChannel / withLock withLock \u00b6 fun <T> FileChannel .withLock(shared: Boolean , action: () -> T ): T","title":"withLock - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.storage/java.nio.channels.-file-channel/with-lock.html#withlock","text":"fun <T> FileChannel .withLock(shared: Boolean , action: () -> T ): T","title":"withLock"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/index.html","text":"misk-gcp / misk.cloud.gcp.tracing Package misk.cloud.gcp.tracing \u00b6 Types \u00b6 Name Summary TracingLoggingEnhancer class TracingLoggingEnhancer : LoggingEnhancer Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender","title":"Package misk.cloud.gcp.tracing - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/index.html#package-miskcloudgcptracing","text":"","title":"Package misk.cloud.gcp.tracing"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/index.html#types","text":"Name Summary TracingLoggingEnhancer class TracingLoggingEnhancer : LoggingEnhancer Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender","title":"Types"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/index.html","text":"misk-gcp / misk.cloud.gcp.tracing / TracingLoggingEnhancer TracingLoggingEnhancer \u00b6 class TracingLoggingEnhancer : LoggingEnhancer Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender Constructors \u00b6 Name Summary <init> TracingLoggingEnhancer() Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender Functions \u00b6 Name Summary enhanceLogEntry fun enhanceLogEntry(builder: Builder): Unit fun enhanceLogEntry(tracer: Tracer, builder: Builder): Unit","title":"TracingLoggingEnhancer - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/index.html#tracingloggingenhancer","text":"class TracingLoggingEnhancer : LoggingEnhancer Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender","title":"TracingLoggingEnhancer"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/index.html#constructors","text":"Name Summary <init> TracingLoggingEnhancer() Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender","title":"Constructors"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/index.html#functions","text":"Name Summary enhanceLogEntry fun enhanceLogEntry(builder: Builder): Unit fun enhanceLogEntry(tracer: Tracer, builder: Builder): Unit","title":"Functions"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/-init-.html","text":"misk-gcp / misk.cloud.gcp.tracing / TracingLoggingEnhancer / <init> <init> \u00b6 TracingLoggingEnhancer() Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender","title":" init "},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/-init-.html#init","text":"TracingLoggingEnhancer() Add this enhancer to your project\u2019s Logback configuration to add trace ids to logs generated by GCP\u2019s LoggingAppender","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/enhance-log-entry.html","text":"misk-gcp / misk.cloud.gcp.tracing / TracingLoggingEnhancer / enhanceLogEntry enhanceLogEntry \u00b6 fun enhanceLogEntry(builder: Builder): Unit fun enhanceLogEntry(tracer: Tracer, builder: Builder): Unit","title":"enhanceLogEntry - Misk"},{"location":"0.x/misk-gcp/misk.cloud.gcp.tracing/-tracing-logging-enhancer/enhance-log-entry.html#enhancelogentry","text":"fun enhanceLogEntry(builder: Builder): Unit fun enhanceLogEntry(tracer: Tracer, builder: Builder): Unit","title":"enhanceLogEntry"},{"location":"0.x/misk-gcp/misk.logging/index.html","text":"misk-gcp / misk.logging Package misk.logging \u00b6 Functions \u00b6 Name Summary enableStackDriverLogging fun enableStackDriverLogging(config: StackDriverLoggingConfig ): Unit Configures Misk to send application logs to StackDriver. If credentials are required to send logging, set the GOOGLE_APPLICATION_CREDENTIALS environment variable with the path to the JSON credentials.","title":"Package misk.logging - Misk"},{"location":"0.x/misk-gcp/misk.logging/index.html#package-misklogging","text":"","title":"Package misk.logging"},{"location":"0.x/misk-gcp/misk.logging/index.html#functions","text":"Name Summary enableStackDriverLogging fun enableStackDriverLogging(config: StackDriverLoggingConfig ): Unit Configures Misk to send application logs to StackDriver. If credentials are required to send logging, set the GOOGLE_APPLICATION_CREDENTIALS environment variable with the path to the JSON credentials.","title":"Functions"},{"location":"0.x/misk-gcp/misk.logging/enable-stack-driver-logging.html","text":"misk-gcp / misk.logging / enableStackDriverLogging enableStackDriverLogging \u00b6 fun enableStackDriverLogging(config: StackDriverLoggingConfig ): Unit Configures Misk to send application logs to StackDriver. If credentials are required to send logging, set the GOOGLE_APPLICATION_CREDENTIALS environment variable with the path to the JSON credentials.","title":"enableStackDriverLogging - Misk"},{"location":"0.x/misk-gcp/misk.logging/enable-stack-driver-logging.html#enablestackdriverlogging","text":"fun enableStackDriverLogging(config: StackDriverLoggingConfig ): Unit Configures Misk to send application logs to StackDriver. If credentials are required to send logging, set the GOOGLE_APPLICATION_CREDENTIALS environment variable with the path to the JSON credentials.","title":"enableStackDriverLogging"},{"location":"0.x/misk-gcp-testing/index.html","text":"misk-gcp-testing Packages \u00b6 Name Summary misk.cloud.gcp.datastore misk.cloud.gcp.storage misk.cloud.gcp.testing Index \u00b6 All Types","title":"misk-gcp-testing"},{"location":"0.x/misk-gcp-testing/index.html#packages","text":"Name Summary misk.cloud.gcp.datastore misk.cloud.gcp.storage misk.cloud.gcp.testing","title":"Packages"},{"location":"0.x/misk-gcp-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-gcp-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.cloud.gcp.testing.Body misk.cloud.gcp.datastore.FakeDatastoreModule Installs a version of the Datastore that works off an in-memory local store misk.cloud.gcp.testing.FakeHttpRequest misk.cloud.gcp.testing.FakeHttpResponse misk.cloud.gcp.testing.FakeHttpRouter misk.cloud.gcp.storage.FakeStorageModule Installs an embeddable version of Storage that works in-memory misk.cloud.gcp.storage.InMemoryStorageRpc Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe. kotlin.collections.Map (extensions in package misk.cloud.gcp.storage) com.google.api.client.testing.http.MockLowLevelHttpResponse (extensions in package misk.cloud.gcp.testing)","title":"All Types - Misk"},{"location":"0.x/misk-gcp-testing/alltypes/index.html#all-types","text":"Name Summary misk.cloud.gcp.testing.Body misk.cloud.gcp.datastore.FakeDatastoreModule Installs a version of the Datastore that works off an in-memory local store misk.cloud.gcp.testing.FakeHttpRequest misk.cloud.gcp.testing.FakeHttpResponse misk.cloud.gcp.testing.FakeHttpRouter misk.cloud.gcp.storage.FakeStorageModule Installs an embeddable version of Storage that works in-memory misk.cloud.gcp.storage.InMemoryStorageRpc Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe. kotlin.collections.Map (extensions in package misk.cloud.gcp.storage) com.google.api.client.testing.http.MockLowLevelHttpResponse (extensions in package misk.cloud.gcp.testing)","title":"All Types"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/index.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore Package misk.cloud.gcp.datastore \u00b6 Types \u00b6 Name Summary FakeDatastoreModule class FakeDatastoreModule : KAbstractModule Installs a version of the Datastore that works off an in-memory local store","title":"Package misk.cloud.gcp.datastore - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/index.html#package-miskcloudgcpdatastore","text":"","title":"Package misk.cloud.gcp.datastore"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/index.html#types","text":"Name Summary FakeDatastoreModule class FakeDatastoreModule : KAbstractModule Installs a version of the Datastore that works off an in-memory local store","title":"Types"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/index.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule FakeDatastoreModule \u00b6 class FakeDatastoreModule : KAbstractModule Installs a version of the Datastore that works off an in-memory local store Types \u00b6 Name Summary FakeDatastoreService class FakeDatastoreService : AbstractIdleService Constructors \u00b6 Name Summary <init> FakeDatastoreModule() Installs a version of the Datastore that works off an in-memory local store Functions \u00b6 Name Summary configure fun configure(): Unit provideDatastore fun provideDatastore(datastoreHelper: LocalDatastoreHelper): Datastore provideDatastoreHelper fun provideDatastoreHelper(): LocalDatastoreHelper","title":"FakeDatastoreModule - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/index.html#fakedatastoremodule","text":"class FakeDatastoreModule : KAbstractModule Installs a version of the Datastore that works off an in-memory local store","title":"FakeDatastoreModule"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/index.html#types","text":"Name Summary FakeDatastoreService class FakeDatastoreService : AbstractIdleService","title":"Types"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/index.html#constructors","text":"Name Summary <init> FakeDatastoreModule() Installs a version of the Datastore that works off an in-memory local store","title":"Constructors"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideDatastore fun provideDatastore(datastoreHelper: LocalDatastoreHelper): Datastore provideDatastoreHelper fun provideDatastoreHelper(): LocalDatastoreHelper","title":"Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-init-.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / <init> <init> \u00b6 FakeDatastoreModule() Installs a version of the Datastore that works off an in-memory local store","title":" init "},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-init-.html#init","text":"FakeDatastoreModule() Installs a version of the Datastore that works off an in-memory local store","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/configure.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/provide-datastore-helper.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / provideDatastoreHelper provideDatastoreHelper \u00b6 @Provides fun provideDatastoreHelper(): LocalDatastoreHelper","title":"provideDatastoreHelper - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/provide-datastore-helper.html#providedatastorehelper","text":"@Provides fun provideDatastoreHelper(): LocalDatastoreHelper","title":"provideDatastoreHelper"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/provide-datastore.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / provideDatastore provideDatastore \u00b6 @Provides fun provideDatastore(datastoreHelper: LocalDatastoreHelper): Datastore","title":"provideDatastore - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/provide-datastore.html#providedatastore","text":"@Provides fun provideDatastore(datastoreHelper: LocalDatastoreHelper): Datastore","title":"provideDatastore"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/index.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / FakeDatastoreService FakeDatastoreService \u00b6 class FakeDatastoreService : AbstractIdleService Constructors \u00b6 Name Summary <init> FakeDatastoreService(datastoreHelper: LocalDatastoreHelper) Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"FakeDatastoreService - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/index.html#fakedatastoreservice","text":"class FakeDatastoreService : AbstractIdleService","title":"FakeDatastoreService"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/index.html#constructors","text":"Name Summary <init> FakeDatastoreService(datastoreHelper: LocalDatastoreHelper)","title":"Constructors"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/-init-.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / FakeDatastoreService / <init> <init> \u00b6 FakeDatastoreService(datastoreHelper: LocalDatastoreHelper)","title":" init "},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/-init-.html#init","text":"FakeDatastoreService(datastoreHelper: LocalDatastoreHelper)","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/shut-down.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / FakeDatastoreService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/start-up.html","text":"misk-gcp-testing / misk.cloud.gcp.datastore / FakeDatastoreModule / FakeDatastoreService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.datastore/-fake-datastore-module/-fake-datastore-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/index.html","text":"misk-gcp-testing / misk.cloud.gcp.storage Package misk.cloud.gcp.storage \u00b6 Types \u00b6 Name Summary FakeStorageModule class FakeStorageModule : KAbstractModule Installs an embeddable version of Storage that works in-memory InMemoryStorageRpc class InMemoryStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe. Extensions for External Classes \u00b6 Name Summary kotlin.collections.Map","title":"Package misk.cloud.gcp.storage - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/index.html#package-miskcloudgcpstorage","text":"","title":"Package misk.cloud.gcp.storage"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/index.html#types","text":"Name Summary FakeStorageModule class FakeStorageModule : KAbstractModule Installs an embeddable version of Storage that works in-memory InMemoryStorageRpc class InMemoryStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe.","title":"Types"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/index.html#extensions-for-external-classes","text":"Name Summary kotlin.collections.Map","title":"Extensions for External Classes"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/index.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / FakeStorageModule FakeStorageModule \u00b6 class FakeStorageModule : KAbstractModule Installs an embeddable version of Storage that works in-memory Constructors \u00b6 Name Summary <init> FakeStorageModule() Installs an embeddable version of Storage that works in-memory Functions \u00b6 Name Summary configure fun configure(): Unit provideStorage fun provideStorage(): Storage","title":"FakeStorageModule - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/index.html#fakestoragemodule","text":"class FakeStorageModule : KAbstractModule Installs an embeddable version of Storage that works in-memory","title":"FakeStorageModule"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/index.html#constructors","text":"Name Summary <init> FakeStorageModule() Installs an embeddable version of Storage that works in-memory","title":"Constructors"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideStorage fun provideStorage(): Storage","title":"Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/-init-.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / FakeStorageModule / <init> <init> \u00b6 FakeStorageModule() Installs an embeddable version of Storage that works in-memory","title":" init "},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/-init-.html#init","text":"FakeStorageModule() Installs an embeddable version of Storage that works in-memory","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/configure.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / FakeStorageModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/provide-storage.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / FakeStorageModule / provideStorage provideStorage \u00b6 @Provides fun provideStorage(): Storage","title":"provideStorage - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-fake-storage-module/provide-storage.html#providestorage","text":"@Provides fun provideStorage(): Storage","title":"provideStorage"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/index.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc InMemoryStorageRpc \u00b6 class InMemoryStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe. Constructors \u00b6 Name Summary <init> InMemoryStorageRpc() Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe. Functions \u00b6 Name Summary create fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject? delete fun delete(obj: StorageObject, options: Map <Option, *>): Boolean get fun get(obj: StorageObject, options: Map <Option, *>): StorageObject? list fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>> load fun load(obj: StorageObject, options: Map <Option, *>): ByteArray open fun open(obj: StorageObject, options: Map <Option, *>): String openRewrite fun openRewrite(request: RewriteRequest): RewriteResponse read fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long write fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit","title":"InMemoryStorageRpc - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/index.html#inmemorystoragerpc","text":"class InMemoryStorageRpc : BaseCustomStorageRpc Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe.","title":"InMemoryStorageRpc"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/index.html#constructors","text":"Name Summary <init> InMemoryStorageRpc() Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe.","title":"Constructors"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/index.html#functions","text":"Name Summary create fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject? delete fun delete(obj: StorageObject, options: Map <Option, *>): Boolean get fun get(obj: StorageObject, options: Map <Option, *>): StorageObject? list fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>> load fun load(obj: StorageObject, options: Map <Option, *>): ByteArray open fun open(obj: StorageObject, options: Map <Option, *>): String openRewrite fun openRewrite(request: RewriteRequest): RewriteResponse read fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long write fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit","title":"Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/-init-.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / <init> <init> \u00b6 InMemoryStorageRpc() Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe.","title":" init "},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/-init-.html#init","text":"InMemoryStorageRpc() Implementation of StorageRpc that keeps all of its data purely in-memory, useful primarily for tests. This implementation is fully thread safe.","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/create.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / create create \u00b6 fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject?","title":"create - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/create.html#create","text":"fun create(obj: StorageObject, content: InputStream , options: Map <Option, *>): StorageObject?","title":"create"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/delete.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / delete delete \u00b6 fun delete(obj: StorageObject, options: Map <Option, *>): Boolean","title":"delete - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/delete.html#delete","text":"fun delete(obj: StorageObject, options: Map <Option, *>): Boolean","title":"delete"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/get.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / get get \u00b6 fun get(obj: StorageObject, options: Map <Option, *>): StorageObject?","title":"get - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/get.html#get","text":"fun get(obj: StorageObject, options: Map <Option, *>): StorageObject?","title":"get"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/list.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / list list \u00b6 fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>>","title":"list - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/list.html#list","text":"fun list(bucket: String , options: Map <Option, *>): Tuple< String , Iterable <StorageObject>>","title":"list"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/load.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / load load \u00b6 fun load(obj: StorageObject, options: Map <Option, *>): ByteArray","title":"load - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/load.html#load","text":"fun load(obj: StorageObject, options: Map <Option, *>): ByteArray","title":"load"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/open-rewrite.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / openRewrite openRewrite \u00b6 fun openRewrite(request: RewriteRequest): RewriteResponse","title":"openRewrite - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/open-rewrite.html#openrewrite","text":"fun openRewrite(request: RewriteRequest): RewriteResponse","title":"openRewrite"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/open.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / open open \u00b6 fun open(obj: StorageObject, options: Map <Option, *>): String","title":"open - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/open.html#open","text":"fun open(obj: StorageObject, options: Map <Option, *>): String","title":"open"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/read.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / read read \u00b6 fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long","title":"read - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/read.html#read","text":"fun read(from: StorageObject, options: Map <Option, *>, zposition: Long , outputStream: OutputStream ): Long","title":"read"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/write.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / InMemoryStorageRpc / write write \u00b6 fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit","title":"write - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/-in-memory-storage-rpc/write.html#write","text":"fun write(uploadId: String , toWrite: ByteArray , toWriteOffset: Int , destOffset: Long , length: Int , last: Boolean ): Unit","title":"write"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/kotlin.collections.-map/index.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / kotlin.collections.Map Extensions for kotlin.collections.Map \u00b6 Name Summary check fun Map <Option, *>.check(obj: StorageObject?): StorageObject?","title":"Extensions for kotlin.collections.Map - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/kotlin.collections.-map/index.html#extensions-for-kotlincollectionsmap","text":"Name Summary check fun Map <Option, *>.check(obj: StorageObject?): StorageObject?","title":"Extensions for kotlin.collections.Map"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/kotlin.collections.-map/check.html","text":"misk-gcp-testing / misk.cloud.gcp.storage / kotlin.collections.Map / check check \u00b6 fun Map <Option, *>.check(obj: StorageObject?): StorageObject?","title":"check - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.storage/kotlin.collections.-map/check.html#check","text":"fun Map <Option, *>.check(obj: StorageObject?): StorageObject?","title":"check"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/index.html","text":"misk-gcp-testing / misk.cloud.gcp.testing Package misk.cloud.gcp.testing \u00b6 Types \u00b6 Name Summary Body open class Body FakeHttpRequest class FakeHttpRequest : LowLevelHttpRequest FakeHttpRouter class FakeHttpRouter : HttpTransport Type Aliases \u00b6 Name Summary FakeHttpResponse typealias FakeHttpResponse = MockLowLevelHttpResponse Extensions for External Classes \u00b6 Name Summary com.google.api.client.testing.http.MockLowLevelHttpResponse","title":"Package misk.cloud.gcp.testing - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/index.html#package-miskcloudgcptesting","text":"","title":"Package misk.cloud.gcp.testing"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/index.html#types","text":"Name Summary Body open class Body FakeHttpRequest class FakeHttpRequest : LowLevelHttpRequest FakeHttpRouter class FakeHttpRouter : HttpTransport","title":"Types"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/index.html#type-aliases","text":"Name Summary FakeHttpResponse typealias FakeHttpResponse = MockLowLevelHttpResponse","title":"Type Aliases"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/index.html#extensions-for-external-classes","text":"Name Summary com.google.api.client.testing.http.MockLowLevelHttpResponse","title":"Extensions for External Classes"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-response.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpResponse FakeHttpResponse \u00b6 typealias FakeHttpResponse = MockLowLevelHttpResponse","title":"FakeHttpResponse - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-response.html#fakehttpresponse","text":"typealias FakeHttpResponse = MockLowLevelHttpResponse","title":"FakeHttpResponse"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/index.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / Body Body \u00b6 open class Body Constructors \u00b6 Name Summary <init> Body() Body(message: String ) Functions \u00b6 Name Summary getMessage open fun getMessage(): String ! setMessage open fun setMessage(message: String !): Unit","title":"Body - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/index.html#body","text":"open class Body","title":"Body"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/index.html#constructors","text":"Name Summary <init> Body() Body(message: String )","title":"Constructors"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/index.html#functions","text":"Name Summary getMessage open fun getMessage(): String ! setMessage open fun setMessage(message: String !): Unit","title":"Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/-init-.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / Body / <init> <init> \u00b6 Body() Body(@Nonnull message: String )","title":" init "},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/-init-.html#init","text":"Body() Body(@Nonnull message: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/get-message.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / Body / getMessage getMessage \u00b6 open fun getMessage(): String !","title":"getMessage - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/get-message.html#getmessage","text":"open fun getMessage(): String !","title":"getMessage"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/set-message.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / Body / setMessage setMessage \u00b6 open fun setMessage(message: String !): Unit","title":"setMessage - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-body/set-message.html#setmessage","text":"open fun setMessage(message: String !): Unit","title":"setMessage"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/index.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest FakeHttpRequest \u00b6 class FakeHttpRequest : LowLevelHttpRequest Constructors \u00b6 Name Summary <init> FakeHttpRequest(method: String , url: String , router: ( FakeHttpRequest ) -> FakeHttpResponse ) Properties \u00b6 Name Summary content val content: ByteArray ? method val method: String stringContent val stringContent: String ? url val url: String Functions \u00b6 Name Summary addHeader fun addHeader(name: String , value: String ): Unit execute fun execute(): FakeHttpResponse header fun header(name: String ): String ? jsonContent fun <T : Any > jsonContent(): T ?","title":"FakeHttpRequest - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/index.html#fakehttprequest","text":"class FakeHttpRequest : LowLevelHttpRequest","title":"FakeHttpRequest"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/index.html#constructors","text":"Name Summary <init> FakeHttpRequest(method: String , url: String , router: ( FakeHttpRequest ) -> FakeHttpResponse )","title":"Constructors"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/index.html#properties","text":"Name Summary content val content: ByteArray ? method val method: String stringContent val stringContent: String ? url val url: String","title":"Properties"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/index.html#functions","text":"Name Summary addHeader fun addHeader(name: String , value: String ): Unit execute fun execute(): FakeHttpResponse header fun header(name: String ): String ? jsonContent fun <T : Any > jsonContent(): T ?","title":"Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/-init-.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / <init> <init> \u00b6 FakeHttpRequest(method: String , url: String , router: ( FakeHttpRequest ) -> FakeHttpResponse )","title":" init "},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/-init-.html#init","text":"FakeHttpRequest(method: String , url: String , router: ( FakeHttpRequest ) -> FakeHttpResponse )","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/add-header.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / addHeader addHeader \u00b6 fun addHeader(name: String , value: String ): Unit","title":"addHeader - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/add-header.html#addheader","text":"fun addHeader(name: String , value: String ): Unit","title":"addHeader"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/content.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / content content \u00b6 val content: ByteArray ?","title":"content - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/content.html#content","text":"val content: ByteArray ?","title":"content"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/execute.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / execute execute \u00b6 fun execute(): FakeHttpResponse","title":"execute - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/execute.html#execute","text":"fun execute(): FakeHttpResponse","title":"execute"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/header.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / header header \u00b6 fun header(name: String ): String ?","title":"header - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/header.html#header","text":"fun header(name: String ): String ?","title":"header"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/json-content.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / jsonContent jsonContent \u00b6 inline fun <reified T : Any > jsonContent(): T ?","title":"jsonContent - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/json-content.html#jsoncontent","text":"inline fun <reified T : Any > jsonContent(): T ?","title":"jsonContent"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/method.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / method method \u00b6 val method: String","title":"method - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/method.html#method","text":"val method: String","title":"method"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/string-content.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / stringContent stringContent \u00b6 val stringContent: String ?","title":"stringContent - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/string-content.html#stringcontent","text":"val stringContent: String ?","title":"stringContent"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/url.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRequest / url url \u00b6 val url: String","title":"url - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-request/url.html#url","text":"val url: String","title":"url"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/index.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRouter FakeHttpRouter \u00b6 class FakeHttpRouter : HttpTransport Constructors \u00b6 Name Summary <init> FakeHttpRouter(router: ( FakeHttpRequest ) -> FakeHttpResponse ) Properties \u00b6 Name Summary router val router: ( FakeHttpRequest ) -> FakeHttpResponse Functions \u00b6 Name Summary buildRequest fun buildRequest(method: String , url: String ): FakeHttpRequest Companion Object Functions \u00b6 Name Summary respondWithError fun respondWithError(statusCode: Int ): MockLowLevelHttpResponse! respondWithJson fun respondWithJson(item: Any ): FakeHttpResponse respondWithText fun respondWithText(text: String ): MockLowLevelHttpResponse! fun respondWithText(statusCode: Int , text: String ): MockLowLevelHttpResponse!","title":"FakeHttpRouter - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/index.html#fakehttprouter","text":"class FakeHttpRouter : HttpTransport","title":"FakeHttpRouter"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/index.html#constructors","text":"Name Summary <init> FakeHttpRouter(router: ( FakeHttpRequest ) -> FakeHttpResponse )","title":"Constructors"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/index.html#properties","text":"Name Summary router val router: ( FakeHttpRequest ) -> FakeHttpResponse","title":"Properties"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/index.html#functions","text":"Name Summary buildRequest fun buildRequest(method: String , url: String ): FakeHttpRequest","title":"Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/index.html#companion-object-functions","text":"Name Summary respondWithError fun respondWithError(statusCode: Int ): MockLowLevelHttpResponse! respondWithJson fun respondWithJson(item: Any ): FakeHttpResponse respondWithText fun respondWithText(text: String ): MockLowLevelHttpResponse! fun respondWithText(statusCode: Int , text: String ): MockLowLevelHttpResponse!","title":"Companion Object Functions"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/-init-.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRouter / <init> <init> \u00b6 FakeHttpRouter(router: ( FakeHttpRequest ) -> FakeHttpResponse )","title":" init "},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/-init-.html#init","text":"FakeHttpRouter(router: ( FakeHttpRequest ) -> FakeHttpResponse )","title":"&lt;init&gt;"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/build-request.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRouter / buildRequest buildRequest \u00b6 protected fun buildRequest(method: String , url: String ): FakeHttpRequest","title":"buildRequest - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/build-request.html#buildrequest","text":"protected fun buildRequest(method: String , url: String ): FakeHttpRequest","title":"buildRequest"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/respond-with-error.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRouter / respondWithError respondWithError \u00b6 fun respondWithError(statusCode: Int ): MockLowLevelHttpResponse!","title":"respondWithError - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/respond-with-error.html#respondwitherror","text":"fun respondWithError(statusCode: Int ): MockLowLevelHttpResponse!","title":"respondWithError"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/respond-with-json.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRouter / respondWithJson respondWithJson \u00b6 fun respondWithJson(item: Any ): FakeHttpResponse","title":"respondWithJson - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/respond-with-json.html#respondwithjson","text":"fun respondWithJson(item: Any ): FakeHttpResponse","title":"respondWithJson"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/respond-with-text.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRouter / respondWithText respondWithText \u00b6 fun respondWithText(text: String ): MockLowLevelHttpResponse! fun respondWithText(statusCode: Int , text: String ): MockLowLevelHttpResponse!","title":"respondWithText - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/respond-with-text.html#respondwithtext","text":"fun respondWithText(text: String ): MockLowLevelHttpResponse! fun respondWithText(statusCode: Int , text: String ): MockLowLevelHttpResponse!","title":"respondWithText"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/router.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / FakeHttpRouter / router router \u00b6 val router: ( FakeHttpRequest ) -> FakeHttpResponse","title":"router - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/-fake-http-router/router.html#router","text":"val router: ( FakeHttpRequest ) -> FakeHttpResponse","title":"router"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/com.google.api.client.testing.http.-mock-low-level-http-response/index.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / com.google.api.client.testing.http.MockLowLevelHttpResponse Extensions for com.google.api.client.testing.http.MockLowLevelHttpResponse \u00b6 Name Summary setJsonContent fun FakeHttpResponse .setJsonContent(item: Any ): FakeHttpResponse","title":"Extensions for com.google.api.client.testing.http.MockLowLevelHttpResponse - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/com.google.api.client.testing.http.-mock-low-level-http-response/index.html#extensions-for-comgoogleapiclienttestinghttpmocklowlevelhttpresponse","text":"Name Summary setJsonContent fun FakeHttpResponse .setJsonContent(item: Any ): FakeHttpResponse","title":"Extensions for com.google.api.client.testing.http.MockLowLevelHttpResponse"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/com.google.api.client.testing.http.-mock-low-level-http-response/set-json-content.html","text":"misk-gcp-testing / misk.cloud.gcp.testing / com.google.api.client.testing.http.MockLowLevelHttpResponse / setJsonContent setJsonContent \u00b6 fun FakeHttpResponse .setJsonContent(item: Any ): FakeHttpResponse","title":"setJsonContent - Misk"},{"location":"0.x/misk-gcp-testing/misk.cloud.gcp.testing/com.google.api.client.testing.http.-mock-low-level-http-response/set-json-content.html#setjsoncontent","text":"fun FakeHttpResponse .setJsonContent(item: Any ): FakeHttpResponse","title":"setJsonContent"},{"location":"0.x/misk-grpc-reflect/index.html","text":"misk-grpc-reflect Packages \u00b6 Name Summary grpc.reflection.v1alpha misk.grpc.reflect Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-grpc-reflect/index.html#packages","text":"Name Summary grpc.reflection.v1alpha misk.grpc.reflect","title":"Packages"},{"location":"0.x/misk-grpc-reflect/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-grpc-reflect/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.grpc.reflect.GrpcReflectModule Implements gRPC reflect for all gRPC actions installed in this Misk application. misk.grpc.reflect.ServerReflectionApi grpc.reflection.v1alpha.ServerReflectionServerReflectionInfoBlockingServer","title":"All Types - Misk"},{"location":"0.x/misk-grpc-reflect/alltypes/index.html#all-types","text":"Name Summary misk.grpc.reflect.GrpcReflectModule Implements gRPC reflect for all gRPC actions installed in this Misk application. misk.grpc.reflect.ServerReflectionApi grpc.reflection.v1alpha.ServerReflectionServerReflectionInfoBlockingServer","title":"All Types"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/index.html","text":"misk-grpc-reflect / grpc.reflection.v1alpha Package grpc.reflection.v1alpha \u00b6 Types \u00b6 Name Summary ServerReflectionServerReflectionInfoBlockingServer interface ServerReflectionServerReflectionInfoBlockingServer : Service","title":"Package grpc.reflection.v1alpha - Misk"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/index.html#package-grpcreflectionv1alpha","text":"","title":"Package grpc.reflection.v1alpha"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/index.html#types","text":"Name Summary ServerReflectionServerReflectionInfoBlockingServer interface ServerReflectionServerReflectionInfoBlockingServer : Service","title":"Types"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/-server-reflection-server-reflection-info-blocking-server/index.html","text":"misk-grpc-reflect / grpc.reflection.v1alpha / ServerReflectionServerReflectionInfoBlockingServer ServerReflectionServerReflectionInfoBlockingServer \u00b6 interface ServerReflectionServerReflectionInfoBlockingServer : Service Functions \u00b6 Name Summary ServerReflectionInfo abstract fun ServerReflectionInfo(request: MessageSource<ServerReflectionRequest>, response: MessageSink<ServerReflectionResponse>): Unit The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server. Inheritors \u00b6 Name Summary ServerReflectionApi class ServerReflectionApi : ServerReflectionServerReflectionInfoBlockingServer , WebAction","title":"ServerReflectionServerReflectionInfoBlockingServer - Misk"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/-server-reflection-server-reflection-info-blocking-server/index.html#serverreflectionserverreflectioninfoblockingserver","text":"interface ServerReflectionServerReflectionInfoBlockingServer : Service","title":"ServerReflectionServerReflectionInfoBlockingServer"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/-server-reflection-server-reflection-info-blocking-server/index.html#functions","text":"Name Summary ServerReflectionInfo abstract fun ServerReflectionInfo(request: MessageSource<ServerReflectionRequest>, response: MessageSink<ServerReflectionResponse>): Unit The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.","title":"Functions"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/-server-reflection-server-reflection-info-blocking-server/index.html#inheritors","text":"Name Summary ServerReflectionApi class ServerReflectionApi : ServerReflectionServerReflectionInfoBlockingServer , WebAction","title":"Inheritors"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/-server-reflection-server-reflection-info-blocking-server/-server-reflection-info.html","text":"misk-grpc-reflect / grpc.reflection.v1alpha / ServerReflectionServerReflectionInfoBlockingServer / ServerReflectionInfo ServerReflectionInfo \u00b6 abstract fun ServerReflectionInfo(request: MessageSource<ServerReflectionRequest>, response: MessageSink<ServerReflectionResponse>): Unit The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.","title":"ServerReflectionInfo - Misk"},{"location":"0.x/misk-grpc-reflect/grpc.reflection.v1alpha/-server-reflection-server-reflection-info-blocking-server/-server-reflection-info.html#serverreflectioninfo","text":"abstract fun ServerReflectionInfo(request: MessageSource<ServerReflectionRequest>, response: MessageSink<ServerReflectionResponse>): Unit The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.","title":"ServerReflectionInfo"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/index.html","text":"misk-grpc-reflect / misk.grpc.reflect Package misk.grpc.reflect \u00b6 Types \u00b6 Name Summary GrpcReflectModule class GrpcReflectModule : KAbstractModule Implements gRPC reflect for all gRPC actions installed in this Misk application. ServerReflectionApi class ServerReflectionApi : ServerReflectionServerReflectionInfoBlockingServer , WebAction","title":"Package misk.grpc.reflect - Misk"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/index.html#package-miskgrpcreflect","text":"","title":"Package misk.grpc.reflect"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/index.html#types","text":"Name Summary GrpcReflectModule class GrpcReflectModule : KAbstractModule Implements gRPC reflect for all gRPC actions installed in this Misk application. ServerReflectionApi class ServerReflectionApi : ServerReflectionServerReflectionInfoBlockingServer , WebAction","title":"Types"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/index.html","text":"misk-grpc-reflect / misk.grpc.reflect / GrpcReflectModule GrpcReflectModule \u00b6 class GrpcReflectModule : KAbstractModule Implements gRPC reflect for all gRPC actions installed in this Misk application. This relies on .proto files being included in the .jar file. If they\u2019re missing, reflection won\u2019t work for them. Constructors \u00b6 Name Summary <init> GrpcReflectModule() Implements gRPC reflect for all gRPC actions installed in this Misk application. Functions \u00b6 Name Summary configure fun configure(): Unit provideSchema fun provideSchema(webActions: List <WebActionEntry>): Schema Interrogate the installed gRPC actions and create a Wire schema from that. provideServiceReflector fun provideServiceReflector(schema: Schema): SchemaReflector","title":"GrpcReflectModule - Misk"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/index.html#grpcreflectmodule","text":"class GrpcReflectModule : KAbstractModule Implements gRPC reflect for all gRPC actions installed in this Misk application. This relies on .proto files being included in the .jar file. If they\u2019re missing, reflection won\u2019t work for them.","title":"GrpcReflectModule"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/index.html#constructors","text":"Name Summary <init> GrpcReflectModule() Implements gRPC reflect for all gRPC actions installed in this Misk application.","title":"Constructors"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideSchema fun provideSchema(webActions: List <WebActionEntry>): Schema Interrogate the installed gRPC actions and create a Wire schema from that. provideServiceReflector fun provideServiceReflector(schema: Schema): SchemaReflector","title":"Functions"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/-init-.html","text":"misk-grpc-reflect / misk.grpc.reflect / GrpcReflectModule / <init> <init> \u00b6 GrpcReflectModule() Implements gRPC reflect for all gRPC actions installed in this Misk application. This relies on .proto files being included in the .jar file. If they\u2019re missing, reflection won\u2019t work for them.","title":" init "},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/-init-.html#init","text":"GrpcReflectModule() Implements gRPC reflect for all gRPC actions installed in this Misk application. This relies on .proto files being included in the .jar file. If they\u2019re missing, reflection won\u2019t work for them.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/configure.html","text":"misk-grpc-reflect / misk.grpc.reflect / GrpcReflectModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-schema.html","text":"misk-grpc-reflect / misk.grpc.reflect / GrpcReflectModule / provideSchema provideSchema \u00b6 @Provides @Singleton fun provideSchema(webActions: List <WebActionEntry>): Schema Interrogate the installed gRPC actions and create a Wire schema from that.","title":"provideSchema - Misk"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-schema.html#provideschema","text":"@Provides @Singleton fun provideSchema(webActions: List <WebActionEntry>): Schema Interrogate the installed gRPC actions and create a Wire schema from that.","title":"provideSchema"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-service-reflector.html","text":"misk-grpc-reflect / misk.grpc.reflect / GrpcReflectModule / provideServiceReflector provideServiceReflector \u00b6 @Provides @Singleton fun provideServiceReflector(schema: Schema): SchemaReflector","title":"provideServiceReflector - Misk"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-grpc-reflect-module/provide-service-reflector.html#provideservicereflector","text":"@Provides @Singleton fun provideServiceReflector(schema: Schema): SchemaReflector","title":"provideServiceReflector"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/index.html","text":"misk-grpc-reflect / misk.grpc.reflect / ServerReflectionApi ServerReflectionApi \u00b6 class ServerReflectionApi : ServerReflectionServerReflectionInfoBlockingServer , WebAction Constructors \u00b6 Name Summary <init> ServerReflectionApi(reflector: SchemaReflector) Functions \u00b6 Name Summary ServerReflectionInfo fun ServerReflectionInfo(requests: MessageSource<ServerReflectionRequest>, responses: MessageSink<ServerReflectionResponse>): Unit The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.","title":"ServerReflectionApi - Misk"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/index.html#serverreflectionapi","text":"class ServerReflectionApi : ServerReflectionServerReflectionInfoBlockingServer , WebAction","title":"ServerReflectionApi"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/index.html#constructors","text":"Name Summary <init> ServerReflectionApi(reflector: SchemaReflector)","title":"Constructors"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/index.html#functions","text":"Name Summary ServerReflectionInfo fun ServerReflectionInfo(requests: MessageSource<ServerReflectionRequest>, responses: MessageSink<ServerReflectionResponse>): Unit The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.","title":"Functions"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-init-.html","text":"misk-grpc-reflect / misk.grpc.reflect / ServerReflectionApi / <init> <init> \u00b6 ServerReflectionApi(reflector: SchemaReflector)","title":" init "},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-init-.html#init","text":"ServerReflectionApi(reflector: SchemaReflector)","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-server-reflection-info.html","text":"misk-grpc-reflect / misk.grpc.reflect / ServerReflectionApi / ServerReflectionInfo ServerReflectionInfo \u00b6 fun ServerReflectionInfo(requests: MessageSource<ServerReflectionRequest>, responses: MessageSink<ServerReflectionResponse>): Unit Overrides ServerReflectionServerReflectionInfoBlockingServer.ServerReflectionInfo The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.","title":"ServerReflectionInfo - Misk"},{"location":"0.x/misk-grpc-reflect/misk.grpc.reflect/-server-reflection-api/-server-reflection-info.html#serverreflectioninfo","text":"fun ServerReflectionInfo(requests: MessageSource<ServerReflectionRequest>, responses: MessageSink<ServerReflectionResponse>): Unit Overrides ServerReflectionServerReflectionInfoBlockingServer.ServerReflectionInfo The reflection service is structured as a bidirectional stream, ensuring all related requests go to a single server.","title":"ServerReflectionInfo"},{"location":"0.x/misk-grpc-tests/index.html","text":"misk-grpc-tests Packages \u00b6 Name Summary misk.grpc.miskclient misk.grpc.miskserver misk.grpc.protocclient misk.grpc.protocserver routeguide Index \u00b6 All Types","title":"misk-grpc-tests"},{"location":"0.x/misk-grpc-tests/index.html#packages","text":"Name Summary misk.grpc.miskclient misk.grpc.miskserver misk.grpc.protocclient misk.grpc.protocserver routeguide","title":"Packages"},{"location":"0.x/misk-grpc-tests/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-grpc-tests/alltypes/index.html","text":"All Types \u00b6 Name Summary routeguide.Feature A feature names something at a given point. routeguide.FeatureDatabase Not used in the RPC. Instead, this is here for the form serialized to disk. misk.grpc.miskserver.GetFeatureGrpcAction misk.grpc.protocclient.GrpcChannelFactory routeguide.GrpcRouteGuideClient Interface exported by the server. misk.grpc.miskclient.MiskGrpcClientModule routeguide.Point Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive). misk.grpc.protocclient.ProtocGrpcClientModule misk.grpc.protocserver.ProtocGrpcService Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability. routeguide.Rectangle A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d. misk.grpc.miskserver.RouteChatGrpcAction misk.grpc.miskclient.RouteGuideCallCounter Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls. routeguide.RouteGuideClient Interface exported by the server. routeguide.RouteGuideGetFeatureBlockingServer Interface exported by the server. routeguide.RouteGuideGrpc ``` Interface exported by the server. ``` | | routeguide.RouteGuideListFeaturesBlockingServer | Interface exported by the server. | | misk.grpc.miskserver.RouteGuideMiskServiceModule | A module that runs a Misk gRPC server: Wire protos and a Jetty backend. | | routeguide.RouteGuideProto | | | misk.grpc.protocserver.RouteGuideProtocServiceModule | A module that runs a standard gRPC server: generated protoc protos and a Netty backend. | | routeguide.RouteGuideRecordRouteBlockingServer | Interface exported by the server. | | routeguide.RouteGuideRouteChatBlockingServer | Interface exported by the server. | | routeguide.RouteNote | A RouteNote is a message sent while at a given point. | | routeguide.RouteSummary | A RouteSummary is received in response to a RecordRoute rpc. |","title":"All Types - Misk"},{"location":"0.x/misk-grpc-tests/alltypes/index.html#all-types","text":"Name Summary routeguide.Feature A feature names something at a given point. routeguide.FeatureDatabase Not used in the RPC. Instead, this is here for the form serialized to disk. misk.grpc.miskserver.GetFeatureGrpcAction misk.grpc.protocclient.GrpcChannelFactory routeguide.GrpcRouteGuideClient Interface exported by the server. misk.grpc.miskclient.MiskGrpcClientModule routeguide.Point Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive). misk.grpc.protocclient.ProtocGrpcClientModule misk.grpc.protocserver.ProtocGrpcService Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability. routeguide.Rectangle A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d. misk.grpc.miskserver.RouteChatGrpcAction misk.grpc.miskclient.RouteGuideCallCounter Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls. routeguide.RouteGuideClient Interface exported by the server. routeguide.RouteGuideGetFeatureBlockingServer Interface exported by the server. routeguide.RouteGuideGrpc ``` Interface exported by the server. ``` | | routeguide.RouteGuideListFeaturesBlockingServer | Interface exported by the server. | | misk.grpc.miskserver.RouteGuideMiskServiceModule | A module that runs a Misk gRPC server: Wire protos and a Jetty backend. | | routeguide.RouteGuideProto | | | misk.grpc.protocserver.RouteGuideProtocServiceModule | A module that runs a standard gRPC server: generated protoc protos and a Netty backend. | | routeguide.RouteGuideRecordRouteBlockingServer | Interface exported by the server. | | routeguide.RouteGuideRouteChatBlockingServer | Interface exported by the server. | | routeguide.RouteNote | A RouteNote is a message sent while at a given point. | | routeguide.RouteSummary | A RouteSummary is received in response to a RecordRoute rpc. |","title":"All Types"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/index.html","text":"misk-grpc-tests / misk.grpc.miskclient Package misk.grpc.miskclient \u00b6 Types \u00b6 Name Summary MiskGrpcClientModule class MiskGrpcClientModule : KAbstractModule RouteGuideCallCounter class RouteGuideCallCounter : Factory Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls.","title":"Package misk.grpc.miskclient - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/index.html#package-miskgrpcmiskclient","text":"","title":"Package misk.grpc.miskclient"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/index.html#types","text":"Name Summary MiskGrpcClientModule class MiskGrpcClientModule : KAbstractModule RouteGuideCallCounter class RouteGuideCallCounter : Factory Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls.","title":"Types"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/index.html","text":"misk-grpc-tests / misk.grpc.miskclient / MiskGrpcClientModule MiskGrpcClientModule \u00b6 class MiskGrpcClientModule : KAbstractModule Constructors \u00b6 Name Summary <init> MiskGrpcClientModule(url: HttpUrl) Properties \u00b6 Name Summary url val url: HttpUrl Functions \u00b6 Name Summary configure fun configure(): Unit provideHttpClientsConfig fun provideHttpClientsConfig(): HttpClientsConfig","title":"MiskGrpcClientModule - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/index.html#miskgrpcclientmodule","text":"class MiskGrpcClientModule : KAbstractModule","title":"MiskGrpcClientModule"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/index.html#constructors","text":"Name Summary <init> MiskGrpcClientModule(url: HttpUrl)","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/index.html#properties","text":"Name Summary url val url: HttpUrl","title":"Properties"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideHttpClientsConfig fun provideHttpClientsConfig(): HttpClientsConfig","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/-init-.html","text":"misk-grpc-tests / misk.grpc.miskclient / MiskGrpcClientModule / <init> <init> \u00b6 MiskGrpcClientModule(url: HttpUrl)","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/-init-.html#init","text":"MiskGrpcClientModule(url: HttpUrl)","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/configure.html","text":"misk-grpc-tests / misk.grpc.miskclient / MiskGrpcClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/provide-http-clients-config.html","text":"misk-grpc-tests / misk.grpc.miskclient / MiskGrpcClientModule / provideHttpClientsConfig provideHttpClientsConfig \u00b6 @Provides @Singleton fun provideHttpClientsConfig(): HttpClientsConfig","title":"provideHttpClientsConfig - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/provide-http-clients-config.html#providehttpclientsconfig","text":"@Provides @Singleton fun provideHttpClientsConfig(): HttpClientsConfig","title":"provideHttpClientsConfig"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/url.html","text":"misk-grpc-tests / misk.grpc.miskclient / MiskGrpcClientModule / url url \u00b6 val url: HttpUrl","title":"url - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-misk-grpc-client-module/url.html#url","text":"val url: HttpUrl","title":"url"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/index.html","text":"misk-grpc-tests / misk.grpc.miskclient / RouteGuideCallCounter RouteGuideCallCounter \u00b6 @Singleton class RouteGuideCallCounter : Factory Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls. Constructors \u00b6 Name Summary <init> RouteGuideCallCounter() Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls. Properties \u00b6 Name Summary actionNameToCount val actionNameToCount: MutableMap < String !, AtomicInteger !>! Functions \u00b6 Name Summary counter fun counter(name: String ): AtomicInteger create fun create(action: ClientAction): ClientNetworkInterceptor?","title":"RouteGuideCallCounter - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/index.html#routeguidecallcounter","text":"@Singleton class RouteGuideCallCounter : Factory Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls.","title":"RouteGuideCallCounter"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/index.html#constructors","text":"Name Summary <init> RouteGuideCallCounter() Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/index.html#properties","text":"Name Summary actionNameToCount val actionNameToCount: MutableMap < String !, AtomicInteger !>!","title":"Properties"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/index.html#functions","text":"Name Summary counter fun counter(name: String ): AtomicInteger create fun create(action: ClientAction): ClientNetworkInterceptor?","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/-init-.html","text":"misk-grpc-tests / misk.grpc.miskclient / RouteGuideCallCounter / <init> <init> \u00b6 RouteGuideCallCounter() Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls.","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/-init-.html#init","text":"RouteGuideCallCounter() Sample network interceptor to confirm they\u2019re executed for outbound gRPC calls.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/action-name-to-count.html","text":"misk-grpc-tests / misk.grpc.miskclient / RouteGuideCallCounter / actionNameToCount actionNameToCount \u00b6 val actionNameToCount: MutableMap < String !, AtomicInteger !>!","title":"actionNameToCount - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/action-name-to-count.html#actionnametocount","text":"val actionNameToCount: MutableMap < String !, AtomicInteger !>!","title":"actionNameToCount"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/counter.html","text":"misk-grpc-tests / misk.grpc.miskclient / RouteGuideCallCounter / counter counter \u00b6 fun counter(name: String ): AtomicInteger","title":"counter - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/counter.html#counter","text":"fun counter(name: String ): AtomicInteger","title":"counter"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/create.html","text":"misk-grpc-tests / misk.grpc.miskclient / RouteGuideCallCounter / create create \u00b6 fun create(action: ClientAction): ClientNetworkInterceptor?","title":"create - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskclient/-route-guide-call-counter/create.html#create","text":"fun create(action: ClientAction): ClientNetworkInterceptor?","title":"create"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/index.html","text":"misk-grpc-tests / misk.grpc.miskserver Package misk.grpc.miskserver \u00b6 Types \u00b6 Name Summary GetFeatureGrpcAction class GetFeatureGrpcAction : WebAction, RouteGuideGetFeatureBlockingServer RouteChatGrpcAction class RouteChatGrpcAction : WebAction, RouteGuideRouteChatBlockingServer RouteGuideMiskServiceModule class RouteGuideMiskServiceModule : KAbstractModule A module that runs a Misk gRPC server: Wire protos and a Jetty backend.","title":"Package misk.grpc.miskserver - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/index.html#package-miskgrpcmiskserver","text":"","title":"Package misk.grpc.miskserver"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/index.html#types","text":"Name Summary GetFeatureGrpcAction class GetFeatureGrpcAction : WebAction, RouteGuideGetFeatureBlockingServer RouteChatGrpcAction class RouteChatGrpcAction : WebAction, RouteGuideRouteChatBlockingServer RouteGuideMiskServiceModule class RouteGuideMiskServiceModule : KAbstractModule A module that runs a Misk gRPC server: Wire protos and a Jetty backend.","title":"Types"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/index.html","text":"misk-grpc-tests / misk.grpc.miskserver / GetFeatureGrpcAction GetFeatureGrpcAction \u00b6 class GetFeatureGrpcAction : WebAction, RouteGuideGetFeatureBlockingServer Constructors \u00b6 Name Summary <init> GetFeatureGrpcAction() Functions \u00b6 Name Summary GetFeature fun GetFeature(request: Point ): Feature A simple RPC.","title":"GetFeatureGrpcAction - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/index.html#getfeaturegrpcaction","text":"class GetFeatureGrpcAction : WebAction, RouteGuideGetFeatureBlockingServer","title":"GetFeatureGrpcAction"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/index.html#constructors","text":"Name Summary <init> GetFeatureGrpcAction()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/index.html#functions","text":"Name Summary GetFeature fun GetFeature(request: Point ): Feature A simple RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-get-feature.html","text":"misk-grpc-tests / misk.grpc.miskserver / GetFeatureGrpcAction / GetFeature GetFeature \u00b6 fun GetFeature(request: Point ): Feature Overrides RouteGuideGetFeatureBlockingServer.GetFeature A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-get-feature.html#getfeature","text":"fun GetFeature(request: Point ): Feature Overrides RouteGuideGetFeatureBlockingServer.GetFeature A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-init-.html","text":"misk-grpc-tests / misk.grpc.miskserver / GetFeatureGrpcAction / <init> <init> \u00b6 GetFeatureGrpcAction()","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-get-feature-grpc-action/-init-.html#init","text":"GetFeatureGrpcAction()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/index.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteChatGrpcAction RouteChatGrpcAction \u00b6 @Singleton class RouteChatGrpcAction : WebAction, RouteGuideRouteChatBlockingServer Constructors \u00b6 Name Summary <init> RouteChatGrpcAction() Properties \u00b6 Name Summary welcomeMessage var welcomeMessage: String ? Functions \u00b6 Name Summary RouteChat fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit A Bidirectional streaming RPC.","title":"RouteChatGrpcAction - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/index.html#routechatgrpcaction","text":"@Singleton class RouteChatGrpcAction : WebAction, RouteGuideRouteChatBlockingServer","title":"RouteChatGrpcAction"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/index.html#constructors","text":"Name Summary <init> RouteChatGrpcAction()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/index.html#properties","text":"Name Summary welcomeMessage var welcomeMessage: String ?","title":"Properties"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/index.html#functions","text":"Name Summary RouteChat fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit A Bidirectional streaming RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-init-.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteChatGrpcAction / <init> <init> \u00b6 RouteChatGrpcAction()","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-init-.html#init","text":"RouteChatGrpcAction()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-route-chat.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteChatGrpcAction / RouteChat RouteChat \u00b6 fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit Overrides RouteGuideRouteChatBlockingServer.RouteChat A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/-route-chat.html#routechat","text":"fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit Overrides RouteGuideRouteChatBlockingServer.RouteChat A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/welcome-message.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteChatGrpcAction / welcomeMessage welcomeMessage \u00b6 var welcomeMessage: String ?","title":"welcomeMessage - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-chat-grpc-action/welcome-message.html#welcomemessage","text":"var welcomeMessage: String ?","title":"welcomeMessage"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/index.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteGuideMiskServiceModule RouteGuideMiskServiceModule \u00b6 class RouteGuideMiskServiceModule : KAbstractModule A module that runs a Misk gRPC server: Wire protos and a Jetty backend. Constructors \u00b6 Name Summary <init> RouteGuideMiskServiceModule() A module that runs a Misk gRPC server: Wire protos and a Jetty backend. Functions \u00b6 Name Summary configure fun configure(): Unit provideServerUrl fun provideServerUrl(jetty: JettyService): HttpUrl","title":"RouteGuideMiskServiceModule - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/index.html#routeguidemiskservicemodule","text":"class RouteGuideMiskServiceModule : KAbstractModule A module that runs a Misk gRPC server: Wire protos and a Jetty backend.","title":"RouteGuideMiskServiceModule"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/index.html#constructors","text":"Name Summary <init> RouteGuideMiskServiceModule() A module that runs a Misk gRPC server: Wire protos and a Jetty backend.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideServerUrl fun provideServerUrl(jetty: JettyService): HttpUrl","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/-init-.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteGuideMiskServiceModule / <init> <init> \u00b6 RouteGuideMiskServiceModule() A module that runs a Misk gRPC server: Wire protos and a Jetty backend.","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/-init-.html#init","text":"RouteGuideMiskServiceModule() A module that runs a Misk gRPC server: Wire protos and a Jetty backend.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/configure.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteGuideMiskServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/provide-server-url.html","text":"misk-grpc-tests / misk.grpc.miskserver / RouteGuideMiskServiceModule / provideServerUrl provideServerUrl \u00b6 @Provides @Named(\"grpc server\") fun provideServerUrl(jetty: JettyService): HttpUrl","title":"provideServerUrl - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.miskserver/-route-guide-misk-service-module/provide-server-url.html#provideserverurl","text":"@Provides @Named(\"grpc server\") fun provideServerUrl(jetty: JettyService): HttpUrl","title":"provideServerUrl"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/index.html","text":"misk-grpc-tests / misk.grpc.protocclient Package misk.grpc.protocclient \u00b6 Types \u00b6 Name Summary GrpcChannelFactory class GrpcChannelFactory ProtocGrpcClientModule class ProtocGrpcClientModule : KAbstractModule","title":"Package misk.grpc.protocclient - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/index.html#package-miskgrpcprotocclient","text":"","title":"Package misk.grpc.protocclient"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/index.html#types","text":"Name Summary GrpcChannelFactory class GrpcChannelFactory ProtocGrpcClientModule class ProtocGrpcClientModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/index.html","text":"misk-grpc-tests / misk.grpc.protocclient / GrpcChannelFactory GrpcChannelFactory \u00b6 @Singleton class GrpcChannelFactory Constructors \u00b6 Name Summary <init> GrpcChannelFactory(resourceLoader: ResourceLoader) Properties \u00b6 Name Summary resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary createClientChannel fun createClientChannel(serverAddress: SocketAddress , serverCertResource: String = \"classpath:/ssl/server_cert.pem\"): ManagedChannel","title":"GrpcChannelFactory - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/index.html#grpcchannelfactory","text":"@Singleton class GrpcChannelFactory","title":"GrpcChannelFactory"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/index.html#constructors","text":"Name Summary <init> GrpcChannelFactory(resourceLoader: ResourceLoader)","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/index.html#properties","text":"Name Summary resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/index.html#functions","text":"Name Summary createClientChannel fun createClientChannel(serverAddress: SocketAddress , serverCertResource: String = \"classpath:/ssl/server_cert.pem\"): ManagedChannel","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/-init-.html","text":"misk-grpc-tests / misk.grpc.protocclient / GrpcChannelFactory / <init> <init> \u00b6 GrpcChannelFactory(resourceLoader: ResourceLoader)","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/-init-.html#init","text":"GrpcChannelFactory(resourceLoader: ResourceLoader)","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/create-client-channel.html","text":"misk-grpc-tests / misk.grpc.protocclient / GrpcChannelFactory / createClientChannel createClientChannel \u00b6 fun createClientChannel(serverAddress: SocketAddress , serverCertResource: String = \"classpath:/ssl/server_cert.pem\"): ManagedChannel","title":"createClientChannel - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/create-client-channel.html#createclientchannel","text":"fun createClientChannel(serverAddress: SocketAddress , serverCertResource: String = \"classpath:/ssl/server_cert.pem\"): ManagedChannel","title":"createClientChannel"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/resource-loader.html","text":"misk-grpc-tests / misk.grpc.protocclient / GrpcChannelFactory / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-grpc-channel-factory/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/index.html","text":"misk-grpc-tests / misk.grpc.protocclient / ProtocGrpcClientModule ProtocGrpcClientModule \u00b6 class ProtocGrpcClientModule : KAbstractModule Constructors \u00b6 Name Summary <init> ProtocGrpcClientModule() Functions \u00b6 Name Summary configure fun configure(): Unit provideChannel fun provideChannel(url: HttpUrl, grpcChannelFactory: GrpcChannelFactory ): ManagedChannel","title":"ProtocGrpcClientModule - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/index.html#protocgrpcclientmodule","text":"class ProtocGrpcClientModule : KAbstractModule","title":"ProtocGrpcClientModule"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/index.html#constructors","text":"Name Summary <init> ProtocGrpcClientModule()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideChannel fun provideChannel(url: HttpUrl, grpcChannelFactory: GrpcChannelFactory ): ManagedChannel","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/-init-.html","text":"misk-grpc-tests / misk.grpc.protocclient / ProtocGrpcClientModule / <init> <init> \u00b6 ProtocGrpcClientModule()","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/-init-.html#init","text":"ProtocGrpcClientModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/configure.html","text":"misk-grpc-tests / misk.grpc.protocclient / ProtocGrpcClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/provide-channel.html","text":"misk-grpc-tests / misk.grpc.protocclient / ProtocGrpcClientModule / provideChannel provideChannel \u00b6 @Provides @Singleton fun provideChannel(@Named(\"grpc server\") url: HttpUrl, grpcChannelFactory: GrpcChannelFactory ): ManagedChannel","title":"provideChannel - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocclient/-protoc-grpc-client-module/provide-channel.html#providechannel","text":"@Provides @Singleton fun provideChannel(@Named(\"grpc server\") url: HttpUrl, grpcChannelFactory: GrpcChannelFactory ): ManagedChannel","title":"provideChannel"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/index.html","text":"misk-grpc-tests / misk.grpc.protocserver Package misk.grpc.protocserver \u00b6 Types \u00b6 Name Summary ProtocGrpcService class ProtocGrpcService : AbstractIdleService Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability. RouteGuideProtocServiceModule class RouteGuideProtocServiceModule : KAbstractModule A module that runs a standard gRPC server: generated protoc protos and a Netty backend.","title":"Package misk.grpc.protocserver - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/index.html#package-miskgrpcprotocserver","text":"","title":"Package misk.grpc.protocserver"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/index.html#types","text":"Name Summary ProtocGrpcService class ProtocGrpcService : AbstractIdleService Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability. RouteGuideProtocServiceModule class RouteGuideProtocServiceModule : KAbstractModule A module that runs a standard gRPC server: generated protoc protos and a Netty backend.","title":"Types"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/index.html","text":"misk-grpc-tests / misk.grpc.protocserver / ProtocGrpcService ProtocGrpcService \u00b6 @Singleton class ProtocGrpcService : AbstractIdleService Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability. Constructors \u00b6 Name Summary <init> ProtocGrpcService(services: List <BindableService>, resourceLoader: ResourceLoader) Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability. Properties \u00b6 Name Summary server lateinit var server: Server url val url: HttpUrl Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"ProtocGrpcService - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/index.html#protocgrpcservice","text":"@Singleton class ProtocGrpcService : AbstractIdleService Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability.","title":"ProtocGrpcService"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/index.html#constructors","text":"Name Summary <init> ProtocGrpcService(services: List <BindableService>, resourceLoader: ResourceLoader) Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/index.html#properties","text":"Name Summary server lateinit var server: Server url val url: HttpUrl","title":"Properties"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/-init-.html","text":"misk-grpc-tests / misk.grpc.protocserver / ProtocGrpcService / <init> <init> \u00b6 ProtocGrpcService(services: List <BindableService>, resourceLoader: ResourceLoader) Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability.","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/-init-.html#init","text":"ProtocGrpcService(services: List <BindableService>, resourceLoader: ResourceLoader) Runs a standard gRPC server: generated protoc protos and a Netty backend. This isn\u2019t how Misk does gRPC, but it should be useful to confirm interoperability.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/server.html","text":"misk-grpc-tests / misk.grpc.protocserver / ProtocGrpcService / server server \u00b6 lateinit var server: Server","title":"server - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/server.html#server","text":"lateinit var server: Server","title":"server"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/shut-down.html","text":"misk-grpc-tests / misk.grpc.protocserver / ProtocGrpcService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/start-up.html","text":"misk-grpc-tests / misk.grpc.protocserver / ProtocGrpcService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/url.html","text":"misk-grpc-tests / misk.grpc.protocserver / ProtocGrpcService / url url \u00b6 val url: HttpUrl","title":"url - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-protoc-grpc-service/url.html#url","text":"val url: HttpUrl","title":"url"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/index.html","text":"misk-grpc-tests / misk.grpc.protocserver / RouteGuideProtocServiceModule RouteGuideProtocServiceModule \u00b6 class RouteGuideProtocServiceModule : KAbstractModule A module that runs a standard gRPC server: generated protoc protos and a Netty backend. Constructors \u00b6 Name Summary <init> RouteGuideProtocServiceModule() A module that runs a standard gRPC server: generated protoc protos and a Netty backend. Functions \u00b6 Name Summary configure fun configure(): Unit provideServerUrl fun provideServerUrl(protocGrpcService: ProtocGrpcService ): HttpUrl","title":"RouteGuideProtocServiceModule - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/index.html#routeguideprotocservicemodule","text":"class RouteGuideProtocServiceModule : KAbstractModule A module that runs a standard gRPC server: generated protoc protos and a Netty backend.","title":"RouteGuideProtocServiceModule"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/index.html#constructors","text":"Name Summary <init> RouteGuideProtocServiceModule() A module that runs a standard gRPC server: generated protoc protos and a Netty backend.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideServerUrl fun provideServerUrl(protocGrpcService: ProtocGrpcService ): HttpUrl","title":"Functions"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/-init-.html","text":"misk-grpc-tests / misk.grpc.protocserver / RouteGuideProtocServiceModule / <init> <init> \u00b6 RouteGuideProtocServiceModule() A module that runs a standard gRPC server: generated protoc protos and a Netty backend.","title":" init "},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/-init-.html#init","text":"RouteGuideProtocServiceModule() A module that runs a standard gRPC server: generated protoc protos and a Netty backend.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/configure.html","text":"misk-grpc-tests / misk.grpc.protocserver / RouteGuideProtocServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/provide-server-url.html","text":"misk-grpc-tests / misk.grpc.protocserver / RouteGuideProtocServiceModule / provideServerUrl provideServerUrl \u00b6 @Provides @Named(\"grpc server\") fun provideServerUrl(protocGrpcService: ProtocGrpcService ): HttpUrl","title":"provideServerUrl - Misk"},{"location":"0.x/misk-grpc-tests/misk.grpc.protocserver/-route-guide-protoc-service-module/provide-server-url.html#provideserverurl","text":"@Provides @Named(\"grpc server\") fun provideServerUrl(protocGrpcService: ProtocGrpcService ): HttpUrl","title":"provideServerUrl"},{"location":"0.x/misk-grpc-tests/routeguide/index.html","text":"misk-grpc-tests / routeguide Package routeguide \u00b6 Types \u00b6 Name Summary Feature class Feature : Message< Feature , Feature.Builder > A feature names something at a given point. FeatureDatabase class FeatureDatabase : Message< FeatureDatabase , FeatureDatabase.Builder > Not used in the RPC. Instead, this is here for the form serialized to disk. GrpcRouteGuideClient class GrpcRouteGuideClient : RouteGuideClient Interface exported by the server. Point class Point : Message< Point , Point.Builder > Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive). Rectangle class Rectangle : Message< Rectangle , Rectangle.Builder > A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d. RouteGuideClient interface RouteGuideClient : Service Interface exported by the server. RouteGuideGetFeatureBlockingServer interface RouteGuideGetFeatureBlockingServer : Service Interface exported by the server. RouteGuideGrpc class RouteGuideGrpc ``` Interface exported by the server. `` <br> | | [RouteGuideListFeaturesBlockingServer](-route-guide-list-features-blocking-server/index.md) | interface RouteGuideListFeaturesBlockingServer : Service <br>Interface exported by the server. | | [RouteGuideProto](-route-guide-proto/index.md) | class RouteGuideProto | | [RouteGuideRecordRouteBlockingServer](-route-guide-record-route-blocking-server/index.md) | interface RouteGuideRecordRouteBlockingServer : Service <br>Interface exported by the server. | | [RouteGuideRouteChatBlockingServer](-route-guide-route-chat-blocking-server/index.md) | interface RouteGuideRouteChatBlockingServer : Service <br>Interface exported by the server. | | [RouteNote](-route-note/index.md) | class RouteNote : Message< [ RouteNote ](-route-note/index.md) , [ RouteNote.Builder ](-route-note/-builder/index.md) > <br>A RouteNote is a message sent while at a given point. | | [RouteSummary](-route-summary/index.md) | class RouteSummary : Message< [ RouteSummary ](-route-summary/index.md) , [ RouteSummary.Builder ](-route-summary/-builder/index.md) >` A RouteSummary is received in response to a RecordRoute rpc. |","title":"Package routeguide - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/index.html#package-routeguide","text":"","title":"Package routeguide"},{"location":"0.x/misk-grpc-tests/routeguide/index.html#types","text":"Name Summary Feature class Feature : Message< Feature , Feature.Builder > A feature names something at a given point. FeatureDatabase class FeatureDatabase : Message< FeatureDatabase , FeatureDatabase.Builder > Not used in the RPC. Instead, this is here for the form serialized to disk. GrpcRouteGuideClient class GrpcRouteGuideClient : RouteGuideClient Interface exported by the server. Point class Point : Message< Point , Point.Builder > Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive). Rectangle class Rectangle : Message< Rectangle , Rectangle.Builder > A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d. RouteGuideClient interface RouteGuideClient : Service Interface exported by the server. RouteGuideGetFeatureBlockingServer interface RouteGuideGetFeatureBlockingServer : Service Interface exported by the server. RouteGuideGrpc class RouteGuideGrpc ``` Interface exported by the server. `` <br> | | [RouteGuideListFeaturesBlockingServer](-route-guide-list-features-blocking-server/index.md) | interface RouteGuideListFeaturesBlockingServer : Service <br>Interface exported by the server. | | [RouteGuideProto](-route-guide-proto/index.md) | class RouteGuideProto | | [RouteGuideRecordRouteBlockingServer](-route-guide-record-route-blocking-server/index.md) | interface RouteGuideRecordRouteBlockingServer : Service <br>Interface exported by the server. | | [RouteGuideRouteChatBlockingServer](-route-guide-route-chat-blocking-server/index.md) | interface RouteGuideRouteChatBlockingServer : Service <br>Interface exported by the server. | | [RouteNote](-route-note/index.md) | class RouteNote : Message< [ RouteNote ](-route-note/index.md) , [ RouteNote.Builder ](-route-note/-builder/index.md) > <br>A RouteNote is a message sent while at a given point. | | [RouteSummary](-route-summary/index.md) | class RouteSummary : Message< [ RouteSummary ](-route-summary/index.md) , [ RouteSummary.Builder ](-route-summary/-builder/index.md) >` A RouteSummary is received in response to a RecordRoute rpc. |","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/index.html","text":"misk-grpc-tests / routeguide / Feature Feature \u00b6 class Feature : Message< Feature , Feature.Builder > A feature names something at a given point. If a feature could not be named, the name is empty. Types \u00b6 Name Summary Builder class Builder : Builder< Feature , Feature.Builder > Constructors \u00b6 Name Summary <init> Feature(name: String ? = null, location: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A feature names something at a given point. Properties \u00b6 Name Summary location val location: Point ? The point where the feature is detected. name val name: String ? The name of the feature. Functions \u00b6 Name Summary copy fun copy(name: String ? = this.name, location: Point ? = this.location, unknownFields: ByteString = this.unknownFields): Feature equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Feature.Builder toString fun toString(): String Companion Object Properties \u00b6 Name Summary ADAPTER val ADAPTER: ProtoAdapter< Feature >","title":"Feature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/index.html#feature","text":"class Feature : Message< Feature , Feature.Builder > A feature names something at a given point. If a feature could not be named, the name is empty.","title":"Feature"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/index.html#types","text":"Name Summary Builder class Builder : Builder< Feature , Feature.Builder >","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/index.html#constructors","text":"Name Summary <init> Feature(name: String ? = null, location: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A feature names something at a given point.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/index.html#properties","text":"Name Summary location val location: Point ? The point where the feature is detected. name val name: String ? The name of the feature.","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/index.html#functions","text":"Name Summary copy fun copy(name: String ? = this.name, location: Point ? = this.location, unknownFields: ByteString = this.unknownFields): Feature equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Feature.Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/index.html#companion-object-properties","text":"Name Summary ADAPTER val ADAPTER: ProtoAdapter< Feature >","title":"Companion Object Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-a-d-a-p-t-e-r.html","text":"misk-grpc-tests / routeguide / Feature / ADAPTER ADAPTER \u00b6 val ADAPTER: ProtoAdapter< Feature >","title":"ADAPTER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-a-d-a-p-t-e-r.html#adapter","text":"val ADAPTER: ProtoAdapter< Feature >","title":"ADAPTER"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-init-.html","text":"misk-grpc-tests / routeguide / Feature / <init> <init> \u00b6 Feature(name: String ? = null, location: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A feature names something at a given point. If a feature could not be named, the name is empty.","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-init-.html#init","text":"Feature(name: String ? = null, location: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A feature names something at a given point. If a feature could not be named, the name is empty.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/copy.html","text":"misk-grpc-tests / routeguide / Feature / copy copy \u00b6 fun copy(name: String ? = this.name, location: Point ? = this.location, unknownFields: ByteString = this.unknownFields): Feature","title":"copy - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/copy.html#copy","text":"fun copy(name: String ? = this.name, location: Point ? = this.location, unknownFields: ByteString = this.unknownFields): Feature","title":"copy"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/equals.html","text":"misk-grpc-tests / routeguide / Feature / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/hash-code.html","text":"misk-grpc-tests / routeguide / Feature / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/location.html","text":"misk-grpc-tests / routeguide / Feature / location location \u00b6 val location: Point ? The point where the feature is detected.","title":"location - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/location.html#location","text":"val location: Point ? The point where the feature is detected.","title":"location"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/name.html","text":"misk-grpc-tests / routeguide / Feature / name name \u00b6 val name: String ? The name of the feature.","title":"name - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/name.html#name","text":"val name: String ? The name of the feature.","title":"name"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/new-builder.html","text":"misk-grpc-tests / routeguide / Feature / newBuilder newBuilder \u00b6 fun newBuilder(): Feature.Builder","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/new-builder.html#newbuilder","text":"fun newBuilder(): Feature.Builder","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/to-string.html","text":"misk-grpc-tests / routeguide / Feature / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/index.html","text":"misk-grpc-tests / routeguide / Feature / Builder Builder \u00b6 class Builder : Builder< Feature , Feature.Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary location var location: Point ? name var name: String ? Functions \u00b6 Name Summary build fun build(): Feature location fun location(location: Point ?): Feature.Builder The point where the feature is detected. name fun name(name: String ?): Feature.Builder The name of the feature.","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/index.html#builder","text":"class Builder : Builder< Feature , Feature.Builder >","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/index.html#properties","text":"Name Summary location var location: Point ? name var name: String ?","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/index.html#functions","text":"Name Summary build fun build(): Feature location fun location(location: Point ?): Feature.Builder The point where the feature is detected. name fun name(name: String ?): Feature.Builder The name of the feature.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/-init-.html","text":"misk-grpc-tests / routeguide / Feature / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/build.html","text":"misk-grpc-tests / routeguide / Feature / Builder / build build \u00b6 fun build(): Feature","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/build.html#build","text":"fun build(): Feature","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/location.html","text":"misk-grpc-tests / routeguide / Feature / Builder / location location \u00b6 var location: Point ?``fun location(location: Point ?): Feature.Builder The point where the feature is detected.","title":"location - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/location.html#location","text":"var location: Point ?``fun location(location: Point ?): Feature.Builder The point where the feature is detected.","title":"location"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/name.html","text":"misk-grpc-tests / routeguide / Feature / Builder / name name \u00b6 var name: String ?``fun name(name: String ?): Feature.Builder The name of the feature.","title":"name - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature/-builder/name.html#name","text":"var name: String ?``fun name(name: String ?): Feature.Builder The name of the feature.","title":"name"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/index.html","text":"misk-grpc-tests / routeguide / FeatureDatabase FeatureDatabase \u00b6 class FeatureDatabase : Message< FeatureDatabase , FeatureDatabase.Builder > Not used in the RPC. Instead, this is here for the form serialized to disk. Types \u00b6 Name Summary Builder class Builder : Builder< FeatureDatabase , FeatureDatabase.Builder > Constructors \u00b6 Name Summary <init> FeatureDatabase(feature: List < Feature > = emptyList(), unknownFields: ByteString = ByteString.EMPTY) Not used in the RPC. Instead, this is here for the form serialized to disk. Properties \u00b6 Name Summary feature val feature: List < Feature > Functions \u00b6 Name Summary copy fun copy(feature: List < Feature > = this.feature, unknownFields: ByteString = this.unknownFields): FeatureDatabase equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): FeatureDatabase.Builder toString fun toString(): String Companion Object Properties \u00b6 Name Summary ADAPTER val ADAPTER: ProtoAdapter< FeatureDatabase >","title":"FeatureDatabase - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/index.html#featuredatabase","text":"class FeatureDatabase : Message< FeatureDatabase , FeatureDatabase.Builder > Not used in the RPC. Instead, this is here for the form serialized to disk.","title":"FeatureDatabase"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/index.html#types","text":"Name Summary Builder class Builder : Builder< FeatureDatabase , FeatureDatabase.Builder >","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/index.html#constructors","text":"Name Summary <init> FeatureDatabase(feature: List < Feature > = emptyList(), unknownFields: ByteString = ByteString.EMPTY) Not used in the RPC. Instead, this is here for the form serialized to disk.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/index.html#properties","text":"Name Summary feature val feature: List < Feature >","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/index.html#functions","text":"Name Summary copy fun copy(feature: List < Feature > = this.feature, unknownFields: ByteString = this.unknownFields): FeatureDatabase equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): FeatureDatabase.Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/index.html#companion-object-properties","text":"Name Summary ADAPTER val ADAPTER: ProtoAdapter< FeatureDatabase >","title":"Companion Object Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-a-d-a-p-t-e-r.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / ADAPTER ADAPTER \u00b6 val ADAPTER: ProtoAdapter< FeatureDatabase >","title":"ADAPTER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-a-d-a-p-t-e-r.html#adapter","text":"val ADAPTER: ProtoAdapter< FeatureDatabase >","title":"ADAPTER"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-init-.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / <init> <init> \u00b6 FeatureDatabase(feature: List < Feature > = emptyList(), unknownFields: ByteString = ByteString.EMPTY) Not used in the RPC. Instead, this is here for the form serialized to disk.","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-init-.html#init","text":"FeatureDatabase(feature: List < Feature > = emptyList(), unknownFields: ByteString = ByteString.EMPTY) Not used in the RPC. Instead, this is here for the form serialized to disk.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/copy.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / copy copy \u00b6 fun copy(feature: List < Feature > = this.feature, unknownFields: ByteString = this.unknownFields): FeatureDatabase","title":"copy - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/copy.html#copy","text":"fun copy(feature: List < Feature > = this.feature, unknownFields: ByteString = this.unknownFields): FeatureDatabase","title":"copy"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/equals.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/feature.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / feature feature \u00b6 val feature: List < Feature >","title":"feature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/feature.html#feature","text":"val feature: List < Feature >","title":"feature"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/hash-code.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/new-builder.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / newBuilder newBuilder \u00b6 fun newBuilder(): FeatureDatabase.Builder","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/new-builder.html#newbuilder","text":"fun newBuilder(): FeatureDatabase.Builder","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/to-string.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/index.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / Builder Builder \u00b6 class Builder : Builder< FeatureDatabase , FeatureDatabase.Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary feature var feature: List < Feature > Functions \u00b6 Name Summary build fun build(): FeatureDatabase feature fun feature(feature: List < Feature >): FeatureDatabase.Builder","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/index.html#builder","text":"class Builder : Builder< FeatureDatabase , FeatureDatabase.Builder >","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/index.html#properties","text":"Name Summary feature var feature: List < Feature >","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/index.html#functions","text":"Name Summary build fun build(): FeatureDatabase feature fun feature(feature: List < Feature >): FeatureDatabase.Builder","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/-init-.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/build.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / Builder / build build \u00b6 fun build(): FeatureDatabase","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/build.html#build","text":"fun build(): FeatureDatabase","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/feature.html","text":"misk-grpc-tests / routeguide / FeatureDatabase / Builder / feature feature \u00b6 var feature: List < Feature > fun feature(feature: List < Feature >): FeatureDatabase.Builder","title":"feature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-feature-database/-builder/feature.html#feature","text":"var feature: List < Feature > fun feature(feature: List < Feature >): FeatureDatabase.Builder","title":"feature"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/index.html","text":"misk-grpc-tests / routeguide / GrpcRouteGuideClient GrpcRouteGuideClient \u00b6 class GrpcRouteGuideClient : RouteGuideClient Interface exported by the server. Constructors \u00b6 Name Summary <init> GrpcRouteGuideClient(client: GrpcClient) Interface exported by the server. Functions \u00b6 Name Summary GetFeature fun GetFeature(): GrpcCall< Point , Feature > A simple RPC. ListFeatures fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > A server-to-client streaming RPC. RecordRoute fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > A client-to-server streaming RPC. RouteChat fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > A Bidirectional streaming RPC.","title":"GrpcRouteGuideClient - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/index.html#grpcrouteguideclient","text":"class GrpcRouteGuideClient : RouteGuideClient Interface exported by the server.","title":"GrpcRouteGuideClient"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/index.html#constructors","text":"Name Summary <init> GrpcRouteGuideClient(client: GrpcClient) Interface exported by the server.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/index.html#functions","text":"Name Summary GetFeature fun GetFeature(): GrpcCall< Point , Feature > A simple RPC. ListFeatures fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > A server-to-client streaming RPC. RecordRoute fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > A client-to-server streaming RPC. RouteChat fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > A Bidirectional streaming RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-get-feature.html","text":"misk-grpc-tests / routeguide / GrpcRouteGuideClient / GetFeature GetFeature \u00b6 fun GetFeature(): GrpcCall< Point , Feature > Overrides RouteGuideClient.GetFeature A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-get-feature.html#getfeature","text":"fun GetFeature(): GrpcCall< Point , Feature > Overrides RouteGuideClient.GetFeature A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-init-.html","text":"misk-grpc-tests / routeguide / GrpcRouteGuideClient / <init> <init> \u00b6 GrpcRouteGuideClient(client: GrpcClient) Interface exported by the server.","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-init-.html#init","text":"GrpcRouteGuideClient(client: GrpcClient) Interface exported by the server.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-list-features.html","text":"misk-grpc-tests / routeguide / GrpcRouteGuideClient / ListFeatures ListFeatures \u00b6 fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > Overrides RouteGuideClient.ListFeatures A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features.","title":"ListFeatures - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-list-features.html#listfeatures","text":"fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > Overrides RouteGuideClient.ListFeatures A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features.","title":"ListFeatures"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-record-route.html","text":"misk-grpc-tests / routeguide / GrpcRouteGuideClient / RecordRoute RecordRoute \u00b6 fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > Overrides RouteGuideClient.RecordRoute A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed.","title":"RecordRoute - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-record-route.html#recordroute","text":"fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > Overrides RouteGuideClient.RecordRoute A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed.","title":"RecordRoute"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-route-chat.html","text":"misk-grpc-tests / routeguide / GrpcRouteGuideClient / RouteChat RouteChat \u00b6 fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > Overrides RouteGuideClient.RouteChat A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-grpc-route-guide-client/-route-chat.html#routechat","text":"fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > Overrides RouteGuideClient.RouteChat A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat"},{"location":"0.x/misk-grpc-tests/routeguide/-point/index.html","text":"misk-grpc-tests / routeguide / Point Point \u00b6 class Point : Message< Point , Point.Builder > Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive). Types \u00b6 Name Summary Builder class Builder : Builder< Point , Point.Builder > Constructors \u00b6 Name Summary <init> Point(latitude: Int ? = null, longitude: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive). Properties \u00b6 Name Summary latitude val latitude: Int ? longitude val longitude: Int ? Functions \u00b6 Name Summary copy fun copy(latitude: Int ? = this.latitude, longitude: Int ? = this.longitude, unknownFields: ByteString = this.unknownFields): Point equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Point.Builder toString fun toString(): String Companion Object Properties \u00b6 Name Summary ADAPTER val ADAPTER: ProtoAdapter< Point >","title":"Point - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/index.html#point","text":"class Point : Message< Point , Point.Builder > Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive).","title":"Point"},{"location":"0.x/misk-grpc-tests/routeguide/-point/index.html#types","text":"Name Summary Builder class Builder : Builder< Point , Point.Builder >","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-point/index.html#constructors","text":"Name Summary <init> Point(latitude: Int ? = null, longitude: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive).","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-point/index.html#properties","text":"Name Summary latitude val latitude: Int ? longitude val longitude: Int ?","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-point/index.html#functions","text":"Name Summary copy fun copy(latitude: Int ? = this.latitude, longitude: Int ? = this.longitude, unknownFields: ByteString = this.unknownFields): Point equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Point.Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-point/index.html#companion-object-properties","text":"Name Summary ADAPTER val ADAPTER: ProtoAdapter< Point >","title":"Companion Object Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-a-d-a-p-t-e-r.html","text":"misk-grpc-tests / routeguide / Point / ADAPTER ADAPTER \u00b6 val ADAPTER: ProtoAdapter< Point >","title":"ADAPTER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-a-d-a-p-t-e-r.html#adapter","text":"val ADAPTER: ProtoAdapter< Point >","title":"ADAPTER"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-init-.html","text":"misk-grpc-tests / routeguide / Point / <init> <init> \u00b6 Point(latitude: Int ? = null, longitude: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive).","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-point/-init-.html#init","text":"Point(latitude: Int ? = null, longitude: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range \u00b1 90 degrees and longitude should be in the range \u00b1 180 degrees (inclusive).","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-point/copy.html","text":"misk-grpc-tests / routeguide / Point / copy copy \u00b6 fun copy(latitude: Int ? = this.latitude, longitude: Int ? = this.longitude, unknownFields: ByteString = this.unknownFields): Point","title":"copy - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/copy.html#copy","text":"fun copy(latitude: Int ? = this.latitude, longitude: Int ? = this.longitude, unknownFields: ByteString = this.unknownFields): Point","title":"copy"},{"location":"0.x/misk-grpc-tests/routeguide/-point/equals.html","text":"misk-grpc-tests / routeguide / Point / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-point/hash-code.html","text":"misk-grpc-tests / routeguide / Point / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-point/latitude.html","text":"misk-grpc-tests / routeguide / Point / latitude latitude \u00b6 val latitude: Int ?","title":"latitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/latitude.html#latitude","text":"val latitude: Int ?","title":"latitude"},{"location":"0.x/misk-grpc-tests/routeguide/-point/longitude.html","text":"misk-grpc-tests / routeguide / Point / longitude longitude \u00b6 val longitude: Int ?","title":"longitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/longitude.html#longitude","text":"val longitude: Int ?","title":"longitude"},{"location":"0.x/misk-grpc-tests/routeguide/-point/new-builder.html","text":"misk-grpc-tests / routeguide / Point / newBuilder newBuilder \u00b6 fun newBuilder(): Point.Builder","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/new-builder.html#newbuilder","text":"fun newBuilder(): Point.Builder","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-point/to-string.html","text":"misk-grpc-tests / routeguide / Point / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/index.html","text":"misk-grpc-tests / routeguide / Point / Builder Builder \u00b6 class Builder : Builder< Point , Point.Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary latitude var latitude: Int ? longitude var longitude: Int ? Functions \u00b6 Name Summary build fun build(): Point latitude fun latitude(latitude: Int ?): Point.Builder longitude fun longitude(longitude: Int ?): Point.Builder","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/index.html#builder","text":"class Builder : Builder< Point , Point.Builder >","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/index.html#properties","text":"Name Summary latitude var latitude: Int ? longitude var longitude: Int ?","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/index.html#functions","text":"Name Summary build fun build(): Point latitude fun latitude(latitude: Int ?): Point.Builder longitude fun longitude(longitude: Int ?): Point.Builder","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/-init-.html","text":"misk-grpc-tests / routeguide / Point / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/build.html","text":"misk-grpc-tests / routeguide / Point / Builder / build build \u00b6 fun build(): Point","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/build.html#build","text":"fun build(): Point","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/latitude.html","text":"misk-grpc-tests / routeguide / Point / Builder / latitude latitude \u00b6 var latitude: Int ? fun latitude(latitude: Int ?): Point.Builder","title":"latitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/latitude.html#latitude","text":"var latitude: Int ? fun latitude(latitude: Int ?): Point.Builder","title":"latitude"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/longitude.html","text":"misk-grpc-tests / routeguide / Point / Builder / longitude longitude \u00b6 var longitude: Int ? fun longitude(longitude: Int ?): Point.Builder","title":"longitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-point/-builder/longitude.html#longitude","text":"var longitude: Int ? fun longitude(longitude: Int ?): Point.Builder","title":"longitude"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/index.html","text":"misk-grpc-tests / routeguide / Rectangle Rectangle \u00b6 class Rectangle : Message< Rectangle , Rectangle.Builder > A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d. Types \u00b6 Name Summary Builder class Builder : Builder< Rectangle , Rectangle.Builder > Constructors \u00b6 Name Summary <init> Rectangle(lo: Point ? = null, hi: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d. Properties \u00b6 Name Summary hi val hi: Point ? The other corner of the rectangle. lo val lo: Point ? One corner of the rectangle. Functions \u00b6 Name Summary copy fun copy(lo: Point ? = this.lo, hi: Point ? = this.hi, unknownFields: ByteString = this.unknownFields): Rectangle equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Rectangle.Builder toString fun toString(): String Companion Object Properties \u00b6 Name Summary ADAPTER val ADAPTER: ProtoAdapter< Rectangle >","title":"Rectangle - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/index.html#rectangle","text":"class Rectangle : Message< Rectangle , Rectangle.Builder > A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d.","title":"Rectangle"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/index.html#types","text":"Name Summary Builder class Builder : Builder< Rectangle , Rectangle.Builder >","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/index.html#constructors","text":"Name Summary <init> Rectangle(lo: Point ? = null, hi: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/index.html#properties","text":"Name Summary hi val hi: Point ? The other corner of the rectangle. lo val lo: Point ? One corner of the rectangle.","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/index.html#functions","text":"Name Summary copy fun copy(lo: Point ? = this.lo, hi: Point ? = this.hi, unknownFields: ByteString = this.unknownFields): Rectangle equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Rectangle.Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/index.html#companion-object-properties","text":"Name Summary ADAPTER val ADAPTER: ProtoAdapter< Rectangle >","title":"Companion Object Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-a-d-a-p-t-e-r.html","text":"misk-grpc-tests / routeguide / Rectangle / ADAPTER ADAPTER \u00b6 val ADAPTER: ProtoAdapter< Rectangle >","title":"ADAPTER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-a-d-a-p-t-e-r.html#adapter","text":"val ADAPTER: ProtoAdapter< Rectangle >","title":"ADAPTER"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-init-.html","text":"misk-grpc-tests / routeguide / Rectangle / <init> <init> \u00b6 Rectangle(lo: Point ? = null, hi: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d.","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-init-.html#init","text":"Rectangle(lo: Point ? = null, hi: Point ? = null, unknownFields: ByteString = ByteString.EMPTY) A latitude-longitude rectangle, represented as two diagonally opposite points \u201clo\u201d and \u201chi\u201d.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/copy.html","text":"misk-grpc-tests / routeguide / Rectangle / copy copy \u00b6 fun copy(lo: Point ? = this.lo, hi: Point ? = this.hi, unknownFields: ByteString = this.unknownFields): Rectangle","title":"copy - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/copy.html#copy","text":"fun copy(lo: Point ? = this.lo, hi: Point ? = this.hi, unknownFields: ByteString = this.unknownFields): Rectangle","title":"copy"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/equals.html","text":"misk-grpc-tests / routeguide / Rectangle / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/hash-code.html","text":"misk-grpc-tests / routeguide / Rectangle / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/hi.html","text":"misk-grpc-tests / routeguide / Rectangle / hi hi \u00b6 val hi: Point ? The other corner of the rectangle.","title":"hi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/hi.html#hi","text":"val hi: Point ? The other corner of the rectangle.","title":"hi"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/lo.html","text":"misk-grpc-tests / routeguide / Rectangle / lo lo \u00b6 val lo: Point ? One corner of the rectangle.","title":"lo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/lo.html#lo","text":"val lo: Point ? One corner of the rectangle.","title":"lo"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/new-builder.html","text":"misk-grpc-tests / routeguide / Rectangle / newBuilder newBuilder \u00b6 fun newBuilder(): Rectangle.Builder","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/new-builder.html#newbuilder","text":"fun newBuilder(): Rectangle.Builder","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/to-string.html","text":"misk-grpc-tests / routeguide / Rectangle / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/index.html","text":"misk-grpc-tests / routeguide / Rectangle / Builder Builder \u00b6 class Builder : Builder< Rectangle , Rectangle.Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary hi var hi: Point ? lo var lo: Point ? Functions \u00b6 Name Summary build fun build(): Rectangle hi fun hi(hi: Point ?): Rectangle.Builder The other corner of the rectangle. lo fun lo(lo: Point ?): Rectangle.Builder One corner of the rectangle.","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/index.html#builder","text":"class Builder : Builder< Rectangle , Rectangle.Builder >","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/index.html#properties","text":"Name Summary hi var hi: Point ? lo var lo: Point ?","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/index.html#functions","text":"Name Summary build fun build(): Rectangle hi fun hi(hi: Point ?): Rectangle.Builder The other corner of the rectangle. lo fun lo(lo: Point ?): Rectangle.Builder One corner of the rectangle.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/-init-.html","text":"misk-grpc-tests / routeguide / Rectangle / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/build.html","text":"misk-grpc-tests / routeguide / Rectangle / Builder / build build \u00b6 fun build(): Rectangle","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/build.html#build","text":"fun build(): Rectangle","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/hi.html","text":"misk-grpc-tests / routeguide / Rectangle / Builder / hi hi \u00b6 var hi: Point ?``fun hi(hi: Point ?): Rectangle.Builder The other corner of the rectangle.","title":"hi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/hi.html#hi","text":"var hi: Point ?``fun hi(hi: Point ?): Rectangle.Builder The other corner of the rectangle.","title":"hi"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/lo.html","text":"misk-grpc-tests / routeguide / Rectangle / Builder / lo lo \u00b6 var lo: Point ?``fun lo(lo: Point ?): Rectangle.Builder One corner of the rectangle.","title":"lo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-rectangle/-builder/lo.html#lo","text":"var lo: Point ?``fun lo(lo: Point ?): Rectangle.Builder One corner of the rectangle.","title":"lo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/index.html","text":"misk-grpc-tests / routeguide / RouteGuideClient RouteGuideClient \u00b6 interface RouteGuideClient : Service Interface exported by the server. Functions \u00b6 Name Summary GetFeature abstract fun GetFeature(): GrpcCall< Point , Feature > A simple RPC. ListFeatures abstract fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > A server-to-client streaming RPC. RecordRoute abstract fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > A client-to-server streaming RPC. RouteChat abstract fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > A Bidirectional streaming RPC. Inheritors \u00b6 Name Summary GrpcRouteGuideClient class GrpcRouteGuideClient : RouteGuideClient Interface exported by the server.","title":"RouteGuideClient - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/index.html#routeguideclient","text":"interface RouteGuideClient : Service Interface exported by the server.","title":"RouteGuideClient"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/index.html#functions","text":"Name Summary GetFeature abstract fun GetFeature(): GrpcCall< Point , Feature > A simple RPC. ListFeatures abstract fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > A server-to-client streaming RPC. RecordRoute abstract fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > A client-to-server streaming RPC. RouteChat abstract fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > A Bidirectional streaming RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/index.html#inheritors","text":"Name Summary GrpcRouteGuideClient class GrpcRouteGuideClient : RouteGuideClient Interface exported by the server.","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideClient / GetFeature GetFeature \u00b6 abstract fun GetFeature(): GrpcCall< Point , Feature > A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-get-feature.html#getfeature","text":"abstract fun GetFeature(): GrpcCall< Point , Feature > A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-list-features.html","text":"misk-grpc-tests / routeguide / RouteGuideClient / ListFeatures ListFeatures \u00b6 abstract fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features.","title":"ListFeatures - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-list-features.html#listfeatures","text":"abstract fun ListFeatures(): GrpcStreamingCall< Rectangle , Feature > A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features.","title":"ListFeatures"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-record-route.html","text":"misk-grpc-tests / routeguide / RouteGuideClient / RecordRoute RecordRoute \u00b6 abstract fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed.","title":"RecordRoute - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-record-route.html#recordroute","text":"abstract fun RecordRoute(): GrpcStreamingCall< Point , RouteSummary > A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed.","title":"RecordRoute"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-route-chat.html","text":"misk-grpc-tests / routeguide / RouteGuideClient / RouteChat RouteChat \u00b6 abstract fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-client/-route-chat.html#routechat","text":"abstract fun RouteChat(): GrpcStreamingCall< RouteNote , RouteNote > A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-get-feature-blocking-server/index.html","text":"misk-grpc-tests / routeguide / RouteGuideGetFeatureBlockingServer RouteGuideGetFeatureBlockingServer \u00b6 interface RouteGuideGetFeatureBlockingServer : Service Interface exported by the server. Functions \u00b6 Name Summary GetFeature abstract fun GetFeature(request: Point ): Feature A simple RPC. Inheritors \u00b6 Name Summary GetFeatureGrpcAction class GetFeatureGrpcAction : WebAction, RouteGuideGetFeatureBlockingServer","title":"RouteGuideGetFeatureBlockingServer - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-get-feature-blocking-server/index.html#routeguidegetfeatureblockingserver","text":"interface RouteGuideGetFeatureBlockingServer : Service Interface exported by the server.","title":"RouteGuideGetFeatureBlockingServer"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-get-feature-blocking-server/index.html#functions","text":"Name Summary GetFeature abstract fun GetFeature(request: Point ): Feature A simple RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-get-feature-blocking-server/index.html#inheritors","text":"Name Summary GetFeatureGrpcAction class GetFeatureGrpcAction : WebAction, RouteGuideGetFeatureBlockingServer","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-get-feature-blocking-server/-get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideGetFeatureBlockingServer / GetFeature GetFeature \u00b6 abstract fun GetFeature(request: Point ): Feature A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-get-feature-blocking-server/-get-feature.html#getfeature","text":"abstract fun GetFeature(request: Point ): Feature A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there\u2019s no feature at the given position.","title":"GetFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/index.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc RouteGuideGrpc \u00b6 @Generated(\"by gRPC proto compiler (version 1.36.0)\", \"Source: routeguide/RouteGuideProto.proto\") class RouteGuideGrpc Interface exported by the server. ``` ### Types | Name | Summary | |---|---| | [RouteGuideBlockingStub](-route-guide-blocking-stub/index.md) | `class RouteGuideBlockingStub : AbstractBlockingStub<`[`RouteGuideGrpc.RouteGuideBlockingStub`](-route-guide-blocking-stub/index.md)`!>`<br> Interface exported by the server. <br>``` | | RouteGuideFutureStub | class RouteGuideFutureStub : AbstractFutureStub< RouteGuideGrpc.RouteGuideFutureStub !> Interface exported by the server. <br>``` <br> | | [RouteGuideImplBase](-route-guide-impl-base/index.md) | `abstract class RouteGuideImplBase : BindableService`<br> Interface exported by the server. <br>``` | | RouteGuideStub | class RouteGuideStub : AbstractAsyncStub< RouteGuideGrpc.RouteGuideStub !> ``` Interface exported by the server. <br>``` | Properties \u00b6 Name Summary SERVICE_NAME static val SERVICE_NAME: String Functions \u00b6 Name Summary getGetFeatureMethod static fun getGetFeatureMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.Feature !>! getListFeaturesMethod static fun getListFeaturesMethod(): MethodDescriptor< RouteGuideProto.Rectangle !, RouteGuideProto.Feature !>! getRecordRouteMethod static fun getRecordRouteMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.RouteSummary !>! getRouteChatMethod static fun getRouteChatMethod(): MethodDescriptor< RouteGuideProto.RouteNote !, RouteGuideProto.RouteNote !>! getServiceDescriptor static fun getServiceDescriptor(): ServiceDescriptor! newBlockingStub static fun newBlockingStub(channel: Channel!): RouteGuideGrpc.RouteGuideBlockingStub ! Creates a new blocking-style stub that supports unary and streaming output calls on the service newFutureStub static fun newFutureStub(channel: Channel!): RouteGuideGrpc.RouteGuideFutureStub ! Creates a new ListenableFuture-style stub that supports unary calls on the service newStub static fun newStub(channel: Channel!): RouteGuideGrpc.RouteGuideStub ! Creates a new async stub that supports all call types for the service","title":"RouteGuideGrpc - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/index.html#routeguidegrpc","text":"@Generated(\"by gRPC proto compiler (version 1.36.0)\", \"Source: routeguide/RouteGuideProto.proto\") class RouteGuideGrpc Interface exported by the server. ``` ### Types | Name | Summary | |---|---| | [RouteGuideBlockingStub](-route-guide-blocking-stub/index.md) | `class RouteGuideBlockingStub : AbstractBlockingStub<`[`RouteGuideGrpc.RouteGuideBlockingStub`](-route-guide-blocking-stub/index.md)`!>`<br> Interface exported by the server. <br>``` | | RouteGuideFutureStub | class RouteGuideFutureStub : AbstractFutureStub< RouteGuideGrpc.RouteGuideFutureStub !> Interface exported by the server. <br>``` <br> | | [RouteGuideImplBase](-route-guide-impl-base/index.md) | `abstract class RouteGuideImplBase : BindableService`<br> Interface exported by the server. <br>``` | | RouteGuideStub | class RouteGuideStub : AbstractAsyncStub< RouteGuideGrpc.RouteGuideStub !> ``` Interface exported by the server. <br>``` |","title":"RouteGuideGrpc"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/index.html#properties","text":"Name Summary SERVICE_NAME static val SERVICE_NAME: String","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/index.html#functions","text":"Name Summary getGetFeatureMethod static fun getGetFeatureMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.Feature !>! getListFeaturesMethod static fun getListFeaturesMethod(): MethodDescriptor< RouteGuideProto.Rectangle !, RouteGuideProto.Feature !>! getRecordRouteMethod static fun getRecordRouteMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.RouteSummary !>! getRouteChatMethod static fun getRouteChatMethod(): MethodDescriptor< RouteGuideProto.RouteNote !, RouteGuideProto.RouteNote !>! getServiceDescriptor static fun getServiceDescriptor(): ServiceDescriptor! newBlockingStub static fun newBlockingStub(channel: Channel!): RouteGuideGrpc.RouteGuideBlockingStub ! Creates a new blocking-style stub that supports unary and streaming output calls on the service newFutureStub static fun newFutureStub(channel: Channel!): RouteGuideGrpc.RouteGuideFutureStub ! Creates a new ListenableFuture-style stub that supports unary calls on the service newStub static fun newStub(channel: Channel!): RouteGuideGrpc.RouteGuideStub ! Creates a new async stub that supports all call types for the service","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-s-e-r-v-i-c-e_-n-a-m-e.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / SERVICE_NAME SERVICE_NAME \u00b6 static val SERVICE_NAME: String","title":"SERVICE_NAME - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-s-e-r-v-i-c-e_-n-a-m-e.html#service_name","text":"static val SERVICE_NAME: String","title":"SERVICE_NAME"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-get-feature-method.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / getGetFeatureMethod getGetFeatureMethod \u00b6 static fun getGetFeatureMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.Feature !>!","title":"getGetFeatureMethod - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-get-feature-method.html#getgetfeaturemethod","text":"static fun getGetFeatureMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.Feature !>!","title":"getGetFeatureMethod"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-list-features-method.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / getListFeaturesMethod getListFeaturesMethod \u00b6 static fun getListFeaturesMethod(): MethodDescriptor< RouteGuideProto.Rectangle !, RouteGuideProto.Feature !>!","title":"getListFeaturesMethod - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-list-features-method.html#getlistfeaturesmethod","text":"static fun getListFeaturesMethod(): MethodDescriptor< RouteGuideProto.Rectangle !, RouteGuideProto.Feature !>!","title":"getListFeaturesMethod"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-record-route-method.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / getRecordRouteMethod getRecordRouteMethod \u00b6 static fun getRecordRouteMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.RouteSummary !>!","title":"getRecordRouteMethod - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-record-route-method.html#getrecordroutemethod","text":"static fun getRecordRouteMethod(): MethodDescriptor< RouteGuideProto.Point !, RouteGuideProto.RouteSummary !>!","title":"getRecordRouteMethod"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-route-chat-method.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / getRouteChatMethod getRouteChatMethod \u00b6 static fun getRouteChatMethod(): MethodDescriptor< RouteGuideProto.RouteNote !, RouteGuideProto.RouteNote !>!","title":"getRouteChatMethod - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-route-chat-method.html#getroutechatmethod","text":"static fun getRouteChatMethod(): MethodDescriptor< RouteGuideProto.RouteNote !, RouteGuideProto.RouteNote !>!","title":"getRouteChatMethod"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-service-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / getServiceDescriptor getServiceDescriptor \u00b6 static fun getServiceDescriptor(): ServiceDescriptor!","title":"getServiceDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/get-service-descriptor.html#getservicedescriptor","text":"static fun getServiceDescriptor(): ServiceDescriptor!","title":"getServiceDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/new-blocking-stub.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / newBlockingStub newBlockingStub \u00b6 static fun newBlockingStub(channel: Channel!): RouteGuideGrpc.RouteGuideBlockingStub ! Creates a new blocking-style stub that supports unary and streaming output calls on the service","title":"newBlockingStub - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/new-blocking-stub.html#newblockingstub","text":"static fun newBlockingStub(channel: Channel!): RouteGuideGrpc.RouteGuideBlockingStub ! Creates a new blocking-style stub that supports unary and streaming output calls on the service","title":"newBlockingStub"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/new-future-stub.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / newFutureStub newFutureStub \u00b6 static fun newFutureStub(channel: Channel!): RouteGuideGrpc.RouteGuideFutureStub ! Creates a new ListenableFuture-style stub that supports unary calls on the service","title":"newFutureStub - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/new-future-stub.html#newfuturestub","text":"static fun newFutureStub(channel: Channel!): RouteGuideGrpc.RouteGuideFutureStub ! Creates a new ListenableFuture-style stub that supports unary calls on the service","title":"newFutureStub"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/new-stub.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / newStub newStub \u00b6 static fun newStub(channel: Channel!): RouteGuideGrpc.RouteGuideStub ! Creates a new async stub that supports all call types for the service","title":"newStub - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/new-stub.html#newstub","text":"static fun newStub(channel: Channel!): RouteGuideGrpc.RouteGuideStub ! Creates a new async stub that supports all call types for the service","title":"newStub"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/index.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideBlockingStub RouteGuideBlockingStub \u00b6 class RouteGuideBlockingStub : AbstractBlockingStub< RouteGuideGrpc.RouteGuideBlockingStub !> Interface exported by the server. ``` ### Functions | Name | Summary | |---|---| | [build](build.md) | `fun build(channel: Channel!, callOptions: CallOptions!): `[`RouteGuideGrpc.RouteGuideBlockingStub`](./index.md)`!` | | [getFeature](get-feature.md) | `fun getFeature(request: `[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!): `[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!`<br> A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` | | listFeatures | fun listFeatures(request: RouteGuideProto.Rectangle !): MutableIterator < RouteGuideProto.Feature !>! ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. <br>``` |","title":"RouteGuideBlockingStub - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/index.html#routeguideblockingstub","text":"class RouteGuideBlockingStub : AbstractBlockingStub< RouteGuideGrpc.RouteGuideBlockingStub !> Interface exported by the server. ``` ### Functions | Name | Summary | |---|---| | [build](build.md) | `fun build(channel: Channel!, callOptions: CallOptions!): `[`RouteGuideGrpc.RouteGuideBlockingStub`](./index.md)`!` | | [getFeature](get-feature.md) | `fun getFeature(request: `[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!): `[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!`<br> A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` | | listFeatures | fun listFeatures(request: RouteGuideProto.Rectangle !): MutableIterator < RouteGuideProto.Feature !>! ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. <br>``` |","title":"RouteGuideBlockingStub"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/build.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideBlockingStub / build build \u00b6 protected fun build(channel: Channel!, callOptions: CallOptions!): RouteGuideGrpc.RouteGuideBlockingStub !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/build.html#build","text":"protected fun build(channel: Channel!, callOptions: CallOptions!): RouteGuideGrpc.RouteGuideBlockingStub !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideBlockingStub / getFeature getFeature \u00b6 fun getFeature(request: RouteGuideProto.Point !): RouteGuideProto.Feature ! ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/get-feature.html#getfeature","text":"fun getFeature(request: RouteGuideProto.Point !): RouteGuideProto.Feature ! ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/list-features.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideBlockingStub / listFeatures listFeatures \u00b6 fun listFeatures(request: RouteGuideProto.Rectangle !): MutableIterator < RouteGuideProto.Feature !>! ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. ```","title":"listFeatures - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-blocking-stub/list-features.html#listfeatures","text":"fun listFeatures(request: RouteGuideProto.Rectangle !): MutableIterator < RouteGuideProto.Feature !>! ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. ```","title":"listFeatures"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-future-stub/index.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideFutureStub RouteGuideFutureStub \u00b6 class RouteGuideFutureStub : AbstractFutureStub< RouteGuideGrpc.RouteGuideFutureStub !> Interface exported by the server. ``` ### Functions | Name | Summary | |---|---| | [build](build.md) | `fun build(channel: Channel!, callOptions: CallOptions!): `[`RouteGuideGrpc.RouteGuideFutureStub`](./index.md)`!` | | [getFeature](get-feature.md) | `fun getFeature(request: `[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!): ListenableFuture<`[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!>!`<br> A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` |","title":"RouteGuideFutureStub - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-future-stub/index.html#routeguidefuturestub","text":"class RouteGuideFutureStub : AbstractFutureStub< RouteGuideGrpc.RouteGuideFutureStub !> Interface exported by the server. ``` ### Functions | Name | Summary | |---|---| | [build](build.md) | `fun build(channel: Channel!, callOptions: CallOptions!): `[`RouteGuideGrpc.RouteGuideFutureStub`](./index.md)`!` | | [getFeature](get-feature.md) | `fun getFeature(request: `[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!): ListenableFuture<`[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!>!`<br> A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` |","title":"RouteGuideFutureStub"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-future-stub/build.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideFutureStub / build build \u00b6 protected fun build(channel: Channel!, callOptions: CallOptions!): RouteGuideGrpc.RouteGuideFutureStub !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-future-stub/build.html#build","text":"protected fun build(channel: Channel!, callOptions: CallOptions!): RouteGuideGrpc.RouteGuideFutureStub !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-future-stub/get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideFutureStub / getFeature getFeature \u00b6 fun getFeature(request: RouteGuideProto.Point !): ListenableFuture< RouteGuideProto.Feature !>! ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-future-stub/get-feature.html#getfeature","text":"fun getFeature(request: RouteGuideProto.Point !): ListenableFuture< RouteGuideProto.Feature !>! ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/index.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideImplBase RouteGuideImplBase \u00b6 abstract class RouteGuideImplBase : BindableService Interface exported by the server. ``` ### Constructors | Name | Summary | |---|---| | [&lt;init&gt;](-init-.md) | `RouteGuideImplBase()`<br> Interface exported by the server. <br>``` | Functions \u00b6 Name Summary bindService fun bindService(): ServerServiceDefinition! getFeature open fun getFeature(request: RouteGuideProto.Point !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` <br> | | [listFeatures](list-features.md) | `open fun listFeatures(request: `[`RouteGuideProto.Rectangle`](../../-route-guide-proto/-rectangle/index.md)`!, responseObserver: StreamObserver<`[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!>!): `[`Unit`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)<br> A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. <br>``` | | recordRoute | open fun recordRoute(responseObserver: StreamObserver< RouteGuideProto.RouteSummary !>!): StreamObserver< RouteGuideProto.Point !>! A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. <br>``` <br> | | [routeChat](route-chat.md) | `open fun routeChat(responseObserver: StreamObserver<`[`RouteGuideProto.RouteNote`](../../-route-guide-proto/-route-note/index.md)`!>!): StreamObserver<`[`RouteGuideProto.RouteNote`](../../-route-guide-proto/-route-note/index.md)`!>!`<br> A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). <br>``` |","title":"RouteGuideImplBase - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/index.html#routeguideimplbase","text":"abstract class RouteGuideImplBase : BindableService Interface exported by the server. ``` ### Constructors | Name | Summary | |---|---| | [&lt;init&gt;](-init-.md) | `RouteGuideImplBase()`<br> Interface exported by the server. <br>``` |","title":"RouteGuideImplBase"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/index.html#functions","text":"Name Summary bindService fun bindService(): ServerServiceDefinition! getFeature open fun getFeature(request: RouteGuideProto.Point !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` <br> | | [listFeatures](list-features.md) | `open fun listFeatures(request: `[`RouteGuideProto.Rectangle`](../../-route-guide-proto/-rectangle/index.md)`!, responseObserver: StreamObserver<`[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!>!): `[`Unit`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)<br> A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. <br>``` | | recordRoute | open fun recordRoute(responseObserver: StreamObserver< RouteGuideProto.RouteSummary !>!): StreamObserver< RouteGuideProto.Point !>! A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. <br>``` <br> | | [routeChat](route-chat.md) | `open fun routeChat(responseObserver: StreamObserver<`[`RouteGuideProto.RouteNote`](../../-route-guide-proto/-route-note/index.md)`!>!): StreamObserver<`[`RouteGuideProto.RouteNote`](../../-route-guide-proto/-route-note/index.md)`!>!`<br> A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). <br>``` |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/-init-.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideImplBase / <init> <init> \u00b6 RouteGuideImplBase() ``` Interface exported by the server. ```","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/-init-.html#init","text":"RouteGuideImplBase() ``` Interface exported by the server. ```","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/bind-service.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideImplBase / bindService bindService \u00b6 fun bindService(): ServerServiceDefinition!","title":"bindService - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/bind-service.html#bindservice","text":"fun bindService(): ServerServiceDefinition!","title":"bindService"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideImplBase / getFeature getFeature \u00b6 open fun getFeature(request: RouteGuideProto.Point !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/get-feature.html#getfeature","text":"open fun getFeature(request: RouteGuideProto.Point !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/list-features.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideImplBase / listFeatures listFeatures \u00b6 open fun listFeatures(request: RouteGuideProto.Rectangle !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. ```","title":"listFeatures - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/list-features.html#listfeatures","text":"open fun listFeatures(request: RouteGuideProto.Rectangle !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. ```","title":"listFeatures"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/record-route.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideImplBase / recordRoute recordRoute \u00b6 open fun recordRoute(responseObserver: StreamObserver< RouteGuideProto.RouteSummary !>!): StreamObserver< RouteGuideProto.Point !>! ``` A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. ```","title":"recordRoute - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/record-route.html#recordroute","text":"open fun recordRoute(responseObserver: StreamObserver< RouteGuideProto.RouteSummary !>!): StreamObserver< RouteGuideProto.Point !>! ``` A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. ```","title":"recordRoute"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/route-chat.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideImplBase / routeChat routeChat \u00b6 open fun routeChat(responseObserver: StreamObserver< RouteGuideProto.RouteNote !>!): StreamObserver< RouteGuideProto.RouteNote !>! ``` A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). ```","title":"routeChat - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-impl-base/route-chat.html#routechat","text":"open fun routeChat(responseObserver: StreamObserver< RouteGuideProto.RouteNote !>!): StreamObserver< RouteGuideProto.RouteNote !>! ``` A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). ```","title":"routeChat"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/index.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideStub RouteGuideStub \u00b6 class RouteGuideStub : AbstractAsyncStub< RouteGuideGrpc.RouteGuideStub !> Interface exported by the server. ``` ### Functions | Name | Summary | |---|---| | [build](build.md) | `fun build(channel: Channel!, callOptions: CallOptions!): `[`RouteGuideGrpc.RouteGuideStub`](./index.md)`!` | | [getFeature](get-feature.md) | `fun getFeature(request: `[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!, responseObserver: StreamObserver<`[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!>!): `[`Unit`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)<br> A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` | | listFeatures | fun listFeatures(request: RouteGuideProto.Rectangle !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. <br>``` <br> | | [recordRoute](record-route.md) | `fun recordRoute(responseObserver: StreamObserver<`[`RouteGuideProto.RouteSummary`](../../-route-guide-proto/-route-summary/index.md)`!>!): StreamObserver<`[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!>!`<br> A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. <br>``` | | routeChat | fun routeChat(responseObserver: StreamObserver< RouteGuideProto.RouteNote !>!): StreamObserver< RouteGuideProto.RouteNote !>! ``` A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). <br>``` |","title":"RouteGuideStub - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/index.html#routeguidestub","text":"class RouteGuideStub : AbstractAsyncStub< RouteGuideGrpc.RouteGuideStub !> Interface exported by the server. ``` ### Functions | Name | Summary | |---|---| | [build](build.md) | `fun build(channel: Channel!, callOptions: CallOptions!): `[`RouteGuideGrpc.RouteGuideStub`](./index.md)`!` | | [getFeature](get-feature.md) | `fun getFeature(request: `[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!, responseObserver: StreamObserver<`[`RouteGuideProto.Feature`](../../-route-guide-proto/-feature/index.md)`!>!): `[`Unit`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html)<br> A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. <br>``` | | listFeatures | fun listFeatures(request: RouteGuideProto.Rectangle !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. <br>``` <br> | | [recordRoute](record-route.md) | `fun recordRoute(responseObserver: StreamObserver<`[`RouteGuideProto.RouteSummary`](../../-route-guide-proto/-route-summary/index.md)`!>!): StreamObserver<`[`RouteGuideProto.Point`](../../-route-guide-proto/-point/index.md)`!>!`<br> A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. <br>``` | | routeChat | fun routeChat(responseObserver: StreamObserver< RouteGuideProto.RouteNote !>!): StreamObserver< RouteGuideProto.RouteNote !>! ``` A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). <br>``` |","title":"RouteGuideStub"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/build.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideStub / build build \u00b6 protected fun build(channel: Channel!, callOptions: CallOptions!): RouteGuideGrpc.RouteGuideStub !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/build.html#build","text":"protected fun build(channel: Channel!, callOptions: CallOptions!): RouteGuideGrpc.RouteGuideStub !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideStub / getFeature getFeature \u00b6 fun getFeature(request: RouteGuideProto.Point !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/get-feature.html#getfeature","text":"fun getFeature(request: RouteGuideProto.Point !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A simple RPC. Obtains the feature at a given position. A feature with an empty name is returned if there's no feature at the given position. ```","title":"getFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/list-features.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideStub / listFeatures listFeatures \u00b6 fun listFeatures(request: RouteGuideProto.Rectangle !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. ```","title":"listFeatures - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/list-features.html#listfeatures","text":"fun listFeatures(request: RouteGuideProto.Rectangle !, responseObserver: StreamObserver< RouteGuideProto.Feature !>!): Unit ``` A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features. ```","title":"listFeatures"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/record-route.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideStub / recordRoute recordRoute \u00b6 fun recordRoute(responseObserver: StreamObserver< RouteGuideProto.RouteSummary !>!): StreamObserver< RouteGuideProto.Point !>! ``` A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. ```","title":"recordRoute - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/record-route.html#recordroute","text":"fun recordRoute(responseObserver: StreamObserver< RouteGuideProto.RouteSummary !>!): StreamObserver< RouteGuideProto.Point !>! ``` A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed. ```","title":"recordRoute"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/route-chat.html","text":"misk-grpc-tests / routeguide / RouteGuideGrpc / RouteGuideStub / routeChat routeChat \u00b6 fun routeChat(responseObserver: StreamObserver< RouteGuideProto.RouteNote !>!): StreamObserver< RouteGuideProto.RouteNote !>! ``` A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). ```","title":"routeChat - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-grpc/-route-guide-stub/route-chat.html#routechat","text":"fun routeChat(responseObserver: StreamObserver< RouteGuideProto.RouteNote !>!): StreamObserver< RouteGuideProto.RouteNote !>! ``` A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users). ```","title":"routeChat"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-list-features-blocking-server/index.html","text":"misk-grpc-tests / routeguide / RouteGuideListFeaturesBlockingServer RouteGuideListFeaturesBlockingServer \u00b6 interface RouteGuideListFeaturesBlockingServer : Service Interface exported by the server. Functions \u00b6 Name Summary ListFeatures abstract fun ListFeatures(request: Rectangle , response: MessageSink< Feature >): Unit A server-to-client streaming RPC.","title":"RouteGuideListFeaturesBlockingServer - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-list-features-blocking-server/index.html#routeguidelistfeaturesblockingserver","text":"interface RouteGuideListFeaturesBlockingServer : Service Interface exported by the server.","title":"RouteGuideListFeaturesBlockingServer"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-list-features-blocking-server/index.html#functions","text":"Name Summary ListFeatures abstract fun ListFeatures(request: Rectangle , response: MessageSink< Feature >): Unit A server-to-client streaming RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-list-features-blocking-server/-list-features.html","text":"misk-grpc-tests / routeguide / RouteGuideListFeaturesBlockingServer / ListFeatures ListFeatures \u00b6 abstract fun ListFeatures(request: Rectangle , response: MessageSink< Feature >): Unit A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features.","title":"ListFeatures - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-list-features-blocking-server/-list-features.html#listfeatures","text":"abstract fun ListFeatures(request: Rectangle , response: MessageSink< Feature >): Unit A server-to-client streaming RPC. Obtains the Features available within the given Rectangle. Results are streamed rather than returned at once (e.g. in a response message with a repeated field), as the rectangle may cover a large area and contain a huge number of features.","title":"ListFeatures"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto RouteGuideProto \u00b6 class RouteGuideProto Types \u00b6 Name Summary Feature class Feature : GeneratedMessageV3, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` <br> Protobuf type `routeguide.Feature` | | [FeatureDatabase](-feature-database/index.md) | `class FeatureDatabase : GeneratedMessageV3, `[`RouteGuideProto.FeatureDatabaseOrBuilder`](-feature-database-or-builder/index.md)<br> Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` Protobuf type routeguide.FeatureDatabase | | FeatureDatabaseOrBuilder | interface FeatureDatabaseOrBuilder : MessageOrBuilder | | FeatureOrBuilder | interface FeatureOrBuilder : MessageOrBuilder | | Point | class Point : GeneratedMessageV3, RouteGuideProto.PointOrBuilder Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` <br> Protobuf type `routeguide.Point` | | [PointOrBuilder](-point-or-builder/index.md) | `interface PointOrBuilder : MessageOrBuilder` | | [Rectangle](-rectangle/index.md) | `class Rectangle : GeneratedMessageV3, `[`RouteGuideProto.RectangleOrBuilder`](-rectangle-or-builder/index.md)<br> A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` Protobuf type routeguide.Rectangle | | RectangleOrBuilder | interface RectangleOrBuilder : MessageOrBuilder | | RouteNote | class RouteNote : GeneratedMessageV3, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. <br>``` <br> Protobuf type `routeguide.RouteNote` | | [RouteNoteOrBuilder](-route-note-or-builder/index.md) | `interface RouteNoteOrBuilder : MessageOrBuilder` | | [RouteSummary](-route-summary/index.md) | `class RouteSummary : GeneratedMessageV3, `[`RouteGuideProto.RouteSummaryOrBuilder`](-route-summary-or-builder/index.md)<br> A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` Protobuf type routeguide.RouteSummary | | RouteSummaryOrBuilder | interface RouteSummaryOrBuilder : MessageOrBuilder | Functions \u00b6 Name Summary getDescriptor static fun getDescriptor(): FileDescriptor! registerAllExtensions static fun registerAllExtensions(registry: ExtensionRegistryLite!): Unit static fun registerAllExtensions(registry: ExtensionRegistry!): Unit","title":"RouteGuideProto - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/index.html#routeguideproto","text":"class RouteGuideProto","title":"RouteGuideProto"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/index.html#types","text":"Name Summary Feature class Feature : GeneratedMessageV3, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` <br> Protobuf type `routeguide.Feature` | | [FeatureDatabase](-feature-database/index.md) | `class FeatureDatabase : GeneratedMessageV3, `[`RouteGuideProto.FeatureDatabaseOrBuilder`](-feature-database-or-builder/index.md)<br> Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` Protobuf type routeguide.FeatureDatabase | | FeatureDatabaseOrBuilder | interface FeatureDatabaseOrBuilder : MessageOrBuilder | | FeatureOrBuilder | interface FeatureOrBuilder : MessageOrBuilder | | Point | class Point : GeneratedMessageV3, RouteGuideProto.PointOrBuilder Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` <br> Protobuf type `routeguide.Point` | | [PointOrBuilder](-point-or-builder/index.md) | `interface PointOrBuilder : MessageOrBuilder` | | [Rectangle](-rectangle/index.md) | `class Rectangle : GeneratedMessageV3, `[`RouteGuideProto.RectangleOrBuilder`](-rectangle-or-builder/index.md)<br> A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` Protobuf type routeguide.Rectangle | | RectangleOrBuilder | interface RectangleOrBuilder : MessageOrBuilder | | RouteNote | class RouteNote : GeneratedMessageV3, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. <br>``` <br> Protobuf type `routeguide.RouteNote` | | [RouteNoteOrBuilder](-route-note-or-builder/index.md) | `interface RouteNoteOrBuilder : MessageOrBuilder` | | [RouteSummary](-route-summary/index.md) | `class RouteSummary : GeneratedMessageV3, `[`RouteGuideProto.RouteSummaryOrBuilder`](-route-summary-or-builder/index.md)<br> A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` Protobuf type routeguide.RouteSummary | | RouteSummaryOrBuilder | interface RouteSummaryOrBuilder : MessageOrBuilder |","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/index.html#functions","text":"Name Summary getDescriptor static fun getDescriptor(): FileDescriptor! registerAllExtensions static fun registerAllExtensions(registry: ExtensionRegistryLite!): Unit static fun registerAllExtensions(registry: ExtensionRegistry!): Unit","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): FileDescriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): FileDescriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/register-all-extensions.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / registerAllExtensions registerAllExtensions \u00b6 static fun registerAllExtensions(registry: ExtensionRegistryLite!): Unit static fun registerAllExtensions(registry: ExtensionRegistry!): Unit","title":"registerAllExtensions - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/register-all-extensions.html#registerallextensions","text":"static fun registerAllExtensions(registry: ExtensionRegistryLite!): Unit static fun registerAllExtensions(registry: ExtensionRegistry!): Unit","title":"registerAllExtensions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature Feature \u00b6 class Feature : GeneratedMessageV3, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. ``` Protobuf type `routeguide.Feature` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.Feature.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.FeatureOrBuilder`](../-feature-or-builder/index.md)<br> A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` Protobuf type routeguide.Feature | Properties \u00b6 Name Summary LOCATION_FIELD_NUMBER static val LOCATION_FIELD_NUMBER: Int NAME_FIELD_NUMBER static val NAME_FIELD_NUMBER: Int Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.Feature ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Feature ! getDescriptor static fun getDescriptor(): Descriptor! getLocation fun getLocation(): RouteGuideProto.Point ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getName | fun getName(): String ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [getNameBytes](get-name-bytes.md) | `fun getNameBytes(): ByteString!`<br> The name of the feature. <br>``` optional string name = 1; | | getParserForType | fun getParserForType(): Parser< RouteGuideProto.Feature !>! | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hashCode | fun hashCode(): Int | | hasLocation | fun hasLocation(): Boolean The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [hasName](has-name.md) | `fun hasName(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The name of the feature. <br>``` optional string name = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.Feature.Builder ! static fun newBuilder(prototype: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.Feature.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Feature.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! | | parser | static fun parser(): Parser< RouteGuideProto.Feature !>! | | toBuilder | fun toBuilder(): RouteGuideProto.Feature.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"Feature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/index.html#feature","text":"class Feature : GeneratedMessageV3, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. ``` Protobuf type `routeguide.Feature` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.Feature.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.FeatureOrBuilder`](../-feature-or-builder/index.md)<br> A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` Protobuf type routeguide.Feature |","title":"Feature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/index.html#properties","text":"Name Summary LOCATION_FIELD_NUMBER static val LOCATION_FIELD_NUMBER: Int NAME_FIELD_NUMBER static val NAME_FIELD_NUMBER: Int","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.Feature ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Feature ! getDescriptor static fun getDescriptor(): Descriptor! getLocation fun getLocation(): RouteGuideProto.Point ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getName | fun getName(): String ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [getNameBytes](get-name-bytes.md) | `fun getNameBytes(): ByteString!`<br> The name of the feature. <br>``` optional string name = 1; | | getParserForType | fun getParserForType(): Parser< RouteGuideProto.Feature !>! | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hashCode | fun hashCode(): Int | | hasLocation | fun hasLocation(): Boolean The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [hasName](has-name.md) | `fun hasName(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The name of the feature. <br>``` optional string name = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.Feature.Builder ! static fun newBuilder(prototype: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.Feature.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Feature.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! | | parser | static fun parser(): Parser< RouteGuideProto.Feature !>! | | toBuilder | fun toBuilder(): RouteGuideProto.Feature.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-l-o-c-a-t-i-o-n_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / LOCATION_FIELD_NUMBER LOCATION_FIELD_NUMBER \u00b6 static val LOCATION_FIELD_NUMBER: Int","title":"LOCATION_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-l-o-c-a-t-i-o-n_-f-i-e-l-d_-n-u-m-b-e-r.html#location_field_number","text":"static val LOCATION_FIELD_NUMBER: Int","title":"LOCATION_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-n-a-m-e_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / NAME_FIELD_NUMBER NAME_FIELD_NUMBER \u00b6 static val NAME_FIELD_NUMBER: Int","title":"NAME_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-n-a-m-e_-f-i-e-l-d_-n-u-m-b-e-r.html#name_field_number","text":"static val NAME_FIELD_NUMBER: Int","title":"NAME_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/equals.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.Feature !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.Feature !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-default-instance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getDefaultInstance getDefaultInstance \u00b6 static fun getDefaultInstance(): RouteGuideProto.Feature !","title":"getDefaultInstance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-default-instance.html#getdefaultinstance","text":"static fun getDefaultInstance(): RouteGuideProto.Feature !","title":"getDefaultInstance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-location-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getLocationOrBuilder getLocationOrBuilder \u00b6 fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides FeatureOrBuilder.getLocationOrBuilder ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-location-or-builder.html#getlocationorbuilder","text":"fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides FeatureOrBuilder.getLocationOrBuilder ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getLocation getLocation \u00b6 fun getLocation(): RouteGuideProto.Point ! Overrides FeatureOrBuilder.getLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-location.html#getlocation","text":"fun getLocation(): RouteGuideProto.Point ! Overrides FeatureOrBuilder.getLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-name-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getNameBytes getNameBytes \u00b6 fun getNameBytes(): ByteString! Overrides FeatureOrBuilder.getNameBytes ``` The name of the feature. ``` optional string name = 1;","title":"getNameBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-name-bytes.html#getnamebytes","text":"fun getNameBytes(): ByteString! Overrides FeatureOrBuilder.getNameBytes ``` The name of the feature. ``` optional string name = 1;","title":"getNameBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getName getName \u00b6 fun getName(): String ! Overrides FeatureOrBuilder.getName ``` The name of the feature. ``` optional string name = 1;","title":"getName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-name.html#getname","text":"fun getName(): String ! Overrides FeatureOrBuilder.getName ``` The name of the feature. ``` optional string name = 1;","title":"getName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-parser-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getParserForType getParserForType \u00b6 fun getParserForType(): Parser< RouteGuideProto.Feature !>!","title":"getParserForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-parser-for-type.html#getparserfortype","text":"fun getParserForType(): Parser< RouteGuideProto.Feature !>!","title":"getParserForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-serialized-size.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getSerializedSize getSerializedSize \u00b6 fun getSerializedSize(): Int","title":"getSerializedSize - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-serialized-size.html#getserializedsize","text":"fun getSerializedSize(): Int","title":"getSerializedSize"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / getUnknownFields getUnknownFields \u00b6 fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/get-unknown-fields.html#getunknownfields","text":"fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/has-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / hasLocation hasLocation \u00b6 fun hasLocation(): Boolean Overrides FeatureOrBuilder.hasLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"hasLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/has-location.html#haslocation","text":"fun hasLocation(): Boolean Overrides FeatureOrBuilder.hasLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"hasLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/has-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / hasName hasName \u00b6 fun hasName(): Boolean Overrides FeatureOrBuilder.hasName ``` The name of the feature. ``` optional string name = 1;","title":"hasName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/has-name.html#hasname","text":"fun hasName(): Boolean Overrides FeatureOrBuilder.hasName ``` The name of the feature. ``` optional string name = 1;","title":"hasName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/hash-code.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/new-builder-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / newBuilderForType newBuilderForType \u00b6 fun newBuilderForType(): RouteGuideProto.Feature.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Feature.Builder !","title":"newBuilderForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/new-builder-for-type.html#newbuilderfortype","text":"fun newBuilderForType(): RouteGuideProto.Feature.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Feature.Builder !","title":"newBuilderForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/new-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / newBuilder newBuilder \u00b6 static fun newBuilder(): RouteGuideProto.Feature.Builder ! static fun newBuilder(prototype: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/new-builder.html#newbuilder","text":"static fun newBuilder(): RouteGuideProto.Feature.Builder ! static fun newBuilder(prototype: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder !","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/parse-delimited-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / parseDelimitedFrom parseDelimitedFrom \u00b6 static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature !","title":"parseDelimitedFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/parse-delimited-from.html#parsedelimitedfrom","text":"static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature !","title":"parseDelimitedFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/parse-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / parseFrom parseFrom \u00b6 static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature !","title":"parseFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/parse-from.html#parsefrom","text":"static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Feature ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !): RouteGuideProto.Feature ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Feature ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature !","title":"parseFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/parser.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / parser parser \u00b6 static fun parser(): Parser< RouteGuideProto.Feature !>!","title":"parser - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/parser.html#parser","text":"static fun parser(): Parser< RouteGuideProto.Feature !>!","title":"parser"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/to-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / toBuilder toBuilder \u00b6 fun toBuilder(): RouteGuideProto.Feature.Builder !","title":"toBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/to-builder.html#tobuilder","text":"fun toBuilder(): RouteGuideProto.Feature.Builder !","title":"toBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/write-to.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / writeTo writeTo \u00b6 fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/write-to.html#writeto","text":"fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder Builder \u00b6 class Builder : Builder< RouteGuideProto.Feature.Builder !>, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. ``` Protobuf type `routeguide.Feature` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.Feature`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.Feature`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [clearField](clear-field.md) | `fun clearField(field: FieldDescriptor!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [clearLocation](clear-location.md) | `fun clearLocation(): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | clearName | fun clearName(): RouteGuideProto.Feature.Builder ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [clearOneof](clear-oneof.md) | `fun clearOneof(oneof: OneofDescriptor!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.Feature`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getLocation](get-location.md) | `fun getLocation(): `[`RouteGuideProto.Point`](../../-point/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getLocationBuilder | fun getLocationBuilder(): RouteGuideProto.Point.Builder ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../../-point-or-builder/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getName | fun getName(): String ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [getNameBytes](get-name-bytes.md) | `fun getNameBytes(): ByteString!`<br> The name of the feature. <br>``` optional string name = 1; | | hasLocation | fun hasLocation(): Boolean The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [hasName](has-name.md) | `fun hasName(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The name of the feature. <br>``` optional string name = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | mergeFrom | fun mergeFrom(other: Message!): RouteGuideProto.Feature.Builder ! fun mergeFrom(other: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature.Builder ! | | mergeLocation | fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.Feature.Builder ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [setField](set-field.md) | `fun setField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [setLocation](set-location.md) | `fun setLocation(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br>`fun setLocation(builderForValue: `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | setName | fun setName(value: String !): RouteGuideProto.Feature.Builder ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [setNameBytes](set-name-bytes.md) | `fun setNameBytes(value: ByteString!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br> The name of the feature. <br>``` optional string name = 1; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Feature.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Feature.Builder ! |","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/index.html#builder","text":"class Builder : Builder< RouteGuideProto.Feature.Builder !>, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. ``` Protobuf type `routeguide.Feature` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.Feature`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.Feature`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [clearField](clear-field.md) | `fun clearField(field: FieldDescriptor!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [clearLocation](clear-location.md) | `fun clearLocation(): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | clearName | fun clearName(): RouteGuideProto.Feature.Builder ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [clearOneof](clear-oneof.md) | `fun clearOneof(oneof: OneofDescriptor!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.Feature`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getLocation](get-location.md) | `fun getLocation(): `[`RouteGuideProto.Point`](../../-point/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getLocationBuilder | fun getLocationBuilder(): RouteGuideProto.Point.Builder ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../../-point-or-builder/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getName | fun getName(): String ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [getNameBytes](get-name-bytes.md) | `fun getNameBytes(): ByteString!`<br> The name of the feature. <br>``` optional string name = 1; | | hasLocation | fun hasLocation(): Boolean The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [hasName](has-name.md) | `fun hasName(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The name of the feature. <br>``` optional string name = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | mergeFrom | fun mergeFrom(other: Message!): RouteGuideProto.Feature.Builder ! fun mergeFrom(other: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature.Builder ! | | mergeLocation | fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.Feature.Builder ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [setField](set-field.md) | `fun setField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!` | | [setLocation](set-location.md) | `fun setLocation(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br>`fun setLocation(builderForValue: `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | setName | fun setName(value: String !): RouteGuideProto.Feature.Builder ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [setNameBytes](set-name-bytes.md) | `fun setNameBytes(value: ByteString!): `[`RouteGuideProto.Feature.Builder`](./index.md)`!`<br> The name of the feature. <br>``` optional string name = 1; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Feature.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Feature.Builder ! |","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/add-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / addRepeatedField addRepeatedField \u00b6 fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Feature.Builder !","title":"addRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/add-repeated-field.html#addrepeatedfield","text":"fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Feature.Builder !","title":"addRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/build-partial.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / buildPartial buildPartial \u00b6 fun buildPartial(): RouteGuideProto.Feature !","title":"buildPartial - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/build-partial.html#buildpartial","text":"fun buildPartial(): RouteGuideProto.Feature !","title":"buildPartial"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / build build \u00b6 fun build(): RouteGuideProto.Feature !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/build.html#build","text":"fun build(): RouteGuideProto.Feature !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / clearField clearField \u00b6 fun clearField(field: FieldDescriptor!): RouteGuideProto.Feature.Builder !","title":"clearField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-field.html#clearfield","text":"fun clearField(field: FieldDescriptor!): RouteGuideProto.Feature.Builder !","title":"clearField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / clearLocation clearLocation \u00b6 fun clearLocation(): RouteGuideProto.Feature.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"clearLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-location.html#clearlocation","text":"fun clearLocation(): RouteGuideProto.Feature.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"clearLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / clearName clearName \u00b6 fun clearName(): RouteGuideProto.Feature.Builder ! ``` The name of the feature. ``` optional string name = 1;","title":"clearName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-name.html#clearname","text":"fun clearName(): RouteGuideProto.Feature.Builder ! ``` The name of the feature. ``` optional string name = 1;","title":"clearName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-oneof.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / clearOneof clearOneof \u00b6 fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Feature.Builder !","title":"clearOneof - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear-oneof.html#clearoneof","text":"fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Feature.Builder !","title":"clearOneof"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / clear clear \u00b6 fun clear(): RouteGuideProto.Feature.Builder !","title":"clear - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clear.html#clear","text":"fun clear(): RouteGuideProto.Feature.Builder !","title":"clear"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clone.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / clone clone \u00b6 fun clone(): RouteGuideProto.Feature.Builder !","title":"clone - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/clone.html#clone","text":"fun clone(): RouteGuideProto.Feature.Builder !","title":"clone"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.Feature !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.Feature !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-descriptor-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getDescriptorForType getDescriptorForType \u00b6 fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-descriptor-for-type.html#getdescriptorfortype","text":"fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-location-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getLocationBuilder getLocationBuilder \u00b6 fun getLocationBuilder(): RouteGuideProto.Point.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-location-builder.html#getlocationbuilder","text":"fun getLocationBuilder(): RouteGuideProto.Point.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-location-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getLocationOrBuilder getLocationOrBuilder \u00b6 fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides FeatureOrBuilder.getLocationOrBuilder ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-location-or-builder.html#getlocationorbuilder","text":"fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides FeatureOrBuilder.getLocationOrBuilder ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getLocation getLocation \u00b6 fun getLocation(): RouteGuideProto.Point ! Overrides FeatureOrBuilder.getLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-location.html#getlocation","text":"fun getLocation(): RouteGuideProto.Point ! Overrides FeatureOrBuilder.getLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-name-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getNameBytes getNameBytes \u00b6 fun getNameBytes(): ByteString! Overrides FeatureOrBuilder.getNameBytes ``` The name of the feature. ``` optional string name = 1;","title":"getNameBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-name-bytes.html#getnamebytes","text":"fun getNameBytes(): ByteString! Overrides FeatureOrBuilder.getNameBytes ``` The name of the feature. ``` optional string name = 1;","title":"getNameBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / getName getName \u00b6 fun getName(): String ! Overrides FeatureOrBuilder.getName ``` The name of the feature. ``` optional string name = 1;","title":"getName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/get-name.html#getname","text":"fun getName(): String ! Overrides FeatureOrBuilder.getName ``` The name of the feature. ``` optional string name = 1;","title":"getName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/has-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / hasLocation hasLocation \u00b6 fun hasLocation(): Boolean Overrides FeatureOrBuilder.hasLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"hasLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/has-location.html#haslocation","text":"fun hasLocation(): Boolean Overrides FeatureOrBuilder.hasLocation ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"hasLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/has-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / hasName hasName \u00b6 fun hasName(): Boolean Overrides FeatureOrBuilder.hasName ``` The name of the feature. ``` optional string name = 1;","title":"hasName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/has-name.html#hasname","text":"fun hasName(): Boolean Overrides FeatureOrBuilder.hasName ``` The name of the feature. ``` optional string name = 1;","title":"hasName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/merge-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / mergeFrom mergeFrom \u00b6 fun mergeFrom(other: Message!): RouteGuideProto.Feature.Builder ! fun mergeFrom(other: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature.Builder !","title":"mergeFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/merge-from.html#mergefrom","text":"fun mergeFrom(other: Message!): RouteGuideProto.Feature.Builder ! fun mergeFrom(other: RouteGuideProto.Feature !): RouteGuideProto.Feature.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Feature.Builder !","title":"mergeFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/merge-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / mergeLocation mergeLocation \u00b6 fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.Feature.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"mergeLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/merge-location.html#mergelocation","text":"fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.Feature.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"mergeLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/merge-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / mergeUnknownFields mergeUnknownFields \u00b6 fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Feature.Builder !","title":"mergeUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/merge-unknown-fields.html#mergeunknownfields","text":"fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Feature.Builder !","title":"mergeUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / setField setField \u00b6 fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Feature.Builder !","title":"setField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-field.html#setfield","text":"fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Feature.Builder !","title":"setField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / setLocation setLocation \u00b6 fun setLocation(value: RouteGuideProto.Point !): RouteGuideProto.Feature.Builder ! fun setLocation(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Feature.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"setLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-location.html#setlocation","text":"fun setLocation(value: RouteGuideProto.Point !): RouteGuideProto.Feature.Builder ! fun setLocation(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Feature.Builder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"setLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-name-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / setNameBytes setNameBytes \u00b6 fun setNameBytes(value: ByteString!): RouteGuideProto.Feature.Builder ! ``` The name of the feature. ``` optional string name = 1;","title":"setNameBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-name-bytes.html#setnamebytes","text":"fun setNameBytes(value: ByteString!): RouteGuideProto.Feature.Builder ! ``` The name of the feature. ``` optional string name = 1;","title":"setNameBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / setName setName \u00b6 fun setName(value: String !): RouteGuideProto.Feature.Builder ! ``` The name of the feature. ``` optional string name = 1;","title":"setName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-name.html#setname","text":"fun setName(value: String !): RouteGuideProto.Feature.Builder ! ``` The name of the feature. ``` optional string name = 1;","title":"setName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / setRepeatedField setRepeatedField \u00b6 fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Feature.Builder !","title":"setRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-repeated-field.html#setrepeatedfield","text":"fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Feature.Builder !","title":"setRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Feature / Builder / setUnknownFields setUnknownFields \u00b6 fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Feature.Builder !","title":"setUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature/-builder/set-unknown-fields.html#setunknownfields","text":"fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Feature.Builder !","title":"setUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase FeatureDatabase \u00b6 class FeatureDatabase : GeneratedMessageV3, RouteGuideProto.FeatureDatabaseOrBuilder Not used in the RPC. Instead, this is here for the form serialized to disk. ``` Protobuf type `routeguide.FeatureDatabase` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.FeatureDatabase.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.FeatureDatabaseOrBuilder`](../-feature-database-or-builder/index.md)<br> Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` Protobuf type routeguide.FeatureDatabase | Properties \u00b6 Name Summary FEATURE_FIELD_NUMBER static val FEATURE_FIELD_NUMBER: Int Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.FeatureDatabase ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase ! getDescriptor static fun getDescriptor(): Descriptor! getFeature fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1; getFeatureCount fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1; getFeatureList fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1; getFeatureOrBuilder fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1; getFeatureOrBuilderList fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1; getParserForType fun getParserForType(): Parser< RouteGuideProto.FeatureDatabase !>! getSerializedSize fun getSerializedSize(): Int getUnknownFields fun getUnknownFields(): UnknownFieldSet! hashCode fun hashCode(): Int internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean newBuilder static fun newBuilder(): RouteGuideProto.FeatureDatabase.Builder ! static fun newBuilder(prototype: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder ! newBuilderForType fun newBuilderForType(): RouteGuideProto.FeatureDatabase.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.FeatureDatabase.Builder ! parseDelimitedFrom static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! parseFrom static fun parseFrom(data: ByteBuffer !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! parser static fun parser(): Parser< RouteGuideProto.FeatureDatabase !>! toBuilder fun toBuilder(): RouteGuideProto.FeatureDatabase.Builder ! writeTo fun writeTo(output: CodedOutputStream!): Unit","title":"FeatureDatabase - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/index.html#featuredatabase","text":"class FeatureDatabase : GeneratedMessageV3, RouteGuideProto.FeatureDatabaseOrBuilder Not used in the RPC. Instead, this is here for the form serialized to disk. ``` Protobuf type `routeguide.FeatureDatabase` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.FeatureDatabase.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.FeatureDatabaseOrBuilder`](../-feature-database-or-builder/index.md)<br> Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` Protobuf type routeguide.FeatureDatabase |","title":"FeatureDatabase"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/index.html#properties","text":"Name Summary FEATURE_FIELD_NUMBER static val FEATURE_FIELD_NUMBER: Int","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.FeatureDatabase ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase ! getDescriptor static fun getDescriptor(): Descriptor! getFeature fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1; getFeatureCount fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1; getFeatureList fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1; getFeatureOrBuilder fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1; getFeatureOrBuilderList fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1; getParserForType fun getParserForType(): Parser< RouteGuideProto.FeatureDatabase !>! getSerializedSize fun getSerializedSize(): Int getUnknownFields fun getUnknownFields(): UnknownFieldSet! hashCode fun hashCode(): Int internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean newBuilder static fun newBuilder(): RouteGuideProto.FeatureDatabase.Builder ! static fun newBuilder(prototype: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder ! newBuilderForType fun newBuilderForType(): RouteGuideProto.FeatureDatabase.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.FeatureDatabase.Builder ! parseDelimitedFrom static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! parseFrom static fun parseFrom(data: ByteBuffer !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! parser static fun parser(): Parser< RouteGuideProto.FeatureDatabase !>! toBuilder fun toBuilder(): RouteGuideProto.FeatureDatabase.Builder ! writeTo fun writeTo(output: CodedOutputStream!): Unit","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-f-e-a-t-u-r-e_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / FEATURE_FIELD_NUMBER FEATURE_FIELD_NUMBER \u00b6 static val FEATURE_FIELD_NUMBER: Int","title":"FEATURE_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-f-e-a-t-u-r-e_-f-i-e-l-d_-n-u-m-b-e-r.html#feature_field_number","text":"static val FEATURE_FIELD_NUMBER: Int","title":"FEATURE_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/equals.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-default-instance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getDefaultInstance getDefaultInstance \u00b6 static fun getDefaultInstance(): RouteGuideProto.FeatureDatabase !","title":"getDefaultInstance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-default-instance.html#getdefaultinstance","text":"static fun getDefaultInstance(): RouteGuideProto.FeatureDatabase !","title":"getDefaultInstance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getFeatureCount getFeatureCount \u00b6 fun getFeatureCount(): Int Overrides FeatureDatabaseOrBuilder.getFeatureCount repeated .routeguide.Feature feature = 1;","title":"getFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-count.html#getfeaturecount","text":"fun getFeatureCount(): Int Overrides FeatureDatabaseOrBuilder.getFeatureCount repeated .routeguide.Feature feature = 1;","title":"getFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-list.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getFeatureList getFeatureList \u00b6 fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! Overrides FeatureDatabaseOrBuilder.getFeatureList repeated .routeguide.Feature feature = 1;","title":"getFeatureList - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-list.html#getfeaturelist","text":"fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! Overrides FeatureDatabaseOrBuilder.getFeatureList repeated .routeguide.Feature feature = 1;","title":"getFeatureList"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-or-builder-list.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getFeatureOrBuilderList getFeatureOrBuilderList \u00b6 fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilderList repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilderList - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-or-builder-list.html#getfeatureorbuilderlist","text":"fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilderList repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilderList"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getFeatureOrBuilder getFeatureOrBuilder \u00b6 fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilder repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature-or-builder.html#getfeatureorbuilder","text":"fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilder repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getFeature getFeature \u00b6 fun getFeature(index: Int ): RouteGuideProto.Feature ! Overrides FeatureDatabaseOrBuilder.getFeature repeated .routeguide.Feature feature = 1;","title":"getFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-feature.html#getfeature","text":"fun getFeature(index: Int ): RouteGuideProto.Feature ! Overrides FeatureDatabaseOrBuilder.getFeature repeated .routeguide.Feature feature = 1;","title":"getFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-parser-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getParserForType getParserForType \u00b6 fun getParserForType(): Parser< RouteGuideProto.FeatureDatabase !>!","title":"getParserForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-parser-for-type.html#getparserfortype","text":"fun getParserForType(): Parser< RouteGuideProto.FeatureDatabase !>!","title":"getParserForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-serialized-size.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getSerializedSize getSerializedSize \u00b6 fun getSerializedSize(): Int","title":"getSerializedSize - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-serialized-size.html#getserializedsize","text":"fun getSerializedSize(): Int","title":"getSerializedSize"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / getUnknownFields getUnknownFields \u00b6 fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/get-unknown-fields.html#getunknownfields","text":"fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/hash-code.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/new-builder-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / newBuilderForType newBuilderForType \u00b6 fun newBuilderForType(): RouteGuideProto.FeatureDatabase.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.FeatureDatabase.Builder !","title":"newBuilderForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/new-builder-for-type.html#newbuilderfortype","text":"fun newBuilderForType(): RouteGuideProto.FeatureDatabase.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.FeatureDatabase.Builder !","title":"newBuilderForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/new-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / newBuilder newBuilder \u00b6 static fun newBuilder(): RouteGuideProto.FeatureDatabase.Builder ! static fun newBuilder(prototype: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/new-builder.html#newbuilder","text":"static fun newBuilder(): RouteGuideProto.FeatureDatabase.Builder ! static fun newBuilder(prototype: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder !","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/parse-delimited-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / parseDelimitedFrom parseDelimitedFrom \u00b6 static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase !","title":"parseDelimitedFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/parse-delimited-from.html#parsedelimitedfrom","text":"static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase !","title":"parseDelimitedFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/parse-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / parseFrom parseFrom \u00b6 static fun parseFrom(data: ByteBuffer !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase !","title":"parseFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/parse-from.html#parsefrom","text":"static fun parseFrom(data: ByteBuffer !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.FeatureDatabase ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase !","title":"parseFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/parser.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / parser parser \u00b6 static fun parser(): Parser< RouteGuideProto.FeatureDatabase !>!","title":"parser - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/parser.html#parser","text":"static fun parser(): Parser< RouteGuideProto.FeatureDatabase !>!","title":"parser"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/to-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / toBuilder toBuilder \u00b6 fun toBuilder(): RouteGuideProto.FeatureDatabase.Builder !","title":"toBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/to-builder.html#tobuilder","text":"fun toBuilder(): RouteGuideProto.FeatureDatabase.Builder !","title":"toBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/write-to.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / writeTo writeTo \u00b6 fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/write-to.html#writeto","text":"fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder Builder \u00b6 class Builder : Builder< RouteGuideProto.FeatureDatabase.Builder !>, RouteGuideProto.FeatureDatabaseOrBuilder ``` Not used in the RPC. Instead, this is here for the form serialized to disk. ``` Protobuf type routeguide.FeatureDatabase Functions \u00b6 Name Summary addAllFeature fun addAllFeature(values: MutableIterable < RouteGuideProto.Feature !>!): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; addFeature fun addFeature(value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; addFeatureBuilder fun addFeatureBuilder(): RouteGuideProto.Feature.Builder ! fun addFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1; addRepeatedField fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder ! build fun build(): RouteGuideProto.FeatureDatabase ! buildPartial fun buildPartial(): RouteGuideProto.FeatureDatabase ! clear fun clear(): RouteGuideProto.FeatureDatabase.Builder ! clearFeature fun clearFeature(): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; clearField fun clearField(field: FieldDescriptor!): RouteGuideProto.FeatureDatabase.Builder ! clearOneof fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.FeatureDatabase.Builder ! clone fun clone(): RouteGuideProto.FeatureDatabase.Builder ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase ! getDescriptor static fun getDescriptor(): Descriptor! getDescriptorForType fun getDescriptorForType(): Descriptor! getFeature fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1; getFeatureBuilder fun getFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1; getFeatureBuilderList fun getFeatureBuilderList(): MutableList < RouteGuideProto.Feature.Builder !>! repeated .routeguide.Feature feature = 1; getFeatureCount fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1; getFeatureList fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1; getFeatureOrBuilder fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1; getFeatureOrBuilderList fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1; internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean mergeFrom fun mergeFrom(other: Message!): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(other: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase.Builder ! mergeUnknownFields fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder ! removeFeature fun removeFeature(index: Int ): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; setFeature fun setFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun setFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; setField fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder ! setRepeatedField fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.FeatureDatabase.Builder ! setUnknownFields fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder !","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/index.html#builder","text":"class Builder : Builder< RouteGuideProto.FeatureDatabase.Builder !>, RouteGuideProto.FeatureDatabaseOrBuilder ``` Not used in the RPC. Instead, this is here for the form serialized to disk. ``` Protobuf type routeguide.FeatureDatabase","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/index.html#functions","text":"Name Summary addAllFeature fun addAllFeature(values: MutableIterable < RouteGuideProto.Feature !>!): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; addFeature fun addFeature(value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; addFeatureBuilder fun addFeatureBuilder(): RouteGuideProto.Feature.Builder ! fun addFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1; addRepeatedField fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder ! build fun build(): RouteGuideProto.FeatureDatabase ! buildPartial fun buildPartial(): RouteGuideProto.FeatureDatabase ! clear fun clear(): RouteGuideProto.FeatureDatabase.Builder ! clearFeature fun clearFeature(): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; clearField fun clearField(field: FieldDescriptor!): RouteGuideProto.FeatureDatabase.Builder ! clearOneof fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.FeatureDatabase.Builder ! clone fun clone(): RouteGuideProto.FeatureDatabase.Builder ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase ! getDescriptor static fun getDescriptor(): Descriptor! getDescriptorForType fun getDescriptorForType(): Descriptor! getFeature fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1; getFeatureBuilder fun getFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1; getFeatureBuilderList fun getFeatureBuilderList(): MutableList < RouteGuideProto.Feature.Builder !>! repeated .routeguide.Feature feature = 1; getFeatureCount fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1; getFeatureList fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1; getFeatureOrBuilder fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1; getFeatureOrBuilderList fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1; internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean mergeFrom fun mergeFrom(other: Message!): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(other: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase.Builder ! mergeUnknownFields fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder ! removeFeature fun removeFeature(index: Int ): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; setFeature fun setFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun setFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1; setField fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder ! setRepeatedField fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.FeatureDatabase.Builder ! setUnknownFields fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder !","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-all-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / addAllFeature addAllFeature \u00b6 fun addAllFeature(values: MutableIterable < RouteGuideProto.Feature !>!): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"addAllFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-all-feature.html#addallfeature","text":"fun addAllFeature(values: MutableIterable < RouteGuideProto.Feature !>!): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"addAllFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-feature-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / addFeatureBuilder addFeatureBuilder \u00b6 fun addFeatureBuilder(): RouteGuideProto.Feature.Builder ! fun addFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1;","title":"addFeatureBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-feature-builder.html#addfeaturebuilder","text":"fun addFeatureBuilder(): RouteGuideProto.Feature.Builder ! fun addFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1;","title":"addFeatureBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / addFeature addFeature \u00b6 fun addFeature(value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"addFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-feature.html#addfeature","text":"fun addFeature(value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! fun addFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"addFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / addRepeatedField addRepeatedField \u00b6 fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder !","title":"addRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/add-repeated-field.html#addrepeatedfield","text":"fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder !","title":"addRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/build-partial.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / buildPartial buildPartial \u00b6 fun buildPartial(): RouteGuideProto.FeatureDatabase !","title":"buildPartial - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/build-partial.html#buildpartial","text":"fun buildPartial(): RouteGuideProto.FeatureDatabase !","title":"buildPartial"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / build build \u00b6 fun build(): RouteGuideProto.FeatureDatabase !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/build.html#build","text":"fun build(): RouteGuideProto.FeatureDatabase !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / clearFeature clearFeature \u00b6 fun clearFeature(): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"clearFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear-feature.html#clearfeature","text":"fun clearFeature(): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"clearFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / clearField clearField \u00b6 fun clearField(field: FieldDescriptor!): RouteGuideProto.FeatureDatabase.Builder !","title":"clearField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear-field.html#clearfield","text":"fun clearField(field: FieldDescriptor!): RouteGuideProto.FeatureDatabase.Builder !","title":"clearField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear-oneof.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / clearOneof clearOneof \u00b6 fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.FeatureDatabase.Builder !","title":"clearOneof - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear-oneof.html#clearoneof","text":"fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.FeatureDatabase.Builder !","title":"clearOneof"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / clear clear \u00b6 fun clear(): RouteGuideProto.FeatureDatabase.Builder !","title":"clear - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clear.html#clear","text":"fun clear(): RouteGuideProto.FeatureDatabase.Builder !","title":"clear"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clone.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / clone clone \u00b6 fun clone(): RouteGuideProto.FeatureDatabase.Builder !","title":"clone - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/clone.html#clone","text":"fun clone(): RouteGuideProto.FeatureDatabase.Builder !","title":"clone"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.FeatureDatabase !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-descriptor-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getDescriptorForType getDescriptorForType \u00b6 fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-descriptor-for-type.html#getdescriptorfortype","text":"fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-builder-list.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getFeatureBuilderList getFeatureBuilderList \u00b6 fun getFeatureBuilderList(): MutableList < RouteGuideProto.Feature.Builder !>! repeated .routeguide.Feature feature = 1;","title":"getFeatureBuilderList - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-builder-list.html#getfeaturebuilderlist","text":"fun getFeatureBuilderList(): MutableList < RouteGuideProto.Feature.Builder !>! repeated .routeguide.Feature feature = 1;","title":"getFeatureBuilderList"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getFeatureBuilder getFeatureBuilder \u00b6 fun getFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1;","title":"getFeatureBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-builder.html#getfeaturebuilder","text":"fun getFeatureBuilder(index: Int ): RouteGuideProto.Feature.Builder ! repeated .routeguide.Feature feature = 1;","title":"getFeatureBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getFeatureCount getFeatureCount \u00b6 fun getFeatureCount(): Int Overrides FeatureDatabaseOrBuilder.getFeatureCount repeated .routeguide.Feature feature = 1;","title":"getFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-count.html#getfeaturecount","text":"fun getFeatureCount(): Int Overrides FeatureDatabaseOrBuilder.getFeatureCount repeated .routeguide.Feature feature = 1;","title":"getFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-list.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getFeatureList getFeatureList \u00b6 fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! Overrides FeatureDatabaseOrBuilder.getFeatureList repeated .routeguide.Feature feature = 1;","title":"getFeatureList - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-list.html#getfeaturelist","text":"fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! Overrides FeatureDatabaseOrBuilder.getFeatureList repeated .routeguide.Feature feature = 1;","title":"getFeatureList"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-or-builder-list.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getFeatureOrBuilderList getFeatureOrBuilderList \u00b6 fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilderList repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilderList - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-or-builder-list.html#getfeatureorbuilderlist","text":"fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilderList repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilderList"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getFeatureOrBuilder getFeatureOrBuilder \u00b6 fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilder repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature-or-builder.html#getfeatureorbuilder","text":"fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! Overrides FeatureDatabaseOrBuilder.getFeatureOrBuilder repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / getFeature getFeature \u00b6 fun getFeature(index: Int ): RouteGuideProto.Feature ! Overrides FeatureDatabaseOrBuilder.getFeature repeated .routeguide.Feature feature = 1;","title":"getFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/get-feature.html#getfeature","text":"fun getFeature(index: Int ): RouteGuideProto.Feature ! Overrides FeatureDatabaseOrBuilder.getFeature repeated .routeguide.Feature feature = 1;","title":"getFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/merge-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / mergeFrom mergeFrom \u00b6 fun mergeFrom(other: Message!): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(other: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase.Builder !","title":"mergeFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/merge-from.html#mergefrom","text":"fun mergeFrom(other: Message!): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(other: RouteGuideProto.FeatureDatabase !): RouteGuideProto.FeatureDatabase.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.FeatureDatabase.Builder !","title":"mergeFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/merge-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / mergeUnknownFields mergeUnknownFields \u00b6 fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder !","title":"mergeUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/merge-unknown-fields.html#mergeunknownfields","text":"fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder !","title":"mergeUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/remove-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / removeFeature removeFeature \u00b6 fun removeFeature(index: Int ): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"removeFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/remove-feature.html#removefeature","text":"fun removeFeature(index: Int ): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"removeFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / setFeature setFeature \u00b6 fun setFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun setFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"setFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-feature.html#setfeature","text":"fun setFeature(index: Int , value: RouteGuideProto.Feature !): RouteGuideProto.FeatureDatabase.Builder ! fun setFeature(index: Int , builderForValue: RouteGuideProto.Feature.Builder !): RouteGuideProto.FeatureDatabase.Builder ! repeated .routeguide.Feature feature = 1;","title":"setFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / setField setField \u00b6 fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder !","title":"setField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-field.html#setfield","text":"fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.FeatureDatabase.Builder !","title":"setField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / setRepeatedField setRepeatedField \u00b6 fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.FeatureDatabase.Builder !","title":"setRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-repeated-field.html#setrepeatedfield","text":"fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.FeatureDatabase.Builder !","title":"setRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabase / Builder / setUnknownFields setUnknownFields \u00b6 fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder !","title":"setUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database/-builder/set-unknown-fields.html#setunknownfields","text":"fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.FeatureDatabase.Builder !","title":"setUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabaseOrBuilder FeatureDatabaseOrBuilder \u00b6 interface FeatureDatabaseOrBuilder : MessageOrBuilder Functions \u00b6 Name Summary getFeature abstract fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1; getFeatureCount abstract fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1; getFeatureList abstract fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1; getFeatureOrBuilder abstract fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1; getFeatureOrBuilderList abstract fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1; Inheritors \u00b6 Name Summary Builder class Builder : Builder< RouteGuideProto.FeatureDatabase.Builder !>, RouteGuideProto.FeatureDatabaseOrBuilder Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` <br> Protobuf type `routeguide.FeatureDatabase` | | [FeatureDatabase](../-feature-database/index.md) | `class FeatureDatabase : GeneratedMessageV3, `[`RouteGuideProto.FeatureDatabaseOrBuilder`](./index.md)<br> Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` Protobuf type routeguide.FeatureDatabase |","title":"FeatureDatabaseOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/index.html#featuredatabaseorbuilder","text":"interface FeatureDatabaseOrBuilder : MessageOrBuilder","title":"FeatureDatabaseOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/index.html#functions","text":"Name Summary getFeature abstract fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1; getFeatureCount abstract fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1; getFeatureList abstract fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1; getFeatureOrBuilder abstract fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1; getFeatureOrBuilderList abstract fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1;","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/index.html#inheritors","text":"Name Summary Builder class Builder : Builder< RouteGuideProto.FeatureDatabase.Builder !>, RouteGuideProto.FeatureDatabaseOrBuilder Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` <br> Protobuf type `routeguide.FeatureDatabase` | | [FeatureDatabase](../-feature-database/index.md) | `class FeatureDatabase : GeneratedMessageV3, `[`RouteGuideProto.FeatureDatabaseOrBuilder`](./index.md)<br> Not used in the RPC. Instead, this is here for the form serialized to disk. <br>``` Protobuf type routeguide.FeatureDatabase |","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabaseOrBuilder / getFeatureCount getFeatureCount \u00b6 abstract fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1;","title":"getFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-count.html#getfeaturecount","text":"abstract fun getFeatureCount(): Int repeated .routeguide.Feature feature = 1;","title":"getFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-list.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabaseOrBuilder / getFeatureList getFeatureList \u00b6 abstract fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1;","title":"getFeatureList - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-list.html#getfeaturelist","text":"abstract fun getFeatureList(): MutableList < RouteGuideProto.Feature !>! repeated .routeguide.Feature feature = 1;","title":"getFeatureList"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-or-builder-list.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabaseOrBuilder / getFeatureOrBuilderList getFeatureOrBuilderList \u00b6 abstract fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilderList - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-or-builder-list.html#getfeatureorbuilderlist","text":"abstract fun getFeatureOrBuilderList(): MutableList <out RouteGuideProto.FeatureOrBuilder !>! repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilderList"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabaseOrBuilder / getFeatureOrBuilder getFeatureOrBuilder \u00b6 abstract fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature-or-builder.html#getfeatureorbuilder","text":"abstract fun getFeatureOrBuilder(index: Int ): RouteGuideProto.FeatureOrBuilder ! repeated .routeguide.Feature feature = 1;","title":"getFeatureOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureDatabaseOrBuilder / getFeature getFeature \u00b6 abstract fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1;","title":"getFeature - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-database-or-builder/get-feature.html#getfeature","text":"abstract fun getFeature(index: Int ): RouteGuideProto.Feature ! repeated .routeguide.Feature feature = 1;","title":"getFeature"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureOrBuilder FeatureOrBuilder \u00b6 interface FeatureOrBuilder : MessageOrBuilder Functions \u00b6 Name Summary getLocation abstract fun getLocation(): RouteGuideProto.Point ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [getLocationOrBuilder](get-location-or-builder.md) | `abstract fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getName | abstract fun getName(): String ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [getNameBytes](get-name-bytes.md) | `abstract fun getNameBytes(): ByteString!`<br> The name of the feature. <br>``` optional string name = 1; | | hasLocation | abstract fun hasLocation(): Boolean The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [hasName](has-name.md) | `abstract fun hasName(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The name of the feature. <br>``` optional string name = 1; | Inheritors \u00b6 Name Summary Builder class Builder : Builder< RouteGuideProto.Feature.Builder !>, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` <br> Protobuf type `routeguide.Feature` | | [Feature](../-feature/index.md) | `class Feature : GeneratedMessageV3, `[`RouteGuideProto.FeatureOrBuilder`](./index.md)<br> A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` Protobuf type routeguide.Feature |","title":"FeatureOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/index.html#featureorbuilder","text":"interface FeatureOrBuilder : MessageOrBuilder","title":"FeatureOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/index.html#functions","text":"Name Summary getLocation abstract fun getLocation(): RouteGuideProto.Point ! The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [getLocationOrBuilder](get-location-or-builder.md) | `abstract fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The point where the feature is detected. <br>``` optional .routeguide.Point location = 2; | | getName | abstract fun getName(): String ! The name of the feature. <br>``` <br> `optional string name = 1;` | | [getNameBytes](get-name-bytes.md) | `abstract fun getNameBytes(): ByteString!`<br> The name of the feature. <br>``` optional string name = 1; | | hasLocation | abstract fun hasLocation(): Boolean The point where the feature is detected. <br>``` <br> `optional .routeguide.Point location = 2;` | | [hasName](has-name.md) | `abstract fun hasName(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The name of the feature. <br>``` optional string name = 1; |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/index.html#inheritors","text":"Name Summary Builder class Builder : Builder< RouteGuideProto.Feature.Builder !>, RouteGuideProto.FeatureOrBuilder A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` <br> Protobuf type `routeguide.Feature` | | [Feature](../-feature/index.md) | `class Feature : GeneratedMessageV3, `[`RouteGuideProto.FeatureOrBuilder`](./index.md)<br> A feature names something at a given point. If a feature could not be named, the name is empty. <br>``` Protobuf type routeguide.Feature |","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-location-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureOrBuilder / getLocationOrBuilder getLocationOrBuilder \u00b6 abstract fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-location-or-builder.html#getlocationorbuilder","text":"abstract fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocationOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureOrBuilder / getLocation getLocation \u00b6 abstract fun getLocation(): RouteGuideProto.Point ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-location.html#getlocation","text":"abstract fun getLocation(): RouteGuideProto.Point ! ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"getLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-name-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureOrBuilder / getNameBytes getNameBytes \u00b6 abstract fun getNameBytes(): ByteString! ``` The name of the feature. ``` optional string name = 1;","title":"getNameBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-name-bytes.html#getnamebytes","text":"abstract fun getNameBytes(): ByteString! ``` The name of the feature. ``` optional string name = 1;","title":"getNameBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureOrBuilder / getName getName \u00b6 abstract fun getName(): String ! ``` The name of the feature. ``` optional string name = 1;","title":"getName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/get-name.html#getname","text":"abstract fun getName(): String ! ``` The name of the feature. ``` optional string name = 1;","title":"getName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/has-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureOrBuilder / hasLocation hasLocation \u00b6 abstract fun hasLocation(): Boolean ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"hasLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/has-location.html#haslocation","text":"abstract fun hasLocation(): Boolean ``` The point where the feature is detected. ``` optional .routeguide.Point location = 2;","title":"hasLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/has-name.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / FeatureOrBuilder / hasName hasName \u00b6 abstract fun hasName(): Boolean ``` The name of the feature. ``` optional string name = 1;","title":"hasName - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-feature-or-builder/has-name.html#hasname","text":"abstract fun hasName(): Boolean ``` The name of the feature. ``` optional string name = 1;","title":"hasName"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point Point \u00b6 class Point : GeneratedMessageV3, RouteGuideProto.PointOrBuilder Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). ``` Protobuf type `routeguide.Point` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.Point.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)<br> Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` Protobuf type routeguide.Point | Properties \u00b6 Name Summary LATITUDE_FIELD_NUMBER static val LATITUDE_FIELD_NUMBER: Int LONGITUDE_FIELD_NUMBER static val LONGITUDE_FIELD_NUMBER: Int Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.Point ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Point ! getDescriptor static fun getDescriptor(): Descriptor! getLatitude fun getLatitude(): Int optional int32 latitude = 1; getLongitude fun getLongitude(): Int optional int32 longitude = 2; getParserForType fun getParserForType(): Parser< RouteGuideProto.Point !>! getSerializedSize fun getSerializedSize(): Int getUnknownFields fun getUnknownFields(): UnknownFieldSet! hashCode fun hashCode(): Int hasLatitude fun hasLatitude(): Boolean optional int32 latitude = 1; hasLongitude fun hasLongitude(): Boolean optional int32 longitude = 2; internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean newBuilder static fun newBuilder(): RouteGuideProto.Point.Builder ! static fun newBuilder(prototype: RouteGuideProto.Point !): RouteGuideProto.Point.Builder ! newBuilderForType fun newBuilderForType(): RouteGuideProto.Point.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Point.Builder ! parseDelimitedFrom static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! parseFrom static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Point ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! parser static fun parser(): Parser< RouteGuideProto.Point !>! toBuilder fun toBuilder(): RouteGuideProto.Point.Builder ! writeTo fun writeTo(output: CodedOutputStream!): Unit","title":"Point - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/index.html#point","text":"class Point : GeneratedMessageV3, RouteGuideProto.PointOrBuilder Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). ``` Protobuf type `routeguide.Point` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.Point.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)<br> Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` Protobuf type routeguide.Point |","title":"Point"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/index.html#properties","text":"Name Summary LATITUDE_FIELD_NUMBER static val LATITUDE_FIELD_NUMBER: Int LONGITUDE_FIELD_NUMBER static val LONGITUDE_FIELD_NUMBER: Int","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.Point ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Point ! getDescriptor static fun getDescriptor(): Descriptor! getLatitude fun getLatitude(): Int optional int32 latitude = 1; getLongitude fun getLongitude(): Int optional int32 longitude = 2; getParserForType fun getParserForType(): Parser< RouteGuideProto.Point !>! getSerializedSize fun getSerializedSize(): Int getUnknownFields fun getUnknownFields(): UnknownFieldSet! hashCode fun hashCode(): Int hasLatitude fun hasLatitude(): Boolean optional int32 latitude = 1; hasLongitude fun hasLongitude(): Boolean optional int32 longitude = 2; internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean newBuilder static fun newBuilder(): RouteGuideProto.Point.Builder ! static fun newBuilder(prototype: RouteGuideProto.Point !): RouteGuideProto.Point.Builder ! newBuilderForType fun newBuilderForType(): RouteGuideProto.Point.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Point.Builder ! parseDelimitedFrom static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! parseFrom static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Point ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! parser static fun parser(): Parser< RouteGuideProto.Point !>! toBuilder fun toBuilder(): RouteGuideProto.Point.Builder ! writeTo fun writeTo(output: CodedOutputStream!): Unit","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-l-a-t-i-t-u-d-e_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / LATITUDE_FIELD_NUMBER LATITUDE_FIELD_NUMBER \u00b6 static val LATITUDE_FIELD_NUMBER: Int","title":"LATITUDE_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-l-a-t-i-t-u-d-e_-f-i-e-l-d_-n-u-m-b-e-r.html#latitude_field_number","text":"static val LATITUDE_FIELD_NUMBER: Int","title":"LATITUDE_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-l-o-n-g-i-t-u-d-e_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / LONGITUDE_FIELD_NUMBER LONGITUDE_FIELD_NUMBER \u00b6 static val LONGITUDE_FIELD_NUMBER: Int","title":"LONGITUDE_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-l-o-n-g-i-t-u-d-e_-f-i-e-l-d_-n-u-m-b-e-r.html#longitude_field_number","text":"static val LONGITUDE_FIELD_NUMBER: Int","title":"LONGITUDE_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/equals.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.Point !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.Point !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-default-instance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getDefaultInstance getDefaultInstance \u00b6 static fun getDefaultInstance(): RouteGuideProto.Point !","title":"getDefaultInstance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-default-instance.html#getdefaultinstance","text":"static fun getDefaultInstance(): RouteGuideProto.Point !","title":"getDefaultInstance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getLatitude getLatitude \u00b6 fun getLatitude(): Int Overrides PointOrBuilder.getLatitude optional int32 latitude = 1;","title":"getLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-latitude.html#getlatitude","text":"fun getLatitude(): Int Overrides PointOrBuilder.getLatitude optional int32 latitude = 1;","title":"getLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getLongitude getLongitude \u00b6 fun getLongitude(): Int Overrides PointOrBuilder.getLongitude optional int32 longitude = 2;","title":"getLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-longitude.html#getlongitude","text":"fun getLongitude(): Int Overrides PointOrBuilder.getLongitude optional int32 longitude = 2;","title":"getLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-parser-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getParserForType getParserForType \u00b6 fun getParserForType(): Parser< RouteGuideProto.Point !>!","title":"getParserForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-parser-for-type.html#getparserfortype","text":"fun getParserForType(): Parser< RouteGuideProto.Point !>!","title":"getParserForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-serialized-size.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getSerializedSize getSerializedSize \u00b6 fun getSerializedSize(): Int","title":"getSerializedSize - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-serialized-size.html#getserializedsize","text":"fun getSerializedSize(): Int","title":"getSerializedSize"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / getUnknownFields getUnknownFields \u00b6 fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/get-unknown-fields.html#getunknownfields","text":"fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/has-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / hasLatitude hasLatitude \u00b6 fun hasLatitude(): Boolean Overrides PointOrBuilder.hasLatitude optional int32 latitude = 1;","title":"hasLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/has-latitude.html#haslatitude","text":"fun hasLatitude(): Boolean Overrides PointOrBuilder.hasLatitude optional int32 latitude = 1;","title":"hasLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/has-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / hasLongitude hasLongitude \u00b6 fun hasLongitude(): Boolean Overrides PointOrBuilder.hasLongitude optional int32 longitude = 2;","title":"hasLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/has-longitude.html#haslongitude","text":"fun hasLongitude(): Boolean Overrides PointOrBuilder.hasLongitude optional int32 longitude = 2;","title":"hasLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/hash-code.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/new-builder-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / newBuilderForType newBuilderForType \u00b6 fun newBuilderForType(): RouteGuideProto.Point.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Point.Builder !","title":"newBuilderForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/new-builder-for-type.html#newbuilderfortype","text":"fun newBuilderForType(): RouteGuideProto.Point.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Point.Builder !","title":"newBuilderForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/new-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / newBuilder newBuilder \u00b6 static fun newBuilder(): RouteGuideProto.Point.Builder ! static fun newBuilder(prototype: RouteGuideProto.Point !): RouteGuideProto.Point.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/new-builder.html#newbuilder","text":"static fun newBuilder(): RouteGuideProto.Point.Builder ! static fun newBuilder(prototype: RouteGuideProto.Point !): RouteGuideProto.Point.Builder !","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/parse-delimited-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / parseDelimitedFrom parseDelimitedFrom \u00b6 static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point !","title":"parseDelimitedFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/parse-delimited-from.html#parsedelimitedfrom","text":"static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point !","title":"parseDelimitedFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/parse-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / parseFrom parseFrom \u00b6 static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Point ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point !","title":"parseFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/parse-from.html#parsefrom","text":"static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Point ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!): RouteGuideProto.Point ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Point ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !): RouteGuideProto.Point ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Point ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point !","title":"parseFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/parser.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / parser parser \u00b6 static fun parser(): Parser< RouteGuideProto.Point !>!","title":"parser - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/parser.html#parser","text":"static fun parser(): Parser< RouteGuideProto.Point !>!","title":"parser"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/to-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / toBuilder toBuilder \u00b6 fun toBuilder(): RouteGuideProto.Point.Builder !","title":"toBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/to-builder.html#tobuilder","text":"fun toBuilder(): RouteGuideProto.Point.Builder !","title":"toBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/write-to.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / writeTo writeTo \u00b6 fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/write-to.html#writeto","text":"fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder Builder \u00b6 class Builder : Builder< RouteGuideProto.Point.Builder !>, RouteGuideProto.PointOrBuilder ``` Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). ``` Protobuf type routeguide.Point Functions \u00b6 Name Summary addRepeatedField fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder ! build fun build(): RouteGuideProto.Point ! buildPartial fun buildPartial(): RouteGuideProto.Point ! clear fun clear(): RouteGuideProto.Point.Builder ! clearField fun clearField(field: FieldDescriptor!): RouteGuideProto.Point.Builder ! clearLatitude fun clearLatitude(): RouteGuideProto.Point.Builder ! optional int32 latitude = 1; clearLongitude fun clearLongitude(): RouteGuideProto.Point.Builder ! optional int32 longitude = 2; clearOneof fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Point.Builder ! clone fun clone(): RouteGuideProto.Point.Builder ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Point ! getDescriptor static fun getDescriptor(): Descriptor! getDescriptorForType fun getDescriptorForType(): Descriptor! getLatitude fun getLatitude(): Int optional int32 latitude = 1; getLongitude fun getLongitude(): Int optional int32 longitude = 2; hasLatitude fun hasLatitude(): Boolean optional int32 latitude = 1; hasLongitude fun hasLongitude(): Boolean optional int32 longitude = 2; internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean mergeFrom fun mergeFrom(other: Message!): RouteGuideProto.Point.Builder ! fun mergeFrom(other: RouteGuideProto.Point !): RouteGuideProto.Point.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point.Builder ! mergeUnknownFields fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder ! setField fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder ! setLatitude fun setLatitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 latitude = 1; setLongitude fun setLongitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 longitude = 2; setRepeatedField fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Point.Builder ! setUnknownFields fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder !","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/index.html#builder","text":"class Builder : Builder< RouteGuideProto.Point.Builder !>, RouteGuideProto.PointOrBuilder ``` Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). ``` Protobuf type routeguide.Point","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/index.html#functions","text":"Name Summary addRepeatedField fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder ! build fun build(): RouteGuideProto.Point ! buildPartial fun buildPartial(): RouteGuideProto.Point ! clear fun clear(): RouteGuideProto.Point.Builder ! clearField fun clearField(field: FieldDescriptor!): RouteGuideProto.Point.Builder ! clearLatitude fun clearLatitude(): RouteGuideProto.Point.Builder ! optional int32 latitude = 1; clearLongitude fun clearLongitude(): RouteGuideProto.Point.Builder ! optional int32 longitude = 2; clearOneof fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Point.Builder ! clone fun clone(): RouteGuideProto.Point.Builder ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Point ! getDescriptor static fun getDescriptor(): Descriptor! getDescriptorForType fun getDescriptorForType(): Descriptor! getLatitude fun getLatitude(): Int optional int32 latitude = 1; getLongitude fun getLongitude(): Int optional int32 longitude = 2; hasLatitude fun hasLatitude(): Boolean optional int32 latitude = 1; hasLongitude fun hasLongitude(): Boolean optional int32 longitude = 2; internalGetFieldAccessorTable fun internalGetFieldAccessorTable(): FieldAccessorTable! isInitialized fun isInitialized(): Boolean mergeFrom fun mergeFrom(other: Message!): RouteGuideProto.Point.Builder ! fun mergeFrom(other: RouteGuideProto.Point !): RouteGuideProto.Point.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point.Builder ! mergeUnknownFields fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder ! setField fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder ! setLatitude fun setLatitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 latitude = 1; setLongitude fun setLongitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 longitude = 2; setRepeatedField fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Point.Builder ! setUnknownFields fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder !","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/add-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / addRepeatedField addRepeatedField \u00b6 fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder !","title":"addRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/add-repeated-field.html#addrepeatedfield","text":"fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder !","title":"addRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/build-partial.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / buildPartial buildPartial \u00b6 fun buildPartial(): RouteGuideProto.Point !","title":"buildPartial - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/build-partial.html#buildpartial","text":"fun buildPartial(): RouteGuideProto.Point !","title":"buildPartial"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / build build \u00b6 fun build(): RouteGuideProto.Point !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/build.html#build","text":"fun build(): RouteGuideProto.Point !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / clearField clearField \u00b6 fun clearField(field: FieldDescriptor!): RouteGuideProto.Point.Builder !","title":"clearField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-field.html#clearfield","text":"fun clearField(field: FieldDescriptor!): RouteGuideProto.Point.Builder !","title":"clearField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / clearLatitude clearLatitude \u00b6 fun clearLatitude(): RouteGuideProto.Point.Builder ! optional int32 latitude = 1;","title":"clearLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-latitude.html#clearlatitude","text":"fun clearLatitude(): RouteGuideProto.Point.Builder ! optional int32 latitude = 1;","title":"clearLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / clearLongitude clearLongitude \u00b6 fun clearLongitude(): RouteGuideProto.Point.Builder ! optional int32 longitude = 2;","title":"clearLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-longitude.html#clearlongitude","text":"fun clearLongitude(): RouteGuideProto.Point.Builder ! optional int32 longitude = 2;","title":"clearLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-oneof.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / clearOneof clearOneof \u00b6 fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Point.Builder !","title":"clearOneof - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear-oneof.html#clearoneof","text":"fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Point.Builder !","title":"clearOneof"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / clear clear \u00b6 fun clear(): RouteGuideProto.Point.Builder !","title":"clear - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clear.html#clear","text":"fun clear(): RouteGuideProto.Point.Builder !","title":"clear"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clone.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / clone clone \u00b6 fun clone(): RouteGuideProto.Point.Builder !","title":"clone - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/clone.html#clone","text":"fun clone(): RouteGuideProto.Point.Builder !","title":"clone"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.Point !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.Point !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-descriptor-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / getDescriptorForType getDescriptorForType \u00b6 fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-descriptor-for-type.html#getdescriptorfortype","text":"fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / getLatitude getLatitude \u00b6 fun getLatitude(): Int Overrides PointOrBuilder.getLatitude optional int32 latitude = 1;","title":"getLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-latitude.html#getlatitude","text":"fun getLatitude(): Int Overrides PointOrBuilder.getLatitude optional int32 latitude = 1;","title":"getLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / getLongitude getLongitude \u00b6 fun getLongitude(): Int Overrides PointOrBuilder.getLongitude optional int32 longitude = 2;","title":"getLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/get-longitude.html#getlongitude","text":"fun getLongitude(): Int Overrides PointOrBuilder.getLongitude optional int32 longitude = 2;","title":"getLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/has-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / hasLatitude hasLatitude \u00b6 fun hasLatitude(): Boolean Overrides PointOrBuilder.hasLatitude optional int32 latitude = 1;","title":"hasLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/has-latitude.html#haslatitude","text":"fun hasLatitude(): Boolean Overrides PointOrBuilder.hasLatitude optional int32 latitude = 1;","title":"hasLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/has-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / hasLongitude hasLongitude \u00b6 fun hasLongitude(): Boolean Overrides PointOrBuilder.hasLongitude optional int32 longitude = 2;","title":"hasLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/has-longitude.html#haslongitude","text":"fun hasLongitude(): Boolean Overrides PointOrBuilder.hasLongitude optional int32 longitude = 2;","title":"hasLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/merge-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / mergeFrom mergeFrom \u00b6 fun mergeFrom(other: Message!): RouteGuideProto.Point.Builder ! fun mergeFrom(other: RouteGuideProto.Point !): RouteGuideProto.Point.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point.Builder !","title":"mergeFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/merge-from.html#mergefrom","text":"fun mergeFrom(other: Message!): RouteGuideProto.Point.Builder ! fun mergeFrom(other: RouteGuideProto.Point !): RouteGuideProto.Point.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Point.Builder !","title":"mergeFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/merge-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / mergeUnknownFields mergeUnknownFields \u00b6 fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder !","title":"mergeUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/merge-unknown-fields.html#mergeunknownfields","text":"fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder !","title":"mergeUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / setField setField \u00b6 fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder !","title":"setField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-field.html#setfield","text":"fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Point.Builder !","title":"setField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / setLatitude setLatitude \u00b6 fun setLatitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 latitude = 1;","title":"setLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-latitude.html#setlatitude","text":"fun setLatitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 latitude = 1;","title":"setLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / setLongitude setLongitude \u00b6 fun setLongitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 longitude = 2;","title":"setLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-longitude.html#setlongitude","text":"fun setLongitude(value: Int ): RouteGuideProto.Point.Builder ! optional int32 longitude = 2;","title":"setLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / setRepeatedField setRepeatedField \u00b6 fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Point.Builder !","title":"setRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-repeated-field.html#setrepeatedfield","text":"fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Point.Builder !","title":"setRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Point / Builder / setUnknownFields setUnknownFields \u00b6 fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder !","title":"setUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point/-builder/set-unknown-fields.html#setunknownfields","text":"fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Point.Builder !","title":"setUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / PointOrBuilder PointOrBuilder \u00b6 interface PointOrBuilder : MessageOrBuilder Functions \u00b6 Name Summary getLatitude abstract fun getLatitude(): Int optional int32 latitude = 1; getLongitude abstract fun getLongitude(): Int optional int32 longitude = 2; hasLatitude abstract fun hasLatitude(): Boolean optional int32 latitude = 1; hasLongitude abstract fun hasLongitude(): Boolean optional int32 longitude = 2; Inheritors \u00b6 Name Summary Builder class Builder : Builder< RouteGuideProto.Point.Builder !>, RouteGuideProto.PointOrBuilder Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` <br> Protobuf type `routeguide.Point` | | [Point](../-point/index.md) | `class Point : GeneratedMessageV3, `[`RouteGuideProto.PointOrBuilder`](./index.md)<br> Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` Protobuf type routeguide.Point |","title":"PointOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/index.html#pointorbuilder","text":"interface PointOrBuilder : MessageOrBuilder","title":"PointOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/index.html#functions","text":"Name Summary getLatitude abstract fun getLatitude(): Int optional int32 latitude = 1; getLongitude abstract fun getLongitude(): Int optional int32 longitude = 2; hasLatitude abstract fun hasLatitude(): Boolean optional int32 latitude = 1; hasLongitude abstract fun hasLongitude(): Boolean optional int32 longitude = 2;","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/index.html#inheritors","text":"Name Summary Builder class Builder : Builder< RouteGuideProto.Point.Builder !>, RouteGuideProto.PointOrBuilder Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` <br> Protobuf type `routeguide.Point` | | [Point](../-point/index.md) | `class Point : GeneratedMessageV3, `[`RouteGuideProto.PointOrBuilder`](./index.md)<br> Points are represented as latitude-longitude pairs in the E7 representation (degrees multiplied by 10**7 and rounded to the nearest integer). Latitudes should be in the range +/- 90 degrees and longitude should be in the range +/- 180 degrees (inclusive). <br>``` Protobuf type routeguide.Point |","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/get-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / PointOrBuilder / getLatitude getLatitude \u00b6 abstract fun getLatitude(): Int optional int32 latitude = 1;","title":"getLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/get-latitude.html#getlatitude","text":"abstract fun getLatitude(): Int optional int32 latitude = 1;","title":"getLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/get-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / PointOrBuilder / getLongitude getLongitude \u00b6 abstract fun getLongitude(): Int optional int32 longitude = 2;","title":"getLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/get-longitude.html#getlongitude","text":"abstract fun getLongitude(): Int optional int32 longitude = 2;","title":"getLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/has-latitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / PointOrBuilder / hasLatitude hasLatitude \u00b6 abstract fun hasLatitude(): Boolean optional int32 latitude = 1;","title":"hasLatitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/has-latitude.html#haslatitude","text":"abstract fun hasLatitude(): Boolean optional int32 latitude = 1;","title":"hasLatitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/has-longitude.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / PointOrBuilder / hasLongitude hasLongitude \u00b6 abstract fun hasLongitude(): Boolean optional int32 longitude = 2;","title":"hasLongitude - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-point-or-builder/has-longitude.html#haslongitude","text":"abstract fun hasLongitude(): Boolean optional int32 longitude = 2;","title":"hasLongitude"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle Rectangle \u00b6 class Rectangle : GeneratedMessageV3, RouteGuideProto.RectangleOrBuilder A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". ``` Protobuf type `routeguide.Rectangle` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.Rectangle.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.RectangleOrBuilder`](../-rectangle-or-builder/index.md)<br> A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` Protobuf type routeguide.Rectangle | Properties \u00b6 Name Summary HI_FIELD_NUMBER static val HI_FIELD_NUMBER: Int LO_FIELD_NUMBER static val LO_FIELD_NUMBER: Int Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.Rectangle ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Rectangle ! getDescriptor static fun getDescriptor(): Descriptor! getHi fun getHi(): RouteGuideProto.Point ! The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [getHiOrBuilder](get-hi-or-builder.md) | `fun getHiOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getLo | fun getLo(): RouteGuideProto.Point ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [getLoOrBuilder](get-lo-or-builder.md) | `fun getLoOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | getParserForType | fun getParserForType(): Parser< RouteGuideProto.Rectangle !>! | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hashCode | fun hashCode(): Int | | hasHi | fun hasHi(): Boolean The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [hasLo](has-lo.md) | `fun hasLo(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.Rectangle.Builder ! static fun newBuilder(prototype: RouteGuideProto.Rectangle !): RouteGuideProto.Rectangle.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.Rectangle.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Rectangle.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! | | parser | static fun parser(): Parser< RouteGuideProto.Rectangle !>! | | toBuilder | fun toBuilder(): RouteGuideProto.Rectangle.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"Rectangle - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/index.html#rectangle","text":"class Rectangle : GeneratedMessageV3, RouteGuideProto.RectangleOrBuilder A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". ``` Protobuf type `routeguide.Rectangle` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.Rectangle.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.RectangleOrBuilder`](../-rectangle-or-builder/index.md)<br> A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` Protobuf type routeguide.Rectangle |","title":"Rectangle"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/index.html#properties","text":"Name Summary HI_FIELD_NUMBER static val HI_FIELD_NUMBER: Int LO_FIELD_NUMBER static val LO_FIELD_NUMBER: Int","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.Rectangle ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.Rectangle ! getDescriptor static fun getDescriptor(): Descriptor! getHi fun getHi(): RouteGuideProto.Point ! The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [getHiOrBuilder](get-hi-or-builder.md) | `fun getHiOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getLo | fun getLo(): RouteGuideProto.Point ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [getLoOrBuilder](get-lo-or-builder.md) | `fun getLoOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | getParserForType | fun getParserForType(): Parser< RouteGuideProto.Rectangle !>! | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hashCode | fun hashCode(): Int | | hasHi | fun hasHi(): Boolean The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [hasLo](has-lo.md) | `fun hasLo(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.Rectangle.Builder ! static fun newBuilder(prototype: RouteGuideProto.Rectangle !): RouteGuideProto.Rectangle.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.Rectangle.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Rectangle.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! | | parser | static fun parser(): Parser< RouteGuideProto.Rectangle !>! | | toBuilder | fun toBuilder(): RouteGuideProto.Rectangle.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-h-i_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / HI_FIELD_NUMBER HI_FIELD_NUMBER \u00b6 static val HI_FIELD_NUMBER: Int","title":"HI_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-h-i_-f-i-e-l-d_-n-u-m-b-e-r.html#hi_field_number","text":"static val HI_FIELD_NUMBER: Int","title":"HI_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-l-o_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / LO_FIELD_NUMBER LO_FIELD_NUMBER \u00b6 static val LO_FIELD_NUMBER: Int","title":"LO_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-l-o_-f-i-e-l-d_-n-u-m-b-e-r.html#lo_field_number","text":"static val LO_FIELD_NUMBER: Int","title":"LO_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/equals.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.Rectangle !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.Rectangle !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-default-instance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getDefaultInstance getDefaultInstance \u00b6 static fun getDefaultInstance(): RouteGuideProto.Rectangle !","title":"getDefaultInstance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-default-instance.html#getdefaultinstance","text":"static fun getDefaultInstance(): RouteGuideProto.Rectangle !","title":"getDefaultInstance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-hi-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getHiOrBuilder getHiOrBuilder \u00b6 fun getHiOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getHiOrBuilder ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-hi-or-builder.html#gethiorbuilder","text":"fun getHiOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getHiOrBuilder ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getHi getHi \u00b6 fun getHi(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-hi.html#gethi","text":"fun getHi(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-lo-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getLoOrBuilder getLoOrBuilder \u00b6 fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getLoOrBuilder ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-lo-or-builder.html#getloorbuilder","text":"fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getLoOrBuilder ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getLo getLo \u00b6 fun getLo(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-lo.html#getlo","text":"fun getLo(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-parser-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getParserForType getParserForType \u00b6 fun getParserForType(): Parser< RouteGuideProto.Rectangle !>!","title":"getParserForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-parser-for-type.html#getparserfortype","text":"fun getParserForType(): Parser< RouteGuideProto.Rectangle !>!","title":"getParserForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-serialized-size.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getSerializedSize getSerializedSize \u00b6 fun getSerializedSize(): Int","title":"getSerializedSize - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-serialized-size.html#getserializedsize","text":"fun getSerializedSize(): Int","title":"getSerializedSize"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / getUnknownFields getUnknownFields \u00b6 fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/get-unknown-fields.html#getunknownfields","text":"fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/has-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / hasHi hasHi \u00b6 fun hasHi(): Boolean Overrides RectangleOrBuilder.hasHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"hasHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/has-hi.html#hashi","text":"fun hasHi(): Boolean Overrides RectangleOrBuilder.hasHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"hasHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/has-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / hasLo hasLo \u00b6 fun hasLo(): Boolean Overrides RectangleOrBuilder.hasLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"hasLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/has-lo.html#haslo","text":"fun hasLo(): Boolean Overrides RectangleOrBuilder.hasLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"hasLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/hash-code.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/new-builder-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / newBuilderForType newBuilderForType \u00b6 fun newBuilderForType(): RouteGuideProto.Rectangle.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Rectangle.Builder !","title":"newBuilderForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/new-builder-for-type.html#newbuilderfortype","text":"fun newBuilderForType(): RouteGuideProto.Rectangle.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.Rectangle.Builder !","title":"newBuilderForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/new-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / newBuilder newBuilder \u00b6 static fun newBuilder(): RouteGuideProto.Rectangle.Builder ! static fun newBuilder(prototype: RouteGuideProto.Rectangle !): RouteGuideProto.Rectangle.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/new-builder.html#newbuilder","text":"static fun newBuilder(): RouteGuideProto.Rectangle.Builder ! static fun newBuilder(prototype: RouteGuideProto.Rectangle !): RouteGuideProto.Rectangle.Builder !","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/parse-delimited-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / parseDelimitedFrom parseDelimitedFrom \u00b6 static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle !","title":"parseDelimitedFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/parse-delimited-from.html#parsedelimitedfrom","text":"static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle !","title":"parseDelimitedFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/parse-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / parseFrom parseFrom \u00b6 static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle !","title":"parseFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/parse-from.html#parsefrom","text":"static fun parseFrom(data: ByteBuffer !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !): RouteGuideProto.Rectangle ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !): RouteGuideProto.Rectangle ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.Rectangle ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle !","title":"parseFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/parser.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / parser parser \u00b6 static fun parser(): Parser< RouteGuideProto.Rectangle !>!","title":"parser - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/parser.html#parser","text":"static fun parser(): Parser< RouteGuideProto.Rectangle !>!","title":"parser"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/to-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / toBuilder toBuilder \u00b6 fun toBuilder(): RouteGuideProto.Rectangle.Builder !","title":"toBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/to-builder.html#tobuilder","text":"fun toBuilder(): RouteGuideProto.Rectangle.Builder !","title":"toBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/write-to.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / writeTo writeTo \u00b6 fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/write-to.html#writeto","text":"fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder Builder \u00b6 class Builder : Builder< RouteGuideProto.Rectangle.Builder !>, RouteGuideProto.RectangleOrBuilder A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". ``` Protobuf type `routeguide.Rectangle` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.Rectangle`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.Rectangle`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [clearField](clear-field.md) | `fun clearField(field: FieldDescriptor!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [clearHi](clear-hi.md) | `fun clearHi(): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | clearLo | fun clearLo(): RouteGuideProto.Rectangle.Builder ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [clearOneof](clear-oneof.md) | `fun clearOneof(oneof: OneofDescriptor!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.Rectangle`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getHi](get-hi.md) | `fun getHi(): `[`RouteGuideProto.Point`](../../-point/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getHiBuilder | fun getHiBuilder(): RouteGuideProto.Point.Builder ! The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [getHiOrBuilder](get-hi-or-builder.md) | `fun getHiOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../../-point-or-builder/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getLo | fun getLo(): RouteGuideProto.Point ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [getLoBuilder](get-lo-builder.md) | `fun getLoBuilder(): `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!`<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | getLoOrBuilder | fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [hasHi](has-hi.md) | `fun hasHi(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | hasLo | fun hasLo(): Boolean One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [internalGetFieldAccessorTable](internal-get-field-accessor-table.md) | `fun internalGetFieldAccessorTable(): FieldAccessorTable!` | | [isInitialized](is-initialized.md) | `fun isInitialized(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) | | [mergeFrom](merge-from.md) | `fun mergeFrom(other: Message!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br>`fun mergeFrom(other: `[`RouteGuideProto.Rectangle`](../index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br>`fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [mergeHi](merge-hi.md) | `fun mergeHi(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | mergeLo | fun mergeLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [setField](set-field.md) | `fun setField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [setHi](set-hi.md) | `fun setHi(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br>`fun setHi(builderForValue: `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | setLo | fun setLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! fun setLo(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Rectangle.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Rectangle.Builder ! |","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/index.html#builder","text":"class Builder : Builder< RouteGuideProto.Rectangle.Builder !>, RouteGuideProto.RectangleOrBuilder A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". ``` Protobuf type `routeguide.Rectangle` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.Rectangle`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.Rectangle`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [clearField](clear-field.md) | `fun clearField(field: FieldDescriptor!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [clearHi](clear-hi.md) | `fun clearHi(): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | clearLo | fun clearLo(): RouteGuideProto.Rectangle.Builder ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [clearOneof](clear-oneof.md) | `fun clearOneof(oneof: OneofDescriptor!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.Rectangle`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getHi](get-hi.md) | `fun getHi(): `[`RouteGuideProto.Point`](../../-point/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getHiBuilder | fun getHiBuilder(): RouteGuideProto.Point.Builder ! The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [getHiOrBuilder](get-hi-or-builder.md) | `fun getHiOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../../-point-or-builder/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getLo | fun getLo(): RouteGuideProto.Point ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [getLoBuilder](get-lo-builder.md) | `fun getLoBuilder(): `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!`<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | getLoOrBuilder | fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [hasHi](has-hi.md) | `fun hasHi(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | hasLo | fun hasLo(): Boolean One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [internalGetFieldAccessorTable](internal-get-field-accessor-table.md) | `fun internalGetFieldAccessorTable(): FieldAccessorTable!` | | [isInitialized](is-initialized.md) | `fun isInitialized(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) | | [mergeFrom](merge-from.md) | `fun mergeFrom(other: Message!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br>`fun mergeFrom(other: `[`RouteGuideProto.Rectangle`](../index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br>`fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [mergeHi](merge-hi.md) | `fun mergeHi(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | mergeLo | fun mergeLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [setField](set-field.md) | `fun setField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!` | | [setHi](set-hi.md) | `fun setHi(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br>`fun setHi(builderForValue: `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!): `[`RouteGuideProto.Rectangle.Builder`](./index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | setLo | fun setLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! fun setLo(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Rectangle.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Rectangle.Builder ! |","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/add-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / addRepeatedField addRepeatedField \u00b6 fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Rectangle.Builder !","title":"addRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/add-repeated-field.html#addrepeatedfield","text":"fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Rectangle.Builder !","title":"addRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/build-partial.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / buildPartial buildPartial \u00b6 fun buildPartial(): RouteGuideProto.Rectangle !","title":"buildPartial - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/build-partial.html#buildpartial","text":"fun buildPartial(): RouteGuideProto.Rectangle !","title":"buildPartial"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / build build \u00b6 fun build(): RouteGuideProto.Rectangle !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/build.html#build","text":"fun build(): RouteGuideProto.Rectangle !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / clearField clearField \u00b6 fun clearField(field: FieldDescriptor!): RouteGuideProto.Rectangle.Builder !","title":"clearField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-field.html#clearfield","text":"fun clearField(field: FieldDescriptor!): RouteGuideProto.Rectangle.Builder !","title":"clearField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / clearHi clearHi \u00b6 fun clearHi(): RouteGuideProto.Rectangle.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"clearHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-hi.html#clearhi","text":"fun clearHi(): RouteGuideProto.Rectangle.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"clearHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / clearLo clearLo \u00b6 fun clearLo(): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"clearLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-lo.html#clearlo","text":"fun clearLo(): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"clearLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-oneof.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / clearOneof clearOneof \u00b6 fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Rectangle.Builder !","title":"clearOneof - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear-oneof.html#clearoneof","text":"fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.Rectangle.Builder !","title":"clearOneof"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / clear clear \u00b6 fun clear(): RouteGuideProto.Rectangle.Builder !","title":"clear - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clear.html#clear","text":"fun clear(): RouteGuideProto.Rectangle.Builder !","title":"clear"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clone.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / clone clone \u00b6 fun clone(): RouteGuideProto.Rectangle.Builder !","title":"clone - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/clone.html#clone","text":"fun clone(): RouteGuideProto.Rectangle.Builder !","title":"clone"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.Rectangle !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.Rectangle !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-descriptor-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getDescriptorForType getDescriptorForType \u00b6 fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-descriptor-for-type.html#getdescriptorfortype","text":"fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-hi-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getHiBuilder getHiBuilder \u00b6 fun getHiBuilder(): RouteGuideProto.Point.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-hi-builder.html#gethibuilder","text":"fun getHiBuilder(): RouteGuideProto.Point.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-hi-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getHiOrBuilder getHiOrBuilder \u00b6 fun getHiOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getHiOrBuilder ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-hi-or-builder.html#gethiorbuilder","text":"fun getHiOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getHiOrBuilder ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getHi getHi \u00b6 fun getHi(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-hi.html#gethi","text":"fun getHi(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-lo-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getLoBuilder getLoBuilder \u00b6 fun getLoBuilder(): RouteGuideProto.Point.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-lo-builder.html#getlobuilder","text":"fun getLoBuilder(): RouteGuideProto.Point.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-lo-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getLoOrBuilder getLoOrBuilder \u00b6 fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getLoOrBuilder ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-lo-or-builder.html#getloorbuilder","text":"fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RectangleOrBuilder.getLoOrBuilder ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / getLo getLo \u00b6 fun getLo(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/get-lo.html#getlo","text":"fun getLo(): RouteGuideProto.Point ! Overrides RectangleOrBuilder.getLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/has-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / hasHi hasHi \u00b6 fun hasHi(): Boolean Overrides RectangleOrBuilder.hasHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"hasHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/has-hi.html#hashi","text":"fun hasHi(): Boolean Overrides RectangleOrBuilder.hasHi ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"hasHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/has-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / hasLo hasLo \u00b6 fun hasLo(): Boolean Overrides RectangleOrBuilder.hasLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"hasLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/has-lo.html#haslo","text":"fun hasLo(): Boolean Overrides RectangleOrBuilder.hasLo ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"hasLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / mergeFrom mergeFrom \u00b6 fun mergeFrom(other: Message!): RouteGuideProto.Rectangle.Builder ! fun mergeFrom(other: RouteGuideProto.Rectangle !): RouteGuideProto.Rectangle.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle.Builder !","title":"mergeFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-from.html#mergefrom","text":"fun mergeFrom(other: Message!): RouteGuideProto.Rectangle.Builder ! fun mergeFrom(other: RouteGuideProto.Rectangle !): RouteGuideProto.Rectangle.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.Rectangle.Builder !","title":"mergeFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / mergeHi mergeHi \u00b6 fun mergeHi(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"mergeHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-hi.html#mergehi","text":"fun mergeHi(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"mergeHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / mergeLo mergeLo \u00b6 fun mergeLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"mergeLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-lo.html#mergelo","text":"fun mergeLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"mergeLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / mergeUnknownFields mergeUnknownFields \u00b6 fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Rectangle.Builder !","title":"mergeUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/merge-unknown-fields.html#mergeunknownfields","text":"fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Rectangle.Builder !","title":"mergeUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / setField setField \u00b6 fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Rectangle.Builder !","title":"setField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-field.html#setfield","text":"fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.Rectangle.Builder !","title":"setField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / setHi setHi \u00b6 fun setHi(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! fun setHi(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Rectangle.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"setHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-hi.html#sethi","text":"fun setHi(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! fun setHi(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Rectangle.Builder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"setHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / setLo setLo \u00b6 fun setLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! fun setLo(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"setLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-lo.html#setlo","text":"fun setLo(value: RouteGuideProto.Point !): RouteGuideProto.Rectangle.Builder ! fun setLo(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.Rectangle.Builder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"setLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / setRepeatedField setRepeatedField \u00b6 fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Rectangle.Builder !","title":"setRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-repeated-field.html#setrepeatedfield","text":"fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.Rectangle.Builder !","title":"setRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / Rectangle / Builder / setUnknownFields setUnknownFields \u00b6 fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Rectangle.Builder !","title":"setUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle/-builder/set-unknown-fields.html#setunknownfields","text":"fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.Rectangle.Builder !","title":"setUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RectangleOrBuilder RectangleOrBuilder \u00b6 interface RectangleOrBuilder : MessageOrBuilder Functions \u00b6 Name Summary getHi abstract fun getHi(): RouteGuideProto.Point ! The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [getHiOrBuilder](get-hi-or-builder.md) | `abstract fun getHiOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getLo | abstract fun getLo(): RouteGuideProto.Point ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [getLoOrBuilder](get-lo-or-builder.md) | `abstract fun getLoOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | hasHi | abstract fun hasHi(): Boolean The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [hasLo](has-lo.md) | `abstract fun hasLo(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | Inheritors \u00b6 Name Summary Builder class Builder : Builder< RouteGuideProto.Rectangle.Builder !>, RouteGuideProto.RectangleOrBuilder A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` <br> Protobuf type `routeguide.Rectangle` | | [Rectangle](../-rectangle/index.md) | `class Rectangle : GeneratedMessageV3, `[`RouteGuideProto.RectangleOrBuilder`](./index.md)<br> A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` Protobuf type routeguide.Rectangle |","title":"RectangleOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/index.html#rectangleorbuilder","text":"interface RectangleOrBuilder : MessageOrBuilder","title":"RectangleOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/index.html#functions","text":"Name Summary getHi abstract fun getHi(): RouteGuideProto.Point ! The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [getHiOrBuilder](get-hi-or-builder.md) | `abstract fun getHiOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The other corner of the rectangle. <br>``` optional .routeguide.Point hi = 2; | | getLo | abstract fun getLo(): RouteGuideProto.Point ! One corner of the rectangle. <br>``` <br> `optional .routeguide.Point lo = 1;` | | [getLoOrBuilder](get-lo-or-builder.md) | `abstract fun getLoOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; | | hasHi | abstract fun hasHi(): Boolean The other corner of the rectangle. <br>``` <br> `optional .routeguide.Point hi = 2;` | | [hasLo](has-lo.md) | `abstract fun hasLo(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> One corner of the rectangle. <br>``` optional .routeguide.Point lo = 1; |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/index.html#inheritors","text":"Name Summary Builder class Builder : Builder< RouteGuideProto.Rectangle.Builder !>, RouteGuideProto.RectangleOrBuilder A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` <br> Protobuf type `routeguide.Rectangle` | | [Rectangle](../-rectangle/index.md) | `class Rectangle : GeneratedMessageV3, `[`RouteGuideProto.RectangleOrBuilder`](./index.md)<br> A latitude-longitude rectangle, represented as two diagonally opposite points \"lo\" and \"hi\". <br>``` Protobuf type routeguide.Rectangle |","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-hi-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RectangleOrBuilder / getHiOrBuilder getHiOrBuilder \u00b6 abstract fun getHiOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-hi-or-builder.html#gethiorbuilder","text":"abstract fun getHiOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHiOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RectangleOrBuilder / getHi getHi \u00b6 abstract fun getHi(): RouteGuideProto.Point ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-hi.html#gethi","text":"abstract fun getHi(): RouteGuideProto.Point ! ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"getHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-lo-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RectangleOrBuilder / getLoOrBuilder getLoOrBuilder \u00b6 abstract fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-lo-or-builder.html#getloorbuilder","text":"abstract fun getLoOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLoOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RectangleOrBuilder / getLo getLo \u00b6 abstract fun getLo(): RouteGuideProto.Point ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/get-lo.html#getlo","text":"abstract fun getLo(): RouteGuideProto.Point ! ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"getLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/has-hi.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RectangleOrBuilder / hasHi hasHi \u00b6 abstract fun hasHi(): Boolean ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"hasHi - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/has-hi.html#hashi","text":"abstract fun hasHi(): Boolean ``` The other corner of the rectangle. ``` optional .routeguide.Point hi = 2;","title":"hasHi"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/has-lo.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RectangleOrBuilder / hasLo hasLo \u00b6 abstract fun hasLo(): Boolean ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"hasLo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-rectangle-or-builder/has-lo.html#haslo","text":"abstract fun hasLo(): Boolean ``` One corner of the rectangle. ``` optional .routeguide.Point lo = 1;","title":"hasLo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote RouteNote \u00b6 class RouteNote : GeneratedMessageV3, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. ``` Protobuf type `routeguide.RouteNote` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.RouteNote.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.RouteNoteOrBuilder`](../-route-note-or-builder/index.md)<br> A RouteNote is a message sent while at a given point. <br>``` Protobuf type routeguide.RouteNote | Properties \u00b6 Name Summary LOCATION_FIELD_NUMBER static val LOCATION_FIELD_NUMBER: Int MESSAGE_FIELD_NUMBER static val MESSAGE_FIELD_NUMBER: Int Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.RouteNote ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.RouteNote ! getDescriptor static fun getDescriptor(): Descriptor! getLocation fun getLocation(): RouteGuideProto.Point ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getMessage | fun getMessage(): String ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [getMessageBytes](get-message-bytes.md) | `fun getMessageBytes(): ByteString!`<br> The message to be sent. <br>``` optional string message = 2; | | getParserForType | fun getParserForType(): Parser< RouteGuideProto.RouteNote !>! | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hashCode | fun hashCode(): Int | | hasLocation | fun hasLocation(): Boolean The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [hasMessage](has-message.md) | `fun hasMessage(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The message to be sent. <br>``` optional string message = 2; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.RouteNote.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.RouteNote.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteNote.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! | | parser | static fun parser(): Parser< RouteGuideProto.RouteNote !>! | | toBuilder | fun toBuilder(): RouteGuideProto.RouteNote.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"RouteNote - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/index.html#routenote","text":"class RouteNote : GeneratedMessageV3, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. ``` Protobuf type `routeguide.RouteNote` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.RouteNote.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.RouteNoteOrBuilder`](../-route-note-or-builder/index.md)<br> A RouteNote is a message sent while at a given point. <br>``` Protobuf type routeguide.RouteNote |","title":"RouteNote"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/index.html#properties","text":"Name Summary LOCATION_FIELD_NUMBER static val LOCATION_FIELD_NUMBER: Int MESSAGE_FIELD_NUMBER static val MESSAGE_FIELD_NUMBER: Int","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.RouteNote ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.RouteNote ! getDescriptor static fun getDescriptor(): Descriptor! getLocation fun getLocation(): RouteGuideProto.Point ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getMessage | fun getMessage(): String ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [getMessageBytes](get-message-bytes.md) | `fun getMessageBytes(): ByteString!`<br> The message to be sent. <br>``` optional string message = 2; | | getParserForType | fun getParserForType(): Parser< RouteGuideProto.RouteNote !>! | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hashCode | fun hashCode(): Int | | hasLocation | fun hasLocation(): Boolean The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [hasMessage](has-message.md) | `fun hasMessage(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The message to be sent. <br>``` optional string message = 2; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.RouteNote.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.RouteNote.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteNote.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! | | parser | static fun parser(): Parser< RouteGuideProto.RouteNote !>! | | toBuilder | fun toBuilder(): RouteGuideProto.RouteNote.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-l-o-c-a-t-i-o-n_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / LOCATION_FIELD_NUMBER LOCATION_FIELD_NUMBER \u00b6 static val LOCATION_FIELD_NUMBER: Int","title":"LOCATION_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-l-o-c-a-t-i-o-n_-f-i-e-l-d_-n-u-m-b-e-r.html#location_field_number","text":"static val LOCATION_FIELD_NUMBER: Int","title":"LOCATION_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-m-e-s-s-a-g-e_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / MESSAGE_FIELD_NUMBER MESSAGE_FIELD_NUMBER \u00b6 static val MESSAGE_FIELD_NUMBER: Int","title":"MESSAGE_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-m-e-s-s-a-g-e_-f-i-e-l-d_-n-u-m-b-e-r.html#message_field_number","text":"static val MESSAGE_FIELD_NUMBER: Int","title":"MESSAGE_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/equals.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.RouteNote !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.RouteNote !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-default-instance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getDefaultInstance getDefaultInstance \u00b6 static fun getDefaultInstance(): RouteGuideProto.RouteNote !","title":"getDefaultInstance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-default-instance.html#getdefaultinstance","text":"static fun getDefaultInstance(): RouteGuideProto.RouteNote !","title":"getDefaultInstance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-location-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getLocationOrBuilder getLocationOrBuilder \u00b6 fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RouteNoteOrBuilder.getLocationOrBuilder ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-location-or-builder.html#getlocationorbuilder","text":"fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RouteNoteOrBuilder.getLocationOrBuilder ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getLocation getLocation \u00b6 fun getLocation(): RouteGuideProto.Point ! Overrides RouteNoteOrBuilder.getLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-location.html#getlocation","text":"fun getLocation(): RouteGuideProto.Point ! Overrides RouteNoteOrBuilder.getLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-message-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getMessageBytes getMessageBytes \u00b6 fun getMessageBytes(): ByteString! Overrides RouteNoteOrBuilder.getMessageBytes ``` The message to be sent. ``` optional string message = 2;","title":"getMessageBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-message-bytes.html#getmessagebytes","text":"fun getMessageBytes(): ByteString! Overrides RouteNoteOrBuilder.getMessageBytes ``` The message to be sent. ``` optional string message = 2;","title":"getMessageBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getMessage getMessage \u00b6 fun getMessage(): String ! Overrides RouteNoteOrBuilder.getMessage ``` The message to be sent. ``` optional string message = 2;","title":"getMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-message.html#getmessage","text":"fun getMessage(): String ! Overrides RouteNoteOrBuilder.getMessage ``` The message to be sent. ``` optional string message = 2;","title":"getMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-parser-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getParserForType getParserForType \u00b6 fun getParserForType(): Parser< RouteGuideProto.RouteNote !>!","title":"getParserForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-parser-for-type.html#getparserfortype","text":"fun getParserForType(): Parser< RouteGuideProto.RouteNote !>!","title":"getParserForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-serialized-size.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getSerializedSize getSerializedSize \u00b6 fun getSerializedSize(): Int","title":"getSerializedSize - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-serialized-size.html#getserializedsize","text":"fun getSerializedSize(): Int","title":"getSerializedSize"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / getUnknownFields getUnknownFields \u00b6 fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/get-unknown-fields.html#getunknownfields","text":"fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/has-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / hasLocation hasLocation \u00b6 fun hasLocation(): Boolean Overrides RouteNoteOrBuilder.hasLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"hasLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/has-location.html#haslocation","text":"fun hasLocation(): Boolean Overrides RouteNoteOrBuilder.hasLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"hasLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/has-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / hasMessage hasMessage \u00b6 fun hasMessage(): Boolean Overrides RouteNoteOrBuilder.hasMessage ``` The message to be sent. ``` optional string message = 2;","title":"hasMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/has-message.html#hasmessage","text":"fun hasMessage(): Boolean Overrides RouteNoteOrBuilder.hasMessage ``` The message to be sent. ``` optional string message = 2;","title":"hasMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/hash-code.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/new-builder-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / newBuilderForType newBuilderForType \u00b6 fun newBuilderForType(): RouteGuideProto.RouteNote.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteNote.Builder !","title":"newBuilderForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/new-builder-for-type.html#newbuilderfortype","text":"fun newBuilderForType(): RouteGuideProto.RouteNote.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteNote.Builder !","title":"newBuilderForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/new-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / newBuilder newBuilder \u00b6 static fun newBuilder(): RouteGuideProto.RouteNote.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/new-builder.html#newbuilder","text":"static fun newBuilder(): RouteGuideProto.RouteNote.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder !","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/parse-delimited-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / parseDelimitedFrom parseDelimitedFrom \u00b6 static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote !","title":"parseDelimitedFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/parse-delimited-from.html#parsedelimitedfrom","text":"static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote !","title":"parseDelimitedFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/parse-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / parseFrom parseFrom \u00b6 static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote !","title":"parseFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/parse-from.html#parsefrom","text":"static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteNote ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteNote ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteNote ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote !","title":"parseFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/parser.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / parser parser \u00b6 static fun parser(): Parser< RouteGuideProto.RouteNote !>!","title":"parser - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/parser.html#parser","text":"static fun parser(): Parser< RouteGuideProto.RouteNote !>!","title":"parser"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/to-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / toBuilder toBuilder \u00b6 fun toBuilder(): RouteGuideProto.RouteNote.Builder !","title":"toBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/to-builder.html#tobuilder","text":"fun toBuilder(): RouteGuideProto.RouteNote.Builder !","title":"toBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/write-to.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / writeTo writeTo \u00b6 fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/write-to.html#writeto","text":"fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder Builder \u00b6 class Builder : Builder< RouteGuideProto.RouteNote.Builder !>, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. ``` Protobuf type `routeguide.RouteNote` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.RouteNote`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.RouteNote`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [clearField](clear-field.md) | `fun clearField(field: FieldDescriptor!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [clearLocation](clear-location.md) | `fun clearLocation(): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | clearMessage | fun clearMessage(): RouteGuideProto.RouteNote.Builder ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [clearOneof](clear-oneof.md) | `fun clearOneof(oneof: OneofDescriptor!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.RouteNote`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getLocation](get-location.md) | `fun getLocation(): `[`RouteGuideProto.Point`](../../-point/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getLocationBuilder | fun getLocationBuilder(): RouteGuideProto.Point.Builder ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../../-point-or-builder/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getMessage | fun getMessage(): String ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [getMessageBytes](get-message-bytes.md) | `fun getMessageBytes(): ByteString!`<br> The message to be sent. <br>``` optional string message = 2; | | hasLocation | fun hasLocation(): Boolean The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [hasMessage](has-message.md) | `fun hasMessage(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The message to be sent. <br>``` optional string message = 2; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | mergeFrom | fun mergeFrom(other: Message!): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(other: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote.Builder ! | | mergeLocation | fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.RouteNote.Builder ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [setField](set-field.md) | `fun setField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [setLocation](set-location.md) | `fun setLocation(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br>`fun setLocation(builderForValue: `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | setMessage | fun setMessage(value: String !): RouteGuideProto.RouteNote.Builder ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [setMessageBytes](set-message-bytes.md) | `fun setMessageBytes(value: ByteString!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br> The message to be sent. <br>``` optional string message = 2; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteNote.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteNote.Builder ! |","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/index.html#builder","text":"class Builder : Builder< RouteGuideProto.RouteNote.Builder !>, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. ``` Protobuf type `routeguide.RouteNote` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.RouteNote`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.RouteNote`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [clearField](clear-field.md) | `fun clearField(field: FieldDescriptor!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [clearLocation](clear-location.md) | `fun clearLocation(): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | clearMessage | fun clearMessage(): RouteGuideProto.RouteNote.Builder ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [clearOneof](clear-oneof.md) | `fun clearOneof(oneof: OneofDescriptor!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.RouteNote`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getLocation](get-location.md) | `fun getLocation(): `[`RouteGuideProto.Point`](../../-point/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getLocationBuilder | fun getLocationBuilder(): RouteGuideProto.Point.Builder ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [getLocationOrBuilder](get-location-or-builder.md) | `fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../../-point-or-builder/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getMessage | fun getMessage(): String ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [getMessageBytes](get-message-bytes.md) | `fun getMessageBytes(): ByteString!`<br> The message to be sent. <br>``` optional string message = 2; | | hasLocation | fun hasLocation(): Boolean The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [hasMessage](has-message.md) | `fun hasMessage(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The message to be sent. <br>``` optional string message = 2; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | mergeFrom | fun mergeFrom(other: Message!): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(other: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote.Builder ! | | mergeLocation | fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.RouteNote.Builder ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [setField](set-field.md) | `fun setField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!` | | [setLocation](set-location.md) | `fun setLocation(value: `[`RouteGuideProto.Point`](../../-point/index.md)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br>`fun setLocation(builderForValue: `[`RouteGuideProto.Point.Builder`](../../-point/-builder/index.md)`!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | setMessage | fun setMessage(value: String !): RouteGuideProto.RouteNote.Builder ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [setMessageBytes](set-message-bytes.md) | `fun setMessageBytes(value: ByteString!): `[`RouteGuideProto.RouteNote.Builder`](./index.md)`!`<br> The message to be sent. <br>``` optional string message = 2; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteNote.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteNote.Builder ! |","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/add-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / addRepeatedField addRepeatedField \u00b6 fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteNote.Builder !","title":"addRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/add-repeated-field.html#addrepeatedfield","text":"fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteNote.Builder !","title":"addRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/build-partial.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / buildPartial buildPartial \u00b6 fun buildPartial(): RouteGuideProto.RouteNote !","title":"buildPartial - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/build-partial.html#buildpartial","text":"fun buildPartial(): RouteGuideProto.RouteNote !","title":"buildPartial"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / build build \u00b6 fun build(): RouteGuideProto.RouteNote !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/build.html#build","text":"fun build(): RouteGuideProto.RouteNote !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / clearField clearField \u00b6 fun clearField(field: FieldDescriptor!): RouteGuideProto.RouteNote.Builder !","title":"clearField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-field.html#clearfield","text":"fun clearField(field: FieldDescriptor!): RouteGuideProto.RouteNote.Builder !","title":"clearField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / clearLocation clearLocation \u00b6 fun clearLocation(): RouteGuideProto.RouteNote.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"clearLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-location.html#clearlocation","text":"fun clearLocation(): RouteGuideProto.RouteNote.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"clearLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / clearMessage clearMessage \u00b6 fun clearMessage(): RouteGuideProto.RouteNote.Builder ! ``` The message to be sent. ``` optional string message = 2;","title":"clearMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-message.html#clearmessage","text":"fun clearMessage(): RouteGuideProto.RouteNote.Builder ! ``` The message to be sent. ``` optional string message = 2;","title":"clearMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-oneof.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / clearOneof clearOneof \u00b6 fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.RouteNote.Builder !","title":"clearOneof - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear-oneof.html#clearoneof","text":"fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.RouteNote.Builder !","title":"clearOneof"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / clear clear \u00b6 fun clear(): RouteGuideProto.RouteNote.Builder !","title":"clear - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clear.html#clear","text":"fun clear(): RouteGuideProto.RouteNote.Builder !","title":"clear"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clone.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / clone clone \u00b6 fun clone(): RouteGuideProto.RouteNote.Builder !","title":"clone - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/clone.html#clone","text":"fun clone(): RouteGuideProto.RouteNote.Builder !","title":"clone"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.RouteNote !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.RouteNote !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-descriptor-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getDescriptorForType getDescriptorForType \u00b6 fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-descriptor-for-type.html#getdescriptorfortype","text":"fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-location-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getLocationBuilder getLocationBuilder \u00b6 fun getLocationBuilder(): RouteGuideProto.Point.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-location-builder.html#getlocationbuilder","text":"fun getLocationBuilder(): RouteGuideProto.Point.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-location-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getLocationOrBuilder getLocationOrBuilder \u00b6 fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RouteNoteOrBuilder.getLocationOrBuilder ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-location-or-builder.html#getlocationorbuilder","text":"fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! Overrides RouteNoteOrBuilder.getLocationOrBuilder ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getLocation getLocation \u00b6 fun getLocation(): RouteGuideProto.Point ! Overrides RouteNoteOrBuilder.getLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-location.html#getlocation","text":"fun getLocation(): RouteGuideProto.Point ! Overrides RouteNoteOrBuilder.getLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-message-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getMessageBytes getMessageBytes \u00b6 fun getMessageBytes(): ByteString! Overrides RouteNoteOrBuilder.getMessageBytes ``` The message to be sent. ``` optional string message = 2;","title":"getMessageBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-message-bytes.html#getmessagebytes","text":"fun getMessageBytes(): ByteString! Overrides RouteNoteOrBuilder.getMessageBytes ``` The message to be sent. ``` optional string message = 2;","title":"getMessageBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / getMessage getMessage \u00b6 fun getMessage(): String ! Overrides RouteNoteOrBuilder.getMessage ``` The message to be sent. ``` optional string message = 2;","title":"getMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/get-message.html#getmessage","text":"fun getMessage(): String ! Overrides RouteNoteOrBuilder.getMessage ``` The message to be sent. ``` optional string message = 2;","title":"getMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/has-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / hasLocation hasLocation \u00b6 fun hasLocation(): Boolean Overrides RouteNoteOrBuilder.hasLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"hasLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/has-location.html#haslocation","text":"fun hasLocation(): Boolean Overrides RouteNoteOrBuilder.hasLocation ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"hasLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/has-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / hasMessage hasMessage \u00b6 fun hasMessage(): Boolean Overrides RouteNoteOrBuilder.hasMessage ``` The message to be sent. ``` optional string message = 2;","title":"hasMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/has-message.html#hasmessage","text":"fun hasMessage(): Boolean Overrides RouteNoteOrBuilder.hasMessage ``` The message to be sent. ``` optional string message = 2;","title":"hasMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/merge-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / mergeFrom mergeFrom \u00b6 fun mergeFrom(other: Message!): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(other: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote.Builder !","title":"mergeFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/merge-from.html#mergefrom","text":"fun mergeFrom(other: Message!): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(other: RouteGuideProto.RouteNote !): RouteGuideProto.RouteNote.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteNote.Builder !","title":"mergeFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/merge-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / mergeLocation mergeLocation \u00b6 fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.RouteNote.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"mergeLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/merge-location.html#mergelocation","text":"fun mergeLocation(value: RouteGuideProto.Point !): RouteGuideProto.RouteNote.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"mergeLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/merge-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / mergeUnknownFields mergeUnknownFields \u00b6 fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteNote.Builder !","title":"mergeUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/merge-unknown-fields.html#mergeunknownfields","text":"fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteNote.Builder !","title":"mergeUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / setField setField \u00b6 fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteNote.Builder !","title":"setField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-field.html#setfield","text":"fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteNote.Builder !","title":"setField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / setLocation setLocation \u00b6 fun setLocation(value: RouteGuideProto.Point !): RouteGuideProto.RouteNote.Builder ! fun setLocation(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.RouteNote.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"setLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-location.html#setlocation","text":"fun setLocation(value: RouteGuideProto.Point !): RouteGuideProto.RouteNote.Builder ! fun setLocation(builderForValue: RouteGuideProto.Point.Builder !): RouteGuideProto.RouteNote.Builder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"setLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-message-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / setMessageBytes setMessageBytes \u00b6 fun setMessageBytes(value: ByteString!): RouteGuideProto.RouteNote.Builder ! ``` The message to be sent. ``` optional string message = 2;","title":"setMessageBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-message-bytes.html#setmessagebytes","text":"fun setMessageBytes(value: ByteString!): RouteGuideProto.RouteNote.Builder ! ``` The message to be sent. ``` optional string message = 2;","title":"setMessageBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / setMessage setMessage \u00b6 fun setMessage(value: String !): RouteGuideProto.RouteNote.Builder ! ``` The message to be sent. ``` optional string message = 2;","title":"setMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-message.html#setmessage","text":"fun setMessage(value: String !): RouteGuideProto.RouteNote.Builder ! ``` The message to be sent. ``` optional string message = 2;","title":"setMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / setRepeatedField setRepeatedField \u00b6 fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteNote.Builder !","title":"setRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-repeated-field.html#setrepeatedfield","text":"fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteNote.Builder !","title":"setRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNote / Builder / setUnknownFields setUnknownFields \u00b6 fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteNote.Builder !","title":"setUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note/-builder/set-unknown-fields.html#setunknownfields","text":"fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteNote.Builder !","title":"setUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNoteOrBuilder RouteNoteOrBuilder \u00b6 interface RouteNoteOrBuilder : MessageOrBuilder Functions \u00b6 Name Summary getLocation abstract fun getLocation(): RouteGuideProto.Point ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [getLocationOrBuilder](get-location-or-builder.md) | `abstract fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getMessage | abstract fun getMessage(): String ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [getMessageBytes](get-message-bytes.md) | `abstract fun getMessageBytes(): ByteString!`<br> The message to be sent. <br>``` optional string message = 2; | | hasLocation | abstract fun hasLocation(): Boolean The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [hasMessage](has-message.md) | `abstract fun hasMessage(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The message to be sent. <br>``` optional string message = 2; | Inheritors \u00b6 Name Summary Builder class Builder : Builder< RouteGuideProto.RouteNote.Builder !>, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. <br>``` <br> Protobuf type `routeguide.RouteNote` | | [RouteNote](../-route-note/index.md) | `class RouteNote : GeneratedMessageV3, `[`RouteGuideProto.RouteNoteOrBuilder`](./index.md)<br> A RouteNote is a message sent while at a given point. <br>``` Protobuf type routeguide.RouteNote |","title":"RouteNoteOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/index.html#routenoteorbuilder","text":"interface RouteNoteOrBuilder : MessageOrBuilder","title":"RouteNoteOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/index.html#functions","text":"Name Summary getLocation abstract fun getLocation(): RouteGuideProto.Point ! The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [getLocationOrBuilder](get-location-or-builder.md) | `abstract fun getLocationOrBuilder(): `[`RouteGuideProto.PointOrBuilder`](../-point-or-builder/index.md)`!`<br> The location from which the message is sent. <br>``` optional .routeguide.Point location = 1; | | getMessage | abstract fun getMessage(): String ! The message to be sent. <br>``` <br> `optional string message = 2;` | | [getMessageBytes](get-message-bytes.md) | `abstract fun getMessageBytes(): ByteString!`<br> The message to be sent. <br>``` optional string message = 2; | | hasLocation | abstract fun hasLocation(): Boolean The location from which the message is sent. <br>``` <br> `optional .routeguide.Point location = 1;` | | [hasMessage](has-message.md) | `abstract fun hasMessage(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The message to be sent. <br>``` optional string message = 2; |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/index.html#inheritors","text":"Name Summary Builder class Builder : Builder< RouteGuideProto.RouteNote.Builder !>, RouteGuideProto.RouteNoteOrBuilder A RouteNote is a message sent while at a given point. <br>``` <br> Protobuf type `routeguide.RouteNote` | | [RouteNote](../-route-note/index.md) | `class RouteNote : GeneratedMessageV3, `[`RouteGuideProto.RouteNoteOrBuilder`](./index.md)<br> A RouteNote is a message sent while at a given point. <br>``` Protobuf type routeguide.RouteNote |","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-location-or-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNoteOrBuilder / getLocationOrBuilder getLocationOrBuilder \u00b6 abstract fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-location-or-builder.html#getlocationorbuilder","text":"abstract fun getLocationOrBuilder(): RouteGuideProto.PointOrBuilder ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocationOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNoteOrBuilder / getLocation getLocation \u00b6 abstract fun getLocation(): RouteGuideProto.Point ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-location.html#getlocation","text":"abstract fun getLocation(): RouteGuideProto.Point ! ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"getLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-message-bytes.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNoteOrBuilder / getMessageBytes getMessageBytes \u00b6 abstract fun getMessageBytes(): ByteString! ``` The message to be sent. ``` optional string message = 2;","title":"getMessageBytes - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-message-bytes.html#getmessagebytes","text":"abstract fun getMessageBytes(): ByteString! ``` The message to be sent. ``` optional string message = 2;","title":"getMessageBytes"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNoteOrBuilder / getMessage getMessage \u00b6 abstract fun getMessage(): String ! ``` The message to be sent. ``` optional string message = 2;","title":"getMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/get-message.html#getmessage","text":"abstract fun getMessage(): String ! ``` The message to be sent. ``` optional string message = 2;","title":"getMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/has-location.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNoteOrBuilder / hasLocation hasLocation \u00b6 abstract fun hasLocation(): Boolean ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"hasLocation - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/has-location.html#haslocation","text":"abstract fun hasLocation(): Boolean ``` The location from which the message is sent. ``` optional .routeguide.Point location = 1;","title":"hasLocation"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/has-message.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteNoteOrBuilder / hasMessage hasMessage \u00b6 abstract fun hasMessage(): Boolean ``` The message to be sent. ``` optional string message = 2;","title":"hasMessage - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-note-or-builder/has-message.html#hasmessage","text":"abstract fun hasMessage(): Boolean ``` The message to be sent. ``` optional string message = 2;","title":"hasMessage"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary RouteSummary \u00b6 class RouteSummary : GeneratedMessageV3, RouteGuideProto.RouteSummaryOrBuilder A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. ``` Protobuf type `routeguide.RouteSummary` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.RouteSummary.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.RouteSummaryOrBuilder`](../-route-summary-or-builder/index.md)<br> A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` Protobuf type routeguide.RouteSummary | Properties \u00b6 Name Summary DISTANCE_FIELD_NUMBER static val DISTANCE_FIELD_NUMBER: Int ELAPSED_TIME_FIELD_NUMBER static val ELAPSED_TIME_FIELD_NUMBER: Int FEATURE_COUNT_FIELD_NUMBER static val FEATURE_COUNT_FIELD_NUMBER: Int POINT_COUNT_FIELD_NUMBER static val POINT_COUNT_FIELD_NUMBER: Int Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.RouteSummary ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.RouteSummary ! getDescriptor static fun getDescriptor(): Descriptor! getDistance fun getDistance(): Int The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [getElapsedTime](get-elapsed-time.md) | `fun getElapsedTime(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | getFeatureCount | fun getFeatureCount(): Int The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [getParserForType](get-parser-for-type.md) | `fun getParserForType(): Parser<`[`RouteGuideProto.RouteSummary`](./index.md)`!>!` | | [getPointCount](get-point-count.md) | `fun getPointCount(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hasDistance | fun hasDistance(): Boolean The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [hasElapsedTime](has-elapsed-time.md) | `fun hasElapsedTime(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | hasFeatureCount | fun hasFeatureCount(): Boolean The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [hashCode](hash-code.md) | `fun hashCode(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) | | [hasPointCount](has-point-count.md) | `fun hasPointCount(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.RouteSummary.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteSummary !): RouteGuideProto.RouteSummary.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.RouteSummary.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteSummary.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! | | parser | static fun parser(): Parser< RouteGuideProto.RouteSummary !>! | | toBuilder | fun toBuilder(): RouteGuideProto.RouteSummary.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"RouteSummary - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/index.html#routesummary","text":"class RouteSummary : GeneratedMessageV3, RouteGuideProto.RouteSummaryOrBuilder A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. ``` Protobuf type `routeguide.RouteSummary` ### Types | Name | Summary | |---|---| | [Builder](-builder/index.md) | `class Builder : Builder<`[`RouteGuideProto.RouteSummary.Builder`](-builder/index.md)`!>, `[`RouteGuideProto.RouteSummaryOrBuilder`](../-route-summary-or-builder/index.md)<br> A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` Protobuf type routeguide.RouteSummary |","title":"RouteSummary"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/index.html#properties","text":"Name Summary DISTANCE_FIELD_NUMBER static val DISTANCE_FIELD_NUMBER: Int ELAPSED_TIME_FIELD_NUMBER static val ELAPSED_TIME_FIELD_NUMBER: Int FEATURE_COUNT_FIELD_NUMBER static val FEATURE_COUNT_FIELD_NUMBER: Int POINT_COUNT_FIELD_NUMBER static val POINT_COUNT_FIELD_NUMBER: Int","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean getDefaultInstance static fun getDefaultInstance(): RouteGuideProto.RouteSummary ! getDefaultInstanceForType fun getDefaultInstanceForType(): RouteGuideProto.RouteSummary ! getDescriptor static fun getDescriptor(): Descriptor! getDistance fun getDistance(): Int The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [getElapsedTime](get-elapsed-time.md) | `fun getElapsedTime(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | getFeatureCount | fun getFeatureCount(): Int The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [getParserForType](get-parser-for-type.md) | `fun getParserForType(): Parser<`[`RouteGuideProto.RouteSummary`](./index.md)`!>!` | | [getPointCount](get-point-count.md) | `fun getPointCount(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; | | getSerializedSize | fun getSerializedSize(): Int | | getUnknownFields | fun getUnknownFields(): UnknownFieldSet! | | hasDistance | fun hasDistance(): Boolean The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [hasElapsedTime](has-elapsed-time.md) | `fun hasElapsedTime(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | hasFeatureCount | fun hasFeatureCount(): Boolean The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [hashCode](hash-code.md) | `fun hashCode(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) | | [hasPointCount](has-point-count.md) | `fun hasPointCount(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; | | internalGetFieldAccessorTable | fun internalGetFieldAccessorTable(): FieldAccessorTable! | | isInitialized | fun isInitialized(): Boolean | | newBuilder | static fun newBuilder(): RouteGuideProto.RouteSummary.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteSummary !): RouteGuideProto.RouteSummary.Builder ! | | newBuilderForType | fun newBuilderForType(): RouteGuideProto.RouteSummary.Builder ! fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteSummary.Builder ! | | parseDelimitedFrom | static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! | | parseFrom | static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! | | parser | static fun parser(): Parser< RouteGuideProto.RouteSummary !>! | | toBuilder | fun toBuilder(): RouteGuideProto.RouteSummary.Builder ! | | writeTo | fun writeTo(output: CodedOutputStream!): Unit |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-d-i-s-t-a-n-c-e_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / DISTANCE_FIELD_NUMBER DISTANCE_FIELD_NUMBER \u00b6 static val DISTANCE_FIELD_NUMBER: Int","title":"DISTANCE_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-d-i-s-t-a-n-c-e_-f-i-e-l-d_-n-u-m-b-e-r.html#distance_field_number","text":"static val DISTANCE_FIELD_NUMBER: Int","title":"DISTANCE_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-e-l-a-p-s-e-d_-t-i-m-e_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / ELAPSED_TIME_FIELD_NUMBER ELAPSED_TIME_FIELD_NUMBER \u00b6 static val ELAPSED_TIME_FIELD_NUMBER: Int","title":"ELAPSED_TIME_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-e-l-a-p-s-e-d_-t-i-m-e_-f-i-e-l-d_-n-u-m-b-e-r.html#elapsed_time_field_number","text":"static val ELAPSED_TIME_FIELD_NUMBER: Int","title":"ELAPSED_TIME_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-f-e-a-t-u-r-e_-c-o-u-n-t_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / FEATURE_COUNT_FIELD_NUMBER FEATURE_COUNT_FIELD_NUMBER \u00b6 static val FEATURE_COUNT_FIELD_NUMBER: Int","title":"FEATURE_COUNT_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-f-e-a-t-u-r-e_-c-o-u-n-t_-f-i-e-l-d_-n-u-m-b-e-r.html#feature_count_field_number","text":"static val FEATURE_COUNT_FIELD_NUMBER: Int","title":"FEATURE_COUNT_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-p-o-i-n-t_-c-o-u-n-t_-f-i-e-l-d_-n-u-m-b-e-r.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / POINT_COUNT_FIELD_NUMBER POINT_COUNT_FIELD_NUMBER \u00b6 static val POINT_COUNT_FIELD_NUMBER: Int","title":"POINT_COUNT_FIELD_NUMBER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-p-o-i-n-t_-c-o-u-n-t_-f-i-e-l-d_-n-u-m-b-e-r.html#point_count_field_number","text":"static val POINT_COUNT_FIELD_NUMBER: Int","title":"POINT_COUNT_FIELD_NUMBER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/equals.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.RouteSummary !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.RouteSummary !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-default-instance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getDefaultInstance getDefaultInstance \u00b6 static fun getDefaultInstance(): RouteGuideProto.RouteSummary !","title":"getDefaultInstance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-default-instance.html#getdefaultinstance","text":"static fun getDefaultInstance(): RouteGuideProto.RouteSummary !","title":"getDefaultInstance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getDistance getDistance \u00b6 fun getDistance(): Int Overrides RouteSummaryOrBuilder.getDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"getDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-distance.html#getdistance","text":"fun getDistance(): Int Overrides RouteSummaryOrBuilder.getDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"getDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getElapsedTime getElapsedTime \u00b6 fun getElapsedTime(): Int Overrides RouteSummaryOrBuilder.getElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"getElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-elapsed-time.html#getelapsedtime","text":"fun getElapsedTime(): Int Overrides RouteSummaryOrBuilder.getElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"getElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getFeatureCount getFeatureCount \u00b6 fun getFeatureCount(): Int Overrides RouteSummaryOrBuilder.getFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"getFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-feature-count.html#getfeaturecount","text":"fun getFeatureCount(): Int Overrides RouteSummaryOrBuilder.getFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"getFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-parser-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getParserForType getParserForType \u00b6 fun getParserForType(): Parser< RouteGuideProto.RouteSummary !>!","title":"getParserForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-parser-for-type.html#getparserfortype","text":"fun getParserForType(): Parser< RouteGuideProto.RouteSummary !>!","title":"getParserForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getPointCount getPointCount \u00b6 fun getPointCount(): Int Overrides RouteSummaryOrBuilder.getPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"getPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-point-count.html#getpointcount","text":"fun getPointCount(): Int Overrides RouteSummaryOrBuilder.getPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"getPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-serialized-size.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getSerializedSize getSerializedSize \u00b6 fun getSerializedSize(): Int","title":"getSerializedSize - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-serialized-size.html#getserializedsize","text":"fun getSerializedSize(): Int","title":"getSerializedSize"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / getUnknownFields getUnknownFields \u00b6 fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/get-unknown-fields.html#getunknownfields","text":"fun getUnknownFields(): UnknownFieldSet!","title":"getUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / hasDistance hasDistance \u00b6 fun hasDistance(): Boolean Overrides RouteSummaryOrBuilder.hasDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"hasDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-distance.html#hasdistance","text":"fun hasDistance(): Boolean Overrides RouteSummaryOrBuilder.hasDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"hasDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / hasElapsedTime hasElapsedTime \u00b6 fun hasElapsedTime(): Boolean Overrides RouteSummaryOrBuilder.hasElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"hasElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-elapsed-time.html#haselapsedtime","text":"fun hasElapsedTime(): Boolean Overrides RouteSummaryOrBuilder.hasElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"hasElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / hasFeatureCount hasFeatureCount \u00b6 fun hasFeatureCount(): Boolean Overrides RouteSummaryOrBuilder.hasFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"hasFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-feature-count.html#hasfeaturecount","text":"fun hasFeatureCount(): Boolean Overrides RouteSummaryOrBuilder.hasFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"hasFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / hasPointCount hasPointCount \u00b6 fun hasPointCount(): Boolean Overrides RouteSummaryOrBuilder.hasPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"hasPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/has-point-count.html#haspointcount","text":"fun hasPointCount(): Boolean Overrides RouteSummaryOrBuilder.hasPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"hasPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/hash-code.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/new-builder-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / newBuilderForType newBuilderForType \u00b6 fun newBuilderForType(): RouteGuideProto.RouteSummary.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteSummary.Builder !","title":"newBuilderForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/new-builder-for-type.html#newbuilderfortype","text":"fun newBuilderForType(): RouteGuideProto.RouteSummary.Builder ! protected fun newBuilderForType(parent: BuilderParent!): RouteGuideProto.RouteSummary.Builder !","title":"newBuilderForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/new-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / newBuilder newBuilder \u00b6 static fun newBuilder(): RouteGuideProto.RouteSummary.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteSummary !): RouteGuideProto.RouteSummary.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/new-builder.html#newbuilder","text":"static fun newBuilder(): RouteGuideProto.RouteSummary.Builder ! static fun newBuilder(prototype: RouteGuideProto.RouteSummary !): RouteGuideProto.RouteSummary.Builder !","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/parse-delimited-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / parseDelimitedFrom parseDelimitedFrom \u00b6 static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary !","title":"parseDelimitedFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/parse-delimited-from.html#parsedelimitedfrom","text":"static fun parseDelimitedFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseDelimitedFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary !","title":"parseDelimitedFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/parse-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / parseFrom parseFrom \u00b6 static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary !","title":"parseFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/parse-from.html#parsefrom","text":"static fun parseFrom(data: ByteBuffer !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteBuffer !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteString!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !): RouteGuideProto.RouteSummary ! static fun parseFrom(data: ByteArray !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !): RouteGuideProto.RouteSummary ! static fun parseFrom(input: InputStream !, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!): RouteGuideProto.RouteSummary ! static fun parseFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary !","title":"parseFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/parser.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / parser parser \u00b6 static fun parser(): Parser< RouteGuideProto.RouteSummary !>!","title":"parser - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/parser.html#parser","text":"static fun parser(): Parser< RouteGuideProto.RouteSummary !>!","title":"parser"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/to-builder.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / toBuilder toBuilder \u00b6 fun toBuilder(): RouteGuideProto.RouteSummary.Builder !","title":"toBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/to-builder.html#tobuilder","text":"fun toBuilder(): RouteGuideProto.RouteSummary.Builder !","title":"toBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/write-to.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / writeTo writeTo \u00b6 fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/write-to.html#writeto","text":"fun writeTo(output: CodedOutputStream!): Unit","title":"writeTo"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder Builder \u00b6 class Builder : Builder< RouteGuideProto.RouteSummary.Builder !>, RouteGuideProto.RouteSummaryOrBuilder A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. ``` Protobuf type `routeguide.RouteSummary` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.RouteSummary`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.RouteSummary`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [clearDistance](clear-distance.md) | `fun clearDistance(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | clearElapsedTime | fun clearElapsedTime(): RouteGuideProto.RouteSummary.Builder ! The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [clearFeatureCount](clear-feature-count.md) | `fun clearFeatureCount(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | clearField | fun clearField(field: FieldDescriptor!): RouteGuideProto.RouteSummary.Builder ! | | clearOneof | fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.RouteSummary.Builder ! | | clearPointCount | fun clearPointCount(): RouteGuideProto.RouteSummary.Builder ! The number of points received. <br>``` <br> `optional int32 point_count = 1;` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.RouteSummary`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getDistance](get-distance.md) | `fun getDistance(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | getElapsedTime | fun getElapsedTime(): Int The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [getFeatureCount](get-feature-count.md) | `fun getFeatureCount(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | getPointCount | fun getPointCount(): Int The number of points received. <br>``` <br> `optional int32 point_count = 1;` | | [hasDistance](has-distance.md) | `fun hasDistance(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | hasElapsedTime | fun hasElapsedTime(): Boolean The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [hasFeatureCount](has-feature-count.md) | `fun hasFeatureCount(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | hasPointCount | fun hasPointCount(): Boolean The number of points received. <br>``` <br> `optional int32 point_count = 1;` | | [internalGetFieldAccessorTable](internal-get-field-accessor-table.md) | `fun internalGetFieldAccessorTable(): FieldAccessorTable!` | | [isInitialized](is-initialized.md) | `fun isInitialized(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) | | [mergeFrom](merge-from.md) | `fun mergeFrom(other: Message!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br>`fun mergeFrom(other: `[`RouteGuideProto.RouteSummary`](../index.md)`!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br>`fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [setDistance](set-distance.md) | `fun setDistance(value: `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)`): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | setElapsedTime | fun setElapsedTime(value: Int ): RouteGuideProto.RouteSummary.Builder ! The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [setFeatureCount](set-feature-count.md) | `fun setFeatureCount(value: `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)`): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | setField | fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteSummary.Builder ! | | setPointCount | fun setPointCount(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The number of points received. <br>``` optional int32 point_count = 1; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteSummary.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteSummary.Builder ! |","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/index.html#builder","text":"class Builder : Builder< RouteGuideProto.RouteSummary.Builder !>, RouteGuideProto.RouteSummaryOrBuilder A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. ``` Protobuf type `routeguide.RouteSummary` ### Functions | Name | Summary | |---|---| | [addRepeatedField](add-repeated-field.md) | `fun addRepeatedField(field: FieldDescriptor!, value: `[`Any`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html)`!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [build](build.md) | `fun build(): `[`RouteGuideProto.RouteSummary`](../index.md)`!` | | [buildPartial](build-partial.md) | `fun buildPartial(): `[`RouteGuideProto.RouteSummary`](../index.md)`!` | | [clear](clear.md) | `fun clear(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [clearDistance](clear-distance.md) | `fun clearDistance(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | clearElapsedTime | fun clearElapsedTime(): RouteGuideProto.RouteSummary.Builder ! The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [clearFeatureCount](clear-feature-count.md) | `fun clearFeatureCount(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | clearField | fun clearField(field: FieldDescriptor!): RouteGuideProto.RouteSummary.Builder ! | | clearOneof | fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.RouteSummary.Builder ! | | clearPointCount | fun clearPointCount(): RouteGuideProto.RouteSummary.Builder ! The number of points received. <br>``` <br> `optional int32 point_count = 1;` | | [clone](clone.md) | `fun clone(): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [getDefaultInstanceForType](get-default-instance-for-type.md) | `fun getDefaultInstanceForType(): `[`RouteGuideProto.RouteSummary`](../index.md)`!` | | [getDescriptor](get-descriptor.md) | `static fun getDescriptor(): Descriptor!` | | [getDescriptorForType](get-descriptor-for-type.md) | `fun getDescriptorForType(): Descriptor!` | | [getDistance](get-distance.md) | `fun getDistance(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | getElapsedTime | fun getElapsedTime(): Int The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [getFeatureCount](get-feature-count.md) | `fun getFeatureCount(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | getPointCount | fun getPointCount(): Int The number of points received. <br>``` <br> `optional int32 point_count = 1;` | | [hasDistance](has-distance.md) | `fun hasDistance(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | hasElapsedTime | fun hasElapsedTime(): Boolean The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [hasFeatureCount](has-feature-count.md) | `fun hasFeatureCount(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | hasPointCount | fun hasPointCount(): Boolean The number of points received. <br>``` <br> `optional int32 point_count = 1;` | | [internalGetFieldAccessorTable](internal-get-field-accessor-table.md) | `fun internalGetFieldAccessorTable(): FieldAccessorTable!` | | [isInitialized](is-initialized.md) | `fun isInitialized(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) | | [mergeFrom](merge-from.md) | `fun mergeFrom(other: Message!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br>`fun mergeFrom(other: `[`RouteGuideProto.RouteSummary`](../index.md)`!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br>`fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [mergeUnknownFields](merge-unknown-fields.md) | `fun mergeUnknownFields(unknownFields: UnknownFieldSet!): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!` | | [setDistance](set-distance.md) | `fun setDistance(value: `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)`): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The distance covered in metres. <br>``` optional int32 distance = 3; | | setElapsedTime | fun setElapsedTime(value: Int ): RouteGuideProto.RouteSummary.Builder ! The duration of the traversal in seconds. <br>``` <br> `optional int32 elapsed_time = 4;` | | [setFeatureCount](set-feature-count.md) | `fun setFeatureCount(value: `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)`): `[`RouteGuideProto.RouteSummary.Builder`](./index.md)`!`<br> The number of known features passed while traversing the route. <br>``` optional int32 feature_count = 2; | | setField | fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteSummary.Builder ! | | setPointCount | fun setPointCount(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The number of points received. <br>``` optional int32 point_count = 1; | | setRepeatedField | fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteSummary.Builder ! | | setUnknownFields | fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteSummary.Builder ! |","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/add-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / addRepeatedField addRepeatedField \u00b6 fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteSummary.Builder !","title":"addRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/add-repeated-field.html#addrepeatedfield","text":"fun addRepeatedField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteSummary.Builder !","title":"addRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/build-partial.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / buildPartial buildPartial \u00b6 fun buildPartial(): RouteGuideProto.RouteSummary !","title":"buildPartial - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/build-partial.html#buildpartial","text":"fun buildPartial(): RouteGuideProto.RouteSummary !","title":"buildPartial"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / build build \u00b6 fun build(): RouteGuideProto.RouteSummary !","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/build.html#build","text":"fun build(): RouteGuideProto.RouteSummary !","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clearDistance clearDistance \u00b6 fun clearDistance(): RouteGuideProto.RouteSummary.Builder ! ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"clearDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-distance.html#cleardistance","text":"fun clearDistance(): RouteGuideProto.RouteSummary.Builder ! ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"clearDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clearElapsedTime clearElapsedTime \u00b6 fun clearElapsedTime(): RouteGuideProto.RouteSummary.Builder ! ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"clearElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-elapsed-time.html#clearelapsedtime","text":"fun clearElapsedTime(): RouteGuideProto.RouteSummary.Builder ! ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"clearElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clearFeatureCount clearFeatureCount \u00b6 fun clearFeatureCount(): RouteGuideProto.RouteSummary.Builder ! ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"clearFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-feature-count.html#clearfeaturecount","text":"fun clearFeatureCount(): RouteGuideProto.RouteSummary.Builder ! ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"clearFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clearField clearField \u00b6 fun clearField(field: FieldDescriptor!): RouteGuideProto.RouteSummary.Builder !","title":"clearField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-field.html#clearfield","text":"fun clearField(field: FieldDescriptor!): RouteGuideProto.RouteSummary.Builder !","title":"clearField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-oneof.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clearOneof clearOneof \u00b6 fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.RouteSummary.Builder !","title":"clearOneof - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-oneof.html#clearoneof","text":"fun clearOneof(oneof: OneofDescriptor!): RouteGuideProto.RouteSummary.Builder !","title":"clearOneof"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clearPointCount clearPointCount \u00b6 fun clearPointCount(): RouteGuideProto.RouteSummary.Builder ! ``` The number of points received. ``` optional int32 point_count = 1;","title":"clearPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear-point-count.html#clearpointcount","text":"fun clearPointCount(): RouteGuideProto.RouteSummary.Builder ! ``` The number of points received. ``` optional int32 point_count = 1;","title":"clearPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clear clear \u00b6 fun clear(): RouteGuideProto.RouteSummary.Builder !","title":"clear - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clear.html#clear","text":"fun clear(): RouteGuideProto.RouteSummary.Builder !","title":"clear"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clone.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / clone clone \u00b6 fun clone(): RouteGuideProto.RouteSummary.Builder !","title":"clone - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/clone.html#clone","text":"fun clone(): RouteGuideProto.RouteSummary.Builder !","title":"clone"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-default-instance-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / getDefaultInstanceForType getDefaultInstanceForType \u00b6 fun getDefaultInstanceForType(): RouteGuideProto.RouteSummary !","title":"getDefaultInstanceForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-default-instance-for-type.html#getdefaultinstancefortype","text":"fun getDefaultInstanceForType(): RouteGuideProto.RouteSummary !","title":"getDefaultInstanceForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-descriptor-for-type.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / getDescriptorForType getDescriptorForType \u00b6 fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-descriptor-for-type.html#getdescriptorfortype","text":"fun getDescriptorForType(): Descriptor!","title":"getDescriptorForType"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-descriptor.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / getDescriptor getDescriptor \u00b6 static fun getDescriptor(): Descriptor!","title":"getDescriptor - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-descriptor.html#getdescriptor","text":"static fun getDescriptor(): Descriptor!","title":"getDescriptor"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / getDistance getDistance \u00b6 fun getDistance(): Int Overrides RouteSummaryOrBuilder.getDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"getDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-distance.html#getdistance","text":"fun getDistance(): Int Overrides RouteSummaryOrBuilder.getDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"getDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / getElapsedTime getElapsedTime \u00b6 fun getElapsedTime(): Int Overrides RouteSummaryOrBuilder.getElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"getElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-elapsed-time.html#getelapsedtime","text":"fun getElapsedTime(): Int Overrides RouteSummaryOrBuilder.getElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"getElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / getFeatureCount getFeatureCount \u00b6 fun getFeatureCount(): Int Overrides RouteSummaryOrBuilder.getFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"getFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-feature-count.html#getfeaturecount","text":"fun getFeatureCount(): Int Overrides RouteSummaryOrBuilder.getFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"getFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / getPointCount getPointCount \u00b6 fun getPointCount(): Int Overrides RouteSummaryOrBuilder.getPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"getPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/get-point-count.html#getpointcount","text":"fun getPointCount(): Int Overrides RouteSummaryOrBuilder.getPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"getPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / hasDistance hasDistance \u00b6 fun hasDistance(): Boolean Overrides RouteSummaryOrBuilder.hasDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"hasDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-distance.html#hasdistance","text":"fun hasDistance(): Boolean Overrides RouteSummaryOrBuilder.hasDistance ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"hasDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / hasElapsedTime hasElapsedTime \u00b6 fun hasElapsedTime(): Boolean Overrides RouteSummaryOrBuilder.hasElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"hasElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-elapsed-time.html#haselapsedtime","text":"fun hasElapsedTime(): Boolean Overrides RouteSummaryOrBuilder.hasElapsedTime ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"hasElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / hasFeatureCount hasFeatureCount \u00b6 fun hasFeatureCount(): Boolean Overrides RouteSummaryOrBuilder.hasFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"hasFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-feature-count.html#hasfeaturecount","text":"fun hasFeatureCount(): Boolean Overrides RouteSummaryOrBuilder.hasFeatureCount ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"hasFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / hasPointCount hasPointCount \u00b6 fun hasPointCount(): Boolean Overrides RouteSummaryOrBuilder.hasPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"hasPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/has-point-count.html#haspointcount","text":"fun hasPointCount(): Boolean Overrides RouteSummaryOrBuilder.hasPointCount ``` The number of points received. ``` optional int32 point_count = 1;","title":"hasPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/internal-get-field-accessor-table.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / internalGetFieldAccessorTable internalGetFieldAccessorTable \u00b6 protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/internal-get-field-accessor-table.html#internalgetfieldaccessortable","text":"protected fun internalGetFieldAccessorTable(): FieldAccessorTable!","title":"internalGetFieldAccessorTable"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/is-initialized.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / isInitialized isInitialized \u00b6 fun isInitialized(): Boolean","title":"isInitialized - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/is-initialized.html#isinitialized","text":"fun isInitialized(): Boolean","title":"isInitialized"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/merge-from.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / mergeFrom mergeFrom \u00b6 fun mergeFrom(other: Message!): RouteGuideProto.RouteSummary.Builder ! fun mergeFrom(other: RouteGuideProto.RouteSummary !): RouteGuideProto.RouteSummary.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary.Builder !","title":"mergeFrom - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/merge-from.html#mergefrom","text":"fun mergeFrom(other: Message!): RouteGuideProto.RouteSummary.Builder ! fun mergeFrom(other: RouteGuideProto.RouteSummary !): RouteGuideProto.RouteSummary.Builder ! fun mergeFrom(input: CodedInputStream!, extensionRegistry: ExtensionRegistryLite!): RouteGuideProto.RouteSummary.Builder !","title":"mergeFrom"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/merge-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / mergeUnknownFields mergeUnknownFields \u00b6 fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteSummary.Builder !","title":"mergeUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/merge-unknown-fields.html#mergeunknownfields","text":"fun mergeUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteSummary.Builder !","title":"mergeUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / setDistance setDistance \u00b6 fun setDistance(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"setDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-distance.html#setdistance","text":"fun setDistance(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"setDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / setElapsedTime setElapsedTime \u00b6 fun setElapsedTime(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"setElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-elapsed-time.html#setelapsedtime","text":"fun setElapsedTime(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"setElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / setFeatureCount setFeatureCount \u00b6 fun setFeatureCount(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"setFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-feature-count.html#setfeaturecount","text":"fun setFeatureCount(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"setFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / setField setField \u00b6 fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteSummary.Builder !","title":"setField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-field.html#setfield","text":"fun setField(field: FieldDescriptor!, value: Any !): RouteGuideProto.RouteSummary.Builder !","title":"setField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / setPointCount setPointCount \u00b6 fun setPointCount(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The number of points received. ``` optional int32 point_count = 1;","title":"setPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-point-count.html#setpointcount","text":"fun setPointCount(value: Int ): RouteGuideProto.RouteSummary.Builder ! ``` The number of points received. ``` optional int32 point_count = 1;","title":"setPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-repeated-field.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / setRepeatedField setRepeatedField \u00b6 fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteSummary.Builder !","title":"setRepeatedField - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-repeated-field.html#setrepeatedfield","text":"fun setRepeatedField(field: FieldDescriptor!, index: Int , value: Any !): RouteGuideProto.RouteSummary.Builder !","title":"setRepeatedField"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-unknown-fields.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummary / Builder / setUnknownFields setUnknownFields \u00b6 fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteSummary.Builder !","title":"setUnknownFields - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary/-builder/set-unknown-fields.html#setunknownfields","text":"fun setUnknownFields(unknownFields: UnknownFieldSet!): RouteGuideProto.RouteSummary.Builder !","title":"setUnknownFields"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/index.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder RouteSummaryOrBuilder \u00b6 interface RouteSummaryOrBuilder : MessageOrBuilder Functions \u00b6 Name Summary getDistance abstract fun getDistance(): Int The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [getElapsedTime](get-elapsed-time.md) | `abstract fun getElapsedTime(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | getFeatureCount | abstract fun getFeatureCount(): Int The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [getPointCount](get-point-count.md) | `abstract fun getPointCount(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; | | hasDistance | abstract fun hasDistance(): Boolean The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [hasElapsedTime](has-elapsed-time.md) | `abstract fun hasElapsedTime(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | hasFeatureCount | abstract fun hasFeatureCount(): Boolean The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [hasPointCount](has-point-count.md) | `abstract fun hasPointCount(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; | Inheritors \u00b6 Name Summary Builder class Builder : Builder< RouteGuideProto.RouteSummary.Builder !>, RouteGuideProto.RouteSummaryOrBuilder A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` <br> Protobuf type `routeguide.RouteSummary` | | [RouteSummary](../-route-summary/index.md) | `class RouteSummary : GeneratedMessageV3, `[`RouteGuideProto.RouteSummaryOrBuilder`](./index.md)<br> A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` Protobuf type routeguide.RouteSummary |","title":"RouteSummaryOrBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/index.html#routesummaryorbuilder","text":"interface RouteSummaryOrBuilder : MessageOrBuilder","title":"RouteSummaryOrBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/index.html#functions","text":"Name Summary getDistance abstract fun getDistance(): Int The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [getElapsedTime](get-elapsed-time.md) | `abstract fun getElapsedTime(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | getFeatureCount | abstract fun getFeatureCount(): Int The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [getPointCount](get-point-count.md) | `abstract fun getPointCount(): `[`Int`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; | | hasDistance | abstract fun hasDistance(): Boolean The distance covered in metres. <br>``` <br> `optional int32 distance = 3;` | | [hasElapsedTime](has-elapsed-time.md) | `abstract fun hasElapsedTime(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The duration of the traversal in seconds. <br>``` optional int32 elapsed_time = 4; | | hasFeatureCount | abstract fun hasFeatureCount(): Boolean The number of known features passed while traversing the route. <br>``` <br> `optional int32 feature_count = 2;` | | [hasPointCount](has-point-count.md) | `abstract fun hasPointCount(): `[`Boolean`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html)<br> The number of points received. <br>``` optional int32 point_count = 1; |","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/index.html#inheritors","text":"Name Summary Builder class Builder : Builder< RouteGuideProto.RouteSummary.Builder !>, RouteGuideProto.RouteSummaryOrBuilder A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` <br> Protobuf type `routeguide.RouteSummary` | | [RouteSummary](../-route-summary/index.md) | `class RouteSummary : GeneratedMessageV3, `[`RouteGuideProto.RouteSummaryOrBuilder`](./index.md)<br> A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. <br>``` Protobuf type routeguide.RouteSummary |","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / getDistance getDistance \u00b6 abstract fun getDistance(): Int ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"getDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-distance.html#getdistance","text":"abstract fun getDistance(): Int ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"getDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / getElapsedTime getElapsedTime \u00b6 abstract fun getElapsedTime(): Int ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"getElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-elapsed-time.html#getelapsedtime","text":"abstract fun getElapsedTime(): Int ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"getElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / getFeatureCount getFeatureCount \u00b6 abstract fun getFeatureCount(): Int ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"getFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-feature-count.html#getfeaturecount","text":"abstract fun getFeatureCount(): Int ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"getFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / getPointCount getPointCount \u00b6 abstract fun getPointCount(): Int ``` The number of points received. ``` optional int32 point_count = 1;","title":"getPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/get-point-count.html#getpointcount","text":"abstract fun getPointCount(): Int ``` The number of points received. ``` optional int32 point_count = 1;","title":"getPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-distance.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / hasDistance hasDistance \u00b6 abstract fun hasDistance(): Boolean ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"hasDistance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-distance.html#hasdistance","text":"abstract fun hasDistance(): Boolean ``` The distance covered in metres. ``` optional int32 distance = 3;","title":"hasDistance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-elapsed-time.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / hasElapsedTime hasElapsedTime \u00b6 abstract fun hasElapsedTime(): Boolean ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"hasElapsedTime - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-elapsed-time.html#haselapsedtime","text":"abstract fun hasElapsedTime(): Boolean ``` The duration of the traversal in seconds. ``` optional int32 elapsed_time = 4;","title":"hasElapsedTime"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-feature-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / hasFeatureCount hasFeatureCount \u00b6 abstract fun hasFeatureCount(): Boolean ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"hasFeatureCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-feature-count.html#hasfeaturecount","text":"abstract fun hasFeatureCount(): Boolean ``` The number of known features passed while traversing the route. ``` optional int32 feature_count = 2;","title":"hasFeatureCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-point-count.html","text":"misk-grpc-tests / routeguide / RouteGuideProto / RouteSummaryOrBuilder / hasPointCount hasPointCount \u00b6 abstract fun hasPointCount(): Boolean ``` The number of points received. ``` optional int32 point_count = 1;","title":"hasPointCount - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-proto/-route-summary-or-builder/has-point-count.html#haspointcount","text":"abstract fun hasPointCount(): Boolean ``` The number of points received. ``` optional int32 point_count = 1;","title":"hasPointCount"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-record-route-blocking-server/index.html","text":"misk-grpc-tests / routeguide / RouteGuideRecordRouteBlockingServer RouteGuideRecordRouteBlockingServer \u00b6 interface RouteGuideRecordRouteBlockingServer : Service Interface exported by the server. Functions \u00b6 Name Summary RecordRoute abstract fun RecordRoute(request: MessageSource< Point >): RouteSummary A client-to-server streaming RPC.","title":"RouteGuideRecordRouteBlockingServer - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-record-route-blocking-server/index.html#routeguiderecordrouteblockingserver","text":"interface RouteGuideRecordRouteBlockingServer : Service Interface exported by the server.","title":"RouteGuideRecordRouteBlockingServer"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-record-route-blocking-server/index.html#functions","text":"Name Summary RecordRoute abstract fun RecordRoute(request: MessageSource< Point >): RouteSummary A client-to-server streaming RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-record-route-blocking-server/-record-route.html","text":"misk-grpc-tests / routeguide / RouteGuideRecordRouteBlockingServer / RecordRoute RecordRoute \u00b6 abstract fun RecordRoute(request: MessageSource< Point >): RouteSummary A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed.","title":"RecordRoute - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-record-route-blocking-server/-record-route.html#recordroute","text":"abstract fun RecordRoute(request: MessageSource< Point >): RouteSummary A client-to-server streaming RPC. Accepts a stream of Points on a route being traversed, returning a RouteSummary when traversal is completed.","title":"RecordRoute"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-route-chat-blocking-server/index.html","text":"misk-grpc-tests / routeguide / RouteGuideRouteChatBlockingServer RouteGuideRouteChatBlockingServer \u00b6 interface RouteGuideRouteChatBlockingServer : Service Interface exported by the server. Functions \u00b6 Name Summary RouteChat abstract fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit A Bidirectional streaming RPC. Inheritors \u00b6 Name Summary RouteChatGrpcAction class RouteChatGrpcAction : WebAction, RouteGuideRouteChatBlockingServer","title":"RouteGuideRouteChatBlockingServer - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-route-chat-blocking-server/index.html#routeguideroutechatblockingserver","text":"interface RouteGuideRouteChatBlockingServer : Service Interface exported by the server.","title":"RouteGuideRouteChatBlockingServer"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-route-chat-blocking-server/index.html#functions","text":"Name Summary RouteChat abstract fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit A Bidirectional streaming RPC.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-route-chat-blocking-server/index.html#inheritors","text":"Name Summary RouteChatGrpcAction class RouteChatGrpcAction : WebAction, RouteGuideRouteChatBlockingServer","title":"Inheritors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-route-chat-blocking-server/-route-chat.html","text":"misk-grpc-tests / routeguide / RouteGuideRouteChatBlockingServer / RouteChat RouteChat \u00b6 abstract fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-guide-route-chat-blocking-server/-route-chat.html#routechat","text":"abstract fun RouteChat(request: MessageSource< RouteNote >, response: MessageSink< RouteNote >): Unit A Bidirectional streaming RPC. Accepts a stream of RouteNotes sent while a route is being traversed, while receiving other RouteNotes (e.g. from other users).","title":"RouteChat"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/index.html","text":"misk-grpc-tests / routeguide / RouteNote RouteNote \u00b6 class RouteNote : Message< RouteNote , RouteNote.Builder > A RouteNote is a message sent while at a given point. Types \u00b6 Name Summary Builder class Builder : Builder< RouteNote , RouteNote.Builder > Constructors \u00b6 Name Summary <init> RouteNote(location: Point ? = null, message: String ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteNote is a message sent while at a given point. Properties \u00b6 Name Summary location val location: Point ? The location from which the message is sent. message val message: String ? The message to be sent. Functions \u00b6 Name Summary copy fun copy(location: Point ? = this.location, message: String ? = this.message, unknownFields: ByteString = this.unknownFields): RouteNote equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): RouteNote.Builder toString fun toString(): String Companion Object Properties \u00b6 Name Summary ADAPTER val ADAPTER: ProtoAdapter< RouteNote >","title":"RouteNote - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/index.html#routenote","text":"class RouteNote : Message< RouteNote , RouteNote.Builder > A RouteNote is a message sent while at a given point.","title":"RouteNote"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/index.html#types","text":"Name Summary Builder class Builder : Builder< RouteNote , RouteNote.Builder >","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/index.html#constructors","text":"Name Summary <init> RouteNote(location: Point ? = null, message: String ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteNote is a message sent while at a given point.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/index.html#properties","text":"Name Summary location val location: Point ? The location from which the message is sent. message val message: String ? The message to be sent.","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/index.html#functions","text":"Name Summary copy fun copy(location: Point ? = this.location, message: String ? = this.message, unknownFields: ByteString = this.unknownFields): RouteNote equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): RouteNote.Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/index.html#companion-object-properties","text":"Name Summary ADAPTER val ADAPTER: ProtoAdapter< RouteNote >","title":"Companion Object Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-a-d-a-p-t-e-r.html","text":"misk-grpc-tests / routeguide / RouteNote / ADAPTER ADAPTER \u00b6 val ADAPTER: ProtoAdapter< RouteNote >","title":"ADAPTER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-a-d-a-p-t-e-r.html#adapter","text":"val ADAPTER: ProtoAdapter< RouteNote >","title":"ADAPTER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-init-.html","text":"misk-grpc-tests / routeguide / RouteNote / <init> <init> \u00b6 RouteNote(location: Point ? = null, message: String ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteNote is a message sent while at a given point.","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-init-.html#init","text":"RouteNote(location: Point ? = null, message: String ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteNote is a message sent while at a given point.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/copy.html","text":"misk-grpc-tests / routeguide / RouteNote / copy copy \u00b6 fun copy(location: Point ? = this.location, message: String ? = this.message, unknownFields: ByteString = this.unknownFields): RouteNote","title":"copy - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/copy.html#copy","text":"fun copy(location: Point ? = this.location, message: String ? = this.message, unknownFields: ByteString = this.unknownFields): RouteNote","title":"copy"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/equals.html","text":"misk-grpc-tests / routeguide / RouteNote / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/hash-code.html","text":"misk-grpc-tests / routeguide / RouteNote / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/location.html","text":"misk-grpc-tests / routeguide / RouteNote / location location \u00b6 val location: Point ? The location from which the message is sent.","title":"location - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/location.html#location","text":"val location: Point ? The location from which the message is sent.","title":"location"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/message.html","text":"misk-grpc-tests / routeguide / RouteNote / message message \u00b6 val message: String ? The message to be sent.","title":"message - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/message.html#message","text":"val message: String ? The message to be sent.","title":"message"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/new-builder.html","text":"misk-grpc-tests / routeguide / RouteNote / newBuilder newBuilder \u00b6 fun newBuilder(): RouteNote.Builder","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/new-builder.html#newbuilder","text":"fun newBuilder(): RouteNote.Builder","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/to-string.html","text":"misk-grpc-tests / routeguide / RouteNote / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteNote / Builder Builder \u00b6 class Builder : Builder< RouteNote , RouteNote.Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary location var location: Point ? message var message: String ? Functions \u00b6 Name Summary build fun build(): RouteNote location fun location(location: Point ?): RouteNote.Builder The location from which the message is sent. message fun message(message: String ?): RouteNote.Builder The message to be sent.","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/index.html#builder","text":"class Builder : Builder< RouteNote , RouteNote.Builder >","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/index.html#properties","text":"Name Summary location var location: Point ? message var message: String ?","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/index.html#functions","text":"Name Summary build fun build(): RouteNote location fun location(location: Point ?): RouteNote.Builder The location from which the message is sent. message fun message(message: String ?): RouteNote.Builder The message to be sent.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/-init-.html","text":"misk-grpc-tests / routeguide / RouteNote / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteNote / Builder / build build \u00b6 fun build(): RouteNote","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/build.html#build","text":"fun build(): RouteNote","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/location.html","text":"misk-grpc-tests / routeguide / RouteNote / Builder / location location \u00b6 var location: Point ?``fun location(location: Point ?): RouteNote.Builder The location from which the message is sent.","title":"location - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/location.html#location","text":"var location: Point ?``fun location(location: Point ?): RouteNote.Builder The location from which the message is sent.","title":"location"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/message.html","text":"misk-grpc-tests / routeguide / RouteNote / Builder / message message \u00b6 var message: String ?``fun message(message: String ?): RouteNote.Builder The message to be sent.","title":"message - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-note/-builder/message.html#message","text":"var message: String ?``fun message(message: String ?): RouteNote.Builder The message to be sent.","title":"message"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/index.html","text":"misk-grpc-tests / routeguide / RouteSummary RouteSummary \u00b6 class RouteSummary : Message< RouteSummary , RouteSummary.Builder > A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point. Types \u00b6 Name Summary Builder class Builder : Builder< RouteSummary , RouteSummary.Builder > Constructors \u00b6 Name Summary <init> RouteSummary(point_count: Int ? = null, feature_count: Int ? = null, distance: Int ? = null, elapsed_time: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteSummary is received in response to a RecordRoute rpc. Properties \u00b6 Name Summary distance val distance: Int ? The distance covered in metres. elapsed_time val elapsed_time: Int ? The duration of the traversal in seconds. feature_count val feature_count: Int ? The number of known features passed while traversing the route. point_count val point_count: Int ? The number of points received. Functions \u00b6 Name Summary copy fun copy(point_count: Int ? = this.point_count, feature_count: Int ? = this.feature_count, distance: Int ? = this.distance, elapsed_time: Int ? = this.elapsed_time, unknownFields: ByteString = this.unknownFields): RouteSummary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): RouteSummary.Builder toString fun toString(): String Companion Object Properties \u00b6 Name Summary ADAPTER val ADAPTER: ProtoAdapter< RouteSummary >","title":"RouteSummary - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/index.html#routesummary","text":"class RouteSummary : Message< RouteSummary , RouteSummary.Builder > A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point.","title":"RouteSummary"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/index.html#types","text":"Name Summary Builder class Builder : Builder< RouteSummary , RouteSummary.Builder >","title":"Types"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/index.html#constructors","text":"Name Summary <init> RouteSummary(point_count: Int ? = null, feature_count: Int ? = null, distance: Int ? = null, elapsed_time: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteSummary is received in response to a RecordRoute rpc.","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/index.html#properties","text":"Name Summary distance val distance: Int ? The distance covered in metres. elapsed_time val elapsed_time: Int ? The duration of the traversal in seconds. feature_count val feature_count: Int ? The number of known features passed while traversing the route. point_count val point_count: Int ? The number of points received.","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/index.html#functions","text":"Name Summary copy fun copy(point_count: Int ? = this.point_count, feature_count: Int ? = this.feature_count, distance: Int ? = this.distance, elapsed_time: Int ? = this.elapsed_time, unknownFields: ByteString = this.unknownFields): RouteSummary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): RouteSummary.Builder toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/index.html#companion-object-properties","text":"Name Summary ADAPTER val ADAPTER: ProtoAdapter< RouteSummary >","title":"Companion Object Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-a-d-a-p-t-e-r.html","text":"misk-grpc-tests / routeguide / RouteSummary / ADAPTER ADAPTER \u00b6 val ADAPTER: ProtoAdapter< RouteSummary >","title":"ADAPTER - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-a-d-a-p-t-e-r.html#adapter","text":"val ADAPTER: ProtoAdapter< RouteSummary >","title":"ADAPTER"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-init-.html","text":"misk-grpc-tests / routeguide / RouteSummary / <init> <init> \u00b6 RouteSummary(point_count: Int ? = null, feature_count: Int ? = null, distance: Int ? = null, elapsed_time: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point.","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-init-.html#init","text":"RouteSummary(point_count: Int ? = null, feature_count: Int ? = null, distance: Int ? = null, elapsed_time: Int ? = null, unknownFields: ByteString = ByteString.EMPTY) A RouteSummary is received in response to a RecordRoute rpc. It contains the number of individual points received, the number of detected features, and the total distance covered as the cumulative sum of the distance between each point.","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/copy.html","text":"misk-grpc-tests / routeguide / RouteSummary / copy copy \u00b6 fun copy(point_count: Int ? = this.point_count, feature_count: Int ? = this.feature_count, distance: Int ? = this.distance, elapsed_time: Int ? = this.elapsed_time, unknownFields: ByteString = this.unknownFields): RouteSummary","title":"copy - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/copy.html#copy","text":"fun copy(point_count: Int ? = this.point_count, feature_count: Int ? = this.feature_count, distance: Int ? = this.distance, elapsed_time: Int ? = this.elapsed_time, unknownFields: ByteString = this.unknownFields): RouteSummary","title":"copy"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/distance.html","text":"misk-grpc-tests / routeguide / RouteSummary / distance distance \u00b6 val distance: Int ? The distance covered in metres.","title":"distance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/distance.html#distance","text":"val distance: Int ? The distance covered in metres.","title":"distance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/elapsed_time.html","text":"misk-grpc-tests / routeguide / RouteSummary / elapsed_time elapsed_time \u00b6 val elapsed_time: Int ? The duration of the traversal in seconds.","title":"elapsed_time - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/elapsed_time.html#elapsed_time","text":"val elapsed_time: Int ? The duration of the traversal in seconds.","title":"elapsed_time"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/equals.html","text":"misk-grpc-tests / routeguide / RouteSummary / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/feature_count.html","text":"misk-grpc-tests / routeguide / RouteSummary / feature_count feature_count \u00b6 val feature_count: Int ? The number of known features passed while traversing the route.","title":"feature_count - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/feature_count.html#feature_count","text":"val feature_count: Int ? The number of known features passed while traversing the route.","title":"feature_count"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/hash-code.html","text":"misk-grpc-tests / routeguide / RouteSummary / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/new-builder.html","text":"misk-grpc-tests / routeguide / RouteSummary / newBuilder newBuilder \u00b6 fun newBuilder(): RouteSummary.Builder","title":"newBuilder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/new-builder.html#newbuilder","text":"fun newBuilder(): RouteSummary.Builder","title":"newBuilder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/point_count.html","text":"misk-grpc-tests / routeguide / RouteSummary / point_count point_count \u00b6 val point_count: Int ? The number of points received.","title":"point_count - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/point_count.html#point_count","text":"val point_count: Int ? The number of points received.","title":"point_count"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/to-string.html","text":"misk-grpc-tests / routeguide / RouteSummary / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/index.html","text":"misk-grpc-tests / routeguide / RouteSummary / Builder Builder \u00b6 class Builder : Builder< RouteSummary , RouteSummary.Builder > Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary distance var distance: Int ? elapsed_time var elapsed_time: Int ? feature_count var feature_count: Int ? point_count var point_count: Int ? Functions \u00b6 Name Summary build fun build(): RouteSummary distance fun distance(distance: Int ?): RouteSummary.Builder The distance covered in metres. elapsed_time fun elapsed_time(elapsed_time: Int ?): RouteSummary.Builder The duration of the traversal in seconds. feature_count fun feature_count(feature_count: Int ?): RouteSummary.Builder The number of known features passed while traversing the route. point_count fun point_count(point_count: Int ?): RouteSummary.Builder The number of points received.","title":"Builder - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/index.html#builder","text":"class Builder : Builder< RouteSummary , RouteSummary.Builder >","title":"Builder"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/index.html#properties","text":"Name Summary distance var distance: Int ? elapsed_time var elapsed_time: Int ? feature_count var feature_count: Int ? point_count var point_count: Int ?","title":"Properties"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/index.html#functions","text":"Name Summary build fun build(): RouteSummary distance fun distance(distance: Int ?): RouteSummary.Builder The distance covered in metres. elapsed_time fun elapsed_time(elapsed_time: Int ?): RouteSummary.Builder The duration of the traversal in seconds. feature_count fun feature_count(feature_count: Int ?): RouteSummary.Builder The number of known features passed while traversing the route. point_count fun point_count(point_count: Int ?): RouteSummary.Builder The number of points received.","title":"Functions"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/-init-.html","text":"misk-grpc-tests / routeguide / RouteSummary / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/build.html","text":"misk-grpc-tests / routeguide / RouteSummary / Builder / build build \u00b6 fun build(): RouteSummary","title":"build - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/build.html#build","text":"fun build(): RouteSummary","title":"build"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/distance.html","text":"misk-grpc-tests / routeguide / RouteSummary / Builder / distance distance \u00b6 var distance: Int ?``fun distance(distance: Int ?): RouteSummary.Builder The distance covered in metres.","title":"distance - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/distance.html#distance","text":"var distance: Int ?``fun distance(distance: Int ?): RouteSummary.Builder The distance covered in metres.","title":"distance"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/elapsed_time.html","text":"misk-grpc-tests / routeguide / RouteSummary / Builder / elapsed_time elapsed_time \u00b6 var elapsed_time: Int ?``fun elapsed_time(elapsed_time: Int ?): RouteSummary.Builder The duration of the traversal in seconds.","title":"elapsed_time - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/elapsed_time.html#elapsed_time","text":"var elapsed_time: Int ?``fun elapsed_time(elapsed_time: Int ?): RouteSummary.Builder The duration of the traversal in seconds.","title":"elapsed_time"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/feature_count.html","text":"misk-grpc-tests / routeguide / RouteSummary / Builder / feature_count feature_count \u00b6 var feature_count: Int ?``fun feature_count(feature_count: Int ?): RouteSummary.Builder The number of known features passed while traversing the route.","title":"feature_count - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/feature_count.html#feature_count","text":"var feature_count: Int ?``fun feature_count(feature_count: Int ?): RouteSummary.Builder The number of known features passed while traversing the route.","title":"feature_count"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/point_count.html","text":"misk-grpc-tests / routeguide / RouteSummary / Builder / point_count point_count \u00b6 var point_count: Int ?``fun point_count(point_count: Int ?): RouteSummary.Builder The number of points received.","title":"point_count - Misk"},{"location":"0.x/misk-grpc-tests/routeguide/-route-summary/-builder/point_count.html#point_count","text":"var point_count: Int ?``fun point_count(point_count: Int ?): RouteSummary.Builder The number of points received.","title":"point_count"},{"location":"0.x/misk-hibernate/index.html","text":"misk-hibernate Packages \u00b6 Name Summary misk.hibernate misk.hibernate.annotation misk.hibernate.migrate misk.hibernate.pagination Index \u00b6 All Types","title":"misk-hibernate"},{"location":"0.x/misk-hibernate/index.html#packages","text":"Name Summary misk.hibernate misk.hibernate.annotation misk.hibernate.migrate misk.hibernate.pagination","title":"Packages"},{"location":"0.x/misk-hibernate/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-hibernate/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.hibernate.migrate.BulkShardMigrator BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards. misk.hibernate.Check misk.hibernate.Constraint Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator. misk.hibernate.DbChild Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. misk.hibernate.DbEntity Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods. misk.hibernate.DbRoot Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer . misk.hibernate.DbSharded Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. misk.hibernate.DbTimestampedEntity This complements DbEntity for entities that keep updated_at and created_at timestamps. misk.hibernate.DbUnsharded Marker interface for persistent entities that have a bounded growth and do not require sharding. misk.hibernate.Gid Entity group id, maps to two long columns one for the root id and one for the row misk.hibernate.GidGenerator misk.hibernate.HibernateEntityModule Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier . misk.hibernate.HibernateModule misk.hibernate.Id Type-safe persistent identifier, mapped to a long column. misk.hibernate.IdType Binds Id<*> in the DB to a bigint in MySQL. misk.hibernate.JsonColumn Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. misk.hibernate.annotation.Keyspace misk.hibernate.pagination.Offset Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. misk.hibernate.Operator misk.hibernate.OrBuilder This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query. misk.hibernate.Order Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns. misk.hibernate.pagination.Page misk.hibernate.pagination.Pager misk.hibernate.pagination.Paginator Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page. misk.hibernate.Path misk.hibernate.PostCommitHookFailedException PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook java.sql.PreparedStatement (extensions in package misk.hibernate) misk.hibernate.Projection Marker interface for query projections. misk.hibernate.Property Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with. misk.hibernate.ProtoColumn Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. misk.hibernate.Query Base class for SQL queries. java.sql.ResultSet (extensions in package misk.hibernate) misk.hibernate.RetryTransactionException Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries(). misk.hibernate.SecretColumn SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. misk.hibernate.Select Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result. misk.hibernate.Session misk.hibernate.Transacter Provides explicit block-based transaction demarcation. misk.hibernate.TransacterService Marker interface for services that provide database transactors. misk.hibernate.TransformedType TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. misk.hibernate.Transformer misk.hibernate.TransformerContext misk.hibernate.ValidationReport misk.hibernate.VitessDialect","title":"All Types - Misk"},{"location":"0.x/misk-hibernate/alltypes/index.html#all-types","text":"Name Summary misk.hibernate.migrate.BulkShardMigrator BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards. misk.hibernate.Check misk.hibernate.Constraint Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator. misk.hibernate.DbChild Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. misk.hibernate.DbEntity Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods. misk.hibernate.DbRoot Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer . misk.hibernate.DbSharded Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. misk.hibernate.DbTimestampedEntity This complements DbEntity for entities that keep updated_at and created_at timestamps. misk.hibernate.DbUnsharded Marker interface for persistent entities that have a bounded growth and do not require sharding. misk.hibernate.Gid Entity group id, maps to two long columns one for the root id and one for the row misk.hibernate.GidGenerator misk.hibernate.HibernateEntityModule Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier . misk.hibernate.HibernateModule misk.hibernate.Id Type-safe persistent identifier, mapped to a long column. misk.hibernate.IdType Binds Id<*> in the DB to a bigint in MySQL. misk.hibernate.JsonColumn Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. misk.hibernate.annotation.Keyspace misk.hibernate.pagination.Offset Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. misk.hibernate.Operator misk.hibernate.OrBuilder This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query. misk.hibernate.Order Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns. misk.hibernate.pagination.Page misk.hibernate.pagination.Pager misk.hibernate.pagination.Paginator Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page. misk.hibernate.Path misk.hibernate.PostCommitHookFailedException PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook java.sql.PreparedStatement (extensions in package misk.hibernate) misk.hibernate.Projection Marker interface for query projections. misk.hibernate.Property Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with. misk.hibernate.ProtoColumn Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. misk.hibernate.Query Base class for SQL queries. java.sql.ResultSet (extensions in package misk.hibernate) misk.hibernate.RetryTransactionException Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries(). misk.hibernate.SecretColumn SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. misk.hibernate.Select Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result. misk.hibernate.Session misk.hibernate.Transacter Provides explicit block-based transaction demarcation. misk.hibernate.TransacterService Marker interface for services that provide database transactors. misk.hibernate.TransformedType TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. misk.hibernate.Transformer misk.hibernate.TransformerContext misk.hibernate.ValidationReport misk.hibernate.VitessDialect","title":"All Types"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html","text":"misk-hibernate / misk.hibernate Package misk.hibernate \u00b6 Types \u00b6 Name Summary DbChild interface DbChild<R : DbRoot < R >, T : DbChild < R , T >> : DbSharded < R , T > Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. DbEntity interface DbEntity<T : DbEntity < T >> Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods. DbRoot interface DbRoot<T : DbRoot < T >> : DbSharded < T , T > Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer . DbSharded interface DbSharded<R : DbRoot < R >, T : DbSharded < R , T >> : DbEntity < T > Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. DbTimestampedEntity interface DbTimestampedEntity This complements DbEntity for entities that keep updated_at and created_at timestamps. DbUnsharded interface DbUnsharded<T : DbUnsharded < T >> : DbEntity < T > Marker interface for persistent entities that have a bounded growth and do not require sharding. Gid data class Gid<R : DbRoot < R >, T : DbSharded < R , T >> : Serializable Entity group id, maps to two long columns one for the root id and one for the row GidGenerator class GidGenerator : AbstractPostInsertGenerator, Configurable HibernateEntityModule abstract class HibernateEntityModule : KAbstractModule Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier . HibernateModule class HibernateModule : KAbstractModule Id data class Id<T : DbEntity < T >> : Serializable , Comparable < Id < T >> Type-safe persistent identifier, mapped to a long column. IdType class IdType : UserType, ResultSetIdentifierConsumer Binds Id<*> in the DB to a bigint in MySQL. Operator enum class Operator OrBuilder interface OrBuilder<Q : Query <*>> This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query. Path data class Path Projection interface Projection Marker interface for query projections. Query interface Query<T> Base class for SQL queries. Session interface Session : Session Transacter interface Transacter Provides explicit block-based transaction demarcation. TransacterService interface TransacterService : Service Marker interface for services that provide database transactors. Transformer abstract class Transformer TransformerContext data class TransformerContext ValidationReport data class ValidationReport VitessDialect class VitessDialect : MySQL57Dialect Annotations \u00b6 Name Summary Constraint annotation class Constraint Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator. JsonColumn annotation class JsonColumn Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. Order annotation class Order Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns. Property annotation class Property Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with. ProtoColumn annotation class ProtoColumn Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. SecretColumn annotation class SecretColumn SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. Select annotation class Select Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result. TransformedType annotation class TransformedType TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. Exceptions \u00b6 Name Summary PostCommitHookFailedException class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook RetryTransactionException class RetryTransactionException : Exception Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries(). Type Aliases \u00b6 Name Summary Check typealias Check = Check Extensions for External Classes \u00b6 Name Summary java.sql.PreparedStatement java.sql.ResultSet Functions \u00b6 Name Summary allowFullScatter fun <T, Q : Query < T >> Q .allowFullScatter(): Q allowTableScan fun <T, Q : Query < T >> Q .allowTableScan(): Q constraint fun <T, Q : Query < T >> Q .constraint(block: CriteriaBuilder.(root: Root<*>) -> Predicate): Q Equivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining. failSafeRead fun <T> Transacter .failSafeRead(block: (session: Session ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Transacter .failSafeRead(shard: Shard, block: (session: Session ) -> T ): T load fun <T : DbEntity < T >> Session .load(id: Id < T >): T loadOrNull fun <T : DbEntity < T >> Session .loadOrNull(id: Id < T >): T ? loadSharded fun <R : DbRoot < R >, S : DbSharded < R , S >> Session .loadSharded(gid: Gid < R , S >): S newQuery fun <T : Query <*>> Query.Factory .newQuery(): T or fun <T, Q : Query < T >> Q .or(lambda: OrBuilder < Q >.() -> Unit ): Q Collects options that are all OR\u2019d together. If any are true the predicate matches. shards fun Transacter .shards(): Set <Shard> fun Transacter .shards(keyspace: Keyspace): Collection <Shard> transaction fun <T> Transacter .transaction(shard: Shard, block: (session: Session ) -> T ): T Commits a transaction with operations of block .","title":"Package misk.hibernate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html#package-miskhibernate","text":"","title":"Package misk.hibernate"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html#types","text":"Name Summary DbChild interface DbChild<R : DbRoot < R >, T : DbChild < R , T >> : DbSharded < R , T > Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. DbEntity interface DbEntity<T : DbEntity < T >> Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods. DbRoot interface DbRoot<T : DbRoot < T >> : DbSharded < T , T > Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer . DbSharded interface DbSharded<R : DbRoot < R >, T : DbSharded < R , T >> : DbEntity < T > Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. DbTimestampedEntity interface DbTimestampedEntity This complements DbEntity for entities that keep updated_at and created_at timestamps. DbUnsharded interface DbUnsharded<T : DbUnsharded < T >> : DbEntity < T > Marker interface for persistent entities that have a bounded growth and do not require sharding. Gid data class Gid<R : DbRoot < R >, T : DbSharded < R , T >> : Serializable Entity group id, maps to two long columns one for the root id and one for the row GidGenerator class GidGenerator : AbstractPostInsertGenerator, Configurable HibernateEntityModule abstract class HibernateEntityModule : KAbstractModule Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier . HibernateModule class HibernateModule : KAbstractModule Id data class Id<T : DbEntity < T >> : Serializable , Comparable < Id < T >> Type-safe persistent identifier, mapped to a long column. IdType class IdType : UserType, ResultSetIdentifierConsumer Binds Id<*> in the DB to a bigint in MySQL. Operator enum class Operator OrBuilder interface OrBuilder<Q : Query <*>> This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query. Path data class Path Projection interface Projection Marker interface for query projections. Query interface Query<T> Base class for SQL queries. Session interface Session : Session Transacter interface Transacter Provides explicit block-based transaction demarcation. TransacterService interface TransacterService : Service Marker interface for services that provide database transactors. Transformer abstract class Transformer TransformerContext data class TransformerContext ValidationReport data class ValidationReport VitessDialect class VitessDialect : MySQL57Dialect","title":"Types"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html#annotations","text":"Name Summary Constraint annotation class Constraint Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator. JsonColumn annotation class JsonColumn Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. Order annotation class Order Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns. Property annotation class Property Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with. ProtoColumn annotation class ProtoColumn Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. SecretColumn annotation class SecretColumn SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. Select annotation class Select Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result. TransformedType annotation class TransformedType TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed.","title":"Annotations"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html#exceptions","text":"Name Summary PostCommitHookFailedException class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook RetryTransactionException class RetryTransactionException : Exception Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries().","title":"Exceptions"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html#type-aliases","text":"Name Summary Check typealias Check = Check","title":"Type Aliases"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html#extensions-for-external-classes","text":"Name Summary java.sql.PreparedStatement java.sql.ResultSet","title":"Extensions for External Classes"},{"location":"0.x/misk-hibernate/misk.hibernate/index.html#functions","text":"Name Summary allowFullScatter fun <T, Q : Query < T >> Q .allowFullScatter(): Q allowTableScan fun <T, Q : Query < T >> Q .allowTableScan(): Q constraint fun <T, Q : Query < T >> Q .constraint(block: CriteriaBuilder.(root: Root<*>) -> Predicate): Q Equivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining. failSafeRead fun <T> Transacter .failSafeRead(block: (session: Session ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Transacter .failSafeRead(shard: Shard, block: (session: Session ) -> T ): T load fun <T : DbEntity < T >> Session .load(id: Id < T >): T loadOrNull fun <T : DbEntity < T >> Session .loadOrNull(id: Id < T >): T ? loadSharded fun <R : DbRoot < R >, S : DbSharded < R , S >> Session .loadSharded(gid: Gid < R , S >): S newQuery fun <T : Query <*>> Query.Factory .newQuery(): T or fun <T, Q : Query < T >> Q .or(lambda: OrBuilder < Q >.() -> Unit ): Q Collects options that are all OR\u2019d together. If any are true the predicate matches. shards fun Transacter .shards(): Set <Shard> fun Transacter .shards(keyspace: Keyspace): Collection <Shard> transaction fun <T> Transacter .transaction(shard: Shard, block: (session: Session ) -> T ): T Commits a transaction with operations of block .","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-check.html","text":"misk-hibernate / misk.hibernate / Check Check \u00b6 typealias Check = Check","title":"Check - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-check.html#check","text":"typealias Check = Check","title":"Check"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-unsharded.html","text":"misk-hibernate / misk.hibernate / DbUnsharded DbUnsharded \u00b6 interface DbUnsharded<T : DbUnsharded < T >> : DbEntity < T > Marker interface for persistent entities that have a bounded growth and do not require sharding. Inherited Properties \u00b6 Name Summary id abstract val id: Id < T >","title":"DbUnsharded - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-unsharded.html#dbunsharded","text":"interface DbUnsharded<T : DbUnsharded < T >> : DbEntity < T > Marker interface for persistent entities that have a bounded growth and do not require sharding.","title":"DbUnsharded"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-unsharded.html#inherited-properties","text":"Name Summary id abstract val id: Id < T >","title":"Inherited Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-projection.html","text":"misk-hibernate / misk.hibernate / Projection Projection \u00b6 interface Projection Marker interface for query projections.","title":"Projection - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-projection.html#projection","text":"interface Projection Marker interface for query projections.","title":"Projection"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter-service.html","text":"misk-hibernate / misk.hibernate / TransacterService TransacterService \u00b6 interface TransacterService : Service Marker interface for services that provide database transactors. Services that require a database connection should depend on this interface when they are installed in a module. e.g. install(ServiceModule<MoviesService>() .dependsOn<TransacterService>(Movies::class))","title":"TransacterService - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter-service.html#transacterservice","text":"interface TransacterService : Service Marker interface for services that provide database transactors. Services that require a database connection should depend on this interface when they are installed in a module. e.g. install(ServiceModule<MoviesService>() .dependsOn<TransacterService>(Movies::class))","title":"TransacterService"},{"location":"0.x/misk-hibernate/misk.hibernate/allow-full-scatter.html","text":"misk-hibernate / misk.hibernate / allowFullScatter allowFullScatter \u00b6 inline fun <T, reified Q : Query < T >> Q .allowFullScatter(): Q","title":"allowFullScatter - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/allow-full-scatter.html#allowfullscatter","text":"inline fun <T, reified Q : Query < T >> Q .allowFullScatter(): Q","title":"allowFullScatter"},{"location":"0.x/misk-hibernate/misk.hibernate/allow-table-scan.html","text":"misk-hibernate / misk.hibernate / allowTableScan allowTableScan \u00b6 inline fun <T, reified Q : Query < T >> Q .allowTableScan(): Q","title":"allowTableScan - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/allow-table-scan.html#allowtablescan","text":"inline fun <T, reified Q : Query < T >> Q .allowTableScan(): Q","title":"allowTableScan"},{"location":"0.x/misk-hibernate/misk.hibernate/constraint.html","text":"misk-hibernate / misk.hibernate / constraint constraint \u00b6 fun <T, Q : Query < T >> Q .constraint(block: CriteriaBuilder.(root: Root<*>) -> Predicate): Q Equivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining. The root parameter should be used to select which property of the target entity to match against. queryFactory.newQuery<OperatorsMovieQuery>() .constraint { root -> like(root.get(\"name\"), \"Jurassic%\") } .count(session)","title":"constraint - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/constraint.html#constraint","text":"fun <T, Q : Query < T >> Q .constraint(block: CriteriaBuilder.(root: Root<*>) -> Predicate): Q Equivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining. The root parameter should be used to select which property of the target entity to match against. queryFactory.newQuery<OperatorsMovieQuery>() .constraint { root -> like(root.get(\"name\"), \"Jurassic%\") } .count(session)","title":"constraint"},{"location":"0.x/misk-hibernate/misk.hibernate/fail-safe-read.html","text":"misk-hibernate / misk.hibernate / failSafeRead failSafeRead \u00b6 fun <T> Transacter .failSafeRead(block: (session: Session ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Transacter .failSafeRead(shard: Shard, block: (session: Session ) -> T ): T","title":"failSafeRead - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/fail-safe-read.html#failsaferead","text":"fun <T> Transacter .failSafeRead(block: (session: Session ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Transacter .failSafeRead(shard: Shard, block: (session: Session ) -> T ): T","title":"failSafeRead"},{"location":"0.x/misk-hibernate/misk.hibernate/load-or-null.html","text":"misk-hibernate / misk.hibernate / loadOrNull loadOrNull \u00b6 inline fun <reified T : DbEntity < T >> Session .loadOrNull(id: Id < T >): T ?","title":"loadOrNull - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/load-or-null.html#loadornull","text":"inline fun <reified T : DbEntity < T >> Session .loadOrNull(id: Id < T >): T ?","title":"loadOrNull"},{"location":"0.x/misk-hibernate/misk.hibernate/load-sharded.html","text":"misk-hibernate / misk.hibernate / loadSharded loadSharded \u00b6 inline fun <R : DbRoot < R >, reified S : DbSharded < R , S >> Session .loadSharded(gid: Gid < R , S >): S","title":"loadSharded - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/load-sharded.html#loadsharded","text":"inline fun <R : DbRoot < R >, reified S : DbSharded < R , S >> Session .loadSharded(gid: Gid < R , S >): S","title":"loadSharded"},{"location":"0.x/misk-hibernate/misk.hibernate/load.html","text":"misk-hibernate / misk.hibernate / load load \u00b6 inline fun <reified T : DbEntity < T >> Session .load(id: Id < T >): T","title":"load - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/load.html#load","text":"inline fun <reified T : DbEntity < T >> Session .load(id: Id < T >): T","title":"load"},{"location":"0.x/misk-hibernate/misk.hibernate/new-query.html","text":"misk-hibernate / misk.hibernate / newQuery newQuery \u00b6 inline fun <reified T : Query <*>> Query.Factory .newQuery(): T","title":"newQuery - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/new-query.html#newquery","text":"inline fun <reified T : Query <*>> Query.Factory .newQuery(): T","title":"newQuery"},{"location":"0.x/misk-hibernate/misk.hibernate/or.html","text":"misk-hibernate / misk.hibernate / or or \u00b6 inline fun <T, reified Q : Query < T >> Q .or(lambda: OrBuilder < Q >.() -> Unit ): Q Collects options that are all OR\u2019d together. If any are true the predicate matches. queryFactory.newQuery<OperatorsMovieQuery>() .or { option { name(\"Rocky 1\") } option { name(\"Rocky 3\") } } .list() Each option has a list of constraints that are themselves AND\u2019d together.","title":"or - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/or.html#or","text":"inline fun <T, reified Q : Query < T >> Q .or(lambda: OrBuilder < Q >.() -> Unit ): Q Collects options that are all OR\u2019d together. If any are true the predicate matches. queryFactory.newQuery<OperatorsMovieQuery>() .or { option { name(\"Rocky 1\") } option { name(\"Rocky 3\") } } .list() Each option has a list of constraints that are themselves AND\u2019d together.","title":"or"},{"location":"0.x/misk-hibernate/misk.hibernate/shards.html","text":"misk-hibernate / misk.hibernate / shards shards \u00b6 fun Transacter .shards(): Set <Shard> fun Transacter .shards(keyspace: Keyspace): Collection <Shard>","title":"shards - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/shards.html#shards","text":"fun Transacter .shards(): Set <Shard> fun Transacter .shards(keyspace: Keyspace): Collection <Shard>","title":"shards"},{"location":"0.x/misk-hibernate/misk.hibernate/transaction.html","text":"misk-hibernate / misk.hibernate / transaction transaction \u00b6 fun <T> Transacter .transaction(shard: Shard, block: (session: Session ) -> T ): T Commits a transaction with operations of block . New objects must be persisted with an explicit call to Session.save . Updates are performed implicitly by modifying objects returned from a query. For example if we were to save a new movie to a movie database, and update the revenue of an existing movie: transacter.transaction { session -> // Saving a new entity to the database needs an explicit call. val starWars = DbMovie(name = \"Star Wars\", year = \"1977\", revenue = 775_400_000) session.save(starWars) // Updating a movie from the database is done by modifying the object. // Changes are saved implicitly. val movie: DbMovie = queryFactory.newQuery<MovieQuery>().id(id).uniqueResult(session)!! movie.revenue = 100_000_000 }","title":"transaction - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/transaction.html#transaction","text":"fun <T> Transacter .transaction(shard: Shard, block: (session: Session ) -> T ): T Commits a transaction with operations of block . New objects must be persisted with an explicit call to Session.save . Updates are performed implicitly by modifying objects returned from a query. For example if we were to save a new movie to a movie database, and update the revenue of an existing movie: transacter.transaction { session -> // Saving a new entity to the database needs an explicit call. val starWars = DbMovie(name = \"Star Wars\", year = \"1977\", revenue = 775_400_000) session.save(starWars) // Updating a movie from the database is done by modifying the object. // Changes are saved implicitly. val movie: DbMovie = queryFactory.newQuery<MovieQuery>().id(id).uniqueResult(session)!! movie.revenue = 100_000_000 }","title":"transaction"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/index.html","text":"misk-hibernate / misk.hibernate / Constraint Constraint \u00b6 annotation class Constraint Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator. Constructors \u00b6 Name Summary <init> Constraint(path: String , operator: Operator = Operator.EQ) Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator. Properties \u00b6 Name Summary operator val operator: Operator path val path: String","title":"Constraint - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/index.html#constraint","text":"annotation class Constraint Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator.","title":"Constraint"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/index.html#constructors","text":"Name Summary <init> Constraint(path: String , operator: Operator = Operator.EQ) Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/index.html#properties","text":"Name Summary operator val operator: Operator path val path: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/-init-.html","text":"misk-hibernate / misk.hibernate / Constraint / <init> <init> \u00b6 Constraint(path: String , operator: Operator = Operator.EQ) Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/-init-.html#init","text":"Constraint(path: String , operator: Operator = Operator.EQ) Annotates a function on a subinterface of Query to indicate which column (or path of columns) it constrains and using which operator.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/operator.html","text":"misk-hibernate / misk.hibernate / Constraint / operator operator \u00b6 val operator: Operator","title":"operator - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/operator.html#operator","text":"val operator: Operator","title":"operator"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/path.html","text":"misk-hibernate / misk.hibernate / Constraint / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-constraint/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-child/index.html","text":"misk-hibernate / misk.hibernate / DbChild DbChild \u00b6 interface DbChild<R : DbRoot < R >, T : DbChild < R , T >> : DbSharded < R , T > Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. Properties \u00b6 Name Summary id open val id: Id < T > Inherited Properties \u00b6 Name Summary gid abstract val gid: Gid < R , T > rootId abstract val rootId: Id < R >","title":"DbChild - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-child/index.html#dbchild","text":"interface DbChild<R : DbRoot < R >, T : DbChild < R , T >> : DbSharded < R , T > Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children.","title":"DbChild"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-child/index.html#properties","text":"Name Summary id open val id: Id < T >","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-child/index.html#inherited-properties","text":"Name Summary gid abstract val gid: Gid < R , T > rootId abstract val rootId: Id < R >","title":"Inherited Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-child/id.html","text":"misk-hibernate / misk.hibernate / DbChild / id id \u00b6 open val id: Id < T > Overrides DbEntity.id","title":"id - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-child/id.html#id","text":"open val id: Id < T > Overrides DbEntity.id","title":"id"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-entity/index.html","text":"misk-hibernate / misk.hibernate / DbEntity DbEntity \u00b6 interface DbEntity<T : DbEntity < T >> Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods. Properties \u00b6 Name Summary id abstract val id: Id < T > Inheritors \u00b6 Name Summary DbSharded interface DbSharded<R : DbRoot < R >, T : DbSharded < R , T >> : DbEntity < T > Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. DbUnsharded interface DbUnsharded<T : DbUnsharded < T >> : DbEntity < T > Marker interface for persistent entities that have a bounded growth and do not require sharding.","title":"DbEntity - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-entity/index.html#dbentity","text":"interface DbEntity<T : DbEntity < T >> Marker interface for persistent entities. Ensures that only persistent entities can be passed into Session methods.","title":"DbEntity"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-entity/index.html#properties","text":"Name Summary id abstract val id: Id < T >","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-entity/index.html#inheritors","text":"Name Summary DbSharded interface DbSharded<R : DbRoot < R >, T : DbSharded < R , T >> : DbEntity < T > Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. DbUnsharded interface DbUnsharded<T : DbUnsharded < T >> : DbEntity < T > Marker interface for persistent entities that have a bounded growth and do not require sharding.","title":"Inheritors"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-entity/id.html","text":"misk-hibernate / misk.hibernate / DbEntity / id id \u00b6 abstract val id: Id < T >","title":"id - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-entity/id.html#id","text":"abstract val id: Id < T >","title":"id"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-root/index.html","text":"misk-hibernate / misk.hibernate / DbRoot DbRoot \u00b6 interface DbRoot<T : DbRoot < T >> : DbSharded < T , T > Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer . Properties \u00b6 Name Summary gid open val gid: Gid < T , T > rootId open val rootId: Id < T >","title":"DbRoot - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-root/index.html#dbroot","text":"interface DbRoot<T : DbRoot < T >> : DbSharded < T , T > Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer .","title":"DbRoot"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-root/index.html#properties","text":"Name Summary gid open val gid: Gid < T , T > rootId open val rootId: Id < T >","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-root/gid.html","text":"misk-hibernate / misk.hibernate / DbRoot / gid gid \u00b6 open val gid: Gid < T , T > Overrides DbSharded.gid","title":"gid - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-root/gid.html#gid","text":"open val gid: Gid < T , T > Overrides DbSharded.gid","title":"gid"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-root/root-id.html","text":"misk-hibernate / misk.hibernate / DbRoot / rootId rootId \u00b6 open val rootId: Id < T > Overrides DbSharded.rootId","title":"rootId - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-root/root-id.html#rootid","text":"open val rootId: Id < T > Overrides DbSharded.rootId","title":"rootId"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/index.html","text":"misk-hibernate / misk.hibernate / DbSharded DbSharded \u00b6 interface DbSharded<R : DbRoot < R >, T : DbSharded < R , T >> : DbEntity < T > Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children. Properties \u00b6 Name Summary gid abstract val gid: Gid < R , T > rootId abstract val rootId: Id < R > Inherited Properties \u00b6 Name Summary id abstract val id: Id < T > Inheritors \u00b6 Name Summary DbChild interface DbChild<R : DbRoot < R >, T : DbChild < R , T >> : DbSharded < R , T > Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. DbRoot interface DbRoot<T : DbRoot < T >> : DbSharded < T , T > Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer .","title":"DbSharded - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/index.html#dbsharded","text":"interface DbSharded<R : DbRoot < R >, T : DbSharded < R , T >> : DbEntity < T > Marker interface for sharded persistent entities. Do not subclass directly, instead subclass either DbRoot for entity group roots or DbChild for entity group children.","title":"DbSharded"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/index.html#properties","text":"Name Summary gid abstract val gid: Gid < R , T > rootId abstract val rootId: Id < R >","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/index.html#inherited-properties","text":"Name Summary id abstract val id: Id < T >","title":"Inherited Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/index.html#inheritors","text":"Name Summary DbChild interface DbChild<R : DbRoot < R >, T : DbChild < R , T >> : DbSharded < R , T > Marker interface for sharded entities that stay with their root inside an entity group. Entity group children will always stay inside the same shard regardless of shard splits and so on. That means transactions inside an entity group is always safe. A typical sharding strategy has a DbCustomer as a root and all of the entities that belong to that customer as children. DbRoot interface DbRoot<T : DbRoot < T >> : DbSharded < T , T > Marker interface for sharded entity group roots. Entity group roots are spread out across shards they can also have children in the form of DbChild subclasses that always stay in the same shard as their roots. A typical root is for example DbCustomer .","title":"Inheritors"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/gid.html","text":"misk-hibernate / misk.hibernate / DbSharded / gid gid \u00b6 abstract val gid: Gid < R , T >","title":"gid - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/gid.html#gid","text":"abstract val gid: Gid < R , T >","title":"gid"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/root-id.html","text":"misk-hibernate / misk.hibernate / DbSharded / rootId rootId \u00b6 abstract val rootId: Id < R >","title":"rootId - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-sharded/root-id.html#rootid","text":"abstract val rootId: Id < R >","title":"rootId"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-timestamped-entity/index.html","text":"misk-hibernate / misk.hibernate / DbTimestampedEntity DbTimestampedEntity \u00b6 interface DbTimestampedEntity This complements DbEntity for entities that keep updated_at and created_at timestamps. Misk uses the application\u2019s clock time to set created_at and updated_at . We prefer the application\u2019s (ie. JVM\u2019s) clock over the database\u2019s clock because only the application\u2019s clock can be faked in tests. To use timestamped entities first add two columns in your CREATE TABLE statement. You may also add an optional index on updated_at : CREATE TABLE movies( id bigint NOT NULL PRIMARY KEY AUTO_INCREMENT, created_at timestamp(3) NOT NULL DEFAULT NOW(3), updated_at timestamp(3) NOT NULL DEFAULT NOW(3) ON UPDATE NOW(3), ... KEY `idx_updated_at` (`updated_at`) ); The above SQL uses timestamp(3) and NOW(3) to get millisecond precision which interoperates nicely with Java. Although we declare DEFAULT NOW(3) and ON UPDATE NOW(3) , these don\u2019t apply to writes from Hibernate because it always provides a value explicitly. Next implement this interface and add the following declarations to your entity class: @Entity @Table(name = \"movies\") class DbMovie() : DbEntity<DbMovie>, DbTimestampedEntity { ... @Column override lateinit var updated_at: Instant @Column override lateinit var created_at: Instant ... } The timestamp listener will automatically populate these values on save and update. (Incidentally, the @Columns are not marked nullable = false because the timestamp listener is triggered after the nullability check.) Properties \u00b6 Name Summary created_at abstract var created_at: Instant updated_at abstract var updated_at: Instant","title":"DbTimestampedEntity - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-timestamped-entity/index.html#dbtimestampedentity","text":"interface DbTimestampedEntity This complements DbEntity for entities that keep updated_at and created_at timestamps. Misk uses the application\u2019s clock time to set created_at and updated_at . We prefer the application\u2019s (ie. JVM\u2019s) clock over the database\u2019s clock because only the application\u2019s clock can be faked in tests. To use timestamped entities first add two columns in your CREATE TABLE statement. You may also add an optional index on updated_at : CREATE TABLE movies( id bigint NOT NULL PRIMARY KEY AUTO_INCREMENT, created_at timestamp(3) NOT NULL DEFAULT NOW(3), updated_at timestamp(3) NOT NULL DEFAULT NOW(3) ON UPDATE NOW(3), ... KEY `idx_updated_at` (`updated_at`) ); The above SQL uses timestamp(3) and NOW(3) to get millisecond precision which interoperates nicely with Java. Although we declare DEFAULT NOW(3) and ON UPDATE NOW(3) , these don\u2019t apply to writes from Hibernate because it always provides a value explicitly. Next implement this interface and add the following declarations to your entity class: @Entity @Table(name = \"movies\") class DbMovie() : DbEntity<DbMovie>, DbTimestampedEntity { ... @Column override lateinit var updated_at: Instant @Column override lateinit var created_at: Instant ... } The timestamp listener will automatically populate these values on save and update. (Incidentally, the @Columns are not marked nullable = false because the timestamp listener is triggered after the nullability check.)","title":"DbTimestampedEntity"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-timestamped-entity/index.html#properties","text":"Name Summary created_at abstract var created_at: Instant updated_at abstract var updated_at: Instant","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-timestamped-entity/created_at.html","text":"misk-hibernate / misk.hibernate / DbTimestampedEntity / created_at created_at \u00b6 abstract var created_at: Instant","title":"created_at - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-timestamped-entity/created_at.html#created_at","text":"abstract var created_at: Instant","title":"created_at"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-timestamped-entity/updated_at.html","text":"misk-hibernate / misk.hibernate / DbTimestampedEntity / updated_at updated_at \u00b6 abstract var updated_at: Instant","title":"updated_at - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-db-timestamped-entity/updated_at.html#updated_at","text":"abstract var updated_at: Instant","title":"updated_at"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/index.html","text":"misk-hibernate / misk.hibernate / Gid Gid \u00b6 @Embeddable data class Gid<R : DbRoot < R >, T : DbSharded < R , T >> : Serializable Entity group id, maps to two long columns one for the root id and one for the row Constructors \u00b6 Name Summary <init> Gid(rootId: Id < R >, id: Id < T >) Entity group id, maps to two long columns one for the root id and one for the row Properties \u00b6 Name Summary id val id: Id < T > rootId val rootId: Id < R > Functions \u00b6 Name Summary shardKey fun shardKey(): Key toString fun toString(): String","title":"Gid - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/index.html#gid","text":"@Embeddable data class Gid<R : DbRoot < R >, T : DbSharded < R , T >> : Serializable Entity group id, maps to two long columns one for the root id and one for the row","title":"Gid"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/index.html#constructors","text":"Name Summary <init> Gid(rootId: Id < R >, id: Id < T >) Entity group id, maps to two long columns one for the root id and one for the row","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/index.html#properties","text":"Name Summary id val id: Id < T > rootId val rootId: Id < R >","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/index.html#functions","text":"Name Summary shardKey fun shardKey(): Key toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/-init-.html","text":"misk-hibernate / misk.hibernate / Gid / <init> <init> \u00b6 Gid(rootId: Id < R >, id: Id < T >) Entity group id, maps to two long columns one for the root id and one for the row","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/-init-.html#init","text":"Gid(rootId: Id < R >, id: Id < T >) Entity group id, maps to two long columns one for the root id and one for the row","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/id.html","text":"misk-hibernate / misk.hibernate / Gid / id id \u00b6 val id: Id < T >","title":"id - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/id.html#id","text":"val id: Id < T >","title":"id"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/root-id.html","text":"misk-hibernate / misk.hibernate / Gid / rootId rootId \u00b6 val rootId: Id < R >","title":"rootId - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/root-id.html#rootid","text":"val rootId: Id < R >","title":"rootId"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/shard-key.html","text":"misk-hibernate / misk.hibernate / Gid / shardKey shardKey \u00b6 fun shardKey(): Key","title":"shardKey - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/shard-key.html#shardkey","text":"fun shardKey(): Key","title":"shardKey"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/to-string.html","text":"misk-hibernate / misk.hibernate / Gid / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/index.html","text":"misk-hibernate / misk.hibernate / GidGenerator GidGenerator \u00b6 class GidGenerator : AbstractPostInsertGenerator, Configurable Constructors \u00b6 Name Summary <init> GidGenerator() Functions \u00b6 Name Summary configure fun configure(type: Type, params: Properties , serviceRegistry: ServiceRegistry): Unit getInsertGeneratedIdentifierDelegate fun getInsertGeneratedIdentifierDelegate(persister: PostInsertIdentityPersister, dialect: Dialect, isGetGeneratedKeysEnabled: Boolean ): InsertGeneratedIdentifierDelegate","title":"GidGenerator - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/index.html#gidgenerator","text":"class GidGenerator : AbstractPostInsertGenerator, Configurable","title":"GidGenerator"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/index.html#constructors","text":"Name Summary <init> GidGenerator()","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/index.html#functions","text":"Name Summary configure fun configure(type: Type, params: Properties , serviceRegistry: ServiceRegistry): Unit getInsertGeneratedIdentifierDelegate fun getInsertGeneratedIdentifierDelegate(persister: PostInsertIdentityPersister, dialect: Dialect, isGetGeneratedKeysEnabled: Boolean ): InsertGeneratedIdentifierDelegate","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/-init-.html","text":"misk-hibernate / misk.hibernate / GidGenerator / <init> <init> \u00b6 GidGenerator()","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/-init-.html#init","text":"GidGenerator()","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/configure.html","text":"misk-hibernate / misk.hibernate / GidGenerator / configure configure \u00b6 fun configure(type: Type, params: Properties , serviceRegistry: ServiceRegistry): Unit","title":"configure - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/configure.html#configure","text":"fun configure(type: Type, params: Properties , serviceRegistry: ServiceRegistry): Unit","title":"configure"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/get-insert-generated-identifier-delegate.html","text":"misk-hibernate / misk.hibernate / GidGenerator / getInsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate \u00b6 fun getInsertGeneratedIdentifierDelegate(persister: PostInsertIdentityPersister, dialect: Dialect, isGetGeneratedKeysEnabled: Boolean ): InsertGeneratedIdentifierDelegate","title":"getInsertGeneratedIdentifierDelegate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-gid-generator/get-insert-generated-identifier-delegate.html#getinsertgeneratedidentifierdelegate","text":"fun getInsertGeneratedIdentifierDelegate(persister: PostInsertIdentityPersister, dialect: Dialect, isGetGeneratedKeysEnabled: Boolean ): InsertGeneratedIdentifierDelegate","title":"getInsertGeneratedIdentifierDelegate"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/index.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule HibernateEntityModule \u00b6 abstract class HibernateEntityModule : KAbstractModule Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier . Constructors \u00b6 Name Summary <init> HibernateEntityModule(qualifier: KClass <out Annotation >) Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier . Functions \u00b6 Name Summary addEntities fun addEntities(vararg entities: KClass <out DbEntity <*>>): Unit fun addEntities(accessAnnotationClass: KClass <out Annotation >, vararg entities: KClass <out DbEntity <*>>): Unit Install entities with an AccessAnnotation to set run query permissions for Database-Query tab addEntity fun <T : DbEntity < T >> addEntity(dbEntityClass: KClass < T >, queryClass: KClass <out Query < T >>? = null, accessAnnotationClass: KClass <out Annotation > = NoAdminDashboardDatabaseAccess::class): Unit fun <T : DbEntity < T >> addEntity(): Unit Install Entity with a default of no query access from Admin Dashboard addEntityWithDynamicQuery fun <T : DbEntity < T >, AA : Annotation > addEntityWithDynamicQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a dynamic query (not a static Misk.Query) addEntityWithStaticQuery fun <T : DbEntity < T >, Q : Query < T >, AA : Annotation > addEntityWithStaticQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a static Misk.Query bindListener fun <T> bindListener(type: EventType< T >): LinkedBindingBuilder<in T > configure open fun configure(): Unit configureHibernate abstract fun configureHibernate(): Unit installHibernateAdminDashboardWebActions fun installHibernateAdminDashboardWebActions(): Unit Provide a helper function to discoverably install the necessary module to enable the Database dashboard tab","title":"HibernateEntityModule - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/index.html#hibernateentitymodule","text":"abstract class HibernateEntityModule : KAbstractModule Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier .","title":"HibernateEntityModule"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/index.html#constructors","text":"Name Summary <init> HibernateEntityModule(qualifier: KClass <out Annotation >) Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier .","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/index.html#functions","text":"Name Summary addEntities fun addEntities(vararg entities: KClass <out DbEntity <*>>): Unit fun addEntities(accessAnnotationClass: KClass <out Annotation >, vararg entities: KClass <out DbEntity <*>>): Unit Install entities with an AccessAnnotation to set run query permissions for Database-Query tab addEntity fun <T : DbEntity < T >> addEntity(dbEntityClass: KClass < T >, queryClass: KClass <out Query < T >>? = null, accessAnnotationClass: KClass <out Annotation > = NoAdminDashboardDatabaseAccess::class): Unit fun <T : DbEntity < T >> addEntity(): Unit Install Entity with a default of no query access from Admin Dashboard addEntityWithDynamicQuery fun <T : DbEntity < T >, AA : Annotation > addEntityWithDynamicQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a dynamic query (not a static Misk.Query) addEntityWithStaticQuery fun <T : DbEntity < T >, Q : Query < T >, AA : Annotation > addEntityWithStaticQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a static Misk.Query bindListener fun <T> bindListener(type: EventType< T >): LinkedBindingBuilder<in T > configure open fun configure(): Unit configureHibernate abstract fun configureHibernate(): Unit installHibernateAdminDashboardWebActions fun installHibernateAdminDashboardWebActions(): Unit Provide a helper function to discoverably install the necessary module to enable the Database dashboard tab","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/-init-.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / <init> <init> \u00b6 HibernateEntityModule(qualifier: KClass <out Annotation >) Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier .","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/-init-.html#init","text":"HibernateEntityModule(qualifier: KClass <out Annotation >) Binds hibernate entities and event listeners intended for the Transacter annotated by qualifier .","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entities.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / addEntities addEntities \u00b6 protected fun addEntities(vararg entities: KClass <out DbEntity <*>>): Unit protected fun addEntities(accessAnnotationClass: KClass <out Annotation >, vararg entities: KClass <out DbEntity <*>>): Unit Install entities with an AccessAnnotation to set run query permissions for Database-Query tab","title":"addEntities - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entities.html#addentities","text":"protected fun addEntities(vararg entities: KClass <out DbEntity <*>>): Unit protected fun addEntities(accessAnnotationClass: KClass <out Annotation >, vararg entities: KClass <out DbEntity <*>>): Unit Install entities with an AccessAnnotation to set run query permissions for Database-Query tab","title":"addEntities"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entity-with-dynamic-query.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / addEntityWithDynamicQuery addEntityWithDynamicQuery \u00b6 protected inline fun <reified T : DbEntity < T >, reified AA : Annotation > addEntityWithDynamicQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a dynamic query (not a static Misk.Query)","title":"addEntityWithDynamicQuery - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entity-with-dynamic-query.html#addentitywithdynamicquery","text":"protected inline fun <reified T : DbEntity < T >, reified AA : Annotation > addEntityWithDynamicQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a dynamic query (not a static Misk.Query)","title":"addEntityWithDynamicQuery"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entity-with-static-query.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / addEntityWithStaticQuery addEntityWithStaticQuery \u00b6 protected inline fun <reified T : DbEntity < T >, reified Q : Query < T >, reified AA : Annotation > addEntityWithStaticQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a static Misk.Query","title":"addEntityWithStaticQuery - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entity-with-static-query.html#addentitywithstaticquery","text":"protected inline fun <reified T : DbEntity < T >, reified Q : Query < T >, reified AA : Annotation > addEntityWithStaticQuery(): Unit Adds a DbEntity to Database-Query Admin Dashboard Tab with a static Misk.Query","title":"addEntityWithStaticQuery"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entity.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / addEntity addEntity \u00b6 protected fun <T : DbEntity < T >> addEntity(dbEntityClass: KClass < T >, queryClass: KClass <out Query < T >>? = null, accessAnnotationClass: KClass <out Annotation > = NoAdminDashboardDatabaseAccess::class): Unit protected inline fun <reified T : DbEntity < T >> addEntity(): Unit Install Entity with a default of no query access from Admin Dashboard","title":"addEntity - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/add-entity.html#addentity","text":"protected fun <T : DbEntity < T >> addEntity(dbEntityClass: KClass < T >, queryClass: KClass <out Query < T >>? = null, accessAnnotationClass: KClass <out Annotation > = NoAdminDashboardDatabaseAccess::class): Unit protected inline fun <reified T : DbEntity < T >> addEntity(): Unit Install Entity with a default of no query access from Admin Dashboard","title":"addEntity"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/bind-listener.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / bindListener bindListener \u00b6 protected fun <T> bindListener(type: EventType< T >): LinkedBindingBuilder<in T >","title":"bindListener - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/bind-listener.html#bindlistener","text":"protected fun <T> bindListener(type: EventType< T >): LinkedBindingBuilder<in T >","title":"bindListener"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/configure-hibernate.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / configureHibernate configureHibernate \u00b6 abstract fun configureHibernate(): Unit","title":"configureHibernate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/configure-hibernate.html#configurehibernate","text":"abstract fun configureHibernate(): Unit","title":"configureHibernate"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/configure.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / configure configure \u00b6 protected open fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/configure.html#configure","text":"protected open fun configure(): Unit","title":"configure"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/install-hibernate-admin-dashboard-web-actions.html","text":"misk-hibernate / misk.hibernate / HibernateEntityModule / installHibernateAdminDashboardWebActions installHibernateAdminDashboardWebActions \u00b6 protected fun installHibernateAdminDashboardWebActions(): Unit Provide a helper function to discoverably install the necessary module to enable the Database dashboard tab","title":"installHibernateAdminDashboardWebActions - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-entity-module/install-hibernate-admin-dashboard-web-actions.html#installhibernateadmindashboardwebactions","text":"protected fun installHibernateAdminDashboardWebActions(): Unit Provide a helper function to discoverably install the necessary module to enable the Database dashboard tab","title":"installHibernateAdminDashboardWebActions"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/index.html","text":"misk-hibernate / misk.hibernate / HibernateModule HibernateModule \u00b6 class HibernateModule : KAbstractModule Constructors \u00b6 Name Summary <init> HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, readerQualifier: KClass <out Annotation >, cluster: DataSourceClusterConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig?, databasePool: DatabasePool = RealDatabasePool) Properties \u00b6 Name Summary config val config: DataSourceConfig databasePool val databasePool: DatabasePool readerConfig val readerConfig: DataSourceConfig? Functions \u00b6 Name Summary configure fun configure(): Unit","title":"HibernateModule - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/index.html#hibernatemodule","text":"class HibernateModule : KAbstractModule","title":"HibernateModule"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/index.html#constructors","text":"Name Summary <init> HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, readerQualifier: KClass <out Annotation >, cluster: DataSourceClusterConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig?, databasePool: DatabasePool = RealDatabasePool)","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/index.html#properties","text":"Name Summary config val config: DataSourceConfig databasePool val databasePool: DatabasePool readerConfig val readerConfig: DataSourceConfig?","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/-init-.html","text":"misk-hibernate / misk.hibernate / HibernateModule / <init> <init> \u00b6 HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, readerQualifier: KClass <out Annotation >, cluster: DataSourceClusterConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig?, databasePool: DatabasePool = RealDatabasePool)","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/-init-.html#init","text":"HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, readerQualifier: KClass <out Annotation >, cluster: DataSourceClusterConfig, databasePool: DatabasePool = RealDatabasePool) HibernateModule(qualifier: KClass <out Annotation >, config: DataSourceConfig, readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig?, databasePool: DatabasePool = RealDatabasePool)","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/config.html","text":"misk-hibernate / misk.hibernate / HibernateModule / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/configure.html","text":"misk-hibernate / misk.hibernate / HibernateModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/database-pool.html","text":"misk-hibernate / misk.hibernate / HibernateModule / databasePool databasePool \u00b6 val databasePool: DatabasePool","title":"databasePool - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/database-pool.html#databasepool","text":"val databasePool: DatabasePool","title":"databasePool"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/reader-config.html","text":"misk-hibernate / misk.hibernate / HibernateModule / readerConfig readerConfig \u00b6 val readerConfig: DataSourceConfig?","title":"readerConfig - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-hibernate-module/reader-config.html#readerconfig","text":"val readerConfig: DataSourceConfig?","title":"readerConfig"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/index.html","text":"misk-hibernate / misk.hibernate / Id Id \u00b6 data class Id<T : DbEntity < T >> : Serializable , Comparable < Id < T >> Type-safe persistent identifier, mapped to a long column. Constructors \u00b6 Name Summary <init> Id(id: Long ) Type-safe persistent identifier, mapped to a long column. Properties \u00b6 Name Summary id val id: Long Functions \u00b6 Name Summary compareTo fun compareTo(other: Id < T >): Int shardKey fun shardKey(): Key toString fun toString(): String","title":"Id - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/index.html#id","text":"data class Id<T : DbEntity < T >> : Serializable , Comparable < Id < T >> Type-safe persistent identifier, mapped to a long column.","title":"Id"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/index.html#constructors","text":"Name Summary <init> Id(id: Long ) Type-safe persistent identifier, mapped to a long column.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/index.html#properties","text":"Name Summary id val id: Long","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/index.html#functions","text":"Name Summary compareTo fun compareTo(other: Id < T >): Int shardKey fun shardKey(): Key toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/-init-.html","text":"misk-hibernate / misk.hibernate / Id / <init> <init> \u00b6 Id(id: Long ) Type-safe persistent identifier, mapped to a long column.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-id/-init-.html#init","text":"Id(id: Long ) Type-safe persistent identifier, mapped to a long column.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/compare-to.html","text":"misk-hibernate / misk.hibernate / Id / compareTo compareTo \u00b6 fun compareTo(other: Id < T >): Int","title":"compareTo - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/compare-to.html#compareto","text":"fun compareTo(other: Id < T >): Int","title":"compareTo"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/id.html","text":"misk-hibernate / misk.hibernate / Id / id id \u00b6 val id: Long","title":"id - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/id.html#id","text":"val id: Long","title":"id"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/shard-key.html","text":"misk-hibernate / misk.hibernate / Id / shardKey shardKey \u00b6 fun shardKey(): Key","title":"shardKey - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/shard-key.html#shardkey","text":"fun shardKey(): Key","title":"shardKey"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/to-string.html","text":"misk-hibernate / misk.hibernate / Id / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/index.html","text":"misk-hibernate / misk.hibernate / IdType IdType \u00b6 class IdType : UserType, ResultSetIdentifierConsumer Binds Id<*> in the DB to a bigint in MySQL. Constructors \u00b6 Name Summary <init> IdType() Binds Id<*> in the DB to a bigint in MySQL. Functions \u00b6 Name Summary assemble fun assemble(cached: Serializable , owner: Any ?): Any consumeIdentifier fun consumeIdentifier(resultSet: ResultSet ): Serializable deepCopy fun deepCopy(value: Any ?): Any ? disassemble fun disassemble(value: Any ?): Long equals fun equals(x: Any ?, y: Any ?): Boolean hashCode fun hashCode(x: Any ?): Int isMutable fun isMutable(): Boolean nullSafeGet fun nullSafeGet(rs: ResultSet , names: Array <out String >, session: SharedSessionContractImplementor?, owner: Any ?): Any ? nullSafeSet fun nullSafeSet(st: PreparedStatement , value: Any ?, index: Int , session: SharedSessionContractImplementor?): Unit replace fun replace(original: Any , target: Any , owner: Any ?): Any returnedClass fun returnedClass(): Class < Id <*>> sqlTypes fun sqlTypes(): IntArray","title":"IdType - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/index.html#idtype","text":"class IdType : UserType, ResultSetIdentifierConsumer Binds Id<*> in the DB to a bigint in MySQL.","title":"IdType"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/index.html#constructors","text":"Name Summary <init> IdType() Binds Id<*> in the DB to a bigint in MySQL.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/index.html#functions","text":"Name Summary assemble fun assemble(cached: Serializable , owner: Any ?): Any consumeIdentifier fun consumeIdentifier(resultSet: ResultSet ): Serializable deepCopy fun deepCopy(value: Any ?): Any ? disassemble fun disassemble(value: Any ?): Long equals fun equals(x: Any ?, y: Any ?): Boolean hashCode fun hashCode(x: Any ?): Int isMutable fun isMutable(): Boolean nullSafeGet fun nullSafeGet(rs: ResultSet , names: Array <out String >, session: SharedSessionContractImplementor?, owner: Any ?): Any ? nullSafeSet fun nullSafeSet(st: PreparedStatement , value: Any ?, index: Int , session: SharedSessionContractImplementor?): Unit replace fun replace(original: Any , target: Any , owner: Any ?): Any returnedClass fun returnedClass(): Class < Id <*>> sqlTypes fun sqlTypes(): IntArray","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/-init-.html","text":"misk-hibernate / misk.hibernate / IdType / <init> <init> \u00b6 IdType() Binds Id<*> in the DB to a bigint in MySQL.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/-init-.html#init","text":"IdType() Binds Id<*> in the DB to a bigint in MySQL.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/assemble.html","text":"misk-hibernate / misk.hibernate / IdType / assemble assemble \u00b6 fun assemble(cached: Serializable , owner: Any ?): Any","title":"assemble - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/assemble.html#assemble","text":"fun assemble(cached: Serializable , owner: Any ?): Any","title":"assemble"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/consume-identifier.html","text":"misk-hibernate / misk.hibernate / IdType / consumeIdentifier consumeIdentifier \u00b6 fun consumeIdentifier(resultSet: ResultSet ): Serializable","title":"consumeIdentifier - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/consume-identifier.html#consumeidentifier","text":"fun consumeIdentifier(resultSet: ResultSet ): Serializable","title":"consumeIdentifier"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/deep-copy.html","text":"misk-hibernate / misk.hibernate / IdType / deepCopy deepCopy \u00b6 fun deepCopy(value: Any ?): Any ?","title":"deepCopy - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/deep-copy.html#deepcopy","text":"fun deepCopy(value: Any ?): Any ?","title":"deepCopy"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/disassemble.html","text":"misk-hibernate / misk.hibernate / IdType / disassemble disassemble \u00b6 fun disassemble(value: Any ?): Long","title":"disassemble - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/disassemble.html#disassemble","text":"fun disassemble(value: Any ?): Long","title":"disassemble"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/equals.html","text":"misk-hibernate / misk.hibernate / IdType / equals equals \u00b6 fun equals(x: Any ?, y: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/equals.html#equals","text":"fun equals(x: Any ?, y: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/hash-code.html","text":"misk-hibernate / misk.hibernate / IdType / hashCode hashCode \u00b6 fun hashCode(x: Any ?): Int","title":"hashCode - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/hash-code.html#hashcode","text":"fun hashCode(x: Any ?): Int","title":"hashCode"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/is-mutable.html","text":"misk-hibernate / misk.hibernate / IdType / isMutable isMutable \u00b6 fun isMutable(): Boolean","title":"isMutable - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/is-mutable.html#ismutable","text":"fun isMutable(): Boolean","title":"isMutable"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/null-safe-get.html","text":"misk-hibernate / misk.hibernate / IdType / nullSafeGet nullSafeGet \u00b6 fun nullSafeGet(rs: ResultSet , names: Array <out String >, session: SharedSessionContractImplementor?, owner: Any ?): Any ?","title":"nullSafeGet - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/null-safe-get.html#nullsafeget","text":"fun nullSafeGet(rs: ResultSet , names: Array <out String >, session: SharedSessionContractImplementor?, owner: Any ?): Any ?","title":"nullSafeGet"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/null-safe-set.html","text":"misk-hibernate / misk.hibernate / IdType / nullSafeSet nullSafeSet \u00b6 fun nullSafeSet(st: PreparedStatement , value: Any ?, index: Int , session: SharedSessionContractImplementor?): Unit","title":"nullSafeSet - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/null-safe-set.html#nullsafeset","text":"fun nullSafeSet(st: PreparedStatement , value: Any ?, index: Int , session: SharedSessionContractImplementor?): Unit","title":"nullSafeSet"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/replace.html","text":"misk-hibernate / misk.hibernate / IdType / replace replace \u00b6 fun replace(original: Any , target: Any , owner: Any ?): Any","title":"replace - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/replace.html#replace","text":"fun replace(original: Any , target: Any , owner: Any ?): Any","title":"replace"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/returned-class.html","text":"misk-hibernate / misk.hibernate / IdType / returnedClass returnedClass \u00b6 fun returnedClass(): Class < Id <*>>","title":"returnedClass - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/returned-class.html#returnedclass","text":"fun returnedClass(): Class < Id <*>>","title":"returnedClass"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/sql-types.html","text":"misk-hibernate / misk.hibernate / IdType / sqlTypes sqlTypes \u00b6 fun sqlTypes(): IntArray","title":"sqlTypes - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-id-type/sql-types.html#sqltypes","text":"fun sqlTypes(): IntArray","title":"sqlTypes"},{"location":"0.x/misk-hibernate/misk.hibernate/-json-column/index.html","text":"misk-hibernate / misk.hibernate / JsonColumn JsonColumn \u00b6 @Target([AnnotationTarget.FIELD]) annotation class JsonColumn Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. It is an error to put this annotation on a mutable field. We don\u2019t defensively copy these when we read them out of the database. Constructors \u00b6 Name Summary <init> JsonColumn() Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize.","title":"JsonColumn - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-json-column/index.html#jsoncolumn","text":"@Target([AnnotationTarget.FIELD]) annotation class JsonColumn Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. It is an error to put this annotation on a mutable field. We don\u2019t defensively copy these when we read them out of the database.","title":"JsonColumn"},{"location":"0.x/misk-hibernate/misk.hibernate/-json-column/index.html#constructors","text":"Name Summary <init> JsonColumn() Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-json-column/-init-.html","text":"misk-hibernate / misk.hibernate / JsonColumn / <init> <init> \u00b6 JsonColumn() Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. It is an error to put this annotation on a mutable field. We don\u2019t defensively copy these when we read them out of the database.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-json-column/-init-.html#init","text":"JsonColumn() Put this on a column field to get Hibernate to persist it as JSON using Moshi. It will use the injector\u2019s configured Moshi instance. Use misk.moshi.MoshiModule to customize. It is an error to put this annotation on a mutable field. We don\u2019t defensively copy these when we read them out of the database.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/index.html","text":"misk-hibernate / misk.hibernate / Operator Operator \u00b6 enum class Operator Enum Values \u00b6 Name Summary LT a < b LE a <= b EQ a = b EQ_OR_IS_NULL a = b if b is not null, a is null if b is null GE a >= b GT a > b NE a != b IN a IN (b1, b2, b3, ...) NOT_IN a NOT IN (b1, b2, b3, ...) IS_NOT_NULL a IS NOT NULL IS_NULL a IS NULL","title":"Operator - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/index.html#operator","text":"enum class Operator","title":"Operator"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/index.html#enum-values","text":"Name Summary LT a < b LE a <= b EQ a = b EQ_OR_IS_NULL a = b if b is not null, a is null if b is null GE a >= b GT a > b NE a != b IN a IN (b1, b2, b3, ...) NOT_IN a NOT IN (b1, b2, b3, ...) IS_NOT_NULL a IS NOT NULL IS_NULL a IS NULL","title":"Enum Values"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-e-q.html","text":"misk-hibernate / misk.hibernate / Operator / EQ EQ \u00b6 EQ a = b","title":"EQ - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-e-q.html#eq","text":"EQ a = b","title":"EQ"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-e-q_-o-r_-i-s_-n-u-l-l.html","text":"misk-hibernate / misk.hibernate / Operator / EQ_OR_IS_NULL EQ_OR_IS_NULL \u00b6 EQ_OR_IS_NULL a = b if b is not null, a is null if b is null","title":"EQ_OR_IS_NULL - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-e-q_-o-r_-i-s_-n-u-l-l.html#eq_or_is_null","text":"EQ_OR_IS_NULL a = b if b is not null, a is null if b is null","title":"EQ_OR_IS_NULL"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-g-e.html","text":"misk-hibernate / misk.hibernate / Operator / GE GE \u00b6 GE a >= b","title":"GE - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-g-e.html#ge","text":"GE a >= b","title":"GE"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-g-t.html","text":"misk-hibernate / misk.hibernate / Operator / GT GT \u00b6 GT a > b","title":"GT - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-g-t.html#gt","text":"GT a > b","title":"GT"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-i-n.html","text":"misk-hibernate / misk.hibernate / Operator / IN IN \u00b6 IN a IN (b1, b2, b3, ...)","title":"IN - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-i-n.html#in","text":"IN a IN (b1, b2, b3, ...)","title":"IN"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-i-s_-n-o-t_-n-u-l-l.html","text":"misk-hibernate / misk.hibernate / Operator / IS_NOT_NULL IS_NOT_NULL \u00b6 IS_NOT_NULL a IS NOT NULL","title":"IS_NOT_NULL - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-i-s_-n-o-t_-n-u-l-l.html#is_not_null","text":"IS_NOT_NULL a IS NOT NULL","title":"IS_NOT_NULL"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-i-s_-n-u-l-l.html","text":"misk-hibernate / misk.hibernate / Operator / IS_NULL IS_NULL \u00b6 IS_NULL a IS NULL","title":"IS_NULL - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-i-s_-n-u-l-l.html#is_null","text":"IS_NULL a IS NULL","title":"IS_NULL"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-l-e.html","text":"misk-hibernate / misk.hibernate / Operator / LE LE \u00b6 LE a <= b","title":"LE - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-l-e.html#le","text":"LE a <= b","title":"LE"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-l-t.html","text":"misk-hibernate / misk.hibernate / Operator / LT LT \u00b6 LT a < b","title":"LT - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-l-t.html#lt","text":"LT a < b","title":"LT"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-n-e.html","text":"misk-hibernate / misk.hibernate / Operator / NE NE \u00b6 NE a != b","title":"NE - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-n-e.html#ne","text":"NE a != b","title":"NE"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-n-o-t_-i-n.html","text":"misk-hibernate / misk.hibernate / Operator / NOT_IN NOT_IN \u00b6 NOT_IN a NOT IN (b1, b2, b3, ...)","title":"NOT_IN - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-operator/-n-o-t_-i-n.html#not_in","text":"NOT_IN a NOT IN (b1, b2, b3, ...)","title":"NOT_IN"},{"location":"0.x/misk-hibernate/misk.hibernate/-or-builder/index.html","text":"misk-hibernate / misk.hibernate / OrBuilder OrBuilder \u00b6 interface OrBuilder<Q : Query <*>> This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query. Functions \u00b6 Name Summary option abstract fun option(lambda: Q .() -> Unit ): Unit","title":"OrBuilder - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-or-builder/index.html#orbuilder","text":"interface OrBuilder<Q : Query <*>> This functional interface accepts a set of options. Each option lambda is executed within the scope of a query. It is inappropriate to call methods like list() and uniqueResult() on this query.","title":"OrBuilder"},{"location":"0.x/misk-hibernate/misk.hibernate/-or-builder/index.html#functions","text":"Name Summary option abstract fun option(lambda: Q .() -> Unit ): Unit","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-or-builder/option.html","text":"misk-hibernate / misk.hibernate / OrBuilder / option option \u00b6 abstract fun option(lambda: Q .() -> Unit ): Unit","title":"option - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-or-builder/option.html#option","text":"abstract fun option(lambda: Q .() -> Unit ): Unit","title":"option"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/index.html","text":"misk-hibernate / misk.hibernate / Order Order \u00b6 annotation class Order Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns. Constructors \u00b6 Name Summary <init> Order(path: String , asc: Boolean = true) Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns. Properties \u00b6 Name Summary asc val asc: Boolean path val path: String","title":"Order - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/index.html#order","text":"annotation class Order Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns.","title":"Order"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/index.html#constructors","text":"Name Summary <init> Order(path: String , asc: Boolean = true) Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/index.html#properties","text":"Name Summary asc val asc: Boolean path val path: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/-init-.html","text":"misk-hibernate / misk.hibernate / Order / <init> <init> \u00b6 Order(path: String , asc: Boolean = true) Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-order/-init-.html#init","text":"Order(path: String , asc: Boolean = true) Annotates a function on a subinterface of Query to indicate which columns to order the the selected columns.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/asc.html","text":"misk-hibernate / misk.hibernate / Order / asc asc \u00b6 val asc: Boolean","title":"asc - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/asc.html#asc","text":"val asc: Boolean","title":"asc"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/path.html","text":"misk-hibernate / misk.hibernate / Order / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-order/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/index.html","text":"misk-hibernate / misk.hibernate / Path Path \u00b6 data class Path Constructors \u00b6 Name Summary <init> Path(schema: String ?, table: String ?, column: String ?) Properties \u00b6 Name Summary column val column: String ? schema val schema: String ? table val table: String ? Functions \u00b6 Name Summary toString fun toString(): String","title":"Path - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/index.html#path","text":"data class Path","title":"Path"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/index.html#constructors","text":"Name Summary <init> Path(schema: String ?, table: String ?, column: String ?)","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/index.html#properties","text":"Name Summary column val column: String ? schema val schema: String ? table val table: String ?","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/index.html#functions","text":"Name Summary toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/-init-.html","text":"misk-hibernate / misk.hibernate / Path / <init> <init> \u00b6 Path(schema: String ?, table: String ?, column: String ?)","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-path/-init-.html#init","text":"Path(schema: String ?, table: String ?, column: String ?)","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/column.html","text":"misk-hibernate / misk.hibernate / Path / column column \u00b6 val column: String ?","title":"column - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/column.html#column","text":"val column: String ?","title":"column"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/schema.html","text":"misk-hibernate / misk.hibernate / Path / schema schema \u00b6 val schema: String ?","title":"schema - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/schema.html#schema","text":"val schema: String ?","title":"schema"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/table.html","text":"misk-hibernate / misk.hibernate / Path / table table \u00b6 val table: String ?","title":"table - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/table.html#table","text":"val table: String ?","title":"table"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/to-string.html","text":"misk-hibernate / misk.hibernate / Path / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-path/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/index.html","text":"misk-hibernate / misk.hibernate / PostCommitHookFailedException PostCommitHookFailedException \u00b6 class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook Constructors \u00b6 Name Summary <init> PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"PostCommitHookFailedException - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/index.html#postcommithookfailedexception","text":"class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"PostCommitHookFailedException"},{"location":"0.x/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/index.html#constructors","text":"Name Summary <init> PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/-init-.html","text":"misk-hibernate / misk.hibernate / PostCommitHookFailedException / <init> <init> \u00b6 PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-post-commit-hook-failed-exception/-init-.html#init","text":"PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-property/index.html","text":"misk-hibernate / misk.hibernate / Property Property \u00b6 annotation class Property Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with. Constructors \u00b6 Name Summary <init> Property(path: String ) Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with. Properties \u00b6 Name Summary path val path: String","title":"Property - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-property/index.html#property","text":"annotation class Property Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with.","title":"Property"},{"location":"0.x/misk-hibernate/misk.hibernate/-property/index.html#constructors","text":"Name Summary <init> Property(path: String ) Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-property/index.html#properties","text":"Name Summary path val path: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-property/-init-.html","text":"misk-hibernate / misk.hibernate / Property / <init> <init> \u00b6 Property(path: String ) Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-property/-init-.html#init","text":"Property(path: String ) Annotates a parameter of a Projection data class to indicate which column (or path of columns) to populate the parameter with.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-property/path.html","text":"misk-hibernate / misk.hibernate / Property / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-property/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk-hibernate/misk.hibernate/-proto-column/index.html","text":"misk-hibernate / misk.hibernate / ProtoColumn ProtoColumn \u00b6 @Target([AnnotationTarget.FIELD]) annotation class ProtoColumn Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. There is no defensive copy when reading from the database as protobufs are assumed to be immutable. Constructors \u00b6 Name Summary <init> ProtoColumn() Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization.","title":"ProtoColumn - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-proto-column/index.html#protocolumn","text":"@Target([AnnotationTarget.FIELD]) annotation class ProtoColumn Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. There is no defensive copy when reading from the database as protobufs are assumed to be immutable.","title":"ProtoColumn"},{"location":"0.x/misk-hibernate/misk.hibernate/-proto-column/index.html#constructors","text":"Name Summary <init> ProtoColumn() Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-proto-column/-init-.html","text":"misk-hibernate / misk.hibernate / ProtoColumn / <init> <init> \u00b6 ProtoColumn() Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. There is no defensive copy when reading from the database as protobufs are assumed to be immutable.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-proto-column/-init-.html#init","text":"ProtoColumn() Put this on a column field for a class generated by Wire to get Hibernate to persist with protobuf serialization. There is no defensive copy when reading from the database as protobufs are assumed to be immutable.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/index.html","text":"misk-hibernate / misk.hibernate / Query Query \u00b6 interface Query<T> Base class for SQL queries. Types \u00b6 Name Summary Factory interface Factory Creates instances of queries. Properties \u00b6 Name Summary firstResult abstract var firstResult: Int Set the first row to retrieve. The default is 0. maxRows abstract var maxRows: Int How many rows to return. Must be -1 or in range 1..10_000. Functions \u00b6 Name Summary addJpaConstraint abstract fun addJpaConstraint(block: (root: Root<*>, builder: CriteriaBuilder) -> Predicate): Unit Constrain a query by operating directly on the JPA criteria builder. clone abstract fun <Q : Query <*>> clone(): Q count abstract fun count(session: Session ): Long Returns the number of rows that match the query. delete abstract fun delete(session: Session ): Int Returns the number of entities deleted. disableCheck abstract fun disableCheck(check: Check ): Unit dynamicAddConstraint abstract fun dynamicAddConstraint(path: String , operator: Operator , value: Any ? = null): Unit Constrain a query using a path known only at runtime. dynamicAddOrder abstract fun dynamicAddOrder(path: String , asc: Boolean ): Unit dynamicList abstract fun dynamicList(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < List < Any ?>> Manual projections are returned as a list of rows containing a list of cells. abstract fun dynamicList(session: Session , projectedPaths: List < String >): List < List < Any ?>> dynamicUniqueResult abstract fun dynamicUniqueResult(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < Any ?>? Manual projections are returned as a list of cells. Returns null if there were no results. abstract fun dynamicUniqueResult(session: Session , projectedPaths: List < String >): List < Any ?>? list abstract fun list(session: Session ): List < T > newOrBuilder abstract fun <T : Query <*>> newOrBuilder(): OrBuilder < T > uniqueResult abstract fun uniqueResult(session: Session ): T ? Asserts that there is either zero or one results. Extension Functions \u00b6 Name Summary allowFullScatter fun <T, Q : Query < T >> Q .allowFullScatter(): Q allowTableScan fun <T, Q : Query < T >> Q .allowTableScan(): Q constraint fun <T, Q : Query < T >> Q .constraint(block: CriteriaBuilder.(root: Root<*>) -> Predicate): Q Equivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining. newPager fun <T : DbEntity < T >, Q : Query < T >> Q .newPager(paginator: Paginator < T , Q >, initialOffset: Offset ? = null, pageSize: Int = 100): Pager < T > Use a null initialOffset to start at the beginning. or fun <T, Q : Query < T >> Q .or(lambda: OrBuilder < Q >.() -> Unit ): Q Collects options that are all OR\u2019d together. If any are true the predicate matches.","title":"Query - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/index.html#query","text":"interface Query<T> Base class for SQL queries.","title":"Query"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/index.html#types","text":"Name Summary Factory interface Factory Creates instances of queries.","title":"Types"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/index.html#properties","text":"Name Summary firstResult abstract var firstResult: Int Set the first row to retrieve. The default is 0. maxRows abstract var maxRows: Int How many rows to return. Must be -1 or in range 1..10_000.","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/index.html#functions","text":"Name Summary addJpaConstraint abstract fun addJpaConstraint(block: (root: Root<*>, builder: CriteriaBuilder) -> Predicate): Unit Constrain a query by operating directly on the JPA criteria builder. clone abstract fun <Q : Query <*>> clone(): Q count abstract fun count(session: Session ): Long Returns the number of rows that match the query. delete abstract fun delete(session: Session ): Int Returns the number of entities deleted. disableCheck abstract fun disableCheck(check: Check ): Unit dynamicAddConstraint abstract fun dynamicAddConstraint(path: String , operator: Operator , value: Any ? = null): Unit Constrain a query using a path known only at runtime. dynamicAddOrder abstract fun dynamicAddOrder(path: String , asc: Boolean ): Unit dynamicList abstract fun dynamicList(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < List < Any ?>> Manual projections are returned as a list of rows containing a list of cells. abstract fun dynamicList(session: Session , projectedPaths: List < String >): List < List < Any ?>> dynamicUniqueResult abstract fun dynamicUniqueResult(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < Any ?>? Manual projections are returned as a list of cells. Returns null if there were no results. abstract fun dynamicUniqueResult(session: Session , projectedPaths: List < String >): List < Any ?>? list abstract fun list(session: Session ): List < T > newOrBuilder abstract fun <T : Query <*>> newOrBuilder(): OrBuilder < T > uniqueResult abstract fun uniqueResult(session: Session ): T ? Asserts that there is either zero or one results.","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/index.html#extension-functions","text":"Name Summary allowFullScatter fun <T, Q : Query < T >> Q .allowFullScatter(): Q allowTableScan fun <T, Q : Query < T >> Q .allowTableScan(): Q constraint fun <T, Q : Query < T >> Q .constraint(block: CriteriaBuilder.(root: Root<*>) -> Predicate): Q Equivalent to Query.addConstraint, but takes the CriteriaBuilder as a receiver and returns this. This may be easier to use with method chaining. newPager fun <T : DbEntity < T >, Q : Query < T >> Q .newPager(paginator: Paginator < T , Q >, initialOffset: Offset ? = null, pageSize: Int = 100): Pager < T > Use a null initialOffset to start at the beginning. or fun <T, Q : Query < T >> Q .or(lambda: OrBuilder < Q >.() -> Unit ): Q Collects options that are all OR\u2019d together. If any are true the predicate matches.","title":"Extension Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/add-jpa-constraint.html","text":"misk-hibernate / misk.hibernate / Query / addJpaConstraint addJpaConstraint \u00b6 abstract fun addJpaConstraint(block: (root: Root<*>, builder: CriteriaBuilder) -> Predicate): Unit Constrain a query by operating directly on the JPA criteria builder.","title":"addJpaConstraint - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/add-jpa-constraint.html#addjpaconstraint","text":"abstract fun addJpaConstraint(block: (root: Root<*>, builder: CriteriaBuilder) -> Predicate): Unit Constrain a query by operating directly on the JPA criteria builder.","title":"addJpaConstraint"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/clone.html","text":"misk-hibernate / misk.hibernate / Query / clone clone \u00b6 abstract fun <Q : Query <*>> clone(): Q","title":"clone - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/clone.html#clone","text":"abstract fun <Q : Query <*>> clone(): Q","title":"clone"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/count.html","text":"misk-hibernate / misk.hibernate / Query / count count \u00b6 abstract fun count(session: Session ): Long Returns the number of rows that match the query. Warning: The performance of this operation is comparable to a SELECT. MySQL scans all of the counted rows. A query that returns a count of 5000 is typically 10 times slower than a query that returns a count of 500.","title":"count - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/count.html#count","text":"abstract fun count(session: Session ): Long Returns the number of rows that match the query. Warning: The performance of this operation is comparable to a SELECT. MySQL scans all of the counted rows. A query that returns a count of 5000 is typically 10 times slower than a query that returns a count of 500.","title":"count"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/delete.html","text":"misk-hibernate / misk.hibernate / Query / delete delete \u00b6 abstract fun delete(session: Session ): Int Returns the number of entities deleted.","title":"delete - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/delete.html#delete","text":"abstract fun delete(session: Session ): Int Returns the number of entities deleted.","title":"delete"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/disable-check.html","text":"misk-hibernate / misk.hibernate / Query / disableCheck disableCheck \u00b6 abstract fun disableCheck(check: Check ): Unit","title":"disableCheck - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/disable-check.html#disablecheck","text":"abstract fun disableCheck(check: Check ): Unit","title":"disableCheck"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-add-constraint.html","text":"misk-hibernate / misk.hibernate / Query / dynamicAddConstraint dynamicAddConstraint \u00b6 abstract fun dynamicAddConstraint(path: String , operator: Operator , value: Any ? = null): Unit Constrain a query using a path known only at runtime.","title":"dynamicAddConstraint - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-add-constraint.html#dynamicaddconstraint","text":"abstract fun dynamicAddConstraint(path: String , operator: Operator , value: Any ? = null): Unit Constrain a query using a path known only at runtime.","title":"dynamicAddConstraint"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-add-order.html","text":"misk-hibernate / misk.hibernate / Query / dynamicAddOrder dynamicAddOrder \u00b6 abstract fun dynamicAddOrder(path: String , asc: Boolean ): Unit","title":"dynamicAddOrder - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-add-order.html#dynamicaddorder","text":"abstract fun dynamicAddOrder(path: String , asc: Boolean ): Unit","title":"dynamicAddOrder"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-list.html","text":"misk-hibernate / misk.hibernate / Query / dynamicList dynamicList \u00b6 abstract fun dynamicList(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < List < Any ?>> Manual projections are returned as a list of rows containing a list of cells. abstract fun dynamicList(session: Session , projectedPaths: List < String >): List < List < Any ?>>","title":"dynamicList - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-list.html#dynamiclist","text":"abstract fun dynamicList(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < List < Any ?>> Manual projections are returned as a list of rows containing a list of cells. abstract fun dynamicList(session: Session , projectedPaths: List < String >): List < List < Any ?>>","title":"dynamicList"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-unique-result.html","text":"misk-hibernate / misk.hibernate / Query / dynamicUniqueResult dynamicUniqueResult \u00b6 abstract fun dynamicUniqueResult(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < Any ?>? Manual projections are returned as a list of cells. Returns null if there were no results. abstract fun dynamicUniqueResult(session: Session , projectedPaths: List < String >): List < Any ?>?","title":"dynamicUniqueResult - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/dynamic-unique-result.html#dynamicuniqueresult","text":"abstract fun dynamicUniqueResult(session: Session , selection: (CriteriaBuilder, Root< T >) -> Selection<out Any >): List < Any ?>? Manual projections are returned as a list of cells. Returns null if there were no results. abstract fun dynamicUniqueResult(session: Session , projectedPaths: List < String >): List < Any ?>?","title":"dynamicUniqueResult"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/first-result.html","text":"misk-hibernate / misk.hibernate / Query / firstResult firstResult \u00b6 abstract var firstResult: Int Set the first row to retrieve. The default is 0.","title":"firstResult - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/first-result.html#firstresult","text":"abstract var firstResult: Int Set the first row to retrieve. The default is 0.","title":"firstResult"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/list.html","text":"misk-hibernate / misk.hibernate / Query / list list \u00b6 abstract fun list(session: Session ): List < T >","title":"list - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/list.html#list","text":"abstract fun list(session: Session ): List < T >","title":"list"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/max-rows.html","text":"misk-hibernate / misk.hibernate / Query / maxRows maxRows \u00b6 abstract var maxRows: Int How many rows to return. Must be -1 or in range 1..10_000.","title":"maxRows - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/max-rows.html#maxrows","text":"abstract var maxRows: Int How many rows to return. Must be -1 or in range 1..10_000.","title":"maxRows"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/new-or-builder.html","text":"misk-hibernate / misk.hibernate / Query / newOrBuilder newOrBuilder \u00b6 abstract fun <T : Query <*>> newOrBuilder(): OrBuilder < T >","title":"newOrBuilder - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/new-or-builder.html#neworbuilder","text":"abstract fun <T : Query <*>> newOrBuilder(): OrBuilder < T >","title":"newOrBuilder"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/unique-result.html","text":"misk-hibernate / misk.hibernate / Query / uniqueResult uniqueResult \u00b6 abstract fun uniqueResult(session: Session ): T ? Asserts that there is either zero or one results.","title":"uniqueResult - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/unique-result.html#uniqueresult","text":"abstract fun uniqueResult(session: Session ): T ? Asserts that there is either zero or one results.","title":"uniqueResult"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/index.html","text":"misk-hibernate / misk.hibernate / Query / Factory Factory \u00b6 interface Factory Creates instances of queries. Functions \u00b6 Name Summary dynamicQuery abstract fun <E : DbEntity < E >> dynamicQuery(entityClass: KClass < E >): Query < E > newQuery abstract fun <Q : Query <*>> newQuery(queryClass: KClass < Q >): Q Extension Functions \u00b6 Name Summary newQuery fun <T : Query <*>> Query.Factory .newQuery(): T","title":"Factory - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/index.html#factory","text":"interface Factory Creates instances of queries.","title":"Factory"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/index.html#functions","text":"Name Summary dynamicQuery abstract fun <E : DbEntity < E >> dynamicQuery(entityClass: KClass < E >): Query < E > newQuery abstract fun <Q : Query <*>> newQuery(queryClass: KClass < Q >): Q","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/index.html#extension-functions","text":"Name Summary newQuery fun <T : Query <*>> Query.Factory .newQuery(): T","title":"Extension Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/dynamic-query.html","text":"misk-hibernate / misk.hibernate / Query / Factory / dynamicQuery dynamicQuery \u00b6 abstract fun <E : DbEntity < E >> dynamicQuery(entityClass: KClass < E >): Query < E >","title":"dynamicQuery - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/dynamic-query.html#dynamicquery","text":"abstract fun <E : DbEntity < E >> dynamicQuery(entityClass: KClass < E >): Query < E >","title":"dynamicQuery"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/new-query.html","text":"misk-hibernate / misk.hibernate / Query / Factory / newQuery newQuery \u00b6 abstract fun <Q : Query <*>> newQuery(queryClass: KClass < Q >): Q","title":"newQuery - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-query/-factory/new-query.html#newquery","text":"abstract fun <Q : Query <*>> newQuery(queryClass: KClass < Q >): Q","title":"newQuery"},{"location":"0.x/misk-hibernate/misk.hibernate/-retry-transaction-exception/index.html","text":"misk-hibernate / misk.hibernate / RetryTransactionException RetryTransactionException \u00b6 class RetryTransactionException : Exception Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries(). Constructors \u00b6 Name Summary <init> RetryTransactionException(message: String ? = null, cause: Throwable ? = null) Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries().","title":"RetryTransactionException - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-retry-transaction-exception/index.html#retrytransactionexception","text":"class RetryTransactionException : Exception Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries().","title":"RetryTransactionException"},{"location":"0.x/misk-hibernate/misk.hibernate/-retry-transaction-exception/index.html#constructors","text":"Name Summary <init> RetryTransactionException(message: String ? = null, cause: Throwable ? = null) Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries().","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-retry-transaction-exception/-init-.html","text":"misk-hibernate / misk.hibernate / RetryTransactionException / <init> <init> \u00b6 RetryTransactionException(message: String ? = null, cause: Throwable ? = null) Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries().","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-retry-transaction-exception/-init-.html#init","text":"RetryTransactionException(message: String ? = null, cause: Throwable ? = null) Thrown to explicitly trigger a retry, subject to retry limits and config such as noRetries().","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/index.html","text":"misk-hibernate / misk.hibernate / SecretColumn SecretColumn \u00b6 @Target([AnnotationTarget.FIELD]) annotation class SecretColumn SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. The keyName string is used to specify the name of the key to be used to encrypt and decrypt the value. The indexable attribute controls whether or not this data will be able to be indexed, defaulted to true. This uses deterministic encryption: encrypting the same plaintext will produce the same ciphertext. This is weaker than non-deterministic encryption, but makes searching for encrypted values possible. If searching for ciphertexts is not something your use case requires, set indexable to false for stronger security. Install misk.crypto.CryptoModule to configure the keys the app uses. Example: In app-common.yaml: crypto: keys: - key_name: \"secretColumnKey\" Then, in an entity class: @Column @SecretColumn(keyName = \"secretColumnKey\") var secret: String A Column annotated with SecretColumn has the following limitations: It must be declared as VARBINARY() in its respective MySQL table. For example: CREATE TABLE my_table( id BIGINT NOT NULL AUTO_INCREMENT, secret VARBINARY(500) It cannot be annotates with any other custom column annotations like ProtoColumn or JsonColumn . Note : The resulting ciphertext that is persisted in the database may be much larger in size than the original plaintext because it also contains some metadata. Please make sure to allocate enough space when defining the column using VARBINARY() . Constructors \u00b6 Name Summary <init> SecretColumn(keyName: String , indexable: Boolean = true) SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. Properties \u00b6 Name Summary indexable val indexable: Boolean keyName val keyName: String","title":"SecretColumn - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/index.html#secretcolumn","text":"@Target([AnnotationTarget.FIELD]) annotation class SecretColumn SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. The keyName string is used to specify the name of the key to be used to encrypt and decrypt the value. The indexable attribute controls whether or not this data will be able to be indexed, defaulted to true. This uses deterministic encryption: encrypting the same plaintext will produce the same ciphertext. This is weaker than non-deterministic encryption, but makes searching for encrypted values possible. If searching for ciphertexts is not something your use case requires, set indexable to false for stronger security. Install misk.crypto.CryptoModule to configure the keys the app uses. Example: In app-common.yaml: crypto: keys: - key_name: \"secretColumnKey\" Then, in an entity class: @Column @SecretColumn(keyName = \"secretColumnKey\") var secret: String A Column annotated with SecretColumn has the following limitations: It must be declared as VARBINARY() in its respective MySQL table. For example: CREATE TABLE my_table( id BIGINT NOT NULL AUTO_INCREMENT, secret VARBINARY(500) It cannot be annotates with any other custom column annotations like ProtoColumn or JsonColumn . Note : The resulting ciphertext that is persisted in the database may be much larger in size than the original plaintext because it also contains some metadata. Please make sure to allocate enough space when defining the column using VARBINARY() .","title":"SecretColumn"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/index.html#constructors","text":"Name Summary <init> SecretColumn(keyName: String , indexable: Boolean = true) SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/index.html#properties","text":"Name Summary indexable val indexable: Boolean keyName val keyName: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/-init-.html","text":"misk-hibernate / misk.hibernate / SecretColumn / <init> <init> \u00b6 SecretColumn(keyName: String , indexable: Boolean = true) SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. The keyName string is used to specify the name of the key to be used to encrypt and decrypt the value. The indexable attribute controls whether or not this data will be able to be indexed, defaulted to true. This uses deterministic encryption: encrypting the same plaintext will produce the same ciphertext. This is weaker than non-deterministic encryption, but makes searching for encrypted values possible. If searching for ciphertexts is not something your use case requires, set indexable to false for stronger security. Install misk.crypto.CryptoModule to configure the keys the app uses. Example: In app-common.yaml: crypto: keys: - key_name: \"secretColumnKey\" Then, in an entity class: @Column @SecretColumn(keyName = \"secretColumnKey\") var secret: String A Column annotated with SecretColumn has the following limitations: It must be declared as VARBINARY() in its respective MySQL table. For example: CREATE TABLE my_table( id BIGINT NOT NULL AUTO_INCREMENT, secret VARBINARY(500) It cannot be annotates with any other custom column annotations like ProtoColumn or JsonColumn . Note : The resulting ciphertext that is persisted in the database may be much larger in size than the original plaintext because it also contains some metadata. Please make sure to allocate enough space when defining the column using VARBINARY() .","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/-init-.html#init","text":"SecretColumn(keyName: String , indexable: Boolean = true) SecretColumn is an annotation used to get Hibernate to encrypt a field before writing it to the database. The keyName string is used to specify the name of the key to be used to encrypt and decrypt the value. The indexable attribute controls whether or not this data will be able to be indexed, defaulted to true. This uses deterministic encryption: encrypting the same plaintext will produce the same ciphertext. This is weaker than non-deterministic encryption, but makes searching for encrypted values possible. If searching for ciphertexts is not something your use case requires, set indexable to false for stronger security. Install misk.crypto.CryptoModule to configure the keys the app uses. Example: In app-common.yaml: crypto: keys: - key_name: \"secretColumnKey\" Then, in an entity class: @Column @SecretColumn(keyName = \"secretColumnKey\") var secret: String A Column annotated with SecretColumn has the following limitations: It must be declared as VARBINARY() in its respective MySQL table. For example: CREATE TABLE my_table( id BIGINT NOT NULL AUTO_INCREMENT, secret VARBINARY(500) It cannot be annotates with any other custom column annotations like ProtoColumn or JsonColumn . Note : The resulting ciphertext that is persisted in the database may be much larger in size than the original plaintext because it also contains some metadata. Please make sure to allocate enough space when defining the column using VARBINARY() .","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/indexable.html","text":"misk-hibernate / misk.hibernate / SecretColumn / indexable indexable \u00b6 val indexable: Boolean","title":"indexable - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/indexable.html#indexable","text":"val indexable: Boolean","title":"indexable"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/key-name.html","text":"misk-hibernate / misk.hibernate / SecretColumn / keyName keyName \u00b6 val keyName: String","title":"keyName - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-secret-column/key-name.html#keyname","text":"val keyName: String","title":"keyName"},{"location":"0.x/misk-hibernate/misk.hibernate/-select/index.html","text":"misk-hibernate / misk.hibernate / Select Select \u00b6 annotation class Select Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result. Constructors \u00b6 Name Summary <init> Select(path: String = \"\") Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result. Properties \u00b6 Name Summary path val path: String","title":"Select - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-select/index.html#select","text":"annotation class Select Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result.","title":"Select"},{"location":"0.x/misk-hibernate/misk.hibernate/-select/index.html#constructors","text":"Name Summary <init> Select(path: String = \"\") Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-select/index.html#properties","text":"Name Summary path val path: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-select/-init-.html","text":"misk-hibernate / misk.hibernate / Select / <init> <init> \u00b6 Select(path: String = \"\") Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result.","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-select/-init-.html#init","text":"Select(path: String = \"\") Annotates a function on a subinterface of Query to execute a SELECT query. Functions with this annotation must return a List to fetch multiple rows results, or a regular type to fetch a unique result.","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-select/path.html","text":"misk-hibernate / misk.hibernate / Select / path path \u00b6 val path: String","title":"path - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-select/path.html#path","text":"val path: String","title":"path"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/index.html","text":"misk-hibernate / misk.hibernate / Session Session \u00b6 interface Session : Session Properties \u00b6 Name Summary hibernateSession abstract val hibernateSession: Session Functions \u00b6 Name Summary delete abstract fun <T : DbEntity < T >> delete(entity: T ): Unit disableChecks abstract fun <T> disableChecks(checks: Collection <Check>, body: () -> T ): T load abstract fun <T : DbEntity < T >> load(id: Id < T >, type: KClass < T >): T loadOrNull abstract fun <T : DbEntity < T >> loadOrNull(id: Id < T >, type: KClass < T >): T ? loadSharded abstract fun <R : DbRoot < R >, T : DbSharded < R , T >> loadSharded(gid: Gid < R , T >, type: KClass < T >): T save abstract fun <T : DbEntity < T >> save(entity: T ): Id < T > shards abstract fun shards(): Set <Shard> abstract fun shards(keyspace: Keyspace): Collection <Shard> target abstract fun <T> target(shard: Shard, function: () -> T ): T withoutChecks abstract fun <T> withoutChecks(vararg checks: Check, body: () -> T ): T Disable one or more checks for the duration of the execution of body . The passed in checks will entirely replace the other ignored checks at this point, they will not be merged with whatever is there currently. Extension Functions \u00b6 Name Summary load fun <T : DbEntity < T >> Session .load(id: Id < T >): T loadOrNull fun <T : DbEntity < T >> Session .loadOrNull(id: Id < T >): T ? loadSharded fun <R : DbRoot < R >, S : DbSharded < R , S >> Session .loadSharded(gid: Gid < R , S >): S","title":"Session - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/index.html#session","text":"interface Session : Session","title":"Session"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/index.html#properties","text":"Name Summary hibernateSession abstract val hibernateSession: Session","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/index.html#functions","text":"Name Summary delete abstract fun <T : DbEntity < T >> delete(entity: T ): Unit disableChecks abstract fun <T> disableChecks(checks: Collection <Check>, body: () -> T ): T load abstract fun <T : DbEntity < T >> load(id: Id < T >, type: KClass < T >): T loadOrNull abstract fun <T : DbEntity < T >> loadOrNull(id: Id < T >, type: KClass < T >): T ? loadSharded abstract fun <R : DbRoot < R >, T : DbSharded < R , T >> loadSharded(gid: Gid < R , T >, type: KClass < T >): T save abstract fun <T : DbEntity < T >> save(entity: T ): Id < T > shards abstract fun shards(): Set <Shard> abstract fun shards(keyspace: Keyspace): Collection <Shard> target abstract fun <T> target(shard: Shard, function: () -> T ): T withoutChecks abstract fun <T> withoutChecks(vararg checks: Check, body: () -> T ): T Disable one or more checks for the duration of the execution of body . The passed in checks will entirely replace the other ignored checks at this point, they will not be merged with whatever is there currently.","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/index.html#extension-functions","text":"Name Summary load fun <T : DbEntity < T >> Session .load(id: Id < T >): T loadOrNull fun <T : DbEntity < T >> Session .loadOrNull(id: Id < T >): T ? loadSharded fun <R : DbRoot < R >, S : DbSharded < R , S >> Session .loadSharded(gid: Gid < R , S >): S","title":"Extension Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/delete.html","text":"misk-hibernate / misk.hibernate / Session / delete delete \u00b6 abstract fun <T : DbEntity < T >> delete(entity: T ): Unit Exceptions \u00b6 IllegalStateException - when delete is called on a read only session.","title":"delete - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/delete.html#delete","text":"abstract fun <T : DbEntity < T >> delete(entity: T ): Unit","title":"delete"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/delete.html#exceptions","text":"IllegalStateException - when delete is called on a read only session.","title":"Exceptions"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/disable-checks.html","text":"misk-hibernate / misk.hibernate / Session / disableChecks disableChecks \u00b6 abstract fun <T> disableChecks(checks: Collection <Check>, body: () -> T ): T","title":"disableChecks - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/disable-checks.html#disablechecks","text":"abstract fun <T> disableChecks(checks: Collection <Check>, body: () -> T ): T","title":"disableChecks"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/hibernate-session.html","text":"misk-hibernate / misk.hibernate / Session / hibernateSession hibernateSession \u00b6 abstract val hibernateSession: Session","title":"hibernateSession - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/hibernate-session.html#hibernatesession","text":"abstract val hibernateSession: Session","title":"hibernateSession"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/load-or-null.html","text":"misk-hibernate / misk.hibernate / Session / loadOrNull loadOrNull \u00b6 abstract fun <T : DbEntity < T >> loadOrNull(id: Id < T >, type: KClass < T >): T ?","title":"loadOrNull - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/load-or-null.html#loadornull","text":"abstract fun <T : DbEntity < T >> loadOrNull(id: Id < T >, type: KClass < T >): T ?","title":"loadOrNull"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/load-sharded.html","text":"misk-hibernate / misk.hibernate / Session / loadSharded loadSharded \u00b6 abstract fun <R : DbRoot < R >, T : DbSharded < R , T >> loadSharded(gid: Gid < R , T >, type: KClass < T >): T","title":"loadSharded - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/load-sharded.html#loadsharded","text":"abstract fun <R : DbRoot < R >, T : DbSharded < R , T >> loadSharded(gid: Gid < R , T >, type: KClass < T >): T","title":"loadSharded"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/load.html","text":"misk-hibernate / misk.hibernate / Session / load load \u00b6 abstract fun <T : DbEntity < T >> load(id: Id < T >, type: KClass < T >): T","title":"load - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/load.html#load","text":"abstract fun <T : DbEntity < T >> load(id: Id < T >, type: KClass < T >): T","title":"load"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/save.html","text":"misk-hibernate / misk.hibernate / Session / save save \u00b6 abstract fun <T : DbEntity < T >> save(entity: T ): Id < T > Exceptions \u00b6 IllegalStateException - when save is called on a read only session.","title":"save - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/save.html#save","text":"abstract fun <T : DbEntity < T >> save(entity: T ): Id < T >","title":"save"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/save.html#exceptions","text":"IllegalStateException - when save is called on a read only session.","title":"Exceptions"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/shards.html","text":"misk-hibernate / misk.hibernate / Session / shards shards \u00b6 abstract fun shards(): Set <Shard> abstract fun shards(keyspace: Keyspace): Collection <Shard>","title":"shards - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/shards.html#shards","text":"abstract fun shards(): Set <Shard> abstract fun shards(keyspace: Keyspace): Collection <Shard>","title":"shards"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/target.html","text":"misk-hibernate / misk.hibernate / Session / target target \u00b6 abstract fun <T> target(shard: Shard, function: () -> T ): T","title":"target - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/target.html#target","text":"abstract fun <T> target(shard: Shard, function: () -> T ): T","title":"target"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/without-checks.html","text":"misk-hibernate / misk.hibernate / Session / withoutChecks withoutChecks \u00b6 abstract fun <T> withoutChecks(vararg checks: Check, body: () -> T ): T Disable one or more checks for the duration of the execution of body . The passed in checks will entirely replace the other ignored checks at this point, they will not be merged with whatever is there currently. TODO: Deprecate. This can enable checks as a side-effect. Prefer disableChecks() which is cumulative","title":"withoutChecks - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-session/without-checks.html#withoutchecks","text":"abstract fun <T> withoutChecks(vararg checks: Check, body: () -> T ): T Disable one or more checks for the duration of the execution of body . The passed in checks will entirely replace the other ignored checks at this point, they will not be merged with whatever is there currently. TODO: Deprecate. This can enable checks as a side-effect. Prefer disableChecks() which is cumulative","title":"withoutChecks"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/index.html","text":"misk-hibernate / misk.hibernate / Transacter Transacter \u00b6 interface Transacter Provides explicit block-based transaction demarcation. Properties \u00b6 Name Summary inTransaction abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block. Functions \u00b6 Name Summary allowCowrites abstract fun allowCowrites(): Transacter Disable cowrite checks for the duration of the session. Useful for quickly setting up test data in testing. config abstract fun config(): DataSourceConfig entities abstract fun entities(): Set < KClass <out DbEntity <*>>> Returns KClasses for the bound DbEntities for the transacter isCheckEnabled abstract fun isCheckEnabled(check: Check ): Boolean Is the scalability check currently enabled. Use Session.withoutChecks to disable checks. noRetries abstract fun noRetries(): Transacter readOnly abstract fun readOnly(): Transacter Creates a new transacter that produces read only sessions. This does not mean the underlying datasource is read only, only that the session produced won\u2019t modify the database. replicaRead abstract fun <T> replicaRead(block: (session: Session ) -> T ): T Runs a non-transactional session against a read replica. retries abstract fun retries(maxAttempts: Int = 2): Transacter transaction abstract fun <T> transaction(block: (session: Session ) -> T ): T Starts a transaction on the current thread, executes block , and commits the transaction. If the block raises an exception the transaction will be rolled back instead of committed. Extension Functions \u00b6 Name Summary failSafeRead fun <T> Transacter .failSafeRead(block: (session: Session ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Transacter .failSafeRead(shard: Shard, block: (session: Session ) -> T ): T shards fun Transacter .shards(): Set <Shard> fun Transacter .shards(keyspace: Keyspace): Collection <Shard> transaction fun <T> Transacter .transaction(shard: Shard, block: (session: Session ) -> T ): T Commits a transaction with operations of block .","title":"Transacter - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/index.html#transacter","text":"interface Transacter Provides explicit block-based transaction demarcation.","title":"Transacter"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/index.html#properties","text":"Name Summary inTransaction abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block.","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/index.html#functions","text":"Name Summary allowCowrites abstract fun allowCowrites(): Transacter Disable cowrite checks for the duration of the session. Useful for quickly setting up test data in testing. config abstract fun config(): DataSourceConfig entities abstract fun entities(): Set < KClass <out DbEntity <*>>> Returns KClasses for the bound DbEntities for the transacter isCheckEnabled abstract fun isCheckEnabled(check: Check ): Boolean Is the scalability check currently enabled. Use Session.withoutChecks to disable checks. noRetries abstract fun noRetries(): Transacter readOnly abstract fun readOnly(): Transacter Creates a new transacter that produces read only sessions. This does not mean the underlying datasource is read only, only that the session produced won\u2019t modify the database. replicaRead abstract fun <T> replicaRead(block: (session: Session ) -> T ): T Runs a non-transactional session against a read replica. retries abstract fun retries(maxAttempts: Int = 2): Transacter transaction abstract fun <T> transaction(block: (session: Session ) -> T ): T Starts a transaction on the current thread, executes block , and commits the transaction. If the block raises an exception the transaction will be rolled back instead of committed.","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/index.html#extension-functions","text":"Name Summary failSafeRead fun <T> Transacter .failSafeRead(block: (session: Session ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Transacter .failSafeRead(shard: Shard, block: (session: Session ) -> T ): T shards fun Transacter .shards(): Set <Shard> fun Transacter .shards(keyspace: Keyspace): Collection <Shard> transaction fun <T> Transacter .transaction(shard: Shard, block: (session: Session ) -> T ): T Commits a transaction with operations of block .","title":"Extension Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/allow-cowrites.html","text":"misk-hibernate / misk.hibernate / Transacter / allowCowrites allowCowrites \u00b6 abstract fun allowCowrites(): Transacter Disable cowrite checks for the duration of the session. Useful for quickly setting up test data in testing.","title":"allowCowrites - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/allow-cowrites.html#allowcowrites","text":"abstract fun allowCowrites(): Transacter Disable cowrite checks for the duration of the session. Useful for quickly setting up test data in testing.","title":"allowCowrites"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/config.html","text":"misk-hibernate / misk.hibernate / Transacter / config config \u00b6 abstract fun config(): DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/config.html#config","text":"abstract fun config(): DataSourceConfig","title":"config"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/entities.html","text":"misk-hibernate / misk.hibernate / Transacter / entities entities \u00b6 abstract fun entities(): Set < KClass <out DbEntity <*>>> Returns KClasses for the bound DbEntities for the transacter","title":"entities - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/entities.html#entities","text":"abstract fun entities(): Set < KClass <out DbEntity <*>>> Returns KClasses for the bound DbEntities for the transacter","title":"entities"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/in-transaction.html","text":"misk-hibernate / misk.hibernate / Transacter / inTransaction inTransaction \u00b6 abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block.","title":"inTransaction - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/in-transaction.html#intransaction","text":"abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block.","title":"inTransaction"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/is-check-enabled.html","text":"misk-hibernate / misk.hibernate / Transacter / isCheckEnabled isCheckEnabled \u00b6 abstract fun isCheckEnabled(check: Check ): Boolean Is the scalability check currently enabled. Use Session.withoutChecks to disable checks.","title":"isCheckEnabled - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/is-check-enabled.html#ischeckenabled","text":"abstract fun isCheckEnabled(check: Check ): Boolean Is the scalability check currently enabled. Use Session.withoutChecks to disable checks.","title":"isCheckEnabled"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/no-retries.html","text":"misk-hibernate / misk.hibernate / Transacter / noRetries noRetries \u00b6 abstract fun noRetries(): Transacter","title":"noRetries - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/no-retries.html#noretries","text":"abstract fun noRetries(): Transacter","title":"noRetries"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/read-only.html","text":"misk-hibernate / misk.hibernate / Transacter / readOnly readOnly \u00b6 abstract fun readOnly(): Transacter Creates a new transacter that produces read only sessions. This does not mean the underlying datasource is read only, only that the session produced won\u2019t modify the database.","title":"readOnly - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/read-only.html#readonly","text":"abstract fun readOnly(): Transacter Creates a new transacter that produces read only sessions. This does not mean the underlying datasource is read only, only that the session produced won\u2019t modify the database.","title":"readOnly"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/replica-read.html","text":"misk-hibernate / misk.hibernate / Transacter / replicaRead replicaRead \u00b6 abstract fun <T> replicaRead(block: (session: Session ) -> T ): T Runs a non-transactional session against a read replica. A few things that are different with replica reads: Replica reads are (obviously?) read only. Consistency is eventual. If your application thread just wrote something in a transaction you may not see that write with a replica read as the write may not have replicated to the replica yet. There may be time jumping. As each query may end up at a separate replica that will likely be at a separate point in the replica stream. That means each query can jump back or forward in \u201ctime\u201d. (There is some support for internally consistent replica reads that peg a single replica in Vitess but we\u2019re not using that. If you need that functionality reach out to vitess) \u00b6 Full scatters are allowed since you can increase the availability of these by adding more replicas. If no reader is configured for replica reads when installing the HibernateModule , this method will throw an IllegalStateException . Note: You can do it another way, where you annotate the Transacter with the readerQualifer defined by HibernateModule , which will use the read only replica as the datasource.","title":"replicaRead - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/replica-read.html#replicaread","text":"abstract fun <T> replicaRead(block: (session: Session ) -> T ): T Runs a non-transactional session against a read replica. A few things that are different with replica reads: Replica reads are (obviously?) read only. Consistency is eventual. If your application thread just wrote something in a transaction you may not see that write with a replica read as the write may not have replicated to the replica yet. There may be time jumping. As each query may end up at a separate replica that will likely be at a separate point in the replica stream. That means each query can jump back or forward in \u201ctime\u201d. (There is some support for internally consistent replica reads that peg a single replica in Vitess but we\u2019re not using that. If you need that functionality reach out to","title":"replicaRead"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/replica-read.html#vitess","text":"Full scatters are allowed since you can increase the availability of these by adding more replicas. If no reader is configured for replica reads when installing the HibernateModule , this method will throw an IllegalStateException . Note: You can do it another way, where you annotate the Transacter with the readerQualifer defined by HibernateModule , which will use the read only replica as the datasource.","title":"vitess)"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/retries.html","text":"misk-hibernate / misk.hibernate / Transacter / retries retries \u00b6 abstract fun retries(maxAttempts: Int = 2): Transacter","title":"retries - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/retries.html#retries","text":"abstract fun retries(maxAttempts: Int = 2): Transacter","title":"retries"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/transaction.html","text":"misk-hibernate / misk.hibernate / Transacter / transaction transaction \u00b6 abstract fun <T> transaction(block: (session: Session ) -> T ): T Starts a transaction on the current thread, executes block , and commits the transaction. If the block raises an exception the transaction will be rolled back instead of committed. If retries are permitted (the default), a failed but recoverable transaction will be reattempted after rolling back. It is an error to start a transaction if another transaction is already in progress.","title":"transaction - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transacter/transaction.html#transaction","text":"abstract fun <T> transaction(block: (session: Session ) -> T ): T Starts a transaction on the current thread, executes block , and commits the transaction. If the block raises an exception the transaction will be rolled back instead of committed. If retries are permitted (the default), a failed but recoverable transaction will be reattempted after rolling back. It is an error to start a transaction if another transaction is already in progress.","title":"transaction"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/index.html","text":"misk-hibernate / misk.hibernate / TransformedType TransformedType \u00b6 @Target([AnnotationTarget.ANNOTATION_CLASS]) annotation class TransformedType TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. transformer is a KClass instance of a class that implements assemble and disassemble methods. Assemble is called when a value is read from the table, or from cache. Disassemble is called when a value is about to be written to a table or cache. targetType specifies a KClass instance of the type that the field should have when disassembled. It is used to determine the backing SQL type. The methods of Transformer additionally take a field representing the annotated field and a TransformerContext, which contains limited entity state, including the name of the table and the column, the arguments the annotation received. Note!: Wrapping basic numberic types may not behave as one would expect, especially when querying. This is partly due to Hibernate\u2019s inlining of primitive values. For example, one can define a transformer that appends a value to a string prior to storage, and removes it after retrieval. First, define the Transformer itself class AppendTransformer(val context: TransformerContext) { fun assemble(owner: Any?, value: Serializable): Any = (value as String).removeSuffix(context.arguments suffix as String)) fun disassemble(value: Any): Serializable = \u201c${value as String}${context.arguments suffix as String}\u201d } Then, create the entity annotation: Target (AnnotationTarget.FIELD) TransformedType (transformer = AppendTransformer::class, targetType = String::class) annotation class SuffixedString(val suffix: String) Then, annotate an entity field: Entity Table (name=\u201dtable_name\u201d) class DbEntity : DbUnsharded(DbEntity) { // \u2026 @Column(\"some_column\") @SuffixedString(suffix=\"_suffix\") var suffixedString : String = \"\" // ... } Constructors \u00b6 Name Summary <init> TransformedType(transformer: KClass <out Transformer >, targetType: KClass <*>) TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. Properties \u00b6 Name Summary targetType val targetType: KClass <*> transformer val transformer: KClass <out Transformer >","title":"TransformedType - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/index.html#transformedtype","text":"@Target([AnnotationTarget.ANNOTATION_CLASS]) annotation class TransformedType TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. transformer is a KClass instance of a class that implements assemble and disassemble methods. Assemble is called when a value is read from the table, or from cache. Disassemble is called when a value is about to be written to a table or cache. targetType specifies a KClass instance of the type that the field should have when disassembled. It is used to determine the backing SQL type. The methods of Transformer additionally take a field representing the annotated field and a TransformerContext, which contains limited entity state, including the name of the table and the column, the arguments the annotation received. Note!: Wrapping basic numberic types may not behave as one would expect, especially when querying. This is partly due to Hibernate\u2019s inlining of primitive values. For example, one can define a transformer that appends a value to a string prior to storage, and removes it after retrieval. First, define the Transformer itself class AppendTransformer(val context: TransformerContext) { fun assemble(owner: Any?, value: Serializable): Any = (value as String).removeSuffix(context.arguments suffix as String)) fun disassemble(value: Any): Serializable = \u201c${value as String}${context.arguments suffix as String}\u201d } Then, create the entity annotation: Target (AnnotationTarget.FIELD) TransformedType (transformer = AppendTransformer::class, targetType = String::class) annotation class SuffixedString(val suffix: String) Then, annotate an entity field: Entity Table (name=\u201dtable_name\u201d) class DbEntity : DbUnsharded(DbEntity) { // \u2026 @Column(\"some_column\") @SuffixedString(suffix=\"_suffix\") var suffixedString : String = \"\" // ... }","title":"TransformedType"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/index.html#constructors","text":"Name Summary <init> TransformedType(transformer: KClass <out Transformer >, targetType: KClass <*>) TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/index.html#properties","text":"Name Summary targetType val targetType: KClass <*> transformer val transformer: KClass <out Transformer >","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/-init-.html","text":"misk-hibernate / misk.hibernate / TransformedType / <init> <init> \u00b6 TransformedType(transformer: KClass <out Transformer >, targetType: KClass <*>) TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. transformer is a KClass instance of a class that implements assemble and disassemble methods. Assemble is called when a value is read from the table, or from cache. Disassemble is called when a value is about to be written to a table or cache. targetType specifies a KClass instance of the type that the field should have when disassembled. It is used to determine the backing SQL type. The methods of Transformer additionally take a field representing the annotated field and a TransformerContext, which contains limited entity state, including the name of the table and the column, the arguments the annotation received. Note!: Wrapping basic numberic types may not behave as one would expect, especially when querying. This is partly due to Hibernate\u2019s inlining of primitive values. For example, one can define a transformer that appends a value to a string prior to storage, and removes it after retrieval. First, define the Transformer itself class AppendTransformer(val context: TransformerContext) { fun assemble(owner: Any?, value: Serializable): Any = (value as String).removeSuffix(context.arguments suffix as String)) fun disassemble(value: Any): Serializable = \u201c${value as String}${context.arguments suffix as String}\u201d } Then, create the entity annotation: Target (AnnotationTarget.FIELD) TransformedType (transformer = AppendTransformer::class, targetType = String::class) annotation class SuffixedString(val suffix: String) Then, annotate an entity field: Entity Table (name=\u201dtable_name\u201d) class DbEntity : DbUnsharded(DbEntity) { // \u2026 @Column(\"some_column\") @SuffixedString(suffix=\"_suffix\") var suffixedString : String = \"\" // ... }","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/-init-.html#init","text":"TransformedType(transformer: KClass <out Transformer >, targetType: KClass <*>) TransformedType is a meta-annotation for assigning arbitrary transformers to entity fields. Use it to annotate attributes that will mark a field to be transformed. transformer is a KClass instance of a class that implements assemble and disassemble methods. Assemble is called when a value is read from the table, or from cache. Disassemble is called when a value is about to be written to a table or cache. targetType specifies a KClass instance of the type that the field should have when disassembled. It is used to determine the backing SQL type. The methods of Transformer additionally take a field representing the annotated field and a TransformerContext, which contains limited entity state, including the name of the table and the column, the arguments the annotation received. Note!: Wrapping basic numberic types may not behave as one would expect, especially when querying. This is partly due to Hibernate\u2019s inlining of primitive values. For example, one can define a transformer that appends a value to a string prior to storage, and removes it after retrieval. First, define the Transformer itself class AppendTransformer(val context: TransformerContext) { fun assemble(owner: Any?, value: Serializable): Any = (value as String).removeSuffix(context.arguments suffix as String)) fun disassemble(value: Any): Serializable = \u201c${value as String}${context.arguments suffix as String}\u201d } Then, create the entity annotation: Target (AnnotationTarget.FIELD) TransformedType (transformer = AppendTransformer::class, targetType = String::class) annotation class SuffixedString(val suffix: String) Then, annotate an entity field: Entity Table (name=\u201dtable_name\u201d) class DbEntity : DbUnsharded(DbEntity) { // \u2026 @Column(\"some_column\") @SuffixedString(suffix=\"_suffix\") var suffixedString : String = \"\" // ... }","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/target-type.html","text":"misk-hibernate / misk.hibernate / TransformedType / targetType targetType \u00b6 val targetType: KClass <*>","title":"targetType - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/target-type.html#targettype","text":"val targetType: KClass <*>","title":"targetType"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/transformer.html","text":"misk-hibernate / misk.hibernate / TransformedType / transformer transformer \u00b6 val transformer: KClass <out Transformer >","title":"transformer - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformed-type/transformer.html#transformer","text":"val transformer: KClass <out Transformer >","title":"transformer"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/index.html","text":"misk-hibernate / misk.hibernate / Transformer Transformer \u00b6 abstract class Transformer Constructors \u00b6 Name Summary <init> Transformer(context: TransformerContext ) Properties \u00b6 Name Summary context val context: TransformerContext Functions \u00b6 Name Summary assemble abstract fun assemble(owner: Any ?, value: Serializable ): Any disassemble abstract fun disassemble(value: Any ): Serializable","title":"Transformer - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/index.html#transformer","text":"abstract class Transformer","title":"Transformer"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/index.html#constructors","text":"Name Summary <init> Transformer(context: TransformerContext )","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/index.html#properties","text":"Name Summary context val context: TransformerContext","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/index.html#functions","text":"Name Summary assemble abstract fun assemble(owner: Any ?, value: Serializable ): Any disassemble abstract fun disassemble(value: Any ): Serializable","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/-init-.html","text":"misk-hibernate / misk.hibernate / Transformer / <init> <init> \u00b6 Transformer(context: TransformerContext )","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/-init-.html#init","text":"Transformer(context: TransformerContext )","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/assemble.html","text":"misk-hibernate / misk.hibernate / Transformer / assemble assemble \u00b6 abstract fun assemble(owner: Any ?, value: Serializable ): Any","title":"assemble - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/assemble.html#assemble","text":"abstract fun assemble(owner: Any ?, value: Serializable ): Any","title":"assemble"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/context.html","text":"misk-hibernate / misk.hibernate / Transformer / context context \u00b6 val context: TransformerContext","title":"context - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/context.html#context","text":"val context: TransformerContext","title":"context"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/disassemble.html","text":"misk-hibernate / misk.hibernate / Transformer / disassemble disassemble \u00b6 abstract fun disassemble(value: Any ): Serializable","title":"disassemble - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer/disassemble.html#disassemble","text":"abstract fun disassemble(value: Any ): Serializable","title":"disassemble"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/index.html","text":"misk-hibernate / misk.hibernate / TransformerContext TransformerContext \u00b6 data class TransformerContext Constructors \u00b6 Name Summary <init> TransformerContext(tableName: String , columnName: String , arguments: Map < String , *>, field: KClass <*>) Properties \u00b6 Name Summary arguments var arguments: Map < String , *> columnName val columnName: String field var field: KClass <*> tableName val tableName: String","title":"TransformerContext - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/index.html#transformercontext","text":"data class TransformerContext","title":"TransformerContext"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/index.html#constructors","text":"Name Summary <init> TransformerContext(tableName: String , columnName: String , arguments: Map < String , *>, field: KClass <*>)","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/index.html#properties","text":"Name Summary arguments var arguments: Map < String , *> columnName val columnName: String field var field: KClass <*> tableName val tableName: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/-init-.html","text":"misk-hibernate / misk.hibernate / TransformerContext / <init> <init> \u00b6 TransformerContext(tableName: String , columnName: String , arguments: Map < String , *>, field: KClass <*>)","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/-init-.html#init","text":"TransformerContext(tableName: String , columnName: String , arguments: Map < String , *>, field: KClass <*>)","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/arguments.html","text":"misk-hibernate / misk.hibernate / TransformerContext / arguments arguments \u00b6 var arguments: Map < String , *>","title":"arguments - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/arguments.html#arguments","text":"var arguments: Map < String , *>","title":"arguments"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/column-name.html","text":"misk-hibernate / misk.hibernate / TransformerContext / columnName columnName \u00b6 val columnName: String","title":"columnName - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/column-name.html#columnname","text":"val columnName: String","title":"columnName"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/field.html","text":"misk-hibernate / misk.hibernate / TransformerContext / field field \u00b6 var field: KClass <*>","title":"field - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/field.html#field","text":"var field: KClass <*>","title":"field"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/table-name.html","text":"misk-hibernate / misk.hibernate / TransformerContext / tableName tableName \u00b6 val tableName: String","title":"tableName - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-transformer-context/table-name.html#tablename","text":"val tableName: String","title":"tableName"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/index.html","text":"misk-hibernate / misk.hibernate / ValidationReport ValidationReport \u00b6 data class ValidationReport Constructors \u00b6 Name Summary <init> ValidationReport(schemas: Set < String >, tables: Set < String >, columns: Set < String >) Properties \u00b6 Name Summary columns val columns: Set < String > schemas val schemas: Set < String > tables val tables: Set < String >","title":"ValidationReport - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/index.html#validationreport","text":"data class ValidationReport","title":"ValidationReport"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/index.html#constructors","text":"Name Summary <init> ValidationReport(schemas: Set < String >, tables: Set < String >, columns: Set < String >)","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/index.html#properties","text":"Name Summary columns val columns: Set < String > schemas val schemas: Set < String > tables val tables: Set < String >","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/-init-.html","text":"misk-hibernate / misk.hibernate / ValidationReport / <init> <init> \u00b6 ValidationReport(schemas: Set < String >, tables: Set < String >, columns: Set < String >)","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/-init-.html#init","text":"ValidationReport(schemas: Set < String >, tables: Set < String >, columns: Set < String >)","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/columns.html","text":"misk-hibernate / misk.hibernate / ValidationReport / columns columns \u00b6 val columns: Set < String >","title":"columns - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/columns.html#columns","text":"val columns: Set < String >","title":"columns"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/schemas.html","text":"misk-hibernate / misk.hibernate / ValidationReport / schemas schemas \u00b6 val schemas: Set < String >","title":"schemas - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/schemas.html#schemas","text":"val schemas: Set < String >","title":"schemas"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/tables.html","text":"misk-hibernate / misk.hibernate / ValidationReport / tables tables \u00b6 val tables: Set < String >","title":"tables - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-validation-report/tables.html#tables","text":"val tables: Set < String >","title":"tables"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/index.html","text":"misk-hibernate / misk.hibernate / VitessDialect VitessDialect \u00b6 class VitessDialect : MySQL57Dialect Constructors \u00b6 Name Summary <init> VitessDialect() Functions \u00b6 Name Summary buildSQLExceptionConversionDelegate fun buildSQLExceptionConversionDelegate(): SQLExceptionConversionDelegate useInputStreamToInsertBlob fun useInputStreamToInsertBlob(): Boolean","title":"VitessDialect - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/index.html#vitessdialect","text":"class VitessDialect : MySQL57Dialect","title":"VitessDialect"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/index.html#constructors","text":"Name Summary <init> VitessDialect()","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/index.html#functions","text":"Name Summary buildSQLExceptionConversionDelegate fun buildSQLExceptionConversionDelegate(): SQLExceptionConversionDelegate useInputStreamToInsertBlob fun useInputStreamToInsertBlob(): Boolean","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/-init-.html","text":"misk-hibernate / misk.hibernate / VitessDialect / <init> <init> \u00b6 VitessDialect()","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/-init-.html#init","text":"VitessDialect()","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/build-s-q-l-exception-conversion-delegate.html","text":"misk-hibernate / misk.hibernate / VitessDialect / buildSQLExceptionConversionDelegate buildSQLExceptionConversionDelegate \u00b6 fun buildSQLExceptionConversionDelegate(): SQLExceptionConversionDelegate","title":"buildSQLExceptionConversionDelegate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/build-s-q-l-exception-conversion-delegate.html#buildsqlexceptionconversiondelegate","text":"fun buildSQLExceptionConversionDelegate(): SQLExceptionConversionDelegate","title":"buildSQLExceptionConversionDelegate"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/use-input-stream-to-insert-blob.html","text":"misk-hibernate / misk.hibernate / VitessDialect / useInputStreamToInsertBlob useInputStreamToInsertBlob \u00b6 fun useInputStreamToInsertBlob(): Boolean","title":"useInputStreamToInsertBlob - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/-vitess-dialect/use-input-stream-to-insert-blob.html#useinputstreamtoinsertblob","text":"fun useInputStreamToInsertBlob(): Boolean","title":"useInputStreamToInsertBlob"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-prepared-statement/index.html","text":"misk-hibernate / misk.hibernate / java.sql.PreparedStatement Extensions for java.sql.PreparedStatement \u00b6 Name Summary setByType fun PreparedStatement .setByType(klass: KClass <*>?, index: Int , value: Any ): Unit","title":"Extensions for java.sql.PreparedStatement - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-prepared-statement/index.html#extensions-for-javasqlpreparedstatement","text":"Name Summary setByType fun PreparedStatement .setByType(klass: KClass <*>?, index: Int , value: Any ): Unit","title":"Extensions for java.sql.PreparedStatement"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-prepared-statement/set-by-type.html","text":"misk-hibernate / misk.hibernate / java.sql.PreparedStatement / setByType setByType \u00b6 fun PreparedStatement .setByType(klass: KClass <*>?, index: Int , value: Any ): Unit","title":"setByType - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-prepared-statement/set-by-type.html#setbytype","text":"fun PreparedStatement .setByType(klass: KClass <*>?, index: Int , value: Any ): Unit","title":"setByType"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-result-set/index.html","text":"misk-hibernate / misk.hibernate / java.sql.ResultSet Extensions for java.sql.ResultSet \u00b6 Name Summary getByType fun ResultSet .getByType(klass: KClass <*>?, columnLabel: String ): Serializable ?","title":"Extensions for java.sql.ResultSet - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-result-set/index.html#extensions-for-javasqlresultset","text":"Name Summary getByType fun ResultSet .getByType(klass: KClass <*>?, columnLabel: String ): Serializable ?","title":"Extensions for java.sql.ResultSet"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-result-set/get-by-type.html","text":"misk-hibernate / misk.hibernate / java.sql.ResultSet / getByType getByType \u00b6 fun ResultSet .getByType(klass: KClass <*>?, columnLabel: String ): Serializable ?","title":"getByType - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate/java.sql.-result-set/get-by-type.html#getbytype","text":"fun ResultSet .getByType(klass: KClass <*>?, columnLabel: String ): Serializable ?","title":"getByType"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/index.html","text":"misk-hibernate / misk.hibernate.annotation Package misk.hibernate.annotation \u00b6 Annotations \u00b6 Name Summary Keyspace annotation class Keyspace Functions \u00b6 Name Summary keyspace fun Keyspace .keyspace(): Keyspace","title":"Package misk.hibernate.annotation - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/index.html#package-miskhibernateannotation","text":"","title":"Package misk.hibernate.annotation"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/index.html#annotations","text":"Name Summary Keyspace annotation class Keyspace","title":"Annotations"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/index.html#functions","text":"Name Summary keyspace fun Keyspace .keyspace(): Keyspace","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/keyspace.html","text":"misk-hibernate / misk.hibernate.annotation / keyspace keyspace \u00b6 fun Keyspace .keyspace(): Keyspace","title":"keyspace - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/keyspace.html#keyspace","text":"fun Keyspace .keyspace(): Keyspace","title":"keyspace"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/index.html","text":"misk-hibernate / misk.hibernate.annotation / Keyspace Keyspace \u00b6 @Target([AnnotationTarget.CLASS]) annotation class Keyspace Constructors \u00b6 Name Summary <init> Keyspace(value: String ) Properties \u00b6 Name Summary value val value: String Extension Functions \u00b6 Name Summary keyspace fun Keyspace .keyspace(): Keyspace","title":"Keyspace - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/index.html#keyspace","text":"@Target([AnnotationTarget.CLASS]) annotation class Keyspace","title":"Keyspace"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/index.html#constructors","text":"Name Summary <init> Keyspace(value: String )","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/index.html#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/index.html#extension-functions","text":"Name Summary keyspace fun Keyspace .keyspace(): Keyspace","title":"Extension Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/-init-.html","text":"misk-hibernate / misk.hibernate.annotation / Keyspace / <init> <init> \u00b6 Keyspace(value: String )","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/-init-.html#init","text":"Keyspace(value: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/value.html","text":"misk-hibernate / misk.hibernate.annotation / Keyspace / value value \u00b6 val value: String","title":"value - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.annotation/-keyspace/value.html#value","text":"val value: String","title":"value"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/index.html","text":"misk-hibernate / misk.hibernate.migrate Package misk.hibernate.migrate \u00b6 Types \u00b6 Name Summary BulkShardMigrator class BulkShardMigrator<R : DbRoot < R >, C : DbChild < R , C >> BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards.","title":"Package misk.hibernate.migrate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/index.html#package-miskhibernatemigrate","text":"","title":"Package misk.hibernate.migrate"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/index.html#types","text":"Name Summary BulkShardMigrator class BulkShardMigrator<R : DbRoot < R >, C : DbChild < R , C >> BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards.","title":"Types"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/index.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator BulkShardMigrator \u00b6 class BulkShardMigrator<R : DbRoot < R >, C : DbChild < R , C >> BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards. If moving between shards it will copy the rows between shards using a SELECT and a batched INSERT statements. The mutations are applied to the result set in memory between the SELECT and the batch INSERT. An example of moving rows from characters table that is sharded by movie_id from source_id to target_id: bulkShardMigratorFactory.create(transacter, sessionFactory, DbMovie::class, DbCharacter::class) .rootColumn(\u201cmovie_id\u201d) .source(sourceId) .target(targetId) .execute() Types \u00b6 Name Summary Factory class Factory IncMutation class IncMutation : BulkShardMigrator.Mutation Mutation abstract class Mutation NowMutation class NowMutation : BulkShardMigrator.Mutation SetMappingMutation class SetMappingMutation : BulkShardMigrator.Mutation SetMutation class SetMutation : BulkShardMigrator.Mutation Functions \u00b6 Name Summary batched fun batched(): BulkShardMigrator < R , C > batchSize fun batchSize(batchSize: Int ): BulkShardMigrator < R , C > execute fun execute(insertIgnore: Boolean = false): Unit inc operator fun inc(column: String ): BulkShardMigrator < R , C > latestBatchOnly fun latestBatchOnly(latestBatchOnly: Boolean ): BulkShardMigrator < R , C > now fun now(column: String ): BulkShardMigrator < R , C > rootColumn fun rootColumn(columnName: String ): BulkShardMigrator < R , C > set operator fun set(column: String , value: Any ): BulkShardMigrator < R , C > operator fun set(column: String , valueMapper: Function < Any , Any >): BulkShardMigrator < R , C > source fun source(sourceRoot: Id < R >): BulkShardMigrator < R , C > target fun target(targetRoot: Id < R >): BulkShardMigrator < R , C > where fun where(where: String , vararg parameters: Any ): BulkShardMigrator < R , C > fun where(where: String , parameters: List <*>): BulkShardMigrator < R , C >","title":"BulkShardMigrator - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/index.html#bulkshardmigrator","text":"class BulkShardMigrator<R : DbRoot < R >, C : DbChild < R , C >> BulkShardMigrator facilitates moving of child entities belonging to a source root entity to target root entity in bulk. Source or target entity can either live on the same or different shards. If moving between shards it will copy the rows between shards using a SELECT and a batched INSERT statements. The mutations are applied to the result set in memory between the SELECT and the batch INSERT. An example of moving rows from characters table that is sharded by movie_id from source_id to target_id: bulkShardMigratorFactory.create(transacter, sessionFactory, DbMovie::class, DbCharacter::class) .rootColumn(\u201cmovie_id\u201d) .source(sourceId) .target(targetId) .execute()","title":"BulkShardMigrator"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/index.html#types","text":"Name Summary Factory class Factory IncMutation class IncMutation : BulkShardMigrator.Mutation Mutation abstract class Mutation NowMutation class NowMutation : BulkShardMigrator.Mutation SetMappingMutation class SetMappingMutation : BulkShardMigrator.Mutation SetMutation class SetMutation : BulkShardMigrator.Mutation","title":"Types"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/index.html#functions","text":"Name Summary batched fun batched(): BulkShardMigrator < R , C > batchSize fun batchSize(batchSize: Int ): BulkShardMigrator < R , C > execute fun execute(insertIgnore: Boolean = false): Unit inc operator fun inc(column: String ): BulkShardMigrator < R , C > latestBatchOnly fun latestBatchOnly(latestBatchOnly: Boolean ): BulkShardMigrator < R , C > now fun now(column: String ): BulkShardMigrator < R , C > rootColumn fun rootColumn(columnName: String ): BulkShardMigrator < R , C > set operator fun set(column: String , value: Any ): BulkShardMigrator < R , C > operator fun set(column: String , valueMapper: Function < Any , Any >): BulkShardMigrator < R , C > source fun source(sourceRoot: Id < R >): BulkShardMigrator < R , C > target fun target(targetRoot: Id < R >): BulkShardMigrator < R , C > where fun where(where: String , vararg parameters: Any ): BulkShardMigrator < R , C > fun where(where: String , parameters: List <*>): BulkShardMigrator < R , C >","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batch-size.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / batchSize batchSize \u00b6 fun batchSize(batchSize: Int ): BulkShardMigrator < R , C >","title":"batchSize - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batch-size.html#batchsize","text":"fun batchSize(batchSize: Int ): BulkShardMigrator < R , C >","title":"batchSize"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batched.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / batched batched \u00b6 fun batched(): BulkShardMigrator < R , C >","title":"batched - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/batched.html#batched","text":"fun batched(): BulkShardMigrator < R , C >","title":"batched"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/execute.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / execute execute \u00b6 fun execute(insertIgnore: Boolean = false): Unit","title":"execute - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/execute.html#execute","text":"fun execute(insertIgnore: Boolean = false): Unit","title":"execute"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/inc.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / inc inc \u00b6 operator fun inc(column: String ): BulkShardMigrator < R , C >","title":"inc - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/inc.html#inc","text":"operator fun inc(column: String ): BulkShardMigrator < R , C >","title":"inc"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/latest-batch-only.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / latestBatchOnly latestBatchOnly \u00b6 fun latestBatchOnly(latestBatchOnly: Boolean ): BulkShardMigrator < R , C >","title":"latestBatchOnly - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/latest-batch-only.html#latestbatchonly","text":"fun latestBatchOnly(latestBatchOnly: Boolean ): BulkShardMigrator < R , C >","title":"latestBatchOnly"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/now.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / now now \u00b6 fun now(column: String ): BulkShardMigrator < R , C >","title":"now - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/now.html#now","text":"fun now(column: String ): BulkShardMigrator < R , C >","title":"now"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/root-column.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / rootColumn rootColumn \u00b6 fun rootColumn(columnName: String ): BulkShardMigrator < R , C >","title":"rootColumn - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/root-column.html#rootcolumn","text":"fun rootColumn(columnName: String ): BulkShardMigrator < R , C >","title":"rootColumn"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/set.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / set set \u00b6 operator fun set(column: String , value: Any ): BulkShardMigrator < R , C > operator fun set(column: String , valueMapper: Function < Any , Any >): BulkShardMigrator < R , C >","title":"set - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/set.html#set","text":"operator fun set(column: String , value: Any ): BulkShardMigrator < R , C > operator fun set(column: String , valueMapper: Function < Any , Any >): BulkShardMigrator < R , C >","title":"set"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/source.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / source source \u00b6 fun source(sourceRoot: Id < R >): BulkShardMigrator < R , C >","title":"source - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/source.html#source","text":"fun source(sourceRoot: Id < R >): BulkShardMigrator < R , C >","title":"source"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/target.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / target target \u00b6 fun target(targetRoot: Id < R >): BulkShardMigrator < R , C >","title":"target - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/target.html#target","text":"fun target(targetRoot: Id < R >): BulkShardMigrator < R , C >","title":"target"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/where.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / where where \u00b6 fun where(where: String , vararg parameters: Any ): BulkShardMigrator < R , C > fun where(where: String , parameters: List <*>): BulkShardMigrator < R , C >","title":"where - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/where.html#where","text":"fun where(where: String , vararg parameters: Any ): BulkShardMigrator < R , C > fun where(where: String , parameters: List <*>): BulkShardMigrator < R , C >","title":"where"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/index.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Factory Factory \u00b6 @Singleton class Factory Constructors \u00b6 Name Summary <init> Factory() Functions \u00b6 Name Summary create fun <R : DbRoot < R >, C : DbChild < R , C >> create(transacter: Transacter , sessionFactory: SessionFactory, rootClass: KClass < R >, childClass: KClass < C >): BulkShardMigrator < R , C >","title":"Factory - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/index.html#factory","text":"@Singleton class Factory","title":"Factory"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/index.html#constructors","text":"Name Summary <init> Factory()","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/index.html#functions","text":"Name Summary create fun <R : DbRoot < R >, C : DbChild < R , C >> create(transacter: Transacter , sessionFactory: SessionFactory, rootClass: KClass < R >, childClass: KClass < C >): BulkShardMigrator < R , C >","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/-init-.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Factory / <init> <init> \u00b6 Factory()","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/-init-.html#init","text":"Factory()","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/create.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Factory / create create \u00b6 fun <R : DbRoot < R >, C : DbChild < R , C >> create(transacter: Transacter , sessionFactory: SessionFactory, rootClass: KClass < R >, childClass: KClass < C >): BulkShardMigrator < R , C >","title":"create - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-factory/create.html#create","text":"fun <R : DbRoot < R >, C : DbChild < R , C >> create(transacter: Transacter , sessionFactory: SessionFactory, rootClass: KClass < R >, childClass: KClass < C >): BulkShardMigrator < R , C >","title":"create"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/index.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / IncMutation IncMutation \u00b6 class IncMutation : BulkShardMigrator.Mutation Constructors \u00b6 Name Summary <init> IncMutation(column: String ) Functions \u00b6 Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int updateSql fun updateSql(): String Inherited Functions \u00b6 Name Summary insertSql open fun insertSql(): String","title":"IncMutation - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/index.html#incmutation","text":"class IncMutation : BulkShardMigrator.Mutation","title":"IncMutation"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/index.html#constructors","text":"Name Summary <init> IncMutation(column: String )","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/index.html#functions","text":"Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int updateSql fun updateSql(): String","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/index.html#inherited-functions","text":"Name Summary insertSql open fun insertSql(): String","title":"Inherited Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/-init-.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / IncMutation / <init> <init> \u00b6 IncMutation(column: String )","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/-init-.html#init","text":"IncMutation(column: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-insert.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / IncMutation / bindInsert bindInsert \u00b6 fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-insert.html#bindinsert","text":"fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-update.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / IncMutation / bindUpdate bindUpdate \u00b6 fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/bind-update.html#bindupdate","text":"fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/update-sql.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / IncMutation / updateSql updateSql \u00b6 fun updateSql(): String Overrides Mutation.updateSql","title":"updateSql - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-inc-mutation/update-sql.html#updatesql","text":"fun updateSql(): String Overrides Mutation.updateSql","title":"updateSql"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/index.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Mutation Mutation \u00b6 abstract class Mutation Constructors \u00b6 Name Summary <init> Mutation() Functions \u00b6 Name Summary bindInsert open fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate abstract fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int insertSql open fun insertSql(): String updateSql open fun updateSql(): String Inheritors \u00b6 Name Summary IncMutation class IncMutation : BulkShardMigrator.Mutation NowMutation class NowMutation : BulkShardMigrator.Mutation SetMappingMutation class SetMappingMutation : BulkShardMigrator.Mutation SetMutation class SetMutation : BulkShardMigrator.Mutation","title":"Mutation - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/index.html#mutation","text":"abstract class Mutation","title":"Mutation"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/index.html#constructors","text":"Name Summary <init> Mutation()","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/index.html#functions","text":"Name Summary bindInsert open fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate abstract fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int insertSql open fun insertSql(): String updateSql open fun updateSql(): String","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/index.html#inheritors","text":"Name Summary IncMutation class IncMutation : BulkShardMigrator.Mutation NowMutation class NowMutation : BulkShardMigrator.Mutation SetMappingMutation class SetMappingMutation : BulkShardMigrator.Mutation SetMutation class SetMutation : BulkShardMigrator.Mutation","title":"Inheritors"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/-init-.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Mutation / <init> <init> \u00b6 Mutation()","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/-init-.html#init","text":"Mutation()","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-insert.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Mutation / bindInsert bindInsert \u00b6 open fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int","title":"bindInsert - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-insert.html#bindinsert","text":"open fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int","title":"bindInsert"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-update.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Mutation / bindUpdate bindUpdate \u00b6 abstract fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int","title":"bindUpdate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/bind-update.html#bindupdate","text":"abstract fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int","title":"bindUpdate"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/insert-sql.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Mutation / insertSql insertSql \u00b6 open fun insertSql(): String","title":"insertSql - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/insert-sql.html#insertsql","text":"open fun insertSql(): String","title":"insertSql"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/update-sql.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / Mutation / updateSql updateSql \u00b6 open fun updateSql(): String","title":"updateSql - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-mutation/update-sql.html#updatesql","text":"open fun updateSql(): String","title":"updateSql"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/index.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / NowMutation NowMutation \u00b6 class NowMutation : BulkShardMigrator.Mutation Constructors \u00b6 Name Summary <init> NowMutation(column: String ) Functions \u00b6 Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int insertSql fun insertSql(): String updateSql fun updateSql(): String","title":"NowMutation - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/index.html#nowmutation","text":"class NowMutation : BulkShardMigrator.Mutation","title":"NowMutation"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/index.html#constructors","text":"Name Summary <init> NowMutation(column: String )","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/index.html#functions","text":"Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int insertSql fun insertSql(): String updateSql fun updateSql(): String","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/-init-.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / NowMutation / <init> <init> \u00b6 NowMutation(column: String )","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/-init-.html#init","text":"NowMutation(column: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-insert.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / NowMutation / bindInsert bindInsert \u00b6 fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-insert.html#bindinsert","text":"fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-update.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / NowMutation / bindUpdate bindUpdate \u00b6 fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/bind-update.html#bindupdate","text":"fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/insert-sql.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / NowMutation / insertSql insertSql \u00b6 fun insertSql(): String Overrides Mutation.insertSql","title":"insertSql - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/insert-sql.html#insertsql","text":"fun insertSql(): String Overrides Mutation.insertSql","title":"insertSql"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/update-sql.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / NowMutation / updateSql updateSql \u00b6 fun updateSql(): String Overrides Mutation.updateSql","title":"updateSql - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-now-mutation/update-sql.html#updatesql","text":"fun updateSql(): String Overrides Mutation.updateSql","title":"updateSql"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/index.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMappingMutation SetMappingMutation \u00b6 class SetMappingMutation : BulkShardMigrator.Mutation Constructors \u00b6 Name Summary <init> SetMappingMutation(column: String , valueMapper: Function < Any , Any >) Functions \u00b6 Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Inherited Functions \u00b6 Name Summary insertSql open fun insertSql(): String updateSql open fun updateSql(): String","title":"SetMappingMutation - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/index.html#setmappingmutation","text":"class SetMappingMutation : BulkShardMigrator.Mutation","title":"SetMappingMutation"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/index.html#constructors","text":"Name Summary <init> SetMappingMutation(column: String , valueMapper: Function < Any , Any >)","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/index.html#functions","text":"Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/index.html#inherited-functions","text":"Name Summary insertSql open fun insertSql(): String updateSql open fun updateSql(): String","title":"Inherited Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/-init-.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMappingMutation / <init> <init> \u00b6 SetMappingMutation(column: String , valueMapper: Function < Any , Any >)","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/-init-.html#init","text":"SetMappingMutation(column: String , valueMapper: Function < Any , Any >)","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-insert.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMappingMutation / bindInsert bindInsert \u00b6 fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-insert.html#bindinsert","text":"fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-update.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMappingMutation / bindUpdate bindUpdate \u00b6 fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mapping-mutation/bind-update.html#bindupdate","text":"fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/index.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMutation SetMutation \u00b6 class SetMutation : BulkShardMigrator.Mutation Constructors \u00b6 Name Summary <init> SetMutation(column: String , value: Any ) Functions \u00b6 Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Inherited Functions \u00b6 Name Summary insertSql open fun insertSql(): String updateSql open fun updateSql(): String","title":"SetMutation - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/index.html#setmutation","text":"class SetMutation : BulkShardMigrator.Mutation","title":"SetMutation"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/index.html#constructors","text":"Name Summary <init> SetMutation(column: String , value: Any )","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/index.html#functions","text":"Name Summary bindInsert fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int bindUpdate fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/index.html#inherited-functions","text":"Name Summary insertSql open fun insertSql(): String updateSql open fun updateSql(): String","title":"Inherited Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/-init-.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMutation / <init> <init> \u00b6 SetMutation(column: String , value: Any )","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/-init-.html#init","text":"SetMutation(column: String , value: Any )","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-insert.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMutation / bindInsert bindInsert \u00b6 fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-insert.html#bindinsert","text":"fun bindInsert(insert: PreparedStatement , parameterIndex: Int , value: Any ): Int Overrides Mutation.bindInsert","title":"bindInsert"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-update.html","text":"misk-hibernate / misk.hibernate.migrate / BulkShardMigrator / SetMutation / bindUpdate bindUpdate \u00b6 fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.migrate/-bulk-shard-migrator/-set-mutation/bind-update.html#bindupdate","text":"fun bindUpdate(update: PreparedStatement , parameterIndex: Int ): Int Overrides Mutation.bindUpdate","title":"bindUpdate"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/index.html","text":"misk-hibernate / misk.hibernate.pagination Package misk.hibernate.pagination \u00b6 Types \u00b6 Name Summary Offset data class Offset Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Page data class Page<T> Pager interface Pager<T> Paginator interface Paginator<T, in Q : Query < T >> Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page. Functions \u00b6 Name Summary idAscPaginator fun <T : DbEntity < T >> idAscPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by ascending ID. idDescPaginator fun <T : DbEntity < T >> idDescPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by descending ID. listAll fun <T : DbEntity < T >, R> Pager < T >.listAll(transacter: Transacter , transform: ( T ) -> R ): List < R > newPager fun <T : DbEntity < T >, Q : Query < T >> Q .newPager(paginator: Paginator < T , Q >, initialOffset: Offset ? = null, pageSize: Int = 100): Pager < T > Use a null initialOffset to start at the beginning.","title":"Package misk.hibernate.pagination - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/index.html#package-miskhibernatepagination","text":"","title":"Package misk.hibernate.pagination"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/index.html#types","text":"Name Summary Offset data class Offset Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Page data class Page<T> Pager interface Pager<T> Paginator interface Paginator<T, in Q : Query < T >> Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page.","title":"Types"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/index.html#functions","text":"Name Summary idAscPaginator fun <T : DbEntity < T >> idAscPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by ascending ID. idDescPaginator fun <T : DbEntity < T >> idDescPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by descending ID. listAll fun <T : DbEntity < T >, R> Pager < T >.listAll(transacter: Transacter , transform: ( T ) -> R ): List < R > newPager fun <T : DbEntity < T >, Q : Query < T >> Q .newPager(paginator: Paginator < T , Q >, initialOffset: Offset ? = null, pageSize: Int = 100): Pager < T > Use a null initialOffset to start at the beginning.","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/id-asc-paginator.html","text":"misk-hibernate / misk.hibernate.pagination / idAscPaginator idAscPaginator \u00b6 fun <T : DbEntity < T >> idAscPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by ascending ID.","title":"idAscPaginator - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/id-asc-paginator.html#idascpaginator","text":"fun <T : DbEntity < T >> idAscPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by ascending ID.","title":"idAscPaginator"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/id-desc-paginator.html","text":"misk-hibernate / misk.hibernate.pagination / idDescPaginator idDescPaginator \u00b6 fun <T : DbEntity < T >> idDescPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by descending ID.","title":"idDescPaginator - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/id-desc-paginator.html#iddescpaginator","text":"fun <T : DbEntity < T >> idDescPaginator(idPath: String = \"id\"): Paginator < T , Query < T >> Pages through entities by descending ID.","title":"idDescPaginator"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/list-all.html","text":"misk-hibernate / misk.hibernate.pagination / listAll listAll \u00b6 fun <T : DbEntity < T >, R> Pager < T >.listAll(transacter: Transacter , transform: ( T ) -> R ): List < R >","title":"listAll - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/list-all.html#listall","text":"fun <T : DbEntity < T >, R> Pager < T >.listAll(transacter: Transacter , transform: ( T ) -> R ): List < R >","title":"listAll"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/new-pager.html","text":"misk-hibernate / misk.hibernate.pagination / newPager newPager \u00b6 fun <T : DbEntity < T >, Q : Query < T >> Q .newPager(paginator: Paginator < T , Q >, initialOffset: Offset ? = null, pageSize: Int = 100): Pager < T > Use a null initialOffset to start at the beginning.","title":"newPager - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/new-pager.html#newpager","text":"fun <T : DbEntity < T >, Q : Query < T >> Q .newPager(paginator: Paginator < T , Q >, initialOffset: Offset ? = null, pageSize: Int = 100): Pager < T > Use a null initialOffset to start at the beginning.","title":"newPager"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/index.html","text":"misk-hibernate / misk.hibernate.pagination / Offset Offset \u00b6 data class Offset Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Don\u2019t put PII in here. Clients see these in URLs and API calls, and can manipulate them. This could also potentially leak database growth information! Constructors \u00b6 Name Summary <init> Offset(offset: String ) Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Properties \u00b6 Name Summary offset val offset: String","title":"Offset - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/index.html#offset","text":"data class Offset Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Don\u2019t put PII in here. Clients see these in URLs and API calls, and can manipulate them. This could also potentially leak database growth information!","title":"Offset"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/index.html#constructors","text":"Name Summary <init> Offset(offset: String ) Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d.","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/index.html#properties","text":"Name Summary offset val offset: String","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/-init-.html","text":"misk-hibernate / misk.hibernate.pagination / Offset / <init> <init> \u00b6 Offset(offset: String ) Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Don\u2019t put PII in here. Clients see these in URLs and API calls, and can manipulate them. This could also potentially leak database growth information!","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/-init-.html#init","text":"Offset(offset: String ) Offset into a query. Typically this is a string-encoded ID like 5, or a composite containing a date followed by an ID, like \u201c2019-08-16T:10:26:51Z/5\u201d. Don\u2019t put PII in here. Clients see these in URLs and API calls, and can manipulate them. This could also potentially leak database growth information!","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/offset.html","text":"misk-hibernate / misk.hibernate.pagination / Offset / offset offset \u00b6 val offset: String","title":"offset - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-offset/offset.html#offset","text":"val offset: String","title":"offset"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/index.html","text":"misk-hibernate / misk.hibernate.pagination / Page Page \u00b6 data class Page<T> Constructors \u00b6 Name Summary <init> Page(contents: List < T >, nextOffset: Offset ?) Properties \u00b6 Name Summary contents val contents: List < T > nextOffset val nextOffset: Offset ? Null if there are no more results. Pass this in a subsequent call to Query.newPager . Companion Object Functions \u00b6 Name Summary empty fun <T> empty(): Page < T >","title":"Page - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/index.html#page","text":"data class Page<T>","title":"Page"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/index.html#constructors","text":"Name Summary <init> Page(contents: List < T >, nextOffset: Offset ?)","title":"Constructors"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/index.html#properties","text":"Name Summary contents val contents: List < T > nextOffset val nextOffset: Offset ? Null if there are no more results. Pass this in a subsequent call to Query.newPager .","title":"Properties"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/index.html#companion-object-functions","text":"Name Summary empty fun <T> empty(): Page < T >","title":"Companion Object Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/-init-.html","text":"misk-hibernate / misk.hibernate.pagination / Page / <init> <init> \u00b6 Page(contents: List < T >, nextOffset: Offset ?)","title":" init "},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/-init-.html#init","text":"Page(contents: List < T >, nextOffset: Offset ?)","title":"&lt;init&gt;"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/contents.html","text":"misk-hibernate / misk.hibernate.pagination / Page / contents contents \u00b6 val contents: List < T >","title":"contents - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/contents.html#contents","text":"val contents: List < T >","title":"contents"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/empty.html","text":"misk-hibernate / misk.hibernate.pagination / Page / empty empty \u00b6 fun <T> empty(): Page < T >","title":"empty - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/empty.html#empty","text":"fun <T> empty(): Page < T >","title":"empty"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/next-offset.html","text":"misk-hibernate / misk.hibernate.pagination / Page / nextOffset nextOffset \u00b6 val nextOffset: Offset ? Null if there are no more results. Pass this in a subsequent call to Query.newPager .","title":"nextOffset - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-page/next-offset.html#nextoffset","text":"val nextOffset: Offset ? Null if there are no more results. Pass this in a subsequent call to Query.newPager .","title":"nextOffset"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/index.html","text":"misk-hibernate / misk.hibernate.pagination / Pager Pager \u00b6 interface Pager<T> Functions \u00b6 Name Summary hasNext abstract fun hasNext(): Boolean Returns true when there are more pages to load. nextPage abstract fun nextPage(session: Session ): Page < T >? Returns null when there are no more pages. Extension Functions \u00b6 Name Summary listAll fun <T : DbEntity < T >, R> Pager < T >.listAll(transacter: Transacter , transform: ( T ) -> R ): List < R >","title":"Pager - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/index.html#pager","text":"interface Pager<T>","title":"Pager"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/index.html#functions","text":"Name Summary hasNext abstract fun hasNext(): Boolean Returns true when there are more pages to load. nextPage abstract fun nextPage(session: Session ): Page < T >? Returns null when there are no more pages.","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/index.html#extension-functions","text":"Name Summary listAll fun <T : DbEntity < T >, R> Pager < T >.listAll(transacter: Transacter , transform: ( T ) -> R ): List < R >","title":"Extension Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/has-next.html","text":"misk-hibernate / misk.hibernate.pagination / Pager / hasNext hasNext \u00b6 abstract fun hasNext(): Boolean Returns true when there are more pages to load.","title":"hasNext - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/has-next.html#hasnext","text":"abstract fun hasNext(): Boolean Returns true when there are more pages to load.","title":"hasNext"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/next-page.html","text":"misk-hibernate / misk.hibernate.pagination / Pager / nextPage nextPage \u00b6 abstract fun nextPage(session: Session ): Page < T >? Returns null when there are no more pages.","title":"nextPage - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-pager/next-page.html#nextpage","text":"abstract fun nextPage(session: Session ): Page < T >? Returns null when there are no more pages.","title":"nextPage"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-paginator/index.html","text":"misk-hibernate / misk.hibernate.pagination / Paginator Paginator \u00b6 interface Paginator<T, in Q : Query < T >> Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page. Functions \u00b6 Name Summary applyOffset abstract fun applyOffset(query: Q , offset: Offset ?): Unit Adjust query so that is in paging order and offset by offset (if non-null). Most implementations will add an ORDER BY clause. They should also add a WHERE column > offset constraint if the offset is non-null. getOffset abstract fun getOffset(row: T ): Offset Figure out what the offset of row is, and encode that as a string.","title":"Paginator - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-paginator/index.html#paginator","text":"interface Paginator<T, in Q : Query < T >> Breaks a query into pages. Each page break is delimited by a string that is the offset of the last row of the preceding page.","title":"Paginator"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-paginator/index.html#functions","text":"Name Summary applyOffset abstract fun applyOffset(query: Q , offset: Offset ?): Unit Adjust query so that is in paging order and offset by offset (if non-null). Most implementations will add an ORDER BY clause. They should also add a WHERE column > offset constraint if the offset is non-null. getOffset abstract fun getOffset(row: T ): Offset Figure out what the offset of row is, and encode that as a string.","title":"Functions"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-paginator/apply-offset.html","text":"misk-hibernate / misk.hibernate.pagination / Paginator / applyOffset applyOffset \u00b6 abstract fun applyOffset(query: Q , offset: Offset ?): Unit Adjust query so that is in paging order and offset by offset (if non-null). Most implementations will add an ORDER BY clause. They should also add a WHERE column > offset constraint if the offset is non-null.","title":"applyOffset - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-paginator/apply-offset.html#applyoffset","text":"abstract fun applyOffset(query: Q , offset: Offset ?): Unit Adjust query so that is in paging order and offset by offset (if non-null). Most implementations will add an ORDER BY clause. They should also add a WHERE column > offset constraint if the offset is non-null.","title":"applyOffset"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-paginator/get-offset.html","text":"misk-hibernate / misk.hibernate.pagination / Paginator / getOffset getOffset \u00b6 abstract fun getOffset(row: T ): Offset Figure out what the offset of row is, and encode that as a string.","title":"getOffset - Misk"},{"location":"0.x/misk-hibernate/misk.hibernate.pagination/-paginator/get-offset.html#getoffset","text":"abstract fun getOffset(row: T ): Offset Figure out what the offset of row is, and encode that as a string.","title":"getOffset"},{"location":"0.x/misk-hibernate-testing/index.html","text":"misk-hibernate-testing Index \u00b6 All Types","title":"misk-hibernate-testing"},{"location":"0.x/misk-hibernate-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-hibernate-testing/alltypes.html","text":"All Types \u00b6 Name Summary","title":"All Types - Misk"},{"location":"0.x/misk-hibernate-testing/alltypes.html#all-types","text":"Name Summary","title":"All Types"},{"location":"0.x/misk-inject/index.html","text":"misk-inject Packages \u00b6 Name Summary misk.inject Index \u00b6 All Types","title":"misk-inject"},{"location":"0.x/misk-inject/index.html#packages","text":"Name Summary misk.inject","title":"Packages"},{"location":"0.x/misk-inject/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-inject/alltypes/index.html","text":"All Types \u00b6 Name Summary com.google.inject.Injector (extensions in package misk.inject) misk.inject.KAbstractModule A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. kotlin.reflect.KClass (extensions in package misk.inject) kotlin.reflect.KType (extensions in package misk.inject) com.google.inject.binder.ScopedBindingBuilder (extensions in package misk.inject) java.lang.reflect.Type (extensions in package misk.inject) com.google.inject.TypeLiteral (extensions in package misk.inject)","title":"All Types - Misk"},{"location":"0.x/misk-inject/alltypes/index.html#all-types","text":"Name Summary com.google.inject.Injector (extensions in package misk.inject) misk.inject.KAbstractModule A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. kotlin.reflect.KClass (extensions in package misk.inject) kotlin.reflect.KType (extensions in package misk.inject) com.google.inject.binder.ScopedBindingBuilder (extensions in package misk.inject) java.lang.reflect.Type (extensions in package misk.inject) com.google.inject.TypeLiteral (extensions in package misk.inject)","title":"All Types"},{"location":"0.x/misk-inject/misk.inject/index.html","text":"misk-inject / misk.inject Package misk.inject \u00b6 Types \u00b6 Name Summary KAbstractModule abstract class KAbstractModule : AbstractModule A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. Extensions for External Classes \u00b6 Name Summary com.google.inject.binder.ScopedBindingBuilder com.google.inject.Injector com.google.inject.TypeLiteral java.lang.reflect.Type kotlin.reflect.KClass kotlin.reflect.KType Functions \u00b6 Name Summary keyOf fun <T : Any > keyOf(): Key< T > fun <T : Any > keyOf(a: Annotation ): Key< T >``fun <T : Any > keyOf(a: KClass <out Annotation >?): Key< T > If annotation is not null, returns a key for @Annotation T, otherwise a key for T. listOfType fun <T> listOfType(elementType: TypeLiteral< T >): TypeLiteral< List < T >> fun <T : Any > listOfType(elementType: KClass < T >): TypeLiteral< List < T >> fun <T : Any > listOfType(): TypeLiteral< List < T >> mapOfType fun <K : Any , V : Any > mapOfType(): TypeLiteral< Map < K , V >> fun <K : Any , V : Any > mapOfType(keyType: KClass < K >, valueType: KClass < V >): TypeLiteral< Map < K , V >> fun <K, V> mapOfType(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >): TypeLiteral< Map < K , V >> parameterizedType fun <T : Any > parameterizedType(vararg typeParameters: Type ): ParameterizedType setOfType fun <T> setOfType(elementType: TypeLiteral< T >): TypeLiteral< Set < T >> fun <T : Any > setOfType(elementType: KClass < T >): TypeLiteral< Set < T >> fun <T : Any > setOfType(): TypeLiteral< Set < T >> subtypeOf fun <T : Any > subtypeOf(): WildcardType uninject fun uninject(target: Any ): Unit","title":"Package misk.inject - Misk"},{"location":"0.x/misk-inject/misk.inject/index.html#package-miskinject","text":"","title":"Package misk.inject"},{"location":"0.x/misk-inject/misk.inject/index.html#types","text":"Name Summary KAbstractModule abstract class KAbstractModule : AbstractModule A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java.","title":"Types"},{"location":"0.x/misk-inject/misk.inject/index.html#extensions-for-external-classes","text":"Name Summary com.google.inject.binder.ScopedBindingBuilder com.google.inject.Injector com.google.inject.TypeLiteral java.lang.reflect.Type kotlin.reflect.KClass kotlin.reflect.KType","title":"Extensions for External Classes"},{"location":"0.x/misk-inject/misk.inject/index.html#functions","text":"Name Summary keyOf fun <T : Any > keyOf(): Key< T > fun <T : Any > keyOf(a: Annotation ): Key< T >``fun <T : Any > keyOf(a: KClass <out Annotation >?): Key< T > If annotation is not null, returns a key for @Annotation T, otherwise a key for T. listOfType fun <T> listOfType(elementType: TypeLiteral< T >): TypeLiteral< List < T >> fun <T : Any > listOfType(elementType: KClass < T >): TypeLiteral< List < T >> fun <T : Any > listOfType(): TypeLiteral< List < T >> mapOfType fun <K : Any , V : Any > mapOfType(): TypeLiteral< Map < K , V >> fun <K : Any , V : Any > mapOfType(keyType: KClass < K >, valueType: KClass < V >): TypeLiteral< Map < K , V >> fun <K, V> mapOfType(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >): TypeLiteral< Map < K , V >> parameterizedType fun <T : Any > parameterizedType(vararg typeParameters: Type ): ParameterizedType setOfType fun <T> setOfType(elementType: TypeLiteral< T >): TypeLiteral< Set < T >> fun <T : Any > setOfType(elementType: KClass < T >): TypeLiteral< Set < T >> fun <T : Any > setOfType(): TypeLiteral< Set < T >> subtypeOf fun <T : Any > subtypeOf(): WildcardType uninject fun uninject(target: Any ): Unit","title":"Functions"},{"location":"0.x/misk-inject/misk.inject/key-of.html","text":"misk-inject / misk.inject / keyOf keyOf \u00b6 inline fun <reified T : Any > keyOf(): Key< T > inline fun <reified T : Any > keyOf(a: Annotation ): Key< T >``inline fun <reified T : Any > keyOf(a: KClass <out Annotation >?): Key< T > If annotation is not null, returns a key for @Annotation T, otherwise a key for T.","title":"keyOf - Misk"},{"location":"0.x/misk-inject/misk.inject/key-of.html#keyof","text":"inline fun <reified T : Any > keyOf(): Key< T > inline fun <reified T : Any > keyOf(a: Annotation ): Key< T >``inline fun <reified T : Any > keyOf(a: KClass <out Annotation >?): Key< T > If annotation is not null, returns a key for @Annotation T, otherwise a key for T.","title":"keyOf"},{"location":"0.x/misk-inject/misk.inject/list-of-type.html","text":"misk-inject / misk.inject / listOfType listOfType \u00b6 fun <T> listOfType(elementType: TypeLiteral< T >): TypeLiteral< List < T >> fun <T : Any > listOfType(elementType: KClass < T >): TypeLiteral< List < T >> inline fun <reified T : Any > listOfType(): TypeLiteral< List < T >>","title":"listOfType - Misk"},{"location":"0.x/misk-inject/misk.inject/list-of-type.html#listoftype","text":"fun <T> listOfType(elementType: TypeLiteral< T >): TypeLiteral< List < T >> fun <T : Any > listOfType(elementType: KClass < T >): TypeLiteral< List < T >> inline fun <reified T : Any > listOfType(): TypeLiteral< List < T >>","title":"listOfType"},{"location":"0.x/misk-inject/misk.inject/map-of-type.html","text":"misk-inject / misk.inject / mapOfType mapOfType \u00b6 inline fun <reified K : Any , reified V : Any > mapOfType(): TypeLiteral< Map < K , V >> fun <K : Any , V : Any > mapOfType(keyType: KClass < K >, valueType: KClass < V >): TypeLiteral< Map < K , V >> fun <K, V> mapOfType(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >): TypeLiteral< Map < K , V >>","title":"mapOfType - Misk"},{"location":"0.x/misk-inject/misk.inject/map-of-type.html#mapoftype","text":"inline fun <reified K : Any , reified V : Any > mapOfType(): TypeLiteral< Map < K , V >> fun <K : Any , V : Any > mapOfType(keyType: KClass < K >, valueType: KClass < V >): TypeLiteral< Map < K , V >> fun <K, V> mapOfType(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >): TypeLiteral< Map < K , V >>","title":"mapOfType"},{"location":"0.x/misk-inject/misk.inject/parameterized-type.html","text":"misk-inject / misk.inject / parameterizedType parameterizedType \u00b6 inline fun <reified T : Any > parameterizedType(vararg typeParameters: Type ): ParameterizedType","title":"parameterizedType - Misk"},{"location":"0.x/misk-inject/misk.inject/parameterized-type.html#parameterizedtype","text":"inline fun <reified T : Any > parameterizedType(vararg typeParameters: Type ): ParameterizedType","title":"parameterizedType"},{"location":"0.x/misk-inject/misk.inject/set-of-type.html","text":"misk-inject / misk.inject / setOfType setOfType \u00b6 fun <T> setOfType(elementType: TypeLiteral< T >): TypeLiteral< Set < T >> fun <T : Any > setOfType(elementType: KClass < T >): TypeLiteral< Set < T >> inline fun <reified T : Any > setOfType(): TypeLiteral< Set < T >>","title":"setOfType - Misk"},{"location":"0.x/misk-inject/misk.inject/set-of-type.html#setoftype","text":"fun <T> setOfType(elementType: TypeLiteral< T >): TypeLiteral< Set < T >> fun <T : Any > setOfType(elementType: KClass < T >): TypeLiteral< Set < T >> inline fun <reified T : Any > setOfType(): TypeLiteral< Set < T >>","title":"setOfType"},{"location":"0.x/misk-inject/misk.inject/subtype-of.html","text":"misk-inject / misk.inject / subtypeOf subtypeOf \u00b6 inline fun <reified T : Any > subtypeOf(): WildcardType","title":"subtypeOf - Misk"},{"location":"0.x/misk-inject/misk.inject/subtype-of.html#subtypeof","text":"inline fun <reified T : Any > subtypeOf(): WildcardType","title":"subtypeOf"},{"location":"0.x/misk-inject/misk.inject/uninject.html","text":"misk-inject / misk.inject / uninject uninject \u00b6 fun uninject(target: Any ): Unit","title":"uninject - Misk"},{"location":"0.x/misk-inject/misk.inject/uninject.html#uninject","text":"fun uninject(target: Any ): Unit","title":"uninject"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/index.html","text":"misk-inject / misk.inject / KAbstractModule KAbstractModule \u00b6 abstract class KAbstractModule : AbstractModule A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. The more Kotlin friendly API allows calls like: bind(Foo::class.java).to(RealFoo::class.java) To be rewritten as: bind<Foo>().to<RealFoo>() Types \u00b6 Name Summary KotlinAnnotatedBindingBuilder class KotlinAnnotatedBindingBuilder<X> : AnnotatedBindingBuilder< X > Constructors \u00b6 Name Summary <init> KAbstractModule() A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. Functions \u00b6 Name Summary bind fun <T : Any > bind(): KAbstractModule.KotlinAnnotatedBindingBuilder <in T > binder open fun binder(): Binder multibind fun <T : Any > multibind(annotation: KClass <out Annotation >? = null): LinkedBindingBuilder< T > fun <T : Any , A : Annotation > multibind(): LinkedBindingBuilder< T > newMapBinder fun <K : Any , V : Any > newMapBinder(annotation: KClass <out Annotation >? = null): MapBinder< K , V > fun <K : Any , V : Any > newMapBinder(keyType: KClass < K >, valueType: KClass < V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V > fun <K : Any , V : Any > newMapBinder(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V > newMultibinder fun <T : Any > newMultibinder(annotation: KClass <out Annotation >? = null): Multibinder< T > fun <T : Any > newMultibinder(type: KClass < T >, annotation: KClass <out Annotation >? = null): Multibinder< T > requireBinding fun <T : Any > requireBinding(): Unit to fun <T : Any > LinkedBindingBuilder<in T >.to(): ScopedBindingBuilder","title":"KAbstractModule - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/index.html#kabstractmodule","text":"abstract class KAbstractModule : AbstractModule A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. The more Kotlin friendly API allows calls like: bind(Foo::class.java).to(RealFoo::class.java) To be rewritten as: bind<Foo>().to<RealFoo>()","title":"KAbstractModule"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/index.html#types","text":"Name Summary KotlinAnnotatedBindingBuilder class KotlinAnnotatedBindingBuilder<X> : AnnotatedBindingBuilder< X >","title":"Types"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/index.html#constructors","text":"Name Summary <init> KAbstractModule() A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java.","title":"Constructors"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/index.html#functions","text":"Name Summary bind fun <T : Any > bind(): KAbstractModule.KotlinAnnotatedBindingBuilder <in T > binder open fun binder(): Binder multibind fun <T : Any > multibind(annotation: KClass <out Annotation >? = null): LinkedBindingBuilder< T > fun <T : Any , A : Annotation > multibind(): LinkedBindingBuilder< T > newMapBinder fun <K : Any , V : Any > newMapBinder(annotation: KClass <out Annotation >? = null): MapBinder< K , V > fun <K : Any , V : Any > newMapBinder(keyType: KClass < K >, valueType: KClass < V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V > fun <K : Any , V : Any > newMapBinder(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V > newMultibinder fun <T : Any > newMultibinder(annotation: KClass <out Annotation >? = null): Multibinder< T > fun <T : Any > newMultibinder(type: KClass < T >, annotation: KClass <out Annotation >? = null): Multibinder< T > requireBinding fun <T : Any > requireBinding(): Unit to fun <T : Any > LinkedBindingBuilder<in T >.to(): ScopedBindingBuilder","title":"Functions"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-init-.html","text":"misk-inject / misk.inject / KAbstractModule / <init> <init> \u00b6 KAbstractModule() A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. The more Kotlin friendly API allows calls like: bind(Foo::class.java).to(RealFoo::class.java) To be rewritten as: bind<Foo>().to<RealFoo>()","title":" init "},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-init-.html#init","text":"KAbstractModule() A class that provides helper methods for working with Kotlin and Guice, allowing implementing classes to operate in the Kotlin type system rather than converting to Java. The more Kotlin friendly API allows calls like: bind(Foo::class.java).to(RealFoo::class.java) To be rewritten as: bind<Foo>().to<RealFoo>()","title":"&lt;init&gt;"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/bind.html","text":"misk-inject / misk.inject / KAbstractModule / bind bind \u00b6 protected inline fun <reified T : Any > bind(): KAbstractModule.KotlinAnnotatedBindingBuilder <in T >","title":"bind - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/bind.html#bind","text":"protected inline fun <reified T : Any > bind(): KAbstractModule.KotlinAnnotatedBindingBuilder <in T >","title":"bind"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/binder.html","text":"misk-inject / misk.inject / KAbstractModule / binder binder \u00b6 protected open fun binder(): Binder","title":"binder - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/binder.html#binder","text":"protected open fun binder(): Binder","title":"binder"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/multibind.html","text":"misk-inject / misk.inject / KAbstractModule / multibind multibind \u00b6 protected inline fun <reified T : Any > multibind(annotation: KClass <out Annotation >? = null): LinkedBindingBuilder< T > protected inline fun <reified T : Any , reified A : Annotation > multibind(): LinkedBindingBuilder< T >","title":"multibind - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/multibind.html#multibind","text":"protected inline fun <reified T : Any > multibind(annotation: KClass <out Annotation >? = null): LinkedBindingBuilder< T > protected inline fun <reified T : Any , reified A : Annotation > multibind(): LinkedBindingBuilder< T >","title":"multibind"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/new-map-binder.html","text":"misk-inject / misk.inject / KAbstractModule / newMapBinder newMapBinder \u00b6 protected inline fun <reified K : Any , reified V : Any > newMapBinder(annotation: KClass <out Annotation >? = null): MapBinder< K , V > protected fun <K : Any , V : Any > newMapBinder(keyType: KClass < K >, valueType: KClass < V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V > protected fun <K : Any , V : Any > newMapBinder(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V >","title":"newMapBinder - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/new-map-binder.html#newmapbinder","text":"protected inline fun <reified K : Any , reified V : Any > newMapBinder(annotation: KClass <out Annotation >? = null): MapBinder< K , V > protected fun <K : Any , V : Any > newMapBinder(keyType: KClass < K >, valueType: KClass < V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V > protected fun <K : Any , V : Any > newMapBinder(keyType: TypeLiteral< K >, valueType: TypeLiteral< V >, annotation: KClass <out Annotation >? = null): MapBinder< K , V >","title":"newMapBinder"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/new-multibinder.html","text":"misk-inject / misk.inject / KAbstractModule / newMultibinder newMultibinder \u00b6 protected inline fun <reified T : Any > newMultibinder(annotation: KClass <out Annotation >? = null): Multibinder< T > protected fun <T : Any > newMultibinder(type: KClass < T >, annotation: KClass <out Annotation >? = null): Multibinder< T >","title":"newMultibinder - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/new-multibinder.html#newmultibinder","text":"protected inline fun <reified T : Any > newMultibinder(annotation: KClass <out Annotation >? = null): Multibinder< T > protected fun <T : Any > newMultibinder(type: KClass < T >, annotation: KClass <out Annotation >? = null): Multibinder< T >","title":"newMultibinder"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/require-binding.html","text":"misk-inject / misk.inject / KAbstractModule / requireBinding requireBinding \u00b6 protected inline fun <reified T : Any > requireBinding(): Unit","title":"requireBinding - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/require-binding.html#requirebinding","text":"protected inline fun <reified T : Any > requireBinding(): Unit","title":"requireBinding"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/to.html","text":"misk-inject / misk.inject / KAbstractModule / to to \u00b6 protected inline fun <reified T : Any > LinkedBindingBuilder<in T >.to(): ScopedBindingBuilder","title":"to - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/to.html#to","text":"protected inline fun <reified T : Any > LinkedBindingBuilder<in T >.to(): ScopedBindingBuilder","title":"to"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/index.html","text":"misk-inject / misk.inject / KAbstractModule / KotlinAnnotatedBindingBuilder KotlinAnnotatedBindingBuilder \u00b6 protected class KotlinAnnotatedBindingBuilder<X> : AnnotatedBindingBuilder< X > Constructors \u00b6 Name Summary <init> KotlinAnnotatedBindingBuilder(annotatedBuilder: AnnotatedBindingBuilder< X >) Functions \u00b6 Name Summary annotatedWith fun <T : Annotation > annotatedWith(): LinkedBindingBuilder< X >","title":"KotlinAnnotatedBindingBuilder - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/index.html#kotlinannotatedbindingbuilder","text":"protected class KotlinAnnotatedBindingBuilder<X> : AnnotatedBindingBuilder< X >","title":"KotlinAnnotatedBindingBuilder"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/index.html#constructors","text":"Name Summary <init> KotlinAnnotatedBindingBuilder(annotatedBuilder: AnnotatedBindingBuilder< X >)","title":"Constructors"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/index.html#functions","text":"Name Summary annotatedWith fun <T : Annotation > annotatedWith(): LinkedBindingBuilder< X >","title":"Functions"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/-init-.html","text":"misk-inject / misk.inject / KAbstractModule / KotlinAnnotatedBindingBuilder / <init> <init> \u00b6 KotlinAnnotatedBindingBuilder(annotatedBuilder: AnnotatedBindingBuilder< X >)","title":" init "},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/-init-.html#init","text":"KotlinAnnotatedBindingBuilder(annotatedBuilder: AnnotatedBindingBuilder< X >)","title":"&lt;init&gt;"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/annotated-with.html","text":"misk-inject / misk.inject / KAbstractModule / KotlinAnnotatedBindingBuilder / annotatedWith annotatedWith \u00b6 inline fun <reified T : Annotation > annotatedWith(): LinkedBindingBuilder< X >","title":"annotatedWith - Misk"},{"location":"0.x/misk-inject/misk.inject/-k-abstract-module/-kotlin-annotated-binding-builder/annotated-with.html#annotatedwith","text":"inline fun <reified T : Annotation > annotatedWith(): LinkedBindingBuilder< X >","title":"annotatedWith"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-injector/index.html","text":"misk-inject / misk.inject / com.google.inject.Injector Extensions for com.google.inject.Injector \u00b6 Name Summary getInstance fun <T : Any > Injector.getInstance(annotation: Annotation ? = null): T getSetOf fun <T : Any > Injector.getSetOf(type: KClass < T >, annotation: KClass <out Annotation >? = null): Set < T >","title":"Extensions for com.google.inject.Injector - Misk"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-injector/index.html#extensions-for-comgoogleinjectinjector","text":"Name Summary getInstance fun <T : Any > Injector.getInstance(annotation: Annotation ? = null): T getSetOf fun <T : Any > Injector.getSetOf(type: KClass < T >, annotation: KClass <out Annotation >? = null): Set < T >","title":"Extensions for com.google.inject.Injector"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-injector/get-instance.html","text":"misk-inject / misk.inject / com.google.inject.Injector / getInstance getInstance \u00b6 inline fun <reified T : Any > Injector.getInstance(annotation: Annotation ? = null): T","title":"getInstance - Misk"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-injector/get-instance.html#getinstance","text":"inline fun <reified T : Any > Injector.getInstance(annotation: Annotation ? = null): T","title":"getInstance"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-injector/get-set-of.html","text":"misk-inject / misk.inject / com.google.inject.Injector / getSetOf getSetOf \u00b6 fun <T : Any > Injector.getSetOf(type: KClass < T >, annotation: KClass <out Annotation >? = null): Set < T >","title":"getSetOf - Misk"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-injector/get-set-of.html#getsetof","text":"fun <T : Any > Injector.getSetOf(type: KClass < T >, annotation: KClass <out Annotation >? = null): Set < T >","title":"getSetOf"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-type-literal/index.html","text":"misk-inject / misk.inject / com.google.inject.TypeLiteral Extensions for com.google.inject.TypeLiteral \u00b6 Name Summary toKey fun <T : Any > TypeLiteral< T >.toKey(annotation: KClass <out Annotation >? = null): Key< T >","title":"Extensions for com.google.inject.TypeLiteral - Misk"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-type-literal/index.html#extensions-for-comgoogleinjecttypeliteral","text":"Name Summary toKey fun <T : Any > TypeLiteral< T >.toKey(annotation: KClass <out Annotation >? = null): Key< T >","title":"Extensions for com.google.inject.TypeLiteral"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-type-literal/to-key.html","text":"misk-inject / misk.inject / com.google.inject.TypeLiteral / toKey toKey \u00b6 fun <T : Any > TypeLiteral< T >.toKey(annotation: KClass <out Annotation >? = null): Key< T >","title":"toKey - Misk"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.-type-literal/to-key.html#tokey","text":"fun <T : Any > TypeLiteral< T >.toKey(annotation: KClass <out Annotation >? = null): Key< T >","title":"toKey"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.binder.-scoped-binding-builder/index.html","text":"misk-inject / misk.inject / com.google.inject.binder.ScopedBindingBuilder Extensions for com.google.inject.binder.ScopedBindingBuilder \u00b6 Name Summary asSingleton fun ScopedBindingBuilder.asSingleton(): Unit","title":"Extensions for com.google.inject.binder.ScopedBindingBuilder - Misk"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.binder.-scoped-binding-builder/index.html#extensions-for-comgoogleinjectbinderscopedbindingbuilder","text":"Name Summary asSingleton fun ScopedBindingBuilder.asSingleton(): Unit","title":"Extensions for com.google.inject.binder.ScopedBindingBuilder"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.binder.-scoped-binding-builder/as-singleton.html","text":"misk-inject / misk.inject / com.google.inject.binder.ScopedBindingBuilder / asSingleton asSingleton \u00b6 fun ScopedBindingBuilder.asSingleton(): Unit","title":"asSingleton - Misk"},{"location":"0.x/misk-inject/misk.inject/com.google.inject.binder.-scoped-binding-builder/as-singleton.html#assingleton","text":"fun ScopedBindingBuilder.asSingleton(): Unit","title":"asSingleton"},{"location":"0.x/misk-inject/misk.inject/java.lang.reflect.-type/index.html","text":"misk-inject / misk.inject / java.lang.reflect.Type Extensions for java.lang.reflect.Type \u00b6 Name Summary typeLiteral fun Type .typeLiteral(): TypeLiteral<*>","title":"Extensions for java.lang.reflect.Type - Misk"},{"location":"0.x/misk-inject/misk.inject/java.lang.reflect.-type/index.html#extensions-for-javalangreflecttype","text":"Name Summary typeLiteral fun Type .typeLiteral(): TypeLiteral<*>","title":"Extensions for java.lang.reflect.Type"},{"location":"0.x/misk-inject/misk.inject/java.lang.reflect.-type/type-literal.html","text":"misk-inject / misk.inject / java.lang.reflect.Type / typeLiteral typeLiteral \u00b6 fun Type .typeLiteral(): TypeLiteral<*>","title":"typeLiteral - Misk"},{"location":"0.x/misk-inject/misk.inject/java.lang.reflect.-type/type-literal.html#typeliteral","text":"fun Type .typeLiteral(): TypeLiteral<*>","title":"typeLiteral"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-class/index.html","text":"misk-inject / misk.inject / kotlin.reflect.KClass Extensions for kotlin.reflect.KClass \u00b6 Name Summary toKey fun <T : Any > KClass < T >.toKey(qualifier: KClass <out Annotation >? = null): Key< T > typeLiteral fun <T : Any > KClass < T >.typeLiteral(): TypeLiteral< T >","title":"Extensions for kotlin.reflect.KClass - Misk"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-class/index.html#extensions-for-kotlinreflectkclass","text":"Name Summary toKey fun <T : Any > KClass < T >.toKey(qualifier: KClass <out Annotation >? = null): Key< T > typeLiteral fun <T : Any > KClass < T >.typeLiteral(): TypeLiteral< T >","title":"Extensions for kotlin.reflect.KClass"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-class/to-key.html","text":"misk-inject / misk.inject / kotlin.reflect.KClass / toKey toKey \u00b6 fun <T : Any > KClass < T >.toKey(qualifier: KClass <out Annotation >? = null): Key< T >","title":"toKey - Misk"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-class/to-key.html#tokey","text":"fun <T : Any > KClass < T >.toKey(qualifier: KClass <out Annotation >? = null): Key< T >","title":"toKey"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-class/type-literal.html","text":"misk-inject / misk.inject / kotlin.reflect.KClass / typeLiteral typeLiteral \u00b6 fun <T : Any > KClass < T >.typeLiteral(): TypeLiteral< T >","title":"typeLiteral - Misk"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-class/type-literal.html#typeliteral","text":"fun <T : Any > KClass < T >.typeLiteral(): TypeLiteral< T >","title":"typeLiteral"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-type/index.html","text":"misk-inject / misk.inject / kotlin.reflect.KType Extensions for kotlin.reflect.KType \u00b6 Name Summary typeLiteral fun KType .typeLiteral(): TypeLiteral<*>","title":"Extensions for kotlin.reflect.KType - Misk"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-type/index.html#extensions-for-kotlinreflectktype","text":"Name Summary typeLiteral fun KType .typeLiteral(): TypeLiteral<*>","title":"Extensions for kotlin.reflect.KType"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-type/type-literal.html","text":"misk-inject / misk.inject / kotlin.reflect.KType / typeLiteral typeLiteral \u00b6 fun KType .typeLiteral(): TypeLiteral<*>","title":"typeLiteral - Misk"},{"location":"0.x/misk-inject/misk.inject/kotlin.reflect.-k-type/type-literal.html#typeliteral","text":"fun KType .typeLiteral(): TypeLiteral<*>","title":"typeLiteral"},{"location":"0.x/misk-jdbc/index.html","text":"misk-jdbc Packages \u00b6 Name Summary misk.database misk.jdbc misk.vitess Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-jdbc/index.html#packages","text":"Name Summary misk.database misk.jdbc misk.vitess","title":"Packages"},{"location":"0.x/misk-jdbc/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-jdbc/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.jdbc.Check misk.jdbc.CheckDisabler misk.jdbc.CheckException An exception that is thrown when a Check fails. misk.jdbc.Cluster Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology. misk.database.CockroachCluster java.sql.Connection (extensions in package misk.vitess) misk.vitess.CowriteException Thrown when a transaction that writes to multiple entity groups is detected. misk.jdbc.DatabasePool Figures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes. misk.jdbc.DatabaseReadyService Marker interface for indicating that the database is ready. misk.database.DatabaseServer Represents a database server for development/testing generally running in Docker. misk.jdbc.DataSourceCluster misk.jdbc.DataSourceClusterConfig Configuration element for a cluster of DataSources misk.jdbc.DataSourceClustersConfig Top-level configuration element for all datasource clusters misk.jdbc.DataSourceConfig Configuration element for an individual datasource misk.jdbc.DataSourceConnector misk.jdbc.DataSourceDecorator misk.jdbc.DataSourceService Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. misk.jdbc.DataSourceType Defines a type of datasource misk.vitess.Destination misk.database.DockerCockroachCluster misk.database.DockerPostgresServer misk.database.DockerTidbCluster misk.database.DockerVitessCluster misk.vitess.FullScatterException Exception thrown if we use a scatter query that is too wide in the wrong context. misk.jdbc.JdbcModule Binds database connectivity for a qualified data source. This binds the following public types: misk.jdbc.JDBCSession misk.database.Keyspace misk.vitess.Keyspace misk.jdbc.PingDatabaseService Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run. misk.jdbc.PostCommitHookFailedException PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook misk.jdbc.RealDatabasePool misk.jdbc.RealTransacter java.sql.ResultSet (extensions in package misk.jdbc) misk.jdbc.SchemaMigratorService misk.jdbc.Session misk.vitess.Shard misk.jdbc.SpanInjector misk.database.StartDatabaseService All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . misk.database.StartVitessService misk.jdbc.StringBuilderCarrier misk.database.Table misk.jdbc.TableScanException Exception thrown if we execute a query lacking an index. misk.vitess.TabletType misk.database.TidbCluster misk.jdbc.Transacter misk.database.VitessCluster","title":"All Types - Misk"},{"location":"0.x/misk-jdbc/alltypes/index.html#all-types","text":"Name Summary misk.jdbc.Check misk.jdbc.CheckDisabler misk.jdbc.CheckException An exception that is thrown when a Check fails. misk.jdbc.Cluster Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology. misk.database.CockroachCluster java.sql.Connection (extensions in package misk.vitess) misk.vitess.CowriteException Thrown when a transaction that writes to multiple entity groups is detected. misk.jdbc.DatabasePool Figures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes. misk.jdbc.DatabaseReadyService Marker interface for indicating that the database is ready. misk.database.DatabaseServer Represents a database server for development/testing generally running in Docker. misk.jdbc.DataSourceCluster misk.jdbc.DataSourceClusterConfig Configuration element for a cluster of DataSources misk.jdbc.DataSourceClustersConfig Top-level configuration element for all datasource clusters misk.jdbc.DataSourceConfig Configuration element for an individual datasource misk.jdbc.DataSourceConnector misk.jdbc.DataSourceDecorator misk.jdbc.DataSourceService Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. misk.jdbc.DataSourceType Defines a type of datasource misk.vitess.Destination misk.database.DockerCockroachCluster misk.database.DockerPostgresServer misk.database.DockerTidbCluster misk.database.DockerVitessCluster misk.vitess.FullScatterException Exception thrown if we use a scatter query that is too wide in the wrong context. misk.jdbc.JdbcModule Binds database connectivity for a qualified data source. This binds the following public types: misk.jdbc.JDBCSession misk.database.Keyspace misk.vitess.Keyspace misk.jdbc.PingDatabaseService Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run. misk.jdbc.PostCommitHookFailedException PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook misk.jdbc.RealDatabasePool misk.jdbc.RealTransacter java.sql.ResultSet (extensions in package misk.jdbc) misk.jdbc.SchemaMigratorService misk.jdbc.Session misk.vitess.Shard misk.jdbc.SpanInjector misk.database.StartDatabaseService All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . misk.database.StartVitessService misk.jdbc.StringBuilderCarrier misk.database.Table misk.jdbc.TableScanException Exception thrown if we execute a query lacking an index. misk.vitess.TabletType misk.database.TidbCluster misk.jdbc.Transacter misk.database.VitessCluster","title":"All Types"},{"location":"0.x/misk-jdbc/misk.database/index.html","text":"misk-jdbc / misk.database Package misk.database \u00b6 Types \u00b6 Name Summary CockroachCluster class CockroachCluster DatabaseServer interface DatabaseServer Represents a database server for development/testing generally running in Docker. DockerCockroachCluster class DockerCockroachCluster : DatabaseServer DockerPostgresServer class DockerPostgresServer : DatabaseServer DockerTidbCluster class DockerTidbCluster : DatabaseServer DockerVitessCluster class DockerVitessCluster : DatabaseServer Keyspace class Keyspace StartDatabaseService class StartDatabaseService : AbstractIdleService All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . StartVitessService class StartVitessService Table class Table TidbCluster class TidbCluster VitessCluster class VitessCluster Functions \u00b6 Name Summary runCommand fun runCommand(command: String ): Int","title":"Package misk.database - Misk"},{"location":"0.x/misk-jdbc/misk.database/index.html#package-miskdatabase","text":"","title":"Package misk.database"},{"location":"0.x/misk-jdbc/misk.database/index.html#types","text":"Name Summary CockroachCluster class CockroachCluster DatabaseServer interface DatabaseServer Represents a database server for development/testing generally running in Docker. DockerCockroachCluster class DockerCockroachCluster : DatabaseServer DockerPostgresServer class DockerPostgresServer : DatabaseServer DockerTidbCluster class DockerTidbCluster : DatabaseServer DockerVitessCluster class DockerVitessCluster : DatabaseServer Keyspace class Keyspace StartDatabaseService class StartDatabaseService : AbstractIdleService All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . StartVitessService class StartVitessService Table class Table TidbCluster class TidbCluster VitessCluster class VitessCluster","title":"Types"},{"location":"0.x/misk-jdbc/misk.database/index.html#functions","text":"Name Summary runCommand fun runCommand(command: String ): Int","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/run-command.html","text":"misk-jdbc / misk.database / runCommand runCommand \u00b6 fun runCommand(command: String ): Int","title":"runCommand - Misk"},{"location":"0.x/misk-jdbc/misk.database/run-command.html#runcommand","text":"fun runCommand(command: String ): Int","title":"runCommand"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/index.html","text":"misk-jdbc / misk.database / CockroachCluster CockroachCluster \u00b6 class CockroachCluster Constructors \u00b6 Name Summary <init> CockroachCluster(name: String , config: DataSourceConfig ) Properties \u00b6 Name Summary config val config: DataSourceConfig externalHttpPort val externalHttpPort: Int internalHttpPort val internalHttpPort: Int name val name: String postgresPort val postgresPort: Int Functions \u00b6 Name Summary openConnection fun openConnection(): Connection Connect to vtgate.","title":"CockroachCluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/index.html#cockroachcluster","text":"class CockroachCluster","title":"CockroachCluster"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/index.html#constructors","text":"Name Summary <init> CockroachCluster(name: String , config: DataSourceConfig )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/index.html#properties","text":"Name Summary config val config: DataSourceConfig externalHttpPort val externalHttpPort: Int internalHttpPort val internalHttpPort: Int name val name: String postgresPort val postgresPort: Int","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/index.html#functions","text":"Name Summary openConnection fun openConnection(): Connection Connect to vtgate.","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/-init-.html","text":"misk-jdbc / misk.database / CockroachCluster / <init> <init> \u00b6 CockroachCluster(name: String , config: DataSourceConfig )","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/-init-.html#init","text":"CockroachCluster(name: String , config: DataSourceConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/config.html","text":"misk-jdbc / misk.database / CockroachCluster / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/external-http-port.html","text":"misk-jdbc / misk.database / CockroachCluster / externalHttpPort externalHttpPort \u00b6 val externalHttpPort: Int","title":"externalHttpPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/external-http-port.html#externalhttpport","text":"val externalHttpPort: Int","title":"externalHttpPort"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/internal-http-port.html","text":"misk-jdbc / misk.database / CockroachCluster / internalHttpPort internalHttpPort \u00b6 val internalHttpPort: Int","title":"internalHttpPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/internal-http-port.html#internalhttpport","text":"val internalHttpPort: Int","title":"internalHttpPort"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/name.html","text":"misk-jdbc / misk.database / CockroachCluster / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/open-connection.html","text":"misk-jdbc / misk.database / CockroachCluster / openConnection openConnection \u00b6 fun openConnection(): Connection Connect to vtgate.","title":"openConnection - Misk"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/open-connection.html#openconnection","text":"fun openConnection(): Connection Connect to vtgate.","title":"openConnection"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/postgres-port.html","text":"misk-jdbc / misk.database / CockroachCluster / postgresPort postgresPort \u00b6 val postgresPort: Int","title":"postgresPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-cockroach-cluster/postgres-port.html#postgresport","text":"val postgresPort: Int","title":"postgresPort"},{"location":"0.x/misk-jdbc/misk.database/-database-server/index.html","text":"misk-jdbc / misk.database / DatabaseServer DatabaseServer \u00b6 interface DatabaseServer Represents a database server for development/testing generally running in Docker. Functions \u00b6 Name Summary pullImage abstract fun pullImage(): Unit start abstract fun start(): Unit stop abstract fun stop(): Unit Inheritors \u00b6 Name Summary DockerCockroachCluster class DockerCockroachCluster : DatabaseServer DockerPostgresServer class DockerPostgresServer : DatabaseServer DockerTidbCluster class DockerTidbCluster : DatabaseServer DockerVitessCluster class DockerVitessCluster : DatabaseServer","title":"DatabaseServer - Misk"},{"location":"0.x/misk-jdbc/misk.database/-database-server/index.html#databaseserver","text":"interface DatabaseServer Represents a database server for development/testing generally running in Docker.","title":"DatabaseServer"},{"location":"0.x/misk-jdbc/misk.database/-database-server/index.html#functions","text":"Name Summary pullImage abstract fun pullImage(): Unit start abstract fun start(): Unit stop abstract fun stop(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-database-server/index.html#inheritors","text":"Name Summary DockerCockroachCluster class DockerCockroachCluster : DatabaseServer DockerPostgresServer class DockerPostgresServer : DatabaseServer DockerTidbCluster class DockerTidbCluster : DatabaseServer DockerVitessCluster class DockerVitessCluster : DatabaseServer","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.database/-database-server/pull-image.html","text":"misk-jdbc / misk.database / DatabaseServer / pullImage pullImage \u00b6 abstract fun pullImage(): Unit","title":"pullImage - Misk"},{"location":"0.x/misk-jdbc/misk.database/-database-server/pull-image.html#pullimage","text":"abstract fun pullImage(): Unit","title":"pullImage"},{"location":"0.x/misk-jdbc/misk.database/-database-server/start.html","text":"misk-jdbc / misk.database / DatabaseServer / start start \u00b6 abstract fun start(): Unit","title":"start - Misk"},{"location":"0.x/misk-jdbc/misk.database/-database-server/start.html#start","text":"abstract fun start(): Unit","title":"start"},{"location":"0.x/misk-jdbc/misk.database/-database-server/stop.html","text":"misk-jdbc / misk.database / DatabaseServer / stop stop \u00b6 abstract fun stop(): Unit","title":"stop - Misk"},{"location":"0.x/misk-jdbc/misk.database/-database-server/stop.html#stop","text":"abstract fun stop(): Unit","title":"stop"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html","text":"misk-jdbc / misk.database / DockerCockroachCluster DockerCockroachCluster \u00b6 class DockerCockroachCluster : DatabaseServer Types \u00b6 Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerCockroachCluster.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> DockerCockroachCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient) Properties \u00b6 Name Summary cluster val cluster: CockroachCluster config val config: DataSourceConfig docker val docker: DockerClient moshi val moshi: Moshi name val name: String resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit Companion Object Properties \u00b6 Name Summary CONTAINER_NAME const val CONTAINER_NAME: String IMAGE const val IMAGE: String logger val logger: KLogger SHA const val SHA: String Companion Object Functions \u00b6 Name Summary pullImage fun pullImage(): Unit","title":"DockerCockroachCluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html#dockercockroachcluster","text":"class DockerCockroachCluster : DatabaseServer","title":"DockerCockroachCluster"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html#types","text":"Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerCockroachCluster.LogContainerResultCallback , Frame>","title":"Types"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html#constructors","text":"Name Summary <init> DockerCockroachCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html#properties","text":"Name Summary cluster val cluster: CockroachCluster config val config: DataSourceConfig docker val docker: DockerClient moshi val moshi: Moshi name val name: String resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html#functions","text":"Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html#companion-object-properties","text":"Name Summary CONTAINER_NAME const val CONTAINER_NAME: String IMAGE const val IMAGE: String logger val logger: KLogger SHA const val SHA: String","title":"Companion Object Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/index.html#companion-object-functions","text":"Name Summary pullImage fun pullImage(): Unit","title":"Companion Object Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-c-o-n-t-a-i-n-e-r_-n-a-m-e.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / CONTAINER_NAME CONTAINER_NAME \u00b6 const val CONTAINER_NAME: String","title":"CONTAINER_NAME - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-c-o-n-t-a-i-n-e-r_-n-a-m-e.html#container_name","text":"const val CONTAINER_NAME: String","title":"CONTAINER_NAME"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-i-m-a-g-e.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / IMAGE IMAGE \u00b6 const val IMAGE: String","title":"IMAGE - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-i-m-a-g-e.html#image","text":"const val IMAGE: String","title":"IMAGE"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-init-.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / <init> <init> \u00b6 DockerCockroachCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-init-.html#init","text":"DockerCockroachCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-s-h-a.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / SHA SHA \u00b6 const val SHA: String","title":"SHA - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-s-h-a.html#sha","text":"const val SHA: String","title":"SHA"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/cluster.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / cluster cluster \u00b6 val cluster: CockroachCluster","title":"cluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/cluster.html#cluster","text":"val cluster: CockroachCluster","title":"cluster"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/config.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/docker.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / docker docker \u00b6 val docker: DockerClient","title":"docker - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/docker.html#docker","text":"val docker: DockerClient","title":"docker"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/logger.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/moshi.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/name.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/pull-image.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / pullImage pullImage \u00b6 fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/pull-image.html#pullimage","text":"fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/resource-loader.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/start.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / start start \u00b6 fun start(): Unit Overrides DatabaseServer.start","title":"start - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/start.html#start","text":"fun start(): Unit Overrides DatabaseServer.start","title":"start"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/stop.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / stop stop \u00b6 fun stop(): Unit Overrides DatabaseServer.stop","title":"stop - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/stop.html#stop","text":"fun stop(): Unit Overrides DatabaseServer.stop","title":"stop"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/index.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / LogContainerResultCallback LogContainerResultCallback \u00b6 class LogContainerResultCallback : ResultCallbackTemplate< DockerCockroachCluster.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> LogContainerResultCallback() Functions \u00b6 Name Summary onNext fun onNext(item: Frame): Unit","title":"LogContainerResultCallback - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/index.html#logcontainerresultcallback","text":"class LogContainerResultCallback : ResultCallbackTemplate< DockerCockroachCluster.LogContainerResultCallback , Frame>","title":"LogContainerResultCallback"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/index.html#constructors","text":"Name Summary <init> LogContainerResultCallback()","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/index.html#functions","text":"Name Summary onNext fun onNext(item: Frame): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/-init-.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / LogContainerResultCallback / <init> <init> \u00b6 LogContainerResultCallback()","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/-init-.html#init","text":"LogContainerResultCallback()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/on-next.html","text":"misk-jdbc / misk.database / DockerCockroachCluster / LogContainerResultCallback / onNext onNext \u00b6 fun onNext(item: Frame): Unit","title":"onNext - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-cockroach-cluster/-log-container-result-callback/on-next.html#onnext","text":"fun onNext(item: Frame): Unit","title":"onNext"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html","text":"misk-jdbc / misk.database / DockerPostgresServer DockerPostgresServer \u00b6 class DockerPostgresServer : DatabaseServer Types \u00b6 Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerPostgresServer.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> DockerPostgresServer(config: DataSourceConfig , docker: DockerClient) Properties \u00b6 Name Summary config val config: DataSourceConfig docker val docker: DockerClient Functions \u00b6 Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit Companion Object Properties \u00b6 Name Summary CONTAINER_NAME const val CONTAINER_NAME: String IMAGE const val IMAGE: String logger val logger: KLogger SHA const val SHA: String Companion Object Functions \u00b6 Name Summary pullImage fun pullImage(): Unit","title":"DockerPostgresServer - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html#dockerpostgresserver","text":"class DockerPostgresServer : DatabaseServer","title":"DockerPostgresServer"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html#types","text":"Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerPostgresServer.LogContainerResultCallback , Frame>","title":"Types"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html#constructors","text":"Name Summary <init> DockerPostgresServer(config: DataSourceConfig , docker: DockerClient)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html#properties","text":"Name Summary config val config: DataSourceConfig docker val docker: DockerClient","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html#functions","text":"Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html#companion-object-properties","text":"Name Summary CONTAINER_NAME const val CONTAINER_NAME: String IMAGE const val IMAGE: String logger val logger: KLogger SHA const val SHA: String","title":"Companion Object Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/index.html#companion-object-functions","text":"Name Summary pullImage fun pullImage(): Unit","title":"Companion Object Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-c-o-n-t-a-i-n-e-r_-n-a-m-e.html","text":"misk-jdbc / misk.database / DockerPostgresServer / CONTAINER_NAME CONTAINER_NAME \u00b6 const val CONTAINER_NAME: String","title":"CONTAINER_NAME - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-c-o-n-t-a-i-n-e-r_-n-a-m-e.html#container_name","text":"const val CONTAINER_NAME: String","title":"CONTAINER_NAME"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-i-m-a-g-e.html","text":"misk-jdbc / misk.database / DockerPostgresServer / IMAGE IMAGE \u00b6 const val IMAGE: String","title":"IMAGE - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-i-m-a-g-e.html#image","text":"const val IMAGE: String","title":"IMAGE"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-init-.html","text":"misk-jdbc / misk.database / DockerPostgresServer / <init> <init> \u00b6 DockerPostgresServer(config: DataSourceConfig , docker: DockerClient)","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-init-.html#init","text":"DockerPostgresServer(config: DataSourceConfig , docker: DockerClient)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-s-h-a.html","text":"misk-jdbc / misk.database / DockerPostgresServer / SHA SHA \u00b6 const val SHA: String","title":"SHA - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-s-h-a.html#sha","text":"const val SHA: String","title":"SHA"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/config.html","text":"misk-jdbc / misk.database / DockerPostgresServer / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/docker.html","text":"misk-jdbc / misk.database / DockerPostgresServer / docker docker \u00b6 val docker: DockerClient","title":"docker - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/docker.html#docker","text":"val docker: DockerClient","title":"docker"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/logger.html","text":"misk-jdbc / misk.database / DockerPostgresServer / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/pull-image.html","text":"misk-jdbc / misk.database / DockerPostgresServer / pullImage pullImage \u00b6 fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/pull-image.html#pullimage","text":"fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/start.html","text":"misk-jdbc / misk.database / DockerPostgresServer / start start \u00b6 fun start(): Unit Overrides DatabaseServer.start","title":"start - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/start.html#start","text":"fun start(): Unit Overrides DatabaseServer.start","title":"start"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/stop.html","text":"misk-jdbc / misk.database / DockerPostgresServer / stop stop \u00b6 fun stop(): Unit Overrides DatabaseServer.stop","title":"stop - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/stop.html#stop","text":"fun stop(): Unit Overrides DatabaseServer.stop","title":"stop"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/index.html","text":"misk-jdbc / misk.database / DockerPostgresServer / LogContainerResultCallback LogContainerResultCallback \u00b6 class LogContainerResultCallback : ResultCallbackTemplate< DockerPostgresServer.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> LogContainerResultCallback() Functions \u00b6 Name Summary onNext fun onNext(item: Frame): Unit","title":"LogContainerResultCallback - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/index.html#logcontainerresultcallback","text":"class LogContainerResultCallback : ResultCallbackTemplate< DockerPostgresServer.LogContainerResultCallback , Frame>","title":"LogContainerResultCallback"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/index.html#constructors","text":"Name Summary <init> LogContainerResultCallback()","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/index.html#functions","text":"Name Summary onNext fun onNext(item: Frame): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/-init-.html","text":"misk-jdbc / misk.database / DockerPostgresServer / LogContainerResultCallback / <init> <init> \u00b6 LogContainerResultCallback()","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/-init-.html#init","text":"LogContainerResultCallback()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/on-next.html","text":"misk-jdbc / misk.database / DockerPostgresServer / LogContainerResultCallback / onNext onNext \u00b6 fun onNext(item: Frame): Unit","title":"onNext - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-postgres-server/-log-container-result-callback/on-next.html#onnext","text":"fun onNext(item: Frame): Unit","title":"onNext"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html","text":"misk-jdbc / misk.database / DockerTidbCluster DockerTidbCluster \u00b6 class DockerTidbCluster : DatabaseServer Types \u00b6 Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerTidbCluster.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> DockerTidbCluster(moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient) Properties \u00b6 Name Summary cluster val cluster: TidbCluster config val config: DataSourceConfig docker val docker: DockerClient moshi val moshi: Moshi resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit Companion Object Properties \u00b6 Name Summary CONTAINER_NAME const val CONTAINER_NAME: String IMAGE const val IMAGE: String logger val logger: KLogger SHA const val SHA: String Companion Object Functions \u00b6 Name Summary pullImage fun pullImage(): Unit","title":"DockerTidbCluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html#dockertidbcluster","text":"class DockerTidbCluster : DatabaseServer","title":"DockerTidbCluster"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html#types","text":"Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerTidbCluster.LogContainerResultCallback , Frame>","title":"Types"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html#constructors","text":"Name Summary <init> DockerTidbCluster(moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html#properties","text":"Name Summary cluster val cluster: TidbCluster config val config: DataSourceConfig docker val docker: DockerClient moshi val moshi: Moshi resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html#functions","text":"Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html#companion-object-properties","text":"Name Summary CONTAINER_NAME const val CONTAINER_NAME: String IMAGE const val IMAGE: String logger val logger: KLogger SHA const val SHA: String","title":"Companion Object Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/index.html#companion-object-functions","text":"Name Summary pullImage fun pullImage(): Unit","title":"Companion Object Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-c-o-n-t-a-i-n-e-r_-n-a-m-e.html","text":"misk-jdbc / misk.database / DockerTidbCluster / CONTAINER_NAME CONTAINER_NAME \u00b6 const val CONTAINER_NAME: String","title":"CONTAINER_NAME - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-c-o-n-t-a-i-n-e-r_-n-a-m-e.html#container_name","text":"const val CONTAINER_NAME: String","title":"CONTAINER_NAME"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-i-m-a-g-e.html","text":"misk-jdbc / misk.database / DockerTidbCluster / IMAGE IMAGE \u00b6 const val IMAGE: String","title":"IMAGE - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-i-m-a-g-e.html#image","text":"const val IMAGE: String","title":"IMAGE"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-init-.html","text":"misk-jdbc / misk.database / DockerTidbCluster / <init> <init> \u00b6 DockerTidbCluster(moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-init-.html#init","text":"DockerTidbCluster(moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-s-h-a.html","text":"misk-jdbc / misk.database / DockerTidbCluster / SHA SHA \u00b6 const val SHA: String","title":"SHA - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-s-h-a.html#sha","text":"const val SHA: String","title":"SHA"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/cluster.html","text":"misk-jdbc / misk.database / DockerTidbCluster / cluster cluster \u00b6 val cluster: TidbCluster","title":"cluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/cluster.html#cluster","text":"val cluster: TidbCluster","title":"cluster"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/config.html","text":"misk-jdbc / misk.database / DockerTidbCluster / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/docker.html","text":"misk-jdbc / misk.database / DockerTidbCluster / docker docker \u00b6 val docker: DockerClient","title":"docker - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/docker.html#docker","text":"val docker: DockerClient","title":"docker"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/logger.html","text":"misk-jdbc / misk.database / DockerTidbCluster / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/moshi.html","text":"misk-jdbc / misk.database / DockerTidbCluster / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/pull-image.html","text":"misk-jdbc / misk.database / DockerTidbCluster / pullImage pullImage \u00b6 fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/pull-image.html#pullimage","text":"fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/resource-loader.html","text":"misk-jdbc / misk.database / DockerTidbCluster / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/start.html","text":"misk-jdbc / misk.database / DockerTidbCluster / start start \u00b6 fun start(): Unit Overrides DatabaseServer.start","title":"start - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/start.html#start","text":"fun start(): Unit Overrides DatabaseServer.start","title":"start"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/stop.html","text":"misk-jdbc / misk.database / DockerTidbCluster / stop stop \u00b6 fun stop(): Unit Overrides DatabaseServer.stop","title":"stop - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/stop.html#stop","text":"fun stop(): Unit Overrides DatabaseServer.stop","title":"stop"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/index.html","text":"misk-jdbc / misk.database / DockerTidbCluster / LogContainerResultCallback LogContainerResultCallback \u00b6 class LogContainerResultCallback : ResultCallbackTemplate< DockerTidbCluster.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> LogContainerResultCallback() Functions \u00b6 Name Summary onNext fun onNext(item: Frame): Unit","title":"LogContainerResultCallback - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/index.html#logcontainerresultcallback","text":"class LogContainerResultCallback : ResultCallbackTemplate< DockerTidbCluster.LogContainerResultCallback , Frame>","title":"LogContainerResultCallback"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/index.html#constructors","text":"Name Summary <init> LogContainerResultCallback()","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/index.html#functions","text":"Name Summary onNext fun onNext(item: Frame): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/-init-.html","text":"misk-jdbc / misk.database / DockerTidbCluster / LogContainerResultCallback / <init> <init> \u00b6 LogContainerResultCallback()","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/-init-.html#init","text":"LogContainerResultCallback()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/on-next.html","text":"misk-jdbc / misk.database / DockerTidbCluster / LogContainerResultCallback / onNext onNext \u00b6 fun onNext(item: Frame): Unit","title":"onNext - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-tidb-cluster/-log-container-result-callback/on-next.html#onnext","text":"fun onNext(item: Frame): Unit","title":"onNext"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html","text":"misk-jdbc / misk.database / DockerVitessCluster DockerVitessCluster \u00b6 class DockerVitessCluster : DatabaseServer Types \u00b6 Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerVitessCluster.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> DockerVitessCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient) Properties \u00b6 Name Summary cluster val cluster: VitessCluster config val config: DataSourceConfig docker val docker: DockerClient moshi val moshi: Moshi name val name: String resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit Companion Object Properties \u00b6 Name Summary CONTAINER_NAME_PREFIX const val CONTAINER_NAME_PREFIX: String logger val logger: KLogger VITESS_IMAGE const val VITESS_IMAGE: String VITESS_SHA const val VITESS_SHA: String Companion Object Functions \u00b6 Name Summary pullImage fun pullImage(): Unit startVitessDaemon fun startVitessDaemon(qualifier: KClass <out Annotation >, config: DataSourceConfig ): Unit A helper method to start the Vitess cluster outside of the dev server or test process, to enable rapid iteration. This should be called directly a main() function, for example:","title":"DockerVitessCluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html#dockervitesscluster","text":"class DockerVitessCluster : DatabaseServer","title":"DockerVitessCluster"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html#types","text":"Name Summary LogContainerResultCallback class LogContainerResultCallback : ResultCallbackTemplate< DockerVitessCluster.LogContainerResultCallback , Frame>","title":"Types"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html#constructors","text":"Name Summary <init> DockerVitessCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html#properties","text":"Name Summary cluster val cluster: VitessCluster config val config: DataSourceConfig docker val docker: DockerClient moshi val moshi: Moshi name val name: String resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html#functions","text":"Name Summary pullImage fun pullImage(): Unit start fun start(): Unit stop fun stop(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html#companion-object-properties","text":"Name Summary CONTAINER_NAME_PREFIX const val CONTAINER_NAME_PREFIX: String logger val logger: KLogger VITESS_IMAGE const val VITESS_IMAGE: String VITESS_SHA const val VITESS_SHA: String","title":"Companion Object Properties"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/index.html#companion-object-functions","text":"Name Summary pullImage fun pullImage(): Unit startVitessDaemon fun startVitessDaemon(qualifier: KClass <out Annotation >, config: DataSourceConfig ): Unit A helper method to start the Vitess cluster outside of the dev server or test process, to enable rapid iteration. This should be called directly a main() function, for example:","title":"Companion Object Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-c-o-n-t-a-i-n-e-r_-n-a-m-e_-p-r-e-f-i-x.html","text":"misk-jdbc / misk.database / DockerVitessCluster / CONTAINER_NAME_PREFIX CONTAINER_NAME_PREFIX \u00b6 const val CONTAINER_NAME_PREFIX: String","title":"CONTAINER_NAME_PREFIX - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-c-o-n-t-a-i-n-e-r_-n-a-m-e_-p-r-e-f-i-x.html#container_name_prefix","text":"const val CONTAINER_NAME_PREFIX: String","title":"CONTAINER_NAME_PREFIX"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-init-.html","text":"misk-jdbc / misk.database / DockerVitessCluster / <init> <init> \u00b6 DockerVitessCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-init-.html#init","text":"DockerVitessCluster(name: String , moshi: Moshi, resourceLoader: ResourceLoader, config: DataSourceConfig , docker: DockerClient)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-v-i-t-e-s-s_-i-m-a-g-e.html","text":"misk-jdbc / misk.database / DockerVitessCluster / VITESS_IMAGE VITESS_IMAGE \u00b6 const val VITESS_IMAGE: String","title":"VITESS_IMAGE - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-v-i-t-e-s-s_-i-m-a-g-e.html#vitess_image","text":"const val VITESS_IMAGE: String","title":"VITESS_IMAGE"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-v-i-t-e-s-s_-s-h-a.html","text":"misk-jdbc / misk.database / DockerVitessCluster / VITESS_SHA VITESS_SHA \u00b6 const val VITESS_SHA: String","title":"VITESS_SHA - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-v-i-t-e-s-s_-s-h-a.html#vitess_sha","text":"const val VITESS_SHA: String","title":"VITESS_SHA"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/cluster.html","text":"misk-jdbc / misk.database / DockerVitessCluster / cluster cluster \u00b6 val cluster: VitessCluster","title":"cluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/cluster.html#cluster","text":"val cluster: VitessCluster","title":"cluster"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/config.html","text":"misk-jdbc / misk.database / DockerVitessCluster / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/docker.html","text":"misk-jdbc / misk.database / DockerVitessCluster / docker docker \u00b6 val docker: DockerClient","title":"docker - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/docker.html#docker","text":"val docker: DockerClient","title":"docker"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/logger.html","text":"misk-jdbc / misk.database / DockerVitessCluster / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/moshi.html","text":"misk-jdbc / misk.database / DockerVitessCluster / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/name.html","text":"misk-jdbc / misk.database / DockerVitessCluster / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/pull-image.html","text":"misk-jdbc / misk.database / DockerVitessCluster / pullImage pullImage \u00b6 fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/pull-image.html#pullimage","text":"fun pullImage(): Unit Overrides DatabaseServer.pullImage fun pullImage(): Unit","title":"pullImage"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/resource-loader.html","text":"misk-jdbc / misk.database / DockerVitessCluster / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/start-vitess-daemon.html","text":"misk-jdbc / misk.database / DockerVitessCluster / startVitessDaemon startVitessDaemon \u00b6 fun startVitessDaemon(qualifier: KClass <out Annotation >, config: DataSourceConfig ): Unit A helper method to start the Vitess cluster outside of the dev server or test process, to enable rapid iteration. This should be called directly a main() function, for example: MyAppVitessDaemon.kt: fun main() { val config = MiskConfig.load(\u201cmyapp\u201d, Environment.TESTING) startVitessDaemon(MyAppDb::class, config.data_source_clusters.values.first().writer) }","title":"startVitessDaemon - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/start-vitess-daemon.html#startvitessdaemon","text":"fun startVitessDaemon(qualifier: KClass <out Annotation >, config: DataSourceConfig ): Unit A helper method to start the Vitess cluster outside of the dev server or test process, to enable rapid iteration. This should be called directly a main() function, for example: MyAppVitessDaemon.kt: fun main() { val config = MiskConfig.load(\u201cmyapp\u201d, Environment.TESTING) startVitessDaemon(MyAppDb::class, config.data_source_clusters.values.first().writer) }","title":"startVitessDaemon"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/start.html","text":"misk-jdbc / misk.database / DockerVitessCluster / start start \u00b6 fun start(): Unit Overrides DatabaseServer.start","title":"start - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/start.html#start","text":"fun start(): Unit Overrides DatabaseServer.start","title":"start"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/stop.html","text":"misk-jdbc / misk.database / DockerVitessCluster / stop stop \u00b6 fun stop(): Unit Overrides DatabaseServer.stop","title":"stop - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/stop.html#stop","text":"fun stop(): Unit Overrides DatabaseServer.stop","title":"stop"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/index.html","text":"misk-jdbc / misk.database / DockerVitessCluster / LogContainerResultCallback LogContainerResultCallback \u00b6 class LogContainerResultCallback : ResultCallbackTemplate< DockerVitessCluster.LogContainerResultCallback , Frame> Constructors \u00b6 Name Summary <init> LogContainerResultCallback() Functions \u00b6 Name Summary onNext fun onNext(item: Frame): Unit","title":"LogContainerResultCallback - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/index.html#logcontainerresultcallback","text":"class LogContainerResultCallback : ResultCallbackTemplate< DockerVitessCluster.LogContainerResultCallback , Frame>","title":"LogContainerResultCallback"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/index.html#constructors","text":"Name Summary <init> LogContainerResultCallback()","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/index.html#functions","text":"Name Summary onNext fun onNext(item: Frame): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/-init-.html","text":"misk-jdbc / misk.database / DockerVitessCluster / LogContainerResultCallback / <init> <init> \u00b6 LogContainerResultCallback()","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/-init-.html#init","text":"LogContainerResultCallback()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/on-next.html","text":"misk-jdbc / misk.database / DockerVitessCluster / LogContainerResultCallback / onNext onNext \u00b6 fun onNext(item: Frame): Unit","title":"onNext - Misk"},{"location":"0.x/misk-jdbc/misk.database/-docker-vitess-cluster/-log-container-result-callback/on-next.html#onnext","text":"fun onNext(item: Frame): Unit","title":"onNext"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/index.html","text":"misk-jdbc / misk.database / Keyspace Keyspace \u00b6 class Keyspace Constructors \u00b6 Name Summary <init> Keyspace(sharded: Boolean , tables: Map < String , Table >) Properties \u00b6 Name Summary sharded val sharded: Boolean tables val tables: Map < String , Table > Functions \u00b6 Name Summary shardCount fun shardCount(): Int","title":"Keyspace - Misk"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/index.html#keyspace","text":"class Keyspace","title":"Keyspace"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/index.html#constructors","text":"Name Summary <init> Keyspace(sharded: Boolean , tables: Map < String , Table >)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/index.html#properties","text":"Name Summary sharded val sharded: Boolean tables val tables: Map < String , Table >","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/index.html#functions","text":"Name Summary shardCount fun shardCount(): Int","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/-init-.html","text":"misk-jdbc / misk.database / Keyspace / <init> <init> \u00b6 Keyspace(sharded: Boolean , tables: Map < String , Table >)","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-keyspace/-init-.html#init","text":"Keyspace(sharded: Boolean , tables: Map < String , Table >)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/shard-count.html","text":"misk-jdbc / misk.database / Keyspace / shardCount shardCount \u00b6 fun shardCount(): Int","title":"shardCount - Misk"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/shard-count.html#shardcount","text":"fun shardCount(): Int","title":"shardCount"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/sharded.html","text":"misk-jdbc / misk.database / Keyspace / sharded sharded \u00b6 val sharded: Boolean","title":"sharded - Misk"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/sharded.html#sharded","text":"val sharded: Boolean","title":"sharded"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/tables.html","text":"misk-jdbc / misk.database / Keyspace / tables tables \u00b6 val tables: Map < String , Table >","title":"tables - Misk"},{"location":"0.x/misk-jdbc/misk.database/-keyspace/tables.html#tables","text":"val tables: Map < String , Table >","title":"tables"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/index.html","text":"misk-jdbc / misk.database / StartDatabaseService StartDatabaseService \u00b6 class StartDatabaseService : AbstractIdleService All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . On startup, the service will look for a cluster in the cache, and if not found, look for it in Docker by container name, or as a last resort start the container itself. On shutdown, the cache is invalidated by a JVM shutdown hook. On invalidation, the cache will call the each entry\u2019s stop() method. If the cluster container was created in this JVM, it will be stopped and removed. Otherwise (if the container was started by a different process), it will be left running. Types \u00b6 Name Summary CacheKey data class CacheKey Constructors \u00b6 Name Summary <init> StartDatabaseService(qualifier: KClass <out Annotation >, deployment: Deployment, config: DataSourceConfig ) All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . Properties \u00b6 Name Summary server var server: DatabaseServer ? Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit Companion Object Properties \u00b6 Name Summary docker val docker: DockerClient logger val logger: KLogger moshi val moshi: Moshi! servers val servers: LoadingCache< StartDatabaseService.CacheKey , Optional < DatabaseServer >> Global cache of running database servers.","title":"StartDatabaseService - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/index.html#startdatabaseservice","text":"class StartDatabaseService : AbstractIdleService All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . On startup, the service will look for a cluster in the cache, and if not found, look for it in Docker by container name, or as a last resort start the container itself. On shutdown, the cache is invalidated by a JVM shutdown hook. On invalidation, the cache will call the each entry\u2019s stop() method. If the cluster container was created in this JVM, it will be stopped and removed. Otherwise (if the container was started by a different process), it will be left running.","title":"StartDatabaseService"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/index.html#types","text":"Name Summary CacheKey data class CacheKey","title":"Types"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/index.html#constructors","text":"Name Summary <init> StartDatabaseService(qualifier: KClass <out Annotation >, deployment: Deployment, config: DataSourceConfig ) All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster .","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/index.html#properties","text":"Name Summary server var server: DatabaseServer ?","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/index.html#companion-object-properties","text":"Name Summary docker val docker: DockerClient logger val logger: KLogger moshi val moshi: Moshi! servers val servers: LoadingCache< StartDatabaseService.CacheKey , Optional < DatabaseServer >> Global cache of running database servers.","title":"Companion Object Properties"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-init-.html","text":"misk-jdbc / misk.database / StartDatabaseService / <init> <init> \u00b6 StartDatabaseService(qualifier: KClass <out Annotation >, deployment: Deployment, config: DataSourceConfig ) All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . On startup, the service will look for a cluster in the cache, and if not found, look for it in Docker by container name, or as a last resort start the container itself. On shutdown, the cache is invalidated by a JVM shutdown hook. On invalidation, the cache will call the each entry\u2019s stop() method. If the cluster container was created in this JVM, it will be stopped and removed. Otherwise (if the container was started by a different process), it will be left running.","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-init-.html#init","text":"StartDatabaseService(qualifier: KClass <out Annotation >, deployment: Deployment, config: DataSourceConfig ) All Vitess clusters used by the app/test are tracked in a global cache as a DockerVitessCluster . On startup, the service will look for a cluster in the cache, and if not found, look for it in Docker by container name, or as a last resort start the container itself. On shutdown, the cache is invalidated by a JVM shutdown hook. On invalidation, the cache will call the each entry\u2019s stop() method. If the cluster container was created in this JVM, it will be stopped and removed. Otherwise (if the container was started by a different process), it will be left running.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/docker.html","text":"misk-jdbc / misk.database / StartDatabaseService / docker docker \u00b6 val docker: DockerClient","title":"docker - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/docker.html#docker","text":"val docker: DockerClient","title":"docker"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/logger.html","text":"misk-jdbc / misk.database / StartDatabaseService / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/moshi.html","text":"misk-jdbc / misk.database / StartDatabaseService / moshi moshi \u00b6 val moshi: Moshi!","title":"moshi - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/moshi.html#moshi","text":"val moshi: Moshi!","title":"moshi"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/server.html","text":"misk-jdbc / misk.database / StartDatabaseService / server server \u00b6 var server: DatabaseServer ?","title":"server - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/server.html#server","text":"var server: DatabaseServer ?","title":"server"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/servers.html","text":"misk-jdbc / misk.database / StartDatabaseService / servers servers \u00b6 val servers: LoadingCache< StartDatabaseService.CacheKey , Optional < DatabaseServer >> Global cache of running database servers.","title":"servers - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/servers.html#servers","text":"val servers: LoadingCache< StartDatabaseService.CacheKey , Optional < DatabaseServer >> Global cache of running database servers.","title":"servers"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/shut-down.html","text":"misk-jdbc / misk.database / StartDatabaseService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/start-up.html","text":"misk-jdbc / misk.database / StartDatabaseService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/index.html","text":"misk-jdbc / misk.database / StartDatabaseService / CacheKey CacheKey \u00b6 data class CacheKey Constructors \u00b6 Name Summary <init> CacheKey(name: String , config: DataSourceConfig , deployment: Deployment) Properties \u00b6 Name Summary config val config: DataSourceConfig deployment val deployment: Deployment name val name: String","title":"CacheKey - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/index.html#cachekey","text":"data class CacheKey","title":"CacheKey"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/index.html#constructors","text":"Name Summary <init> CacheKey(name: String , config: DataSourceConfig , deployment: Deployment)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/index.html#properties","text":"Name Summary config val config: DataSourceConfig deployment val deployment: Deployment name val name: String","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/-init-.html","text":"misk-jdbc / misk.database / StartDatabaseService / CacheKey / <init> <init> \u00b6 CacheKey(name: String , config: DataSourceConfig , deployment: Deployment)","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/-init-.html#init","text":"CacheKey(name: String , config: DataSourceConfig , deployment: Deployment)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/config.html","text":"misk-jdbc / misk.database / StartDatabaseService / CacheKey / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/deployment.html","text":"misk-jdbc / misk.database / StartDatabaseService / CacheKey / deployment deployment \u00b6 val deployment: Deployment","title":"deployment - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/deployment.html#deployment","text":"val deployment: Deployment","title":"deployment"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/name.html","text":"misk-jdbc / misk.database / StartDatabaseService / CacheKey / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-database-service/-cache-key/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc/misk.database/-start-vitess-service/index.html","text":"misk-jdbc / misk.database / StartVitessService StartVitessService \u00b6 class StartVitessService Constructors \u00b6 Name Summary <init> StartVitessService()","title":"StartVitessService - Misk"},{"location":"0.x/misk-jdbc/misk.database/-start-vitess-service/index.html#startvitessservice","text":"class StartVitessService","title":"StartVitessService"},{"location":"0.x/misk-jdbc/misk.database/-start-vitess-service/index.html#constructors","text":"Name Summary <init> StartVitessService()","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-start-vitess-service/-init-.html","text":"misk-jdbc / misk.database / StartVitessService / <init> <init> \u00b6 StartVitessService()","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-start-vitess-service/-init-.html#init","text":"StartVitessService()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-table/index.html","text":"misk-jdbc / misk.database / Table Table \u00b6 class Table Constructors \u00b6 Name Summary <init> Table()","title":"Table - Misk"},{"location":"0.x/misk-jdbc/misk.database/-table/index.html#table","text":"class Table","title":"Table"},{"location":"0.x/misk-jdbc/misk.database/-table/index.html#constructors","text":"Name Summary <init> Table()","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-table/-init-.html","text":"misk-jdbc / misk.database / Table / <init> <init> \u00b6 Table()","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-table/-init-.html#init","text":"Table()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/index.html","text":"misk-jdbc / misk.database / TidbCluster TidbCluster \u00b6 class TidbCluster Constructors \u00b6 Name Summary <init> TidbCluster(resourceLoader: ResourceLoader, config: DataSourceConfig ) Properties \u00b6 Name Summary config val config: DataSourceConfig configDir val configDir: Path httpPort val httpPort: Int mysqlPort val mysqlPort: Int resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary openConnection fun openConnection(): Connection Connect to vtgate.","title":"TidbCluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/index.html#tidbcluster","text":"class TidbCluster","title":"TidbCluster"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/index.html#constructors","text":"Name Summary <init> TidbCluster(resourceLoader: ResourceLoader, config: DataSourceConfig )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/index.html#properties","text":"Name Summary config val config: DataSourceConfig configDir val configDir: Path httpPort val httpPort: Int mysqlPort val mysqlPort: Int resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/index.html#functions","text":"Name Summary openConnection fun openConnection(): Connection Connect to vtgate.","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/-init-.html","text":"misk-jdbc / misk.database / TidbCluster / <init> <init> \u00b6 TidbCluster(resourceLoader: ResourceLoader, config: DataSourceConfig )","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/-init-.html#init","text":"TidbCluster(resourceLoader: ResourceLoader, config: DataSourceConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/config-dir.html","text":"misk-jdbc / misk.database / TidbCluster / configDir configDir \u00b6 val configDir: Path","title":"configDir - Misk"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/config-dir.html#configdir","text":"val configDir: Path","title":"configDir"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/config.html","text":"misk-jdbc / misk.database / TidbCluster / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/http-port.html","text":"misk-jdbc / misk.database / TidbCluster / httpPort httpPort \u00b6 val httpPort: Int","title":"httpPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/http-port.html#httpport","text":"val httpPort: Int","title":"httpPort"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/mysql-port.html","text":"misk-jdbc / misk.database / TidbCluster / mysqlPort mysqlPort \u00b6 val mysqlPort: Int","title":"mysqlPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/mysql-port.html#mysqlport","text":"val mysqlPort: Int","title":"mysqlPort"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/open-connection.html","text":"misk-jdbc / misk.database / TidbCluster / openConnection openConnection \u00b6 fun openConnection(): Connection Connect to vtgate.","title":"openConnection - Misk"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/open-connection.html#openconnection","text":"fun openConnection(): Connection Connect to vtgate.","title":"openConnection"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/resource-loader.html","text":"misk-jdbc / misk.database / TidbCluster / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/misk-jdbc/misk.database/-tidb-cluster/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/index.html","text":"misk-jdbc / misk.database / VitessCluster VitessCluster \u00b6 class VitessCluster Constructors \u00b6 Name Summary <init> VitessCluster(name: String , resourceLoader: ResourceLoader, config: DataSourceConfig `, moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build())` Properties \u00b6 Name Summary config val config: DataSourceConfig configDir val configDir: Path grpcPort val grpcPort: Int httpPort val httpPort: Int keyspaceAdapter val keyspaceAdapter: JsonAdapter< Keyspace !> moshi val moshi: Moshi mysqlPort val mysqlPort: Int name val name: String schemaDir val schemaDir: Path vtgateMysqlPort val vtgateMysqlPort: Int Functions \u00b6 Name Summary keyspaces fun keyspaces(): Map < String , Keyspace > openMysqlConnection fun openMysqlConnection(): Connection ! Connect to the underlying MySQL database, bypassing Vitess entirely. openVtgateConnection fun openVtgateConnection(): Connection ! Connect to vtgate.","title":"VitessCluster - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/index.html#vitesscluster","text":"class VitessCluster","title":"VitessCluster"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/index.html#constructors","text":"Name Summary <init> VitessCluster(name: String , resourceLoader: ResourceLoader, config: DataSourceConfig `, moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build())`","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/index.html#properties","text":"Name Summary config val config: DataSourceConfig configDir val configDir: Path grpcPort val grpcPort: Int httpPort val httpPort: Int keyspaceAdapter val keyspaceAdapter: JsonAdapter< Keyspace !> moshi val moshi: Moshi mysqlPort val mysqlPort: Int name val name: String schemaDir val schemaDir: Path vtgateMysqlPort val vtgateMysqlPort: Int","title":"Properties"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/index.html#functions","text":"Name Summary keyspaces fun keyspaces(): Map < String , Keyspace > openMysqlConnection fun openMysqlConnection(): Connection ! Connect to the underlying MySQL database, bypassing Vitess entirely. openVtgateConnection fun openVtgateConnection(): Connection ! Connect to vtgate.","title":"Functions"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/-init-.html","text":"misk-jdbc / misk.database / VitessCluster / <init> <init> \u00b6 VitessCluster(name: String , resourceLoader: ResourceLoader, config: DataSourceConfig , moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build())","title":" init "},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/-init-.html#init","text":"VitessCluster(name: String , resourceLoader: ResourceLoader, config: DataSourceConfig , moshi: Moshi = Moshi.Builder() .add(KotlinJsonAdapterFactory()) // Added last for lowest precedence. .build())","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/config-dir.html","text":"misk-jdbc / misk.database / VitessCluster / configDir configDir \u00b6 val configDir: Path","title":"configDir - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/config-dir.html#configdir","text":"val configDir: Path","title":"configDir"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/config.html","text":"misk-jdbc / misk.database / VitessCluster / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/grpc-port.html","text":"misk-jdbc / misk.database / VitessCluster / grpcPort grpcPort \u00b6 val grpcPort: Int","title":"grpcPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/grpc-port.html#grpcport","text":"val grpcPort: Int","title":"grpcPort"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/http-port.html","text":"misk-jdbc / misk.database / VitessCluster / httpPort httpPort \u00b6 val httpPort: Int","title":"httpPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/http-port.html#httpport","text":"val httpPort: Int","title":"httpPort"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/keyspace-adapter.html","text":"misk-jdbc / misk.database / VitessCluster / keyspaceAdapter keyspaceAdapter \u00b6 val keyspaceAdapter: JsonAdapter< Keyspace !>","title":"keyspaceAdapter - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/keyspace-adapter.html#keyspaceadapter","text":"val keyspaceAdapter: JsonAdapter< Keyspace !>","title":"keyspaceAdapter"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/keyspaces.html","text":"misk-jdbc / misk.database / VitessCluster / keyspaces keyspaces \u00b6 fun keyspaces(): Map < String , Keyspace >","title":"keyspaces - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/keyspaces.html#keyspaces","text":"fun keyspaces(): Map < String , Keyspace >","title":"keyspaces"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/moshi.html","text":"misk-jdbc / misk.database / VitessCluster / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/mysql-port.html","text":"misk-jdbc / misk.database / VitessCluster / mysqlPort mysqlPort \u00b6 val mysqlPort: Int","title":"mysqlPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/mysql-port.html#mysqlport","text":"val mysqlPort: Int","title":"mysqlPort"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/name.html","text":"misk-jdbc / misk.database / VitessCluster / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/open-mysql-connection.html","text":"misk-jdbc / misk.database / VitessCluster / openMysqlConnection openMysqlConnection \u00b6 fun openMysqlConnection(): Connection ! Connect to the underlying MySQL database, bypassing Vitess entirely.","title":"openMysqlConnection - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/open-mysql-connection.html#openmysqlconnection","text":"fun openMysqlConnection(): Connection ! Connect to the underlying MySQL database, bypassing Vitess entirely.","title":"openMysqlConnection"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/open-vtgate-connection.html","text":"misk-jdbc / misk.database / VitessCluster / openVtgateConnection openVtgateConnection \u00b6 fun openVtgateConnection(): Connection ! Connect to vtgate.","title":"openVtgateConnection - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/open-vtgate-connection.html#openvtgateconnection","text":"fun openVtgateConnection(): Connection ! Connect to vtgate.","title":"openVtgateConnection"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/schema-dir.html","text":"misk-jdbc / misk.database / VitessCluster / schemaDir schemaDir \u00b6 val schemaDir: Path","title":"schemaDir - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/schema-dir.html#schemadir","text":"val schemaDir: Path","title":"schemaDir"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/vtgate-mysql-port.html","text":"misk-jdbc / misk.database / VitessCluster / vtgateMysqlPort vtgateMysqlPort \u00b6 val vtgateMysqlPort: Int","title":"vtgateMysqlPort - Misk"},{"location":"0.x/misk-jdbc/misk.database/-vitess-cluster/vtgate-mysql-port.html#vtgatemysqlport","text":"val vtgateMysqlPort: Int","title":"vtgateMysqlPort"},{"location":"0.x/misk-jdbc/misk.jdbc/index.html","text":"misk-jdbc / misk.jdbc Package misk.jdbc \u00b6 Types \u00b6 Name Summary Check enum class Check CheckDisabler object CheckDisabler Cluster interface Cluster<T> Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology. DatabasePool interface DatabasePool Figures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes. DatabaseReadyService interface DatabaseReadyService : Service Marker interface for indicating that the database is ready. DataSourceCluster class DataSourceCluster : Cluster < DataSource > DataSourceClusterConfig data class DataSourceClusterConfig Configuration element for a cluster of DataSources DataSourceClustersConfig class DataSourceClustersConfig : LinkedHashMap < String , DataSourceClusterConfig >, Config Top-level configuration element for all datasource clusters DataSourceConfig data class DataSourceConfig Configuration element for an individual datasource DataSourceConnector interface DataSourceConnector DataSourceDecorator interface DataSourceDecorator DataSourceService class DataSourceService : AbstractIdleService, DataSourceConnector , Provider< DataSource > Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. DataSourceType enum class DataSourceType Defines a type of datasource JdbcModule class JdbcModule : KAbstractModule Binds database connectivity for a qualified data source. This binds the following public types: JDBCSession class JDBCSession : Session PingDatabaseService class PingDatabaseService : AbstractIdleService Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run. RealDatabasePool object RealDatabasePool : DatabasePool RealTransacter class RealTransacter : Transacter SchemaMigratorService class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService Session interface Session SpanInjector class SpanInjector : QueryTransformer, DataSourceDecorator StringBuilderCarrier class StringBuilderCarrier : TextMap Transacter interface Transacter Exceptions \u00b6 Name Summary CheckException open class CheckException : SQLException An exception that is thrown when a Check fails. PostCommitHookFailedException class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook TableScanException class TableScanException : CheckException Exception thrown if we execute a query lacking an index. Extensions for External Classes \u00b6 Name Summary java.sql.ResultSet","title":"Package misk.jdbc - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/index.html#package-miskjdbc","text":"","title":"Package misk.jdbc"},{"location":"0.x/misk-jdbc/misk.jdbc/index.html#types","text":"Name Summary Check enum class Check CheckDisabler object CheckDisabler Cluster interface Cluster<T> Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology. DatabasePool interface DatabasePool Figures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes. DatabaseReadyService interface DatabaseReadyService : Service Marker interface for indicating that the database is ready. DataSourceCluster class DataSourceCluster : Cluster < DataSource > DataSourceClusterConfig data class DataSourceClusterConfig Configuration element for a cluster of DataSources DataSourceClustersConfig class DataSourceClustersConfig : LinkedHashMap < String , DataSourceClusterConfig >, Config Top-level configuration element for all datasource clusters DataSourceConfig data class DataSourceConfig Configuration element for an individual datasource DataSourceConnector interface DataSourceConnector DataSourceDecorator interface DataSourceDecorator DataSourceService class DataSourceService : AbstractIdleService, DataSourceConnector , Provider< DataSource > Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. DataSourceType enum class DataSourceType Defines a type of datasource JdbcModule class JdbcModule : KAbstractModule Binds database connectivity for a qualified data source. This binds the following public types: JDBCSession class JDBCSession : Session PingDatabaseService class PingDatabaseService : AbstractIdleService Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run. RealDatabasePool object RealDatabasePool : DatabasePool RealTransacter class RealTransacter : Transacter SchemaMigratorService class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService Session interface Session SpanInjector class SpanInjector : QueryTransformer, DataSourceDecorator StringBuilderCarrier class StringBuilderCarrier : TextMap Transacter interface Transacter","title":"Types"},{"location":"0.x/misk-jdbc/misk.jdbc/index.html#exceptions","text":"Name Summary CheckException open class CheckException : SQLException An exception that is thrown when a Check fails. PostCommitHookFailedException class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook TableScanException class TableScanException : CheckException Exception thrown if we execute a query lacking an index.","title":"Exceptions"},{"location":"0.x/misk-jdbc/misk.jdbc/index.html#extensions-for-external-classes","text":"Name Summary java.sql.ResultSet","title":"Extensions for External Classes"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-ready-service.html","text":"misk-jdbc / misk.jdbc / DatabaseReadyService DatabaseReadyService \u00b6 interface DatabaseReadyService : Service Marker interface for indicating that the database is ready. Services that require a database connection should depend on this interface when they are installed in a module. e.g. install(ServiceModule<MoviesService>() .dependsOn<DatabaseReadyService>(Movies::class)) Inheritors \u00b6 Name Summary SchemaMigratorService class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService","title":"DatabaseReadyService - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-ready-service.html#databasereadyservice","text":"interface DatabaseReadyService : Service Marker interface for indicating that the database is ready. Services that require a database connection should depend on this interface when they are installed in a module. e.g. install(ServiceModule<MoviesService>() .dependsOn<DatabaseReadyService>(Movies::class))","title":"DatabaseReadyService"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-ready-service.html#inheritors","text":"Name Summary SchemaMigratorService class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/index.html","text":"misk-jdbc / misk.jdbc / Check Check \u00b6 enum class Check Enum Values \u00b6 Name Summary FULL_SCATTER TABLE_SCAN COWRITE","title":"Check - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/index.html#check","text":"enum class Check","title":"Check"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/index.html#enum-values","text":"Name Summary FULL_SCATTER TABLE_SCAN COWRITE","title":"Enum Values"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/-c-o-w-r-i-t-e.html","text":"misk-jdbc / misk.jdbc / Check / COWRITE COWRITE \u00b6 COWRITE","title":"COWRITE - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/-c-o-w-r-i-t-e.html#cowrite","text":"COWRITE","title":"COWRITE"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/-f-u-l-l_-s-c-a-t-t-e-r.html","text":"misk-jdbc / misk.jdbc / Check / FULL_SCATTER FULL_SCATTER \u00b6 FULL_SCATTER","title":"FULL_SCATTER - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/-f-u-l-l_-s-c-a-t-t-e-r.html#full_scatter","text":"FULL_SCATTER","title":"FULL_SCATTER"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/-t-a-b-l-e_-s-c-a-n.html","text":"misk-jdbc / misk.jdbc / Check / TABLE_SCAN TABLE_SCAN \u00b6 TABLE_SCAN","title":"TABLE_SCAN - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check/-t-a-b-l-e_-s-c-a-n.html#table_scan","text":"TABLE_SCAN","title":"TABLE_SCAN"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/index.html","text":"misk-jdbc / misk.jdbc / CheckDisabler CheckDisabler \u00b6 object CheckDisabler Properties \u00b6 Name Summary disabledChecks val disabledChecks: ThreadLocal < Collection < Check >> Functions \u00b6 Name Summary disableChecks fun <T> disableChecks(checks: Collection < Check >, body: () -> T ): T isCheckEnabled fun isCheckEnabled(check: Check ): Boolean withoutChecks fun <T> withoutChecks(vararg checks: Check , body: () -> T ): T","title":"CheckDisabler - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/index.html#checkdisabler","text":"object CheckDisabler","title":"CheckDisabler"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/index.html#properties","text":"Name Summary disabledChecks val disabledChecks: ThreadLocal < Collection < Check >>","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/index.html#functions","text":"Name Summary disableChecks fun <T> disableChecks(checks: Collection < Check >, body: () -> T ): T isCheckEnabled fun isCheckEnabled(check: Check ): Boolean withoutChecks fun <T> withoutChecks(vararg checks: Check , body: () -> T ): T","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/disable-checks.html","text":"misk-jdbc / misk.jdbc / CheckDisabler / disableChecks disableChecks \u00b6 fun <T> disableChecks(checks: Collection < Check >, body: () -> T ): T","title":"disableChecks - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/disable-checks.html#disablechecks","text":"fun <T> disableChecks(checks: Collection < Check >, body: () -> T ): T","title":"disableChecks"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/disabled-checks.html","text":"misk-jdbc / misk.jdbc / CheckDisabler / disabledChecks disabledChecks \u00b6 val disabledChecks: ThreadLocal < Collection < Check >>","title":"disabledChecks - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/disabled-checks.html#disabledchecks","text":"val disabledChecks: ThreadLocal < Collection < Check >>","title":"disabledChecks"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/is-check-enabled.html","text":"misk-jdbc / misk.jdbc / CheckDisabler / isCheckEnabled isCheckEnabled \u00b6 fun isCheckEnabled(check: Check ): Boolean","title":"isCheckEnabled - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/is-check-enabled.html#ischeckenabled","text":"fun isCheckEnabled(check: Check ): Boolean","title":"isCheckEnabled"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/without-checks.html","text":"misk-jdbc / misk.jdbc / CheckDisabler / withoutChecks withoutChecks \u00b6 fun <T> withoutChecks(vararg checks: Check , body: () -> T ): T","title":"withoutChecks - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-disabler/without-checks.html#withoutchecks","text":"fun <T> withoutChecks(vararg checks: Check , body: () -> T ): T","title":"withoutChecks"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-exception/index.html","text":"misk-jdbc / misk.jdbc / CheckException CheckException \u00b6 open class CheckException : SQLException An exception that is thrown when a Check fails. Constructors \u00b6 Name Summary <init> CheckException(message: String ? = null, cause: Throwable ? = null) An exception that is thrown when a Check fails. Inheritors \u00b6 Name Summary CowriteException class CowriteException : CheckException Thrown when a transaction that writes to multiple entity groups is detected. FullScatterException class FullScatterException : CheckException Exception thrown if we use a scatter query that is too wide in the wrong context. TableScanException class TableScanException : CheckException Exception thrown if we execute a query lacking an index.","title":"CheckException - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-exception/index.html#checkexception","text":"open class CheckException : SQLException An exception that is thrown when a Check fails.","title":"CheckException"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-exception/index.html#constructors","text":"Name Summary <init> CheckException(message: String ? = null, cause: Throwable ? = null) An exception that is thrown when a Check fails.","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-exception/index.html#inheritors","text":"Name Summary CowriteException class CowriteException : CheckException Thrown when a transaction that writes to multiple entity groups is detected. FullScatterException class FullScatterException : CheckException Exception thrown if we use a scatter query that is too wide in the wrong context. TableScanException class TableScanException : CheckException Exception thrown if we execute a query lacking an index.","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-check-exception/-init-.html","text":"misk-jdbc / misk.jdbc / CheckException / <init> <init> \u00b6 CheckException(message: String ? = null, cause: Throwable ? = null) An exception that is thrown when a Check fails.","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-check-exception/-init-.html#init","text":"CheckException(message: String ? = null, cause: Throwable ? = null) An exception that is thrown when a Check fails.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/index.html","text":"misk-jdbc / misk.jdbc / Cluster Cluster \u00b6 interface Cluster<T> Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology. Database clusters are often composed of a Read/Write master instance and a set of Read-Only replica instances. Misk defers management of these replicas to the underlying persistence layer and requires a single addressable endpoint. Examples include a Read-Only DataSource or a Read/Write SessionFactory in Hibernate. N.B. If a Read-Only resource is not provided Misk will default to the Read/Write resource. Properties \u00b6 Name Summary reader abstract val reader: T writer abstract val writer: T Inheritors \u00b6 Name Summary DataSourceCluster class DataSourceCluster : Cluster < DataSource >","title":"Cluster - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/index.html#cluster","text":"interface Cluster<T> Cluster provides a consistent abstraction for interacting with various database-related resources T based on their role in the underlying database topology. Database clusters are often composed of a Read/Write master instance and a set of Read-Only replica instances. Misk defers management of these replicas to the underlying persistence layer and requires a single addressable endpoint. Examples include a Read-Only DataSource or a Read/Write SessionFactory in Hibernate. N.B. If a Read-Only resource is not provided Misk will default to the Read/Write resource.","title":"Cluster"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/index.html#properties","text":"Name Summary reader abstract val reader: T writer abstract val writer: T","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/index.html#inheritors","text":"Name Summary DataSourceCluster class DataSourceCluster : Cluster < DataSource >","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/reader.html","text":"misk-jdbc / misk.jdbc / Cluster / reader reader \u00b6 abstract val reader: T","title":"reader - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/reader.html#reader","text":"abstract val reader: T","title":"reader"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/writer.html","text":"misk-jdbc / misk.jdbc / Cluster / writer writer \u00b6 abstract val writer: T","title":"writer - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-cluster/writer.html#writer","text":"abstract val writer: T","title":"writer"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/index.html","text":"misk-jdbc / misk.jdbc / DataSourceCluster DataSourceCluster \u00b6 class DataSourceCluster : Cluster < DataSource > Constructors \u00b6 Name Summary <init> DataSourceCluster(writer: DataSource , reader: DataSource ) Properties \u00b6 Name Summary reader val reader: DataSource writer val writer: DataSource","title":"DataSourceCluster - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/index.html#datasourcecluster","text":"class DataSourceCluster : Cluster < DataSource >","title":"DataSourceCluster"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/index.html#constructors","text":"Name Summary <init> DataSourceCluster(writer: DataSource , reader: DataSource )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/index.html#properties","text":"Name Summary reader val reader: DataSource writer val writer: DataSource","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/-init-.html","text":"misk-jdbc / misk.jdbc / DataSourceCluster / <init> <init> \u00b6 DataSourceCluster(writer: DataSource , reader: DataSource )","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/-init-.html#init","text":"DataSourceCluster(writer: DataSource , reader: DataSource )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/reader.html","text":"misk-jdbc / misk.jdbc / DataSourceCluster / reader reader \u00b6 val reader: DataSource Overrides Cluster.reader","title":"reader - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/reader.html#reader","text":"val reader: DataSource Overrides Cluster.reader","title":"reader"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/writer.html","text":"misk-jdbc / misk.jdbc / DataSourceCluster / writer writer \u00b6 val writer: DataSource Overrides Cluster.writer","title":"writer - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster/writer.html#writer","text":"val writer: DataSource Overrides Cluster.writer","title":"writer"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/index.html","text":"misk-jdbc / misk.jdbc / DataSourceClusterConfig DataSourceClusterConfig \u00b6 data class DataSourceClusterConfig Configuration element for a cluster of DataSources Constructors \u00b6 Name Summary <init> DataSourceClusterConfig(writer: DataSourceConfig , reader: DataSourceConfig ?) Configuration element for a cluster of DataSources Properties \u00b6 Name Summary reader val reader: DataSourceConfig ? writer val writer: DataSourceConfig","title":"DataSourceClusterConfig - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/index.html#datasourceclusterconfig","text":"data class DataSourceClusterConfig Configuration element for a cluster of DataSources","title":"DataSourceClusterConfig"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/index.html#constructors","text":"Name Summary <init> DataSourceClusterConfig(writer: DataSourceConfig , reader: DataSourceConfig ?) Configuration element for a cluster of DataSources","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/index.html#properties","text":"Name Summary reader val reader: DataSourceConfig ? writer val writer: DataSourceConfig","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/-init-.html","text":"misk-jdbc / misk.jdbc / DataSourceClusterConfig / <init> <init> \u00b6 DataSourceClusterConfig(writer: DataSourceConfig , reader: DataSourceConfig ?) Configuration element for a cluster of DataSources","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/-init-.html#init","text":"DataSourceClusterConfig(writer: DataSourceConfig , reader: DataSourceConfig ?) Configuration element for a cluster of DataSources","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/reader.html","text":"misk-jdbc / misk.jdbc / DataSourceClusterConfig / reader reader \u00b6 val reader: DataSourceConfig ?","title":"reader - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/reader.html#reader","text":"val reader: DataSourceConfig ?","title":"reader"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/writer.html","text":"misk-jdbc / misk.jdbc / DataSourceClusterConfig / writer writer \u00b6 val writer: DataSourceConfig","title":"writer - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-cluster-config/writer.html#writer","text":"val writer: DataSourceConfig","title":"writer"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-clusters-config/index.html","text":"misk-jdbc / misk.jdbc / DataSourceClustersConfig DataSourceClustersConfig \u00b6 class DataSourceClustersConfig : LinkedHashMap < String , DataSourceClusterConfig >, Config Top-level configuration element for all datasource clusters Constructors \u00b6 Name Summary <init> DataSourceClustersConfig() DataSourceClustersConfig(m: Map < String , DataSourceClusterConfig >)","title":"DataSourceClustersConfig - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-clusters-config/index.html#datasourceclustersconfig","text":"class DataSourceClustersConfig : LinkedHashMap < String , DataSourceClusterConfig >, Config Top-level configuration element for all datasource clusters","title":"DataSourceClustersConfig"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-clusters-config/index.html#constructors","text":"Name Summary <init> DataSourceClustersConfig() DataSourceClustersConfig(m: Map < String , DataSourceClusterConfig >)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-clusters-config/-init-.html","text":"misk-jdbc / misk.jdbc / DataSourceClustersConfig / <init> <init> \u00b6 DataSourceClustersConfig() DataSourceClustersConfig(m: Map < String , DataSourceClusterConfig >)","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-clusters-config/-init-.html#init","text":"DataSourceClustersConfig() DataSourceClustersConfig(m: Map < String , DataSourceClusterConfig >)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/index.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig DataSourceConfig \u00b6 data class DataSourceConfig Configuration element for an individual datasource Constructors \u00b6 Name Summary <init> DataSourceConfig(type: DataSourceType , host: String ? = null, port: Int ? = null, database: String ? = null, username: String ? = null, password: String ? = null, fixed_pool_size: Int = 10, connection_timeout: Duration = Duration.ofSeconds(10), validation_timeout: Duration = Duration.ofSeconds(3), connection_max_lifetime: Duration = Duration.ofMinutes(1), query_timeout: Duration ? = Duration.ofMinutes(1), migrations_resource: String ? = null, migrations_resources: List < String >? = null, vitess_schema_resource_root: String ? = null, trust_certificate_key_store_url: String ? = null, trust_certificate_key_store_password: String ? = null, client_certificate_key_store_url: String ? = null, client_certificate_key_store_password: String ? = null, trust_certificate_key_store_path: String ? = null, client_certificate_key_store_path: String ? = null, verify_server_identity: Boolean = false, show_sql: String ? = \"false\", jdbc_statement_batch_size: Int ? = null) Configuration element for an individual datasource Properties \u00b6 Name Summary client_certificate_key_store_password val client_certificate_key_store_password: String ? client_certificate_key_store_path val client_certificate_key_store_path: String ? client_certificate_key_store_url val client_certificate_key_store_url: String ? connection_max_lifetime val connection_max_lifetime: Duration connection_timeout val connection_timeout: Duration database val database: String ? fixed_pool_size val fixed_pool_size: Int host val host: String ? jdbc_statement_batch_size val jdbc_statement_batch_size: Int ? migrations_resource val migrations_resource: String ? migrations_resources val migrations_resources: List < String >? password val password: String ? port val port: Int ? query_timeout val query_timeout: Duration ? show_sql val show_sql: String ? trust_certificate_key_store_password val trust_certificate_key_store_password: String ? trust_certificate_key_store_path val trust_certificate_key_store_path: String ? trust_certificate_key_store_url val trust_certificate_key_store_url: String ? type val type: DataSourceType username val username: String ? validation_timeout val validation_timeout: Duration verify_server_identity val verify_server_identity: Boolean vitess_schema_resource_root val vitess_schema_resource_root: String ? Functions \u00b6 Name Summary asReplica fun asReplica(): DataSourceConfig buildJdbcUrl fun buildJdbcUrl(deployment: Deployment): String canRecoverOnReplica fun canRecoverOnReplica(): Boolean withDefaults fun withDefaults(): DataSourceConfig","title":"DataSourceConfig - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/index.html#datasourceconfig","text":"data class DataSourceConfig Configuration element for an individual datasource","title":"DataSourceConfig"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/index.html#constructors","text":"Name Summary <init> DataSourceConfig(type: DataSourceType , host: String ? = null, port: Int ? = null, database: String ? = null, username: String ? = null, password: String ? = null, fixed_pool_size: Int = 10, connection_timeout: Duration = Duration.ofSeconds(10), validation_timeout: Duration = Duration.ofSeconds(3), connection_max_lifetime: Duration = Duration.ofMinutes(1), query_timeout: Duration ? = Duration.ofMinutes(1), migrations_resource: String ? = null, migrations_resources: List < String >? = null, vitess_schema_resource_root: String ? = null, trust_certificate_key_store_url: String ? = null, trust_certificate_key_store_password: String ? = null, client_certificate_key_store_url: String ? = null, client_certificate_key_store_password: String ? = null, trust_certificate_key_store_path: String ? = null, client_certificate_key_store_path: String ? = null, verify_server_identity: Boolean = false, show_sql: String ? = \"false\", jdbc_statement_batch_size: Int ? = null) Configuration element for an individual datasource","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/index.html#properties","text":"Name Summary client_certificate_key_store_password val client_certificate_key_store_password: String ? client_certificate_key_store_path val client_certificate_key_store_path: String ? client_certificate_key_store_url val client_certificate_key_store_url: String ? connection_max_lifetime val connection_max_lifetime: Duration connection_timeout val connection_timeout: Duration database val database: String ? fixed_pool_size val fixed_pool_size: Int host val host: String ? jdbc_statement_batch_size val jdbc_statement_batch_size: Int ? migrations_resource val migrations_resource: String ? migrations_resources val migrations_resources: List < String >? password val password: String ? port val port: Int ? query_timeout val query_timeout: Duration ? show_sql val show_sql: String ? trust_certificate_key_store_password val trust_certificate_key_store_password: String ? trust_certificate_key_store_path val trust_certificate_key_store_path: String ? trust_certificate_key_store_url val trust_certificate_key_store_url: String ? type val type: DataSourceType username val username: String ? validation_timeout val validation_timeout: Duration verify_server_identity val verify_server_identity: Boolean vitess_schema_resource_root val vitess_schema_resource_root: String ?","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/index.html#functions","text":"Name Summary asReplica fun asReplica(): DataSourceConfig buildJdbcUrl fun buildJdbcUrl(deployment: Deployment): String canRecoverOnReplica fun canRecoverOnReplica(): Boolean withDefaults fun withDefaults(): DataSourceConfig","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/-init-.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / <init> <init> \u00b6 DataSourceConfig(type: DataSourceType , host: String ? = null, port: Int ? = null, database: String ? = null, username: String ? = null, password: String ? = null, fixed_pool_size: Int = 10, connection_timeout: Duration = Duration.ofSeconds(10), validation_timeout: Duration = Duration.ofSeconds(3), connection_max_lifetime: Duration = Duration.ofMinutes(1), query_timeout: Duration ? = Duration.ofMinutes(1), migrations_resource: String ? = null, migrations_resources: List < String >? = null, vitess_schema_resource_root: String ? = null, trust_certificate_key_store_url: String ? = null, trust_certificate_key_store_password: String ? = null, client_certificate_key_store_url: String ? = null, client_certificate_key_store_password: String ? = null, trust_certificate_key_store_path: String ? = null, client_certificate_key_store_path: String ? = null, verify_server_identity: Boolean = false, show_sql: String ? = \"false\", jdbc_statement_batch_size: Int ? = null) Configuration element for an individual datasource","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/-init-.html#init","text":"DataSourceConfig(type: DataSourceType , host: String ? = null, port: Int ? = null, database: String ? = null, username: String ? = null, password: String ? = null, fixed_pool_size: Int = 10, connection_timeout: Duration = Duration.ofSeconds(10), validation_timeout: Duration = Duration.ofSeconds(3), connection_max_lifetime: Duration = Duration.ofMinutes(1), query_timeout: Duration ? = Duration.ofMinutes(1), migrations_resource: String ? = null, migrations_resources: List < String >? = null, vitess_schema_resource_root: String ? = null, trust_certificate_key_store_url: String ? = null, trust_certificate_key_store_password: String ? = null, client_certificate_key_store_url: String ? = null, client_certificate_key_store_password: String ? = null, trust_certificate_key_store_path: String ? = null, client_certificate_key_store_path: String ? = null, verify_server_identity: Boolean = false, show_sql: String ? = \"false\", jdbc_statement_batch_size: Int ? = null) Configuration element for an individual datasource","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/as-replica.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / asReplica asReplica \u00b6 fun asReplica(): DataSourceConfig","title":"asReplica - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/as-replica.html#asreplica","text":"fun asReplica(): DataSourceConfig","title":"asReplica"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/build-jdbc-url.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / buildJdbcUrl buildJdbcUrl \u00b6 fun buildJdbcUrl(deployment: Deployment): String","title":"buildJdbcUrl - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/build-jdbc-url.html#buildjdbcurl","text":"fun buildJdbcUrl(deployment: Deployment): String","title":"buildJdbcUrl"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/can-recover-on-replica.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / canRecoverOnReplica canRecoverOnReplica \u00b6 fun canRecoverOnReplica(): Boolean","title":"canRecoverOnReplica - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/can-recover-on-replica.html#canrecoveronreplica","text":"fun canRecoverOnReplica(): Boolean","title":"canRecoverOnReplica"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_password.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / client_certificate_key_store_password client_certificate_key_store_password \u00b6 val client_certificate_key_store_password: String ?","title":"client_certificate_key_store_password - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_password.html#client_certificate_key_store_password","text":"val client_certificate_key_store_password: String ?","title":"client_certificate_key_store_password"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_path.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / client_certificate_key_store_path client_certificate_key_store_path \u00b6 val client_certificate_key_store_path: String ?","title":"client_certificate_key_store_path - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_path.html#client_certificate_key_store_path","text":"val client_certificate_key_store_path: String ?","title":"client_certificate_key_store_path"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_url.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / client_certificate_key_store_url client_certificate_key_store_url \u00b6 val client_certificate_key_store_url: String ?","title":"client_certificate_key_store_url - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/client_certificate_key_store_url.html#client_certificate_key_store_url","text":"val client_certificate_key_store_url: String ?","title":"client_certificate_key_store_url"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/connection_max_lifetime.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / connection_max_lifetime connection_max_lifetime \u00b6 val connection_max_lifetime: Duration","title":"connection_max_lifetime - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/connection_max_lifetime.html#connection_max_lifetime","text":"val connection_max_lifetime: Duration","title":"connection_max_lifetime"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/connection_timeout.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / connection_timeout connection_timeout \u00b6 val connection_timeout: Duration","title":"connection_timeout - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/connection_timeout.html#connection_timeout","text":"val connection_timeout: Duration","title":"connection_timeout"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/database.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / database database \u00b6 val database: String ?","title":"database - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/database.html#database","text":"val database: String ?","title":"database"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/fixed_pool_size.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / fixed_pool_size fixed_pool_size \u00b6 val fixed_pool_size: Int","title":"fixed_pool_size - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/fixed_pool_size.html#fixed_pool_size","text":"val fixed_pool_size: Int","title":"fixed_pool_size"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/host.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / host host \u00b6 val host: String ?","title":"host - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/host.html#host","text":"val host: String ?","title":"host"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/jdbc_statement_batch_size.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / jdbc_statement_batch_size jdbc_statement_batch_size \u00b6 val jdbc_statement_batch_size: Int ?","title":"jdbc_statement_batch_size - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/jdbc_statement_batch_size.html#jdbc_statement_batch_size","text":"val jdbc_statement_batch_size: Int ?","title":"jdbc_statement_batch_size"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/migrations_resource.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / migrations_resource migrations_resource \u00b6 val migrations_resource: String ?","title":"migrations_resource - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/migrations_resource.html#migrations_resource","text":"val migrations_resource: String ?","title":"migrations_resource"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / migrations_resources migrations_resources \u00b6 val migrations_resources: List < String >?","title":"migrations_resources - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/migrations_resources.html#migrations_resources","text":"val migrations_resources: List < String >?","title":"migrations_resources"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/password.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / password password \u00b6 val password: String ?","title":"password - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/password.html#password","text":"val password: String ?","title":"password"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/port.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / port port \u00b6 val port: Int ?","title":"port - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/port.html#port","text":"val port: Int ?","title":"port"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/query_timeout.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / query_timeout query_timeout \u00b6 val query_timeout: Duration ?","title":"query_timeout - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/query_timeout.html#query_timeout","text":"val query_timeout: Duration ?","title":"query_timeout"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/show_sql.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / show_sql show_sql \u00b6 val show_sql: String ?","title":"show_sql - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/show_sql.html#show_sql","text":"val show_sql: String ?","title":"show_sql"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_password.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / trust_certificate_key_store_password trust_certificate_key_store_password \u00b6 val trust_certificate_key_store_password: String ?","title":"trust_certificate_key_store_password - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_password.html#trust_certificate_key_store_password","text":"val trust_certificate_key_store_password: String ?","title":"trust_certificate_key_store_password"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_path.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / trust_certificate_key_store_path trust_certificate_key_store_path \u00b6 val trust_certificate_key_store_path: String ?","title":"trust_certificate_key_store_path - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_path.html#trust_certificate_key_store_path","text":"val trust_certificate_key_store_path: String ?","title":"trust_certificate_key_store_path"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_url.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / trust_certificate_key_store_url trust_certificate_key_store_url \u00b6 val trust_certificate_key_store_url: String ?","title":"trust_certificate_key_store_url - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/trust_certificate_key_store_url.html#trust_certificate_key_store_url","text":"val trust_certificate_key_store_url: String ?","title":"trust_certificate_key_store_url"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/type.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / type type \u00b6 val type: DataSourceType","title":"type - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/type.html#type","text":"val type: DataSourceType","title":"type"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/username.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / username username \u00b6 val username: String ?","title":"username - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/username.html#username","text":"val username: String ?","title":"username"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/validation_timeout.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / validation_timeout validation_timeout \u00b6 val validation_timeout: Duration","title":"validation_timeout - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/validation_timeout.html#validation_timeout","text":"val validation_timeout: Duration","title":"validation_timeout"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/verify_server_identity.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / verify_server_identity verify_server_identity \u00b6 val verify_server_identity: Boolean","title":"verify_server_identity - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/verify_server_identity.html#verify_server_identity","text":"val verify_server_identity: Boolean","title":"verify_server_identity"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/vitess_schema_resource_root.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / vitess_schema_resource_root vitess_schema_resource_root \u00b6 val vitess_schema_resource_root: String ?","title":"vitess_schema_resource_root - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/vitess_schema_resource_root.html#vitess_schema_resource_root","text":"val vitess_schema_resource_root: String ?","title":"vitess_schema_resource_root"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/with-defaults.html","text":"misk-jdbc / misk.jdbc / DataSourceConfig / withDefaults withDefaults \u00b6 fun withDefaults(): DataSourceConfig","title":"withDefaults - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-config/with-defaults.html#withdefaults","text":"fun withDefaults(): DataSourceConfig","title":"withDefaults"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-connector/index.html","text":"misk-jdbc / misk.jdbc / DataSourceConnector DataSourceConnector \u00b6 interface DataSourceConnector Functions \u00b6 Name Summary config abstract fun config(): DataSourceConfig Inheritors \u00b6 Name Summary DataSourceService class DataSourceService : AbstractIdleService, DataSourceConnector , Provider< DataSource > Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation.","title":"DataSourceConnector - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-connector/index.html#datasourceconnector","text":"interface DataSourceConnector","title":"DataSourceConnector"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-connector/index.html#functions","text":"Name Summary config abstract fun config(): DataSourceConfig","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-connector/index.html#inheritors","text":"Name Summary DataSourceService class DataSourceService : AbstractIdleService, DataSourceConnector , Provider< DataSource > Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation.","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-connector/config.html","text":"misk-jdbc / misk.jdbc / DataSourceConnector / config config \u00b6 abstract fun config(): DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-connector/config.html#config","text":"abstract fun config(): DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-decorator/index.html","text":"misk-jdbc / misk.jdbc / DataSourceDecorator DataSourceDecorator \u00b6 interface DataSourceDecorator Functions \u00b6 Name Summary decorate abstract fun decorate(dataSource: DataSource ): DataSource Inheritors \u00b6 Name Summary SpanInjector class SpanInjector : QueryTransformer, DataSourceDecorator","title":"DataSourceDecorator - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-decorator/index.html#datasourcedecorator","text":"interface DataSourceDecorator","title":"DataSourceDecorator"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-decorator/index.html#functions","text":"Name Summary decorate abstract fun decorate(dataSource: DataSource ): DataSource","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-decorator/index.html#inheritors","text":"Name Summary SpanInjector class SpanInjector : QueryTransformer, DataSourceDecorator","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-decorator/decorate.html","text":"misk-jdbc / misk.jdbc / DataSourceDecorator / decorate decorate \u00b6 abstract fun decorate(dataSource: DataSource ): DataSource","title":"decorate - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-decorator/decorate.html#decorate","text":"abstract fun decorate(dataSource: DataSource ): DataSource","title":"decorate"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/index.html","text":"misk-jdbc / misk.jdbc / DataSourceService DataSourceService \u00b6 @Singleton class DataSourceService : AbstractIdleService, DataSourceConnector , Provider< DataSource > Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. Parameters \u00b6 baseConfig - the configuration to connect to. The actual database name used may vary as the databasePool can pick an alternate database name for testing. Constructors \u00b6 Name Summary <init> DataSourceService(qualifier: KClass <out Annotation >, baseConfig: DataSourceConfig , deployment: Deployment, dataSourceDecorators: Set < DataSourceDecorator >, databasePool: DatabasePool , collectorRegistry: CollectorRegistry? = null) Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. Functions \u00b6 Name Summary config fun config(): DataSourceConfig get fun get(): DataSource shutDown fun shutDown(): Unit startUp fun startUp(): Unit Companion Object Properties \u00b6 Name Summary logger val logger: KLogger","title":"DataSourceService - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/index.html#datasourceservice","text":"@Singleton class DataSourceService : AbstractIdleService, DataSourceConnector , Provider< DataSource > Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation.","title":"DataSourceService"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/index.html#parameters","text":"baseConfig - the configuration to connect to. The actual database name used may vary as the databasePool can pick an alternate database name for testing.","title":"Parameters"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/index.html#constructors","text":"Name Summary <init> DataSourceService(qualifier: KClass <out Annotation >, baseConfig: DataSourceConfig , deployment: Deployment, dataSourceDecorators: Set < DataSourceDecorator >, databasePool: DatabasePool , collectorRegistry: CollectorRegistry? = null) Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation.","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/index.html#functions","text":"Name Summary config fun config(): DataSourceConfig get fun get(): DataSource shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/index.html#companion-object-properties","text":"Name Summary logger val logger: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/-init-.html","text":"misk-jdbc / misk.jdbc / DataSourceService / <init> <init> \u00b6 DataSourceService(qualifier: KClass <out Annotation >, baseConfig: DataSourceConfig , deployment: Deployment, dataSourceDecorators: Set < DataSourceDecorator >, databasePool: DatabasePool , collectorRegistry: CollectorRegistry? = null) Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation. Parameters \u00b6 baseConfig - the configuration to connect to. The actual database name used may vary as the databasePool can pick an alternate database name for testing.","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/-init-.html#init","text":"DataSourceService(qualifier: KClass <out Annotation >, baseConfig: DataSourceConfig , deployment: Deployment, dataSourceDecorators: Set < DataSourceDecorator >, databasePool: DatabasePool , collectorRegistry: CollectorRegistry? = null) Builds a connection pool to a JDBC database. Doesn\u2019t do any schema migration or validation.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/-init-.html#parameters","text":"baseConfig - the configuration to connect to. The actual database name used may vary as the databasePool can pick an alternate database name for testing.","title":"Parameters"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/config.html","text":"misk-jdbc / misk.jdbc / DataSourceService / config config \u00b6 fun config(): DataSourceConfig Overrides DataSourceConnector.config","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/config.html#config","text":"fun config(): DataSourceConfig Overrides DataSourceConnector.config","title":"config"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/get.html","text":"misk-jdbc / misk.jdbc / DataSourceService / get get \u00b6 fun get(): DataSource","title":"get - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/get.html#get","text":"fun get(): DataSource","title":"get"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/logger.html","text":"misk-jdbc / misk.jdbc / DataSourceService / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/shut-down.html","text":"misk-jdbc / misk.jdbc / DataSourceService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/start-up.html","text":"misk-jdbc / misk.jdbc / DataSourceService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/index.html","text":"misk-jdbc / misk.jdbc / DataSourceType DataSourceType \u00b6 enum class DataSourceType Defines a type of datasource Enum Values \u00b6 Name Summary MYSQL HSQLDB VITESS_MYSQL COCKROACHDB POSTGRESQL TIDB Properties \u00b6 Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"DataSourceType - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/index.html#datasourcetype","text":"enum class DataSourceType Defines a type of datasource","title":"DataSourceType"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/index.html#enum-values","text":"Name Summary MYSQL HSQLDB VITESS_MYSQL COCKROACHDB POSTGRESQL TIDB","title":"Enum Values"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/index.html#properties","text":"Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-c-o-c-k-r-o-a-c-h-d-b.html","text":"misk-jdbc / misk.jdbc / DataSourceType / COCKROACHDB COCKROACHDB \u00b6 COCKROACHDB Inherited Properties \u00b6 Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"COCKROACHDB - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-c-o-c-k-r-o-a-c-h-d-b.html#cockroachdb","text":"COCKROACHDB","title":"COCKROACHDB"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-c-o-c-k-r-o-a-c-h-d-b.html#inherited-properties","text":"Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-h-s-q-l-d-b.html","text":"misk-jdbc / misk.jdbc / DataSourceType / HSQLDB HSQLDB \u00b6 HSQLDB Inherited Properties \u00b6 Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"HSQLDB - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-h-s-q-l-d-b.html#hsqldb","text":"HSQLDB","title":"HSQLDB"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-h-s-q-l-d-b.html#inherited-properties","text":"Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-m-y-s-q-l.html","text":"misk-jdbc / misk.jdbc / DataSourceType / MYSQL MYSQL \u00b6 MYSQL Inherited Properties \u00b6 Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"MYSQL - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-m-y-s-q-l.html#mysql","text":"MYSQL","title":"MYSQL"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-m-y-s-q-l.html#inherited-properties","text":"Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-p-o-s-t-g-r-e-s-q-l.html","text":"misk-jdbc / misk.jdbc / DataSourceType / POSTGRESQL POSTGRESQL \u00b6 POSTGRESQL Inherited Properties \u00b6 Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"POSTGRESQL - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-p-o-s-t-g-r-e-s-q-l.html#postgresql","text":"POSTGRESQL","title":"POSTGRESQL"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-p-o-s-t-g-r-e-s-q-l.html#inherited-properties","text":"Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-t-i-d-b.html","text":"misk-jdbc / misk.jdbc / DataSourceType / TIDB TIDB \u00b6 TIDB Inherited Properties \u00b6 Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"TIDB - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-t-i-d-b.html#tidb","text":"TIDB","title":"TIDB"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-t-i-d-b.html#inherited-properties","text":"Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-v-i-t-e-s-s_-m-y-s-q-l.html","text":"misk-jdbc / misk.jdbc / DataSourceType / VITESS_MYSQL VITESS_MYSQL \u00b6 VITESS_MYSQL Inherited Properties \u00b6 Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"VITESS_MYSQL - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-v-i-t-e-s-s_-m-y-s-q-l.html#vitess_mysql","text":"VITESS_MYSQL","title":"VITESS_MYSQL"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/-v-i-t-e-s-s_-m-y-s-q-l.html#inherited-properties","text":"Name Summary driverClassName val driverClassName: String hibernateDialect val hibernateDialect: String isVitess val isVitess: Boolean","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/driver-class-name.html","text":"misk-jdbc / misk.jdbc / DataSourceType / driverClassName driverClassName \u00b6 val driverClassName: String","title":"driverClassName - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/driver-class-name.html#driverclassname","text":"val driverClassName: String","title":"driverClassName"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/hibernate-dialect.html","text":"misk-jdbc / misk.jdbc / DataSourceType / hibernateDialect hibernateDialect \u00b6 val hibernateDialect: String","title":"hibernateDialect - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/hibernate-dialect.html#hibernatedialect","text":"val hibernateDialect: String","title":"hibernateDialect"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/is-vitess.html","text":"misk-jdbc / misk.jdbc / DataSourceType / isVitess isVitess \u00b6 val isVitess: Boolean","title":"isVitess - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-data-source-type/is-vitess.html#isvitess","text":"val isVitess: Boolean","title":"isVitess"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/index.html","text":"misk-jdbc / misk.jdbc / DatabasePool DatabasePool \u00b6 interface DatabasePool Figures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes. Functions \u00b6 Name Summary releaseDatabase abstract fun releaseDatabase(config: DataSourceConfig ): Unit Releases a config created by takeDatabase . takeDatabase abstract fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Finds a database to satisfy config and returns a new config that targets it. Inheritors \u00b6 Name Summary RealDatabasePool object RealDatabasePool : DatabasePool","title":"DatabasePool - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/index.html#databasepool","text":"interface DatabasePool Figures out what database name to use for a given config. Tests use this to pool many databases for concurrent execution. In development, staging, and production the database never changes.","title":"DatabasePool"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/index.html#functions","text":"Name Summary releaseDatabase abstract fun releaseDatabase(config: DataSourceConfig ): Unit Releases a config created by takeDatabase . takeDatabase abstract fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Finds a database to satisfy config and returns a new config that targets it.","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/index.html#inheritors","text":"Name Summary RealDatabasePool object RealDatabasePool : DatabasePool","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/release-database.html","text":"misk-jdbc / misk.jdbc / DatabasePool / releaseDatabase releaseDatabase \u00b6 abstract fun releaseDatabase(config: DataSourceConfig ): Unit Releases a config created by takeDatabase .","title":"releaseDatabase - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/release-database.html#releasedatabase","text":"abstract fun releaseDatabase(config: DataSourceConfig ): Unit Releases a config created by takeDatabase .","title":"releaseDatabase"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/take-database.html","text":"misk-jdbc / misk.jdbc / DatabasePool / takeDatabase takeDatabase \u00b6 abstract fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Finds a database to satisfy config and returns a new config that targets it.","title":"takeDatabase - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-database-pool/take-database.html#takedatabase","text":"abstract fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Finds a database to satisfy config and returns a new config that targets it.","title":"takeDatabase"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/index.html","text":"misk-jdbc / misk.jdbc / JDBCSession JDBCSession \u00b6 class JDBCSession : Session Types \u00b6 Name Summary HookType enum class HookType Constructors \u00b6 Name Summary <init> JDBCSession(connection: Connection ) Properties \u00b6 Name Summary connection val connection: Connection Functions \u00b6 Name Summary add fun ConcurrentMap < JDBCSession.HookType , List <() -> Unit >>.add(hookType: JDBCSession.HookType , work: () -> Unit ): Unit component1 operator fun component1(): Connection Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (connection) -> \u2026 } executePostCommitHooks fun executePostCommitHooks(): Unit executePreCommitHooks fun executePreCommitHooks(): Unit executeSessionCloseHooks fun executeSessionCloseHooks(): Unit onPostCommit fun onPostCommit(work: () -> Unit ): Unit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed onPreCommit fun onPreCommit(work: () -> Unit ): Unit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back. onSessionClose fun onSessionClose(work: () -> Unit ): Unit Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. useConnection fun <T> useConnection(work: ( Connection ) -> T ): T","title":"JDBCSession - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/index.html#jdbcsession","text":"class JDBCSession : Session","title":"JDBCSession"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/index.html#types","text":"Name Summary HookType enum class HookType","title":"Types"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/index.html#constructors","text":"Name Summary <init> JDBCSession(connection: Connection )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/index.html#properties","text":"Name Summary connection val connection: Connection","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/index.html#functions","text":"Name Summary add fun ConcurrentMap < JDBCSession.HookType , List <() -> Unit >>.add(hookType: JDBCSession.HookType , work: () -> Unit ): Unit component1 operator fun component1(): Connection Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (connection) -> \u2026 } executePostCommitHooks fun executePostCommitHooks(): Unit executePreCommitHooks fun executePreCommitHooks(): Unit executeSessionCloseHooks fun executeSessionCloseHooks(): Unit onPostCommit fun onPostCommit(work: () -> Unit ): Unit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed onPreCommit fun onPreCommit(work: () -> Unit ): Unit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back. onSessionClose fun onSessionClose(work: () -> Unit ): Unit Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. useConnection fun <T> useConnection(work: ( Connection ) -> T ): T","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-init-.html","text":"misk-jdbc / misk.jdbc / JDBCSession / <init> <init> \u00b6 JDBCSession(connection: Connection )","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-init-.html#init","text":"JDBCSession(connection: Connection )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/add.html","text":"misk-jdbc / misk.jdbc / JDBCSession / add add \u00b6 fun ConcurrentMap < JDBCSession.HookType , List <() -> Unit >>.add(hookType: JDBCSession.HookType , work: () -> Unit ): Unit","title":"add - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/add.html#add","text":"fun ConcurrentMap < JDBCSession.HookType , List <() -> Unit >>.add(hookType: JDBCSession.HookType , work: () -> Unit ): Unit","title":"add"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/component1.html","text":"misk-jdbc / misk.jdbc / JDBCSession / component1 component1 \u00b6 operator fun component1(): Connection Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (connection) -> \u2026 }","title":"component1 - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/component1.html#component1","text":"operator fun component1(): Connection Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (connection) -> \u2026 }","title":"component1"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/connection.html","text":"misk-jdbc / misk.jdbc / JDBCSession / connection connection \u00b6 val connection: Connection","title":"connection - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/connection.html#connection","text":"val connection: Connection","title":"connection"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-post-commit-hooks.html","text":"misk-jdbc / misk.jdbc / JDBCSession / executePostCommitHooks executePostCommitHooks \u00b6 fun executePostCommitHooks(): Unit","title":"executePostCommitHooks - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-post-commit-hooks.html#executepostcommithooks","text":"fun executePostCommitHooks(): Unit","title":"executePostCommitHooks"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-pre-commit-hooks.html","text":"misk-jdbc / misk.jdbc / JDBCSession / executePreCommitHooks executePreCommitHooks \u00b6 fun executePreCommitHooks(): Unit","title":"executePreCommitHooks - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-pre-commit-hooks.html#executeprecommithooks","text":"fun executePreCommitHooks(): Unit","title":"executePreCommitHooks"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-session-close-hooks.html","text":"misk-jdbc / misk.jdbc / JDBCSession / executeSessionCloseHooks executeSessionCloseHooks \u00b6 fun executeSessionCloseHooks(): Unit","title":"executeSessionCloseHooks - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/execute-session-close-hooks.html#executesessionclosehooks","text":"fun executeSessionCloseHooks(): Unit","title":"executeSessionCloseHooks"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-post-commit.html","text":"misk-jdbc / misk.jdbc / JDBCSession / onPostCommit onPostCommit \u00b6 fun onPostCommit(work: () -> Unit ): Unit Overrides Session.onPostCommit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed","title":"onPostCommit - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-post-commit.html#onpostcommit","text":"fun onPostCommit(work: () -> Unit ): Unit Overrides Session.onPostCommit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed","title":"onPostCommit"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-pre-commit.html","text":"misk-jdbc / misk.jdbc / JDBCSession / onPreCommit onPreCommit \u00b6 fun onPreCommit(work: () -> Unit ): Unit Overrides Session.onPreCommit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back.","title":"onPreCommit - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-pre-commit.html#onprecommit","text":"fun onPreCommit(work: () -> Unit ): Unit Overrides Session.onPreCommit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back.","title":"onPreCommit"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-session-close.html","text":"misk-jdbc / misk.jdbc / JDBCSession / onSessionClose onSessionClose \u00b6 fun onSessionClose(work: () -> Unit ): Unit Overrides Session.onSessionClose Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. A new transaction can be initiated as part of this hook.","title":"onSessionClose - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/on-session-close.html#onsessionclose","text":"fun onSessionClose(work: () -> Unit ): Unit Overrides Session.onSessionClose Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. A new transaction can be initiated as part of this hook.","title":"onSessionClose"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/use-connection.html","text":"misk-jdbc / misk.jdbc / JDBCSession / useConnection useConnection \u00b6 fun <T> useConnection(work: ( Connection ) -> T ): T Overrides Session.useConnection","title":"useConnection - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/use-connection.html#useconnection","text":"fun <T> useConnection(work: ( Connection ) -> T ): T Overrides Session.useConnection","title":"useConnection"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/index.html","text":"misk-jdbc / misk.jdbc / JDBCSession / HookType HookType \u00b6 enum class HookType Enum Values \u00b6 Name Summary PRE POST SESSION_CLOSE","title":"HookType - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/index.html#hooktype","text":"enum class HookType","title":"HookType"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/index.html#enum-values","text":"Name Summary PRE POST SESSION_CLOSE","title":"Enum Values"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-o-s-t.html","text":"misk-jdbc / misk.jdbc / JDBCSession / HookType / POST POST \u00b6 POST","title":"POST - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-o-s-t.html#post","text":"POST","title":"POST"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-r-e.html","text":"misk-jdbc / misk.jdbc / JDBCSession / HookType / PRE PRE \u00b6 PRE","title":"PRE - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-p-r-e.html#pre","text":"PRE","title":"PRE"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e.html","text":"misk-jdbc / misk.jdbc / JDBCSession / HookType / SESSION_CLOSE SESSION_CLOSE \u00b6 SESSION_CLOSE","title":"SESSION_CLOSE - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-j-d-b-c-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e.html#session_close","text":"SESSION_CLOSE","title":"SESSION_CLOSE"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/index.html","text":"misk-jdbc / misk.jdbc / JdbcModule JdbcModule \u00b6 class JdbcModule : KAbstractModule Binds database connectivity for a qualified data source. This binds the following public types: @Qualifier javax.sql.DataSource @Qualifier misk.jdbc.DataSourceConfig DataSource.getConnection can be used to get JDBC connections to your database. This also registers services to connect to the database ( DataSourceService ) and to verify that the schema is up-to-date ( SchemaMigratorService ). Constructors \u00b6 Name Summary <init> JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , databasePool: DatabasePool = RealDatabasePool)``JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig ?, databasePool: DatabasePool = RealDatabasePool) Binds database connectivity for a qualified data source. This binds the following public types: Properties \u00b6 Name Summary config val config: DataSourceConfig databasePool val databasePool: DatabasePool readerConfig val readerConfig: DataSourceConfig ? Functions \u00b6 Name Summary configure fun configure(): Unit","title":"JdbcModule - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/index.html#jdbcmodule","text":"class JdbcModule : KAbstractModule Binds database connectivity for a qualified data source. This binds the following public types: @Qualifier javax.sql.DataSource @Qualifier misk.jdbc.DataSourceConfig DataSource.getConnection can be used to get JDBC connections to your database. This also registers services to connect to the database ( DataSourceService ) and to verify that the schema is up-to-date ( SchemaMigratorService ).","title":"JdbcModule"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/index.html#constructors","text":"Name Summary <init> JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , databasePool: DatabasePool = RealDatabasePool)``JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig ?, databasePool: DatabasePool = RealDatabasePool) Binds database connectivity for a qualified data source. This binds the following public types:","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/index.html#properties","text":"Name Summary config val config: DataSourceConfig databasePool val databasePool: DatabasePool readerConfig val readerConfig: DataSourceConfig ?","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/-init-.html","text":"misk-jdbc / misk.jdbc / JdbcModule / <init> <init> \u00b6 JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , databasePool: DatabasePool = RealDatabasePool)``JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig ?, databasePool: DatabasePool = RealDatabasePool) Binds database connectivity for a qualified data source. This binds the following public types: @Qualifier javax.sql.DataSource @Qualifier misk.jdbc.DataSourceConfig DataSource.getConnection can be used to get JDBC connections to your database. This also registers services to connect to the database ( DataSourceService ) and to verify that the schema is up-to-date ( SchemaMigratorService ).","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/-init-.html#init","text":"JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , databasePool: DatabasePool = RealDatabasePool)``JdbcModule(qualifier: KClass <out Annotation >, config: DataSourceConfig , readerQualifier: KClass <out Annotation >?, readerConfig: DataSourceConfig ?, databasePool: DatabasePool = RealDatabasePool) Binds database connectivity for a qualified data source. This binds the following public types: @Qualifier javax.sql.DataSource @Qualifier misk.jdbc.DataSourceConfig DataSource.getConnection can be used to get JDBC connections to your database. This also registers services to connect to the database ( DataSourceService ) and to verify that the schema is up-to-date ( SchemaMigratorService ).","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/config.html","text":"misk-jdbc / misk.jdbc / JdbcModule / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/configure.html","text":"misk-jdbc / misk.jdbc / JdbcModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/database-pool.html","text":"misk-jdbc / misk.jdbc / JdbcModule / databasePool databasePool \u00b6 val databasePool: DatabasePool","title":"databasePool - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/database-pool.html#databasepool","text":"val databasePool: DatabasePool","title":"databasePool"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/reader-config.html","text":"misk-jdbc / misk.jdbc / JdbcModule / readerConfig readerConfig \u00b6 val readerConfig: DataSourceConfig ?","title":"readerConfig - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-jdbc-module/reader-config.html#readerconfig","text":"val readerConfig: DataSourceConfig ?","title":"readerConfig"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/index.html","text":"misk-jdbc / misk.jdbc / PingDatabaseService PingDatabaseService \u00b6 @Singleton class PingDatabaseService : AbstractIdleService Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run. Constructors \u00b6 Name Summary <init> PingDatabaseService(config: DataSourceConfig , deployment: Deployment) Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run. Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"PingDatabaseService - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/index.html#pingdatabaseservice","text":"@Singleton class PingDatabaseService : AbstractIdleService Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run.","title":"PingDatabaseService"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/index.html#constructors","text":"Name Summary <init> PingDatabaseService(config: DataSourceConfig , deployment: Deployment) Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run.","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/-init-.html","text":"misk-jdbc / misk.jdbc / PingDatabaseService / <init> <init> \u00b6 PingDatabaseService(config: DataSourceConfig , deployment: Deployment) Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run.","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/-init-.html#init","text":"PingDatabaseService(config: DataSourceConfig , deployment: Deployment) Service that waits for the database to become healthy. This is needed if we\u2019re booting up a Vitess cluster as part of the test run.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/shut-down.html","text":"misk-jdbc / misk.jdbc / PingDatabaseService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/start-up.html","text":"misk-jdbc / misk.jdbc / PingDatabaseService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-ping-database-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/index.html","text":"misk-jdbc / misk.jdbc / PostCommitHookFailedException PostCommitHookFailedException \u00b6 class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook Constructors \u00b6 Name Summary <init> PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"PostCommitHookFailedException - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/index.html#postcommithookfailedexception","text":"class PostCommitHookFailedException : Exception PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"PostCommitHookFailedException"},{"location":"0.x/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/index.html#constructors","text":"Name Summary <init> PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/-init-.html","text":"misk-jdbc / misk.jdbc / PostCommitHookFailedException / <init> <init> \u00b6 PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-post-commit-hook-failed-exception/-init-.html#init","text":"PostCommitHookFailedException(cause: Throwable ) PostCommitHookFailedException is raised when a code run as part of a post-commit hook fails. Because post-commit hooks are run after the transaction is committed, failure in these hooks does not cause the transaction to rollback, and applications may need to differentiate the two cases (exception occurred and caused the transaction to rollback, exception occurred during a post-commit hook","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-database-pool/index.html","text":"misk-jdbc / misk.jdbc / RealDatabasePool RealDatabasePool \u00b6 object RealDatabasePool : DatabasePool Functions \u00b6 Name Summary releaseDatabase fun releaseDatabase(config: DataSourceConfig ): Unit Releases a config created by takeDatabase . takeDatabase fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Finds a database to satisfy config and returns a new config that targets it.","title":"RealDatabasePool - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-database-pool/index.html#realdatabasepool","text":"object RealDatabasePool : DatabasePool","title":"RealDatabasePool"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-database-pool/index.html#functions","text":"Name Summary releaseDatabase fun releaseDatabase(config: DataSourceConfig ): Unit Releases a config created by takeDatabase . takeDatabase fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Finds a database to satisfy config and returns a new config that targets it.","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-database-pool/release-database.html","text":"misk-jdbc / misk.jdbc / RealDatabasePool / releaseDatabase releaseDatabase \u00b6 fun releaseDatabase(config: DataSourceConfig ): Unit Overrides DatabasePool.releaseDatabase Releases a config created by takeDatabase .","title":"releaseDatabase - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-database-pool/release-database.html#releasedatabase","text":"fun releaseDatabase(config: DataSourceConfig ): Unit Overrides DatabasePool.releaseDatabase Releases a config created by takeDatabase .","title":"releaseDatabase"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-database-pool/take-database.html","text":"misk-jdbc / misk.jdbc / RealDatabasePool / takeDatabase takeDatabase \u00b6 fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Overrides DatabasePool.takeDatabase Finds a database to satisfy config and returns a new config that targets it.","title":"takeDatabase - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-database-pool/take-database.html#takedatabase","text":"fun takeDatabase(config: DataSourceConfig ): DataSourceConfig Overrides DatabasePool.takeDatabase Finds a database to satisfy config and returns a new config that targets it.","title":"takeDatabase"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/index.html","text":"misk-jdbc / misk.jdbc / RealTransacter RealTransacter \u00b6 class RealTransacter : Transacter Constructors \u00b6 Name Summary <init> RealTransacter(dataSource: DataSource ) Properties \u00b6 Name Summary inTransaction val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block. Functions \u00b6 Name Summary transaction fun <T> transaction(work: (connection: Connection ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. transactionWithSession fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed.","title":"RealTransacter - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/index.html#realtransacter","text":"class RealTransacter : Transacter","title":"RealTransacter"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/index.html#constructors","text":"Name Summary <init> RealTransacter(dataSource: DataSource )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/index.html#properties","text":"Name Summary inTransaction val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block.","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/index.html#functions","text":"Name Summary transaction fun <T> transaction(work: (connection: Connection ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. transactionWithSession fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed.","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/-init-.html","text":"misk-jdbc / misk.jdbc / RealTransacter / <init> <init> \u00b6 RealTransacter(dataSource: DataSource )","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/-init-.html#init","text":"RealTransacter(dataSource: DataSource )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/in-transaction.html","text":"misk-jdbc / misk.jdbc / RealTransacter / inTransaction inTransaction \u00b6 val inTransaction: Boolean Overrides Transacter.inTransaction Returns true if the calling thread is currently within a transaction block.","title":"inTransaction - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/in-transaction.html#intransaction","text":"val inTransaction: Boolean Overrides Transacter.inTransaction Returns true if the calling thread is currently within a transaction block.","title":"inTransaction"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/transaction-with-session.html","text":"misk-jdbc / misk.jdbc / RealTransacter / transactionWithSession transactionWithSession \u00b6 fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Overrides Transacter.transactionWithSession Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. This session object passed in wraps a connection and provides a way to add pre and post commit hooks that execute before and after a transaction is committed. It is an error to start a transaction if another transaction is already in progress.","title":"transactionWithSession - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/transaction-with-session.html#transactionwithsession","text":"fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Overrides Transacter.transactionWithSession Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. This session object passed in wraps a connection and provides a way to add pre and post commit hooks that execute before and after a transaction is committed. It is an error to start a transaction if another transaction is already in progress.","title":"transactionWithSession"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/transaction.html","text":"misk-jdbc / misk.jdbc / RealTransacter / transaction transaction \u00b6 fun <T> transaction(work: (connection: Connection ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. It is an error to start a transaction if another transaction is already in progress. Prefer using transactionWithSession instead of this method as it has more functionality such as commit hooks.","title":"transaction - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-real-transacter/transaction.html#transaction","text":"fun <T> transaction(work: (connection: Connection ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. It is an error to start a transaction if another transaction is already in progress. Prefer using transactionWithSession instead of this method as it has more functionality such as commit hooks.","title":"transaction"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/index.html","text":"misk-jdbc / misk.jdbc / SchemaMigratorService SchemaMigratorService \u00b6 class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit status fun status(): HealthStatus","title":"SchemaMigratorService - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/index.html#schemamigratorservice","text":"class SchemaMigratorService : AbstractIdleService, HealthCheck, DatabaseReadyService","title":"SchemaMigratorService"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit status fun status(): HealthStatus","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/shut-down.html","text":"misk-jdbc / misk.jdbc / SchemaMigratorService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/start-up.html","text":"misk-jdbc / misk.jdbc / SchemaMigratorService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/status.html","text":"misk-jdbc / misk.jdbc / SchemaMigratorService / status status \u00b6 fun status(): HealthStatus","title":"status - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-schema-migrator-service/status.html#status","text":"fun status(): HealthStatus","title":"status"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/index.html","text":"misk-jdbc / misk.jdbc / Session Session \u00b6 interface Session Functions \u00b6 Name Summary onPostCommit abstract fun onPostCommit(work: () -> Unit ): Unit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed onPreCommit abstract fun onPreCommit(work: () -> Unit ): Unit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back. onSessionClose abstract fun onSessionClose(work: () -> Unit ): Unit Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. useConnection abstract fun <T> useConnection(work: ( Connection ) -> T ): T Inheritors \u00b6 Name Summary JDBCSession class JDBCSession : Session","title":"Session - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/index.html#session","text":"interface Session","title":"Session"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/index.html#functions","text":"Name Summary onPostCommit abstract fun onPostCommit(work: () -> Unit ): Unit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed onPreCommit abstract fun onPreCommit(work: () -> Unit ): Unit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back. onSessionClose abstract fun onSessionClose(work: () -> Unit ): Unit Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. useConnection abstract fun <T> useConnection(work: ( Connection ) -> T ): T","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/index.html#inheritors","text":"Name Summary JDBCSession class JDBCSession : Session","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/on-post-commit.html","text":"misk-jdbc / misk.jdbc / Session / onPostCommit onPostCommit \u00b6 abstract fun onPostCommit(work: () -> Unit ): Unit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed","title":"onPostCommit - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/on-post-commit.html#onpostcommit","text":"abstract fun onPostCommit(work: () -> Unit ): Unit Registers a hook that fires after the session transaction commits. Post-commit hooks cannot affect the disposition of the transaction; if a post-commit hook fails, the failure will be logged but not propagated to the application, as the transaction will have already committed","title":"onPostCommit"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/on-pre-commit.html","text":"misk-jdbc / misk.jdbc / Session / onPreCommit onPreCommit \u00b6 abstract fun onPreCommit(work: () -> Unit ): Unit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back.","title":"onPreCommit - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/on-pre-commit.html#onprecommit","text":"abstract fun onPreCommit(work: () -> Unit ): Unit Registers a hook that fires before the session\u2019s transaction commits. Failures in a pre-commit hook will cause the transaction to be rolled back.","title":"onPreCommit"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/on-session-close.html","text":"misk-jdbc / misk.jdbc / Session / onSessionClose onSessionClose \u00b6 abstract fun onSessionClose(work: () -> Unit ): Unit Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. A new transaction can be initiated as part of this hook.","title":"onSessionClose - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/on-session-close.html#onsessionclose","text":"abstract fun onSessionClose(work: () -> Unit ): Unit Registers a hook that fires after a session is closed. This is called regardless if a session was successfully committed or rolled back. A new transaction can be initiated as part of this hook.","title":"onSessionClose"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/use-connection.html","text":"misk-jdbc / misk.jdbc / Session / useConnection useConnection \u00b6 abstract fun <T> useConnection(work: ( Connection ) -> T ): T","title":"useConnection - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-session/use-connection.html#useconnection","text":"abstract fun <T> useConnection(work: ( Connection ) -> T ): T","title":"useConnection"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/index.html","text":"misk-jdbc / misk.jdbc / SpanInjector SpanInjector \u00b6 class SpanInjector : QueryTransformer, DataSourceDecorator * On the fly decorates queries with the span context, so the query call can be traced all the way through Vitess Constructors \u00b6 Name Summary <init> SpanInjector(tracer: Tracer?, config: DataSourceConfig ) Properties \u00b6 Name Summary config val config: DataSourceConfig tracer val tracer: Tracer? Functions \u00b6 Name Summary decorate fun decorate(dataSource: DataSource ): DataSource transformQuery fun transformQuery(transformInfo: TransformInfo?): String","title":"SpanInjector - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/index.html#spaninjector","text":"class SpanInjector : QueryTransformer, DataSourceDecorator * On the fly decorates queries with the span context, so the query call can be traced all the way through Vitess","title":"SpanInjector"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/index.html#constructors","text":"Name Summary <init> SpanInjector(tracer: Tracer?, config: DataSourceConfig )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/index.html#properties","text":"Name Summary config val config: DataSourceConfig tracer val tracer: Tracer?","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/index.html#functions","text":"Name Summary decorate fun decorate(dataSource: DataSource ): DataSource transformQuery fun transformQuery(transformInfo: TransformInfo?): String","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/-init-.html","text":"misk-jdbc / misk.jdbc / SpanInjector / <init> <init> \u00b6 SpanInjector(tracer: Tracer?, config: DataSourceConfig ) * On the fly decorates queries with the span context, so the query call can be traced all the way through Vitess","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/-init-.html#init","text":"SpanInjector(tracer: Tracer?, config: DataSourceConfig ) * On the fly decorates queries with the span context, so the query call can be traced all the way through Vitess","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/config.html","text":"misk-jdbc / misk.jdbc / SpanInjector / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/decorate.html","text":"misk-jdbc / misk.jdbc / SpanInjector / decorate decorate \u00b6 fun decorate(dataSource: DataSource ): DataSource Overrides DataSourceDecorator.decorate","title":"decorate - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/decorate.html#decorate","text":"fun decorate(dataSource: DataSource ): DataSource Overrides DataSourceDecorator.decorate","title":"decorate"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/tracer.html","text":"misk-jdbc / misk.jdbc / SpanInjector / tracer tracer \u00b6 val tracer: Tracer?","title":"tracer - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/tracer.html#tracer","text":"val tracer: Tracer?","title":"tracer"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/transform-query.html","text":"misk-jdbc / misk.jdbc / SpanInjector / transformQuery transformQuery \u00b6 fun transformQuery(transformInfo: TransformInfo?): String","title":"transformQuery - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-span-injector/transform-query.html#transformquery","text":"fun transformQuery(transformInfo: TransformInfo?): String","title":"transformQuery"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/index.html","text":"misk-jdbc / misk.jdbc / StringBuilderCarrier StringBuilderCarrier \u00b6 class StringBuilderCarrier : TextMap Constructors \u00b6 Name Summary <init> StringBuilderCarrier() Properties \u00b6 Name Summary map val map: HashMap < String , String > Functions \u00b6 Name Summary iterator fun iterator(): MutableIterator < MutableEntry < String , String >> put fun put(key: String ?, value: String ?): Unit toString fun toString(): String","title":"StringBuilderCarrier - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/index.html#stringbuildercarrier","text":"class StringBuilderCarrier : TextMap","title":"StringBuilderCarrier"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/index.html#constructors","text":"Name Summary <init> StringBuilderCarrier()","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/index.html#properties","text":"Name Summary map val map: HashMap < String , String >","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/index.html#functions","text":"Name Summary iterator fun iterator(): MutableIterator < MutableEntry < String , String >> put fun put(key: String ?, value: String ?): Unit toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/-init-.html","text":"misk-jdbc / misk.jdbc / StringBuilderCarrier / <init> <init> \u00b6 StringBuilderCarrier()","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/-init-.html#init","text":"StringBuilderCarrier()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/iterator.html","text":"misk-jdbc / misk.jdbc / StringBuilderCarrier / iterator iterator \u00b6 fun iterator(): MutableIterator < MutableEntry < String , String >>","title":"iterator - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/iterator.html#iterator","text":"fun iterator(): MutableIterator < MutableEntry < String , String >>","title":"iterator"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/map.html","text":"misk-jdbc / misk.jdbc / StringBuilderCarrier / map map \u00b6 val map: HashMap < String , String >","title":"map - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/map.html#map","text":"val map: HashMap < String , String >","title":"map"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/put.html","text":"misk-jdbc / misk.jdbc / StringBuilderCarrier / put put \u00b6 fun put(key: String ?, value: String ?): Unit","title":"put - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/put.html#put","text":"fun put(key: String ?, value: String ?): Unit","title":"put"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/to-string.html","text":"misk-jdbc / misk.jdbc / StringBuilderCarrier / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-string-builder-carrier/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-jdbc/misk.jdbc/-table-scan-exception/index.html","text":"misk-jdbc / misk.jdbc / TableScanException TableScanException \u00b6 class TableScanException : CheckException Exception thrown if we execute a query lacking an index. Constructors \u00b6 Name Summary <init> TableScanException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we execute a query lacking an index.","title":"TableScanException - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-table-scan-exception/index.html#tablescanexception","text":"class TableScanException : CheckException Exception thrown if we execute a query lacking an index.","title":"TableScanException"},{"location":"0.x/misk-jdbc/misk.jdbc/-table-scan-exception/index.html#constructors","text":"Name Summary <init> TableScanException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we execute a query lacking an index.","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.jdbc/-table-scan-exception/-init-.html","text":"misk-jdbc / misk.jdbc / TableScanException / <init> <init> \u00b6 TableScanException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we execute a query lacking an index.","title":" init "},{"location":"0.x/misk-jdbc/misk.jdbc/-table-scan-exception/-init-.html#init","text":"TableScanException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we execute a query lacking an index.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/index.html","text":"misk-jdbc / misk.jdbc / Transacter Transacter \u00b6 interface Transacter Properties \u00b6 Name Summary inTransaction abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block. Functions \u00b6 Name Summary transactionWithSession abstract fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. Inheritors \u00b6 Name Summary RealTransacter class RealTransacter : Transacter","title":"Transacter - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/index.html#transacter","text":"interface Transacter","title":"Transacter"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/index.html#properties","text":"Name Summary inTransaction abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block.","title":"Properties"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/index.html#functions","text":"Name Summary transactionWithSession abstract fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed.","title":"Functions"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/index.html#inheritors","text":"Name Summary RealTransacter class RealTransacter : Transacter","title":"Inheritors"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/in-transaction.html","text":"misk-jdbc / misk.jdbc / Transacter / inTransaction inTransaction \u00b6 abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block.","title":"inTransaction - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/in-transaction.html#intransaction","text":"abstract val inTransaction: Boolean Returns true if the calling thread is currently within a transaction block.","title":"inTransaction"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/transaction-with-session.html","text":"misk-jdbc / misk.jdbc / Transacter / transactionWithSession transactionWithSession \u00b6 abstract fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. This session object passed in wraps a connection and provides a way to add pre and post commit hooks that execute before and after a transaction is committed. It is an error to start a transaction if another transaction is already in progress.","title":"transactionWithSession - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/-transacter/transaction-with-session.html#transactionwithsession","text":"abstract fun <T> transactionWithSession(work: (session: JDBCSession ) -> T ): T Starts a transaction on the current thread, executes work , and commits the transaction. If the work raises an exception the transaction will be rolled back instead of committed. This session object passed in wraps a connection and provides a way to add pre and post commit hooks that execute before and after a transaction is committed. It is an error to start a transaction if another transaction is already in progress.","title":"transactionWithSession"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/index.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet Extensions for java.sql.ResultSet \u00b6 Name Summary map fun <T> ResultSet .map(function: ( ResultSet ) -> T ): List < T > maybeInt fun ResultSet .maybeInt(): Int ? maybeLong fun ResultSet .maybeLong(): Long ? maybeResult fun <T> ResultSet .maybeResult(function: ( ResultSet ) -> T ): T ? maybeString fun ResultSet .maybeString(): String ? uniqueInt fun ResultSet .uniqueInt(): Int uniqueLong fun ResultSet .uniqueLong(): Long uniqueResult fun <T> ResultSet .uniqueResult(function: ( ResultSet ) -> T ): T uniqueString fun ResultSet .uniqueString(): String","title":"Extensions for java.sql.ResultSet - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/index.html#extensions-for-javasqlresultset","text":"Name Summary map fun <T> ResultSet .map(function: ( ResultSet ) -> T ): List < T > maybeInt fun ResultSet .maybeInt(): Int ? maybeLong fun ResultSet .maybeLong(): Long ? maybeResult fun <T> ResultSet .maybeResult(function: ( ResultSet ) -> T ): T ? maybeString fun ResultSet .maybeString(): String ? uniqueInt fun ResultSet .uniqueInt(): Int uniqueLong fun ResultSet .uniqueLong(): Long uniqueResult fun <T> ResultSet .uniqueResult(function: ( ResultSet ) -> T ): T uniqueString fun ResultSet .uniqueString(): String","title":"Extensions for java.sql.ResultSet"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/map.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / map map \u00b6 fun <T> ResultSet .map(function: ( ResultSet ) -> T ): List < T >","title":"map - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/map.html#map","text":"fun <T> ResultSet .map(function: ( ResultSet ) -> T ): List < T >","title":"map"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-int.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / maybeInt maybeInt \u00b6 fun ResultSet .maybeInt(): Int ?","title":"maybeInt - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-int.html#maybeint","text":"fun ResultSet .maybeInt(): Int ?","title":"maybeInt"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-long.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / maybeLong maybeLong \u00b6 fun ResultSet .maybeLong(): Long ?","title":"maybeLong - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-long.html#maybelong","text":"fun ResultSet .maybeLong(): Long ?","title":"maybeLong"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-result.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / maybeResult maybeResult \u00b6 fun <T> ResultSet .maybeResult(function: ( ResultSet ) -> T ): T ?","title":"maybeResult - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-result.html#mayberesult","text":"fun <T> ResultSet .maybeResult(function: ( ResultSet ) -> T ): T ?","title":"maybeResult"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-string.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / maybeString maybeString \u00b6 fun ResultSet .maybeString(): String ?","title":"maybeString - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/maybe-string.html#maybestring","text":"fun ResultSet .maybeString(): String ?","title":"maybeString"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-int.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / uniqueInt uniqueInt \u00b6 fun ResultSet .uniqueInt(): Int","title":"uniqueInt - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-int.html#uniqueint","text":"fun ResultSet .uniqueInt(): Int","title":"uniqueInt"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-long.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / uniqueLong uniqueLong \u00b6 fun ResultSet .uniqueLong(): Long","title":"uniqueLong - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-long.html#uniquelong","text":"fun ResultSet .uniqueLong(): Long","title":"uniqueLong"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-result.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / uniqueResult uniqueResult \u00b6 fun <T> ResultSet .uniqueResult(function: ( ResultSet ) -> T ): T","title":"uniqueResult - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-result.html#uniqueresult","text":"fun <T> ResultSet .uniqueResult(function: ( ResultSet ) -> T ): T","title":"uniqueResult"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-string.html","text":"misk-jdbc / misk.jdbc / java.sql.ResultSet / uniqueString uniqueString \u00b6 fun ResultSet .uniqueString(): String","title":"uniqueString - Misk"},{"location":"0.x/misk-jdbc/misk.jdbc/java.sql.-result-set/unique-string.html#uniquestring","text":"fun ResultSet .uniqueString(): String","title":"uniqueString"},{"location":"0.x/misk-jdbc/misk.vitess/index.html","text":"misk-jdbc / misk.vitess Package misk.vitess \u00b6 Types \u00b6 Name Summary Destination data class Destination Keyspace data class Keyspace Shard data class Shard TabletType enum class TabletType Exceptions \u00b6 Name Summary CowriteException class CowriteException : CheckException Thrown when a transaction that writes to multiple entity groups is detected. FullScatterException class FullScatterException : CheckException Exception thrown if we use a scatter query that is too wide in the wrong context. Extensions for External Classes \u00b6 Name Summary java.sql.Connection Functions \u00b6 Name Summary checkValidShardIdentifier fun checkValidShardIdentifier(identifier: String ): Unit getRootCause fun getRootCause(throwable: Throwable ): Throwable shards fun shards(dataSourceService: DataSourceService ): Supplier < Set < Shard >> tabletDoesNotExists fun tabletDoesNotExists(e: Exception ): Boolean","title":"Package misk.vitess - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/index.html#package-miskvitess","text":"","title":"Package misk.vitess"},{"location":"0.x/misk-jdbc/misk.vitess/index.html#types","text":"Name Summary Destination data class Destination Keyspace data class Keyspace Shard data class Shard TabletType enum class TabletType","title":"Types"},{"location":"0.x/misk-jdbc/misk.vitess/index.html#exceptions","text":"Name Summary CowriteException class CowriteException : CheckException Thrown when a transaction that writes to multiple entity groups is detected. FullScatterException class FullScatterException : CheckException Exception thrown if we use a scatter query that is too wide in the wrong context.","title":"Exceptions"},{"location":"0.x/misk-jdbc/misk.vitess/index.html#extensions-for-external-classes","text":"Name Summary java.sql.Connection","title":"Extensions for External Classes"},{"location":"0.x/misk-jdbc/misk.vitess/index.html#functions","text":"Name Summary checkValidShardIdentifier fun checkValidShardIdentifier(identifier: String ): Unit getRootCause fun getRootCause(throwable: Throwable ): Throwable shards fun shards(dataSourceService: DataSourceService ): Supplier < Set < Shard >> tabletDoesNotExists fun tabletDoesNotExists(e: Exception ): Boolean","title":"Functions"},{"location":"0.x/misk-jdbc/misk.vitess/check-valid-shard-identifier.html","text":"misk-jdbc / misk.vitess / checkValidShardIdentifier checkValidShardIdentifier \u00b6 fun checkValidShardIdentifier(identifier: String ): Unit","title":"checkValidShardIdentifier - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/check-valid-shard-identifier.html#checkvalidshardidentifier","text":"fun checkValidShardIdentifier(identifier: String ): Unit","title":"checkValidShardIdentifier"},{"location":"0.x/misk-jdbc/misk.vitess/get-root-cause.html","text":"misk-jdbc / misk.vitess / getRootCause getRootCause \u00b6 fun getRootCause(throwable: Throwable ): Throwable","title":"getRootCause - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/get-root-cause.html#getrootcause","text":"fun getRootCause(throwable: Throwable ): Throwable","title":"getRootCause"},{"location":"0.x/misk-jdbc/misk.vitess/shards.html","text":"misk-jdbc / misk.vitess / shards shards \u00b6 fun shards(dataSourceService: DataSourceService ): Supplier < Set < Shard >>","title":"shards - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/shards.html#shards","text":"fun shards(dataSourceService: DataSourceService ): Supplier < Set < Shard >>","title":"shards"},{"location":"0.x/misk-jdbc/misk.vitess/tablet-does-not-exists.html","text":"misk-jdbc / misk.vitess / tabletDoesNotExists tabletDoesNotExists \u00b6 fun tabletDoesNotExists(e: Exception ): Boolean","title":"tabletDoesNotExists - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/tablet-does-not-exists.html#tabletdoesnotexists","text":"fun tabletDoesNotExists(e: Exception ): Boolean","title":"tabletDoesNotExists"},{"location":"0.x/misk-jdbc/misk.vitess/-cowrite-exception/index.html","text":"misk-jdbc / misk.vitess / CowriteException CowriteException \u00b6 class CowriteException : CheckException Thrown when a transaction that writes to multiple entity groups is detected. Multi shard transactions are not safe and while multiple entity groups may currently reside on the same shard there is no guarantee they will do so across shard splits. A transaction never spans a shard split. That is they never start before the split and end after, either they commit before the split or they start after the split. That said a transaction may start before a shard split and then time out or cancel and be retried after the shard split. If two entity groups resided on the same shard before the transaction they may no longer do so when the transaction is retried. Constructors \u00b6 Name Summary <init> CowriteException(message: String ? = null, cause: Throwable ? = null) Thrown when a transaction that writes to multiple entity groups is detected.","title":"CowriteException - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-cowrite-exception/index.html#cowriteexception","text":"class CowriteException : CheckException Thrown when a transaction that writes to multiple entity groups is detected. Multi shard transactions are not safe and while multiple entity groups may currently reside on the same shard there is no guarantee they will do so across shard splits. A transaction never spans a shard split. That is they never start before the split and end after, either they commit before the split or they start after the split. That said a transaction may start before a shard split and then time out or cancel and be retried after the shard split. If two entity groups resided on the same shard before the transaction they may no longer do so when the transaction is retried.","title":"CowriteException"},{"location":"0.x/misk-jdbc/misk.vitess/-cowrite-exception/index.html#constructors","text":"Name Summary <init> CowriteException(message: String ? = null, cause: Throwable ? = null) Thrown when a transaction that writes to multiple entity groups is detected.","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.vitess/-cowrite-exception/-init-.html","text":"misk-jdbc / misk.vitess / CowriteException / <init> <init> \u00b6 CowriteException(message: String ? = null, cause: Throwable ? = null) Thrown when a transaction that writes to multiple entity groups is detected. Multi shard transactions are not safe and while multiple entity groups may currently reside on the same shard there is no guarantee they will do so across shard splits. A transaction never spans a shard split. That is they never start before the split and end after, either they commit before the split or they start after the split. That said a transaction may start before a shard split and then time out or cancel and be retried after the shard split. If two entity groups resided on the same shard before the transaction they may no longer do so when the transaction is retried.","title":" init "},{"location":"0.x/misk-jdbc/misk.vitess/-cowrite-exception/-init-.html#init","text":"CowriteException(message: String ? = null, cause: Throwable ? = null) Thrown when a transaction that writes to multiple entity groups is detected. Multi shard transactions are not safe and while multiple entity groups may currently reside on the same shard there is no guarantee they will do so across shard splits. A transaction never spans a shard split. That is they never start before the split and end after, either they commit before the split or they start after the split. That said a transaction may start before a shard split and then time out or cancel and be retried after the shard split. If two entity groups resided on the same shard before the transaction they may no longer do so when the transaction is retried.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/index.html","text":"misk-jdbc / misk.vitess / Destination Destination \u00b6 data class Destination Constructors \u00b6 Name Summary <init> Destination(shard: Shard ) Destination(tabletType: TabletType ) Destination(shard: Shard , tabletType: TabletType ) Destination(keyspace: Keyspace ?, shard: Shard ?, tabletType: TabletType ?) Properties \u00b6 Name Summary keyspace val keyspace: Keyspace ? shard val shard: Shard ? tabletType val tabletType: TabletType ? Functions \u00b6 Name Summary isBlank fun isBlank(): Boolean mergedWith fun mergedWith(other: Destination ): Destination toString fun toString(): String Companion Object Functions \u00b6 Name Summary parse fun parse(string: String ): Destination","title":"Destination - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/index.html#destination","text":"data class Destination","title":"Destination"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/index.html#constructors","text":"Name Summary <init> Destination(shard: Shard ) Destination(tabletType: TabletType ) Destination(shard: Shard , tabletType: TabletType ) Destination(keyspace: Keyspace ?, shard: Shard ?, tabletType: TabletType ?)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/index.html#properties","text":"Name Summary keyspace val keyspace: Keyspace ? shard val shard: Shard ? tabletType val tabletType: TabletType ?","title":"Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/index.html#functions","text":"Name Summary isBlank fun isBlank(): Boolean mergedWith fun mergedWith(other: Destination ): Destination toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/index.html#companion-object-functions","text":"Name Summary parse fun parse(string: String ): Destination","title":"Companion Object Functions"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/-init-.html","text":"misk-jdbc / misk.vitess / Destination / <init> <init> \u00b6 Destination(shard: Shard ) Destination(tabletType: TabletType ) Destination(shard: Shard , tabletType: TabletType ) Destination(keyspace: Keyspace ?, shard: Shard ?, tabletType: TabletType ?)","title":" init "},{"location":"0.x/misk-jdbc/misk.vitess/-destination/-init-.html#init","text":"Destination(shard: Shard ) Destination(tabletType: TabletType ) Destination(shard: Shard , tabletType: TabletType ) Destination(keyspace: Keyspace ?, shard: Shard ?, tabletType: TabletType ?)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/is-blank.html","text":"misk-jdbc / misk.vitess / Destination / isBlank isBlank \u00b6 fun isBlank(): Boolean","title":"isBlank - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/is-blank.html#isblank","text":"fun isBlank(): Boolean","title":"isBlank"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/keyspace.html","text":"misk-jdbc / misk.vitess / Destination / keyspace keyspace \u00b6 val keyspace: Keyspace ?","title":"keyspace - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/keyspace.html#keyspace","text":"val keyspace: Keyspace ?","title":"keyspace"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/merged-with.html","text":"misk-jdbc / misk.vitess / Destination / mergedWith mergedWith \u00b6 fun mergedWith(other: Destination ): Destination","title":"mergedWith - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/merged-with.html#mergedwith","text":"fun mergedWith(other: Destination ): Destination","title":"mergedWith"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/parse.html","text":"misk-jdbc / misk.vitess / Destination / parse parse \u00b6 fun parse(string: String ): Destination","title":"parse - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/parse.html#parse","text":"fun parse(string: String ): Destination","title":"parse"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/shard.html","text":"misk-jdbc / misk.vitess / Destination / shard shard \u00b6 val shard: Shard ?","title":"shard - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/shard.html#shard","text":"val shard: Shard ?","title":"shard"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/tablet-type.html","text":"misk-jdbc / misk.vitess / Destination / tabletType tabletType \u00b6 val tabletType: TabletType ?","title":"tabletType - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/tablet-type.html#tablettype","text":"val tabletType: TabletType ?","title":"tabletType"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/to-string.html","text":"misk-jdbc / misk.vitess / Destination / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-destination/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-jdbc/misk.vitess/-full-scatter-exception/index.html","text":"misk-jdbc / misk.vitess / FullScatterException FullScatterException \u00b6 class FullScatterException : CheckException Exception thrown if we use a scatter query that is too wide in the wrong context. Strongly consistent reads require reads from the master of a cluster. The master of a cluster is a limited resource that we can\u2019t add more of. We can split shards but a wide scatter query will still hit all of the shards so we can\u2019t scale if we have too many wide scatters. For this reason we do not allow wide scatters for strongly consistent reads. Note: For eventually consistent reads (that go to replicas) we may very well allow wide scatter queries because we can tune the availability by adding more replicas. Currently we do NOT differentiate between these types of reads for the detector but if you do need this it can be implemented. Constructors \u00b6 Name Summary <init> FullScatterException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we use a scatter query that is too wide in the wrong context.","title":"FullScatterException - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-full-scatter-exception/index.html#fullscatterexception","text":"class FullScatterException : CheckException Exception thrown if we use a scatter query that is too wide in the wrong context. Strongly consistent reads require reads from the master of a cluster. The master of a cluster is a limited resource that we can\u2019t add more of. We can split shards but a wide scatter query will still hit all of the shards so we can\u2019t scale if we have too many wide scatters. For this reason we do not allow wide scatters for strongly consistent reads. Note: For eventually consistent reads (that go to replicas) we may very well allow wide scatter queries because we can tune the availability by adding more replicas. Currently we do NOT differentiate between these types of reads for the detector but if you do need this it can be implemented.","title":"FullScatterException"},{"location":"0.x/misk-jdbc/misk.vitess/-full-scatter-exception/index.html#constructors","text":"Name Summary <init> FullScatterException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we use a scatter query that is too wide in the wrong context.","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.vitess/-full-scatter-exception/-init-.html","text":"misk-jdbc / misk.vitess / FullScatterException / <init> <init> \u00b6 FullScatterException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we use a scatter query that is too wide in the wrong context. Strongly consistent reads require reads from the master of a cluster. The master of a cluster is a limited resource that we can\u2019t add more of. We can split shards but a wide scatter query will still hit all of the shards so we can\u2019t scale if we have too many wide scatters. For this reason we do not allow wide scatters for strongly consistent reads. Note: For eventually consistent reads (that go to replicas) we may very well allow wide scatter queries because we can tune the availability by adding more replicas. Currently we do NOT differentiate between these types of reads for the detector but if you do need this it can be implemented.","title":" init "},{"location":"0.x/misk-jdbc/misk.vitess/-full-scatter-exception/-init-.html#init","text":"FullScatterException(message: String ? = null, cause: Throwable ? = null) Exception thrown if we use a scatter query that is too wide in the wrong context. Strongly consistent reads require reads from the master of a cluster. The master of a cluster is a limited resource that we can\u2019t add more of. We can split shards but a wide scatter query will still hit all of the shards so we can\u2019t scale if we have too many wide scatters. For this reason we do not allow wide scatters for strongly consistent reads. Note: For eventually consistent reads (that go to replicas) we may very well allow wide scatter queries because we can tune the availability by adding more replicas. Currently we do NOT differentiate between these types of reads for the detector but if you do need this it can be implemented.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/index.html","text":"misk-jdbc / misk.vitess / Keyspace Keyspace \u00b6 data class Keyspace Constructors \u00b6 Name Summary <init> Keyspace(name: String ) Properties \u00b6 Name Summary name val name: String Functions \u00b6 Name Summary toString fun toString(): String","title":"Keyspace - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/index.html#keyspace","text":"data class Keyspace","title":"Keyspace"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/index.html#constructors","text":"Name Summary <init> Keyspace(name: String )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/index.html#functions","text":"Name Summary toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/-init-.html","text":"misk-jdbc / misk.vitess / Keyspace / <init> <init> \u00b6 Keyspace(name: String )","title":" init "},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/-init-.html#init","text":"Keyspace(name: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/name.html","text":"misk-jdbc / misk.vitess / Keyspace / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/to-string.html","text":"misk-jdbc / misk.vitess / Keyspace / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-keyspace/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html","text":"misk-jdbc / misk.vitess / Shard Shard \u00b6 data class Shard Types \u00b6 Name Summary Key data class Key : Comparable < Shard.Key > Constructors \u00b6 Name Summary <init> Shard(keyspace: Keyspace , name: String ) Properties \u00b6 Name Summary keyspace val keyspace: Keyspace name val name: String Functions \u00b6 Name Summary contains operator fun contains(keyspaceId: Shard.Key ): Boolean keyRange fun keyRange(): Range< Shard.Key > toString fun toString(): String Companion Object Properties \u00b6 Name Summary MAX_LENGTH const val MAX_LENGTH: Int SINGLE_KEYSPACE val SINGLE_KEYSPACE: Keyspace SINGLE_SHARD val SINGLE_SHARD: Shard SINGLE_SHARD_ID const val SINGLE_SHARD_ID: String SINGLE_SHARD_SET val SINGLE_SHARD_SET: ImmutableSet< Shard !>! Companion Object Functions \u00b6 Name Summary parse fun parse(string: String ): Shard","title":"Shard - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html#shard","text":"data class Shard","title":"Shard"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html#types","text":"Name Summary Key data class Key : Comparable < Shard.Key >","title":"Types"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html#constructors","text":"Name Summary <init> Shard(keyspace: Keyspace , name: String )","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html#properties","text":"Name Summary keyspace val keyspace: Keyspace name val name: String","title":"Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html#functions","text":"Name Summary contains operator fun contains(keyspaceId: Shard.Key ): Boolean keyRange fun keyRange(): Range< Shard.Key > toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html#companion-object-properties","text":"Name Summary MAX_LENGTH const val MAX_LENGTH: Int SINGLE_KEYSPACE val SINGLE_KEYSPACE: Keyspace SINGLE_SHARD val SINGLE_SHARD: Shard SINGLE_SHARD_ID const val SINGLE_SHARD_ID: String SINGLE_SHARD_SET val SINGLE_SHARD_SET: ImmutableSet< Shard !>!","title":"Companion Object Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/index.html#companion-object-functions","text":"Name Summary parse fun parse(string: String ): Shard","title":"Companion Object Functions"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-init-.html","text":"misk-jdbc / misk.vitess / Shard / <init> <init> \u00b6 Shard(keyspace: Keyspace , name: String )","title":" init "},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-init-.html#init","text":"Shard(keyspace: Keyspace , name: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-m-a-x_-l-e-n-g-t-h.html","text":"misk-jdbc / misk.vitess / Shard / MAX_LENGTH MAX_LENGTH \u00b6 const val MAX_LENGTH: Int","title":"MAX_LENGTH - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-m-a-x_-l-e-n-g-t-h.html#max_length","text":"const val MAX_LENGTH: Int","title":"MAX_LENGTH"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-k-e-y-s-p-a-c-e.html","text":"misk-jdbc / misk.vitess / Shard / SINGLE_KEYSPACE SINGLE_KEYSPACE \u00b6 val SINGLE_KEYSPACE: Keyspace","title":"SINGLE_KEYSPACE - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-k-e-y-s-p-a-c-e.html#single_keyspace","text":"val SINGLE_KEYSPACE: Keyspace","title":"SINGLE_KEYSPACE"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-s-h-a-r-d.html","text":"misk-jdbc / misk.vitess / Shard / SINGLE_SHARD SINGLE_SHARD \u00b6 val SINGLE_SHARD: Shard","title":"SINGLE_SHARD - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-s-h-a-r-d.html#single_shard","text":"val SINGLE_SHARD: Shard","title":"SINGLE_SHARD"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-s-h-a-r-d_-i-d.html","text":"misk-jdbc / misk.vitess / Shard / SINGLE_SHARD_ID SINGLE_SHARD_ID \u00b6 const val SINGLE_SHARD_ID: String","title":"SINGLE_SHARD_ID - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-s-h-a-r-d_-i-d.html#single_shard_id","text":"const val SINGLE_SHARD_ID: String","title":"SINGLE_SHARD_ID"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-s-h-a-r-d_-s-e-t.html","text":"misk-jdbc / misk.vitess / Shard / SINGLE_SHARD_SET SINGLE_SHARD_SET \u00b6 val SINGLE_SHARD_SET: ImmutableSet< Shard !>!","title":"SINGLE_SHARD_SET - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-s-i-n-g-l-e_-s-h-a-r-d_-s-e-t.html#single_shard_set","text":"val SINGLE_SHARD_SET: ImmutableSet< Shard !>!","title":"SINGLE_SHARD_SET"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/contains.html","text":"misk-jdbc / misk.vitess / Shard / contains contains \u00b6 operator fun contains(keyspaceId: Shard.Key ): Boolean","title":"contains - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/contains.html#contains","text":"operator fun contains(keyspaceId: Shard.Key ): Boolean","title":"contains"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/key-range.html","text":"misk-jdbc / misk.vitess / Shard / keyRange keyRange \u00b6 fun keyRange(): Range< Shard.Key >","title":"keyRange - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/key-range.html#keyrange","text":"fun keyRange(): Range< Shard.Key >","title":"keyRange"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/keyspace.html","text":"misk-jdbc / misk.vitess / Shard / keyspace keyspace \u00b6 val keyspace: Keyspace","title":"keyspace - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/keyspace.html#keyspace","text":"val keyspace: Keyspace","title":"keyspace"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/name.html","text":"misk-jdbc / misk.vitess / Shard / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/parse.html","text":"misk-jdbc / misk.vitess / Shard / parse parse \u00b6 fun parse(string: String ): Shard","title":"parse - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/parse.html#parse","text":"fun parse(string: String ): Shard","title":"parse"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/to-string.html","text":"misk-jdbc / misk.vitess / Shard / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/index.html","text":"misk-jdbc / misk.vitess / Shard / Key Key \u00b6 data class Key : Comparable < Shard.Key > Constructors \u00b6 Name Summary <init> Key(hex: String ) Vitess always converts sharding keys to a left-justified binary string for computing a shard. This left-justification makes the right-most zeroes insignificant and optional. Key(bytes: ByteString) Properties \u00b6 Name Summary bytes val bytes: ByteString Functions \u00b6 Name Summary compareTo fun compareTo(other: Shard.Key ): Int Companion Object Functions \u00b6 Name Summary hash fun hash(id: Long ): Shard.Key","title":"Key - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/index.html#key","text":"data class Key : Comparable < Shard.Key >","title":"Key"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/index.html#constructors","text":"Name Summary <init> Key(hex: String ) Vitess always converts sharding keys to a left-justified binary string for computing a shard. This left-justification makes the right-most zeroes insignificant and optional. Key(bytes: ByteString)","title":"Constructors"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/index.html#properties","text":"Name Summary bytes val bytes: ByteString","title":"Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/index.html#functions","text":"Name Summary compareTo fun compareTo(other: Shard.Key ): Int","title":"Functions"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/index.html#companion-object-functions","text":"Name Summary hash fun hash(id: Long ): Shard.Key","title":"Companion Object Functions"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/-init-.html","text":"misk-jdbc / misk.vitess / Shard / Key / <init> <init> \u00b6 Key(hex: String ) Vitess always converts sharding keys to a left-justified binary string for computing a shard. This left-justification makes the right-most zeroes insignificant and optional. To make compareTo, equals and hashCode work properly in Java, these keys are force padded with 0\u2019s at the end. Dynamic end padding when comparing would break the equals/hashCode contract in Java. Key(bytes: ByteString)","title":" init "},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/-init-.html#init","text":"Key(hex: String ) Vitess always converts sharding keys to a left-justified binary string for computing a shard. This left-justification makes the right-most zeroes insignificant and optional. To make compareTo, equals and hashCode work properly in Java, these keys are force padded with 0\u2019s at the end. Dynamic end padding when comparing would break the equals/hashCode contract in Java. Key(bytes: ByteString)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/bytes.html","text":"misk-jdbc / misk.vitess / Shard / Key / bytes bytes \u00b6 val bytes: ByteString","title":"bytes - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/bytes.html#bytes","text":"val bytes: ByteString","title":"bytes"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/compare-to.html","text":"misk-jdbc / misk.vitess / Shard / Key / compareTo compareTo \u00b6 fun compareTo(other: Shard.Key ): Int","title":"compareTo - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/compare-to.html#compareto","text":"fun compareTo(other: Shard.Key ): Int","title":"compareTo"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/hash.html","text":"misk-jdbc / misk.vitess / Shard / Key / hash hash \u00b6 fun hash(id: Long ): Shard.Key","title":"hash - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-shard/-key/hash.html#hash","text":"fun hash(id: Long ): Shard.Key","title":"hash"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/index.html","text":"misk-jdbc / misk.vitess / TabletType TabletType \u00b6 enum class TabletType Enum Values \u00b6 Name Summary MASTER REPLICA Properties \u00b6 Name Summary value val value: Int","title":"TabletType - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/index.html#tablettype","text":"enum class TabletType","title":"TabletType"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/index.html#enum-values","text":"Name Summary MASTER REPLICA","title":"Enum Values"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/index.html#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/-m-a-s-t-e-r.html","text":"misk-jdbc / misk.vitess / TabletType / MASTER MASTER \u00b6 MASTER Inherited Properties \u00b6 Name Summary value val value: Int","title":"MASTER - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/-m-a-s-t-e-r.html#master","text":"MASTER","title":"MASTER"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/-m-a-s-t-e-r.html#inherited-properties","text":"Name Summary value val value: Int","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/-r-e-p-l-i-c-a.html","text":"misk-jdbc / misk.vitess / TabletType / REPLICA REPLICA \u00b6 REPLICA Inherited Properties \u00b6 Name Summary value val value: Int","title":"REPLICA - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/-r-e-p-l-i-c-a.html#replica","text":"REPLICA","title":"REPLICA"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/-r-e-p-l-i-c-a.html#inherited-properties","text":"Name Summary value val value: Int","title":"Inherited Properties"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/value.html","text":"misk-jdbc / misk.vitess / TabletType / value value \u00b6 val value: Int","title":"value - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/-tablet-type/value.html#value","text":"val value: Int","title":"value"},{"location":"0.x/misk-jdbc/misk.vitess/java.sql.-connection/index.html","text":"misk-jdbc / misk.vitess / java.sql.Connection Extensions for java.sql.Connection \u00b6 Name Summary failSafeRead fun <T> Connection .failSafeRead(block: (conn: Connection ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Connection .failSafeRead(shard: Shard , block: (conn: Connection ) -> T ): T target fun <T> Connection .target(shard: Shard , block: (conn: Connection ) -> T ): T","title":"Extensions for java.sql.Connection - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/java.sql.-connection/index.html#extensions-for-javasqlconnection","text":"Name Summary failSafeRead fun <T> Connection .failSafeRead(block: (conn: Connection ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Connection .failSafeRead(shard: Shard , block: (conn: Connection ) -> T ): T target fun <T> Connection .target(shard: Shard , block: (conn: Connection ) -> T ): T","title":"Extensions for java.sql.Connection"},{"location":"0.x/misk-jdbc/misk.vitess/java.sql.-connection/fail-safe-read.html","text":"misk-jdbc / misk.vitess / java.sql.Connection / failSafeRead failSafeRead \u00b6 fun <T> Connection .failSafeRead(block: (conn: Connection ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Connection .failSafeRead(shard: Shard , block: (conn: Connection ) -> T ): T","title":"failSafeRead - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/java.sql.-connection/fail-safe-read.html#failsaferead","text":"fun <T> Connection .failSafeRead(block: (conn: Connection ) -> T ): T Runs a read on master first then tries it on replicas on failure. This method is here only for health check purpose for standby regions. fun <T> Connection .failSafeRead(shard: Shard , block: (conn: Connection ) -> T ): T","title":"failSafeRead"},{"location":"0.x/misk-jdbc/misk.vitess/java.sql.-connection/target.html","text":"misk-jdbc / misk.vitess / java.sql.Connection / target target \u00b6 fun <T> Connection .target(shard: Shard , block: (conn: Connection ) -> T ): T","title":"target - Misk"},{"location":"0.x/misk-jdbc/misk.vitess/java.sql.-connection/target.html#target","text":"fun <T> Connection .target(shard: Shard , block: (conn: Connection ) -> T ): T","title":"target"},{"location":"0.x/misk-jdbc-testing/index.html","text":"misk-jdbc-testing Packages \u00b6 Name Summary misk.jdbc misk.vitess Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-jdbc-testing/index.html#packages","text":"Name Summary misk.jdbc misk.vitess","title":"Packages"},{"location":"0.x/misk-jdbc-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-jdbc-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.jdbc.ExtendedQueryExecutionListener misk.jdbc.JdbcTestingModule Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . misk.jdbc.MySqlScaleSafetyChecks misk.jdbc.ScaleSafetyChecks misk.jdbc.TestDatabasePool Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. misk.jdbc.TruncateTablesService Truncate tables before running each test. misk.vitess.VitessScaleSafetyChecks Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":"All Types - Misk"},{"location":"0.x/misk-jdbc-testing/alltypes/index.html#all-types","text":"Name Summary misk.jdbc.ExtendedQueryExecutionListener misk.jdbc.JdbcTestingModule Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . misk.jdbc.MySqlScaleSafetyChecks misk.jdbc.ScaleSafetyChecks misk.jdbc.TestDatabasePool Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. misk.jdbc.TruncateTablesService Truncate tables before running each test. misk.vitess.VitessScaleSafetyChecks Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":"All Types"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/index.html","text":"misk-jdbc-testing / misk.jdbc Package misk.jdbc \u00b6 Types \u00b6 Name Summary ExtendedQueryExecutionListener open class ExtendedQueryExecutionListener : QueryExecutionListener, MethodExecutionListener JdbcTestingModule class JdbcTestingModule : KAbstractModule Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . MySqlScaleSafetyChecks class MySqlScaleSafetyChecks : DataSourceDecorator ScaleSafetyChecks object ScaleSafetyChecks TestDatabasePool class TestDatabasePool : DatabasePool Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. TruncateTablesService class TruncateTablesService : AbstractIdleService Truncate tables before running each test. Properties \u00b6 Name Summary SHARED_TEST_DATABASE_POOL val SHARED_TEST_DATABASE_POOL: TestDatabasePool A DatabasePool that is used in tests to get a unique database for each test suite.","title":"Package misk.jdbc - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/index.html#package-miskjdbc","text":"","title":"Package misk.jdbc"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/index.html#types","text":"Name Summary ExtendedQueryExecutionListener open class ExtendedQueryExecutionListener : QueryExecutionListener, MethodExecutionListener JdbcTestingModule class JdbcTestingModule : KAbstractModule Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . MySqlScaleSafetyChecks class MySqlScaleSafetyChecks : DataSourceDecorator ScaleSafetyChecks object ScaleSafetyChecks TestDatabasePool class TestDatabasePool : DatabasePool Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. TruncateTablesService class TruncateTablesService : AbstractIdleService Truncate tables before running each test.","title":"Types"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/index.html#properties","text":"Name Summary SHARED_TEST_DATABASE_POOL val SHARED_TEST_DATABASE_POOL: TestDatabasePool A DatabasePool that is used in tests to get a unique database for each test suite.","title":"Properties"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-s-h-a-r-e-d_-t-e-s-t_-d-a-t-a-b-a-s-e_-p-o-o-l.html","text":"misk-jdbc-testing / misk.jdbc / SHARED_TEST_DATABASE_POOL SHARED_TEST_DATABASE_POOL \u00b6 val SHARED_TEST_DATABASE_POOL: TestDatabasePool A DatabasePool that is used in tests to get a unique database for each test suite. See misk.hibernate.HibernateTestingModule for usage instructions.","title":"SHARED_TEST_DATABASE_POOL - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-s-h-a-r-e-d_-t-e-s-t_-d-a-t-a-b-a-s-e_-p-o-o-l.html#shared_test_database_pool","text":"val SHARED_TEST_DATABASE_POOL: TestDatabasePool A DatabasePool that is used in tests to get a unique database for each test suite. See misk.hibernate.HibernateTestingModule for usage instructions.","title":"SHARED_TEST_DATABASE_POOL"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/index.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener ExtendedQueryExecutionListener \u00b6 open class ExtendedQueryExecutionListener : QueryExecutionListener, MethodExecutionListener Constructors \u00b6 Name Summary <init> ExtendedQueryExecutionListener() Functions \u00b6 Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit open fun afterQuery(query: String ): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit open fun beforeQuery(query: String ): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit Inheritors \u00b6 Name Summary CowriteDetector inner class CowriteDetector : ExtendedQueryExecutionListener FullScatterDetector inner class FullScatterDetector : ExtendedQueryExecutionListener TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener","title":"ExtendedQueryExecutionListener - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/index.html#extendedqueryexecutionlistener","text":"open class ExtendedQueryExecutionListener : QueryExecutionListener, MethodExecutionListener","title":"ExtendedQueryExecutionListener"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/index.html#constructors","text":"Name Summary <init> ExtendedQueryExecutionListener()","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/index.html#functions","text":"Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit open fun afterQuery(query: String ): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit open fun beforeQuery(query: String ): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/index.html#inheritors","text":"Name Summary CowriteDetector inner class CowriteDetector : ExtendedQueryExecutionListener FullScatterDetector inner class FullScatterDetector : ExtendedQueryExecutionListener TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener","title":"Inheritors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/-init-.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / <init> <init> \u00b6 ExtendedQueryExecutionListener()","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/-init-.html#init","text":"ExtendedQueryExecutionListener()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-commit-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / afterCommitTransaction afterCommitTransaction \u00b6 protected open fun afterCommitTransaction(): Unit","title":"afterCommitTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-commit-transaction.html#aftercommittransaction","text":"protected open fun afterCommitTransaction(): Unit","title":"afterCommitTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-end-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / afterEndTransaction afterEndTransaction \u00b6 protected open fun afterEndTransaction(): Unit","title":"afterEndTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-end-transaction.html#afterendtransaction","text":"protected open fun afterEndTransaction(): Unit","title":"afterEndTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-method.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / afterMethod afterMethod \u00b6 open fun afterMethod(executionContext: MethodExecutionContext): Unit","title":"afterMethod - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-method.html#aftermethod","text":"open fun afterMethod(executionContext: MethodExecutionContext): Unit","title":"afterMethod"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-query.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / afterQuery afterQuery \u00b6 fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit protected open fun afterQuery(query: String ): Unit","title":"afterQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-query.html#afterquery","text":"fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit protected open fun afterQuery(query: String ): Unit","title":"afterQuery"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-rollback-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / afterRollbackTransaction afterRollbackTransaction \u00b6 protected open fun afterRollbackTransaction(): Unit","title":"afterRollbackTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-rollback-transaction.html#afterrollbacktransaction","text":"protected open fun afterRollbackTransaction(): Unit","title":"afterRollbackTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-start-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / afterStartTransaction afterStartTransaction \u00b6 protected open fun afterStartTransaction(): Unit","title":"afterStartTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/after-start-transaction.html#afterstarttransaction","text":"protected open fun afterStartTransaction(): Unit","title":"afterStartTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-commit-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / beforeCommitTransaction beforeCommitTransaction \u00b6 protected open fun beforeCommitTransaction(): Unit","title":"beforeCommitTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-commit-transaction.html#beforecommittransaction","text":"protected open fun beforeCommitTransaction(): Unit","title":"beforeCommitTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-end-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / beforeEndTransaction beforeEndTransaction \u00b6 protected open fun beforeEndTransaction(): Unit","title":"beforeEndTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-end-transaction.html#beforeendtransaction","text":"protected open fun beforeEndTransaction(): Unit","title":"beforeEndTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-method.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / beforeMethod beforeMethod \u00b6 open fun beforeMethod(executionContext: MethodExecutionContext): Unit","title":"beforeMethod - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-method.html#beforemethod","text":"open fun beforeMethod(executionContext: MethodExecutionContext): Unit","title":"beforeMethod"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-query.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / beforeQuery beforeQuery \u00b6 fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit protected open fun beforeQuery(query: String ): Unit","title":"beforeQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-query.html#beforequery","text":"fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit protected open fun beforeQuery(query: String ): Unit","title":"beforeQuery"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-rollback-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / beforeRollbackTransaction beforeRollbackTransaction \u00b6 protected open fun beforeRollbackTransaction(): Unit","title":"beforeRollbackTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-rollback-transaction.html#beforerollbacktransaction","text":"protected open fun beforeRollbackTransaction(): Unit","title":"beforeRollbackTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-start-transaction.html","text":"misk-jdbc-testing / misk.jdbc / ExtendedQueryExecutionListener / beforeStartTransaction beforeStartTransaction \u00b6 protected open fun beforeStartTransaction(): Unit","title":"beforeStartTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-extended-query-execution-listener/before-start-transaction.html#beforestarttransaction","text":"protected open fun beforeStartTransaction(): Unit","title":"beforeStartTransaction"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/index.html","text":"misk-jdbc-testing / misk.jdbc / JdbcTestingModule JdbcTestingModule \u00b6 class JdbcTestingModule : KAbstractModule Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . If you run your tests in parallel, you need to install the JdbcModule as follows to ensure that your test suites do not share databases concurrently: install(JdbcModule(MyDatabase::class, dataSourceConfig, SHARED_TEST_DATABASE_POOL)) See misk.jdbc.SHARED_TEST_DATABASE_POOL . Constructors \u00b6 Name Summary <init> JdbcTestingModule(qualifier: KClass <out Annotation >, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf(), scaleSafetyChecks: Boolean = false) Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . Functions \u00b6 Name Summary configure fun configure(): Unit","title":"JdbcTestingModule - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/index.html#jdbctestingmodule","text":"class JdbcTestingModule : KAbstractModule Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . If you run your tests in parallel, you need to install the JdbcModule as follows to ensure that your test suites do not share databases concurrently: install(JdbcModule(MyDatabase::class, dataSourceConfig, SHARED_TEST_DATABASE_POOL)) See misk.jdbc.SHARED_TEST_DATABASE_POOL .","title":"JdbcTestingModule"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/index.html#constructors","text":"Name Summary <init> JdbcTestingModule(qualifier: KClass <out Annotation >, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf(), scaleSafetyChecks: Boolean = false) Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule .","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/-init-.html","text":"misk-jdbc-testing / misk.jdbc / JdbcTestingModule / <init> <init> \u00b6 JdbcTestingModule(qualifier: KClass <out Annotation >, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf(), scaleSafetyChecks: Boolean = false) Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . If you run your tests in parallel, you need to install the JdbcModule as follows to ensure that your test suites do not share databases concurrently: install(JdbcModule(MyDatabase::class, dataSourceConfig, SHARED_TEST_DATABASE_POOL)) See misk.jdbc.SHARED_TEST_DATABASE_POOL .","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/-init-.html#init","text":"JdbcTestingModule(qualifier: KClass <out Annotation >, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf(), scaleSafetyChecks: Boolean = false) Installs a service to clear the test datasource before running tests. This module should be installed alongside the JdbcModule . If you run your tests in parallel, you need to install the JdbcModule as follows to ensure that your test suites do not share databases concurrently: install(JdbcModule(MyDatabase::class, dataSourceConfig, SHARED_TEST_DATABASE_POOL)) See misk.jdbc.SHARED_TEST_DATABASE_POOL .","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/configure.html","text":"misk-jdbc-testing / misk.jdbc / JdbcTestingModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-jdbc-testing-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/index.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks MySqlScaleSafetyChecks \u00b6 @Singleton class MySqlScaleSafetyChecks : DataSourceDecorator Types \u00b6 Name Summary TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener Constructors \u00b6 Name Summary <init> MySqlScaleSafetyChecks(config: DataSourceConfig) Properties \u00b6 Name Summary config val config: DataSourceConfig Functions \u00b6 Name Summary connect fun connect(): Connection decorate fun decorate(dataSource: DataSource ): DataSource","title":"MySqlScaleSafetyChecks - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/index.html#mysqlscalesafetychecks","text":"@Singleton class MySqlScaleSafetyChecks : DataSourceDecorator","title":"MySqlScaleSafetyChecks"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/index.html#types","text":"Name Summary TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener","title":"Types"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/index.html#constructors","text":"Name Summary <init> MySqlScaleSafetyChecks(config: DataSourceConfig)","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/index.html#properties","text":"Name Summary config val config: DataSourceConfig","title":"Properties"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/index.html#functions","text":"Name Summary connect fun connect(): Connection decorate fun decorate(dataSource: DataSource ): DataSource","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-init-.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / <init> <init> \u00b6 MySqlScaleSafetyChecks(config: DataSourceConfig)","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-init-.html#init","text":"MySqlScaleSafetyChecks(config: DataSourceConfig)","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/config.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/connect.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / connect connect \u00b6 fun connect(): Connection","title":"connect - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/connect.html#connect","text":"fun connect(): Connection","title":"connect"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/decorate.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / decorate decorate \u00b6 fun decorate(dataSource: DataSource ): DataSource","title":"decorate - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/decorate.html#decorate","text":"fun decorate(dataSource: DataSource ): DataSource","title":"decorate"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/index.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / TableScanDetector TableScanDetector \u00b6 inner class TableScanDetector : ExtendedQueryExecutionListener Constructors \u00b6 Name Summary <init> TableScanDetector() Functions \u00b6 Name Summary afterQuery fun afterQuery(query: String ): Unit beforeQuery fun beforeQuery(query: String ): Unit Inherited Functions \u00b6 Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit","title":"TableScanDetector - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/index.html#tablescandetector","text":"inner class TableScanDetector : ExtendedQueryExecutionListener","title":"TableScanDetector"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/index.html#constructors","text":"Name Summary <init> TableScanDetector()","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/index.html#functions","text":"Name Summary afterQuery fun afterQuery(query: String ): Unit beforeQuery fun beforeQuery(query: String ): Unit","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/index.html#inherited-functions","text":"Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit","title":"Inherited Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/-init-.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / TableScanDetector / <init> <init> \u00b6 TableScanDetector()","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/-init-.html#init","text":"TableScanDetector()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/after-query.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / TableScanDetector / afterQuery afterQuery \u00b6 protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/after-query.html#afterquery","text":"protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/before-query.html","text":"misk-jdbc-testing / misk.jdbc / MySqlScaleSafetyChecks / TableScanDetector / beforeQuery beforeQuery \u00b6 protected fun beforeQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.beforeQuery","title":"beforeQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-my-sql-scale-safety-checks/-table-scan-detector/before-query.html#beforequery","text":"protected fun beforeQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.beforeQuery","title":"beforeQuery"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/index.html","text":"misk-jdbc-testing / misk.jdbc / ScaleSafetyChecks ScaleSafetyChecks \u00b6 object ScaleSafetyChecks Functions \u00b6 Name Summary checkQueryForTableScan fun checkQueryForTableScan(connection: Connection , database: String ?, query: String ): Unit extractQueriesSince fun extractQueriesSince(connection: Connection , mysqlTime: Timestamp ): List < String > Digs into the MySQL log to find the last executed DML statement. getLastLoggedCommand fun getLastLoggedCommand(connection: Connection ): Timestamp ? isDml fun isDml(query: String ): Boolean turnOnSqlGeneralLogging fun turnOnSqlGeneralLogging(connection: Connection ): Unit Turn on MySQL general_log so that we can inspect it in the detectors.","title":"ScaleSafetyChecks - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/index.html#scalesafetychecks","text":"object ScaleSafetyChecks","title":"ScaleSafetyChecks"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/index.html#functions","text":"Name Summary checkQueryForTableScan fun checkQueryForTableScan(connection: Connection , database: String ?, query: String ): Unit extractQueriesSince fun extractQueriesSince(connection: Connection , mysqlTime: Timestamp ): List < String > Digs into the MySQL log to find the last executed DML statement. getLastLoggedCommand fun getLastLoggedCommand(connection: Connection ): Timestamp ? isDml fun isDml(query: String ): Boolean turnOnSqlGeneralLogging fun turnOnSqlGeneralLogging(connection: Connection ): Unit Turn on MySQL general_log so that we can inspect it in the detectors.","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/check-query-for-table-scan.html","text":"misk-jdbc-testing / misk.jdbc / ScaleSafetyChecks / checkQueryForTableScan checkQueryForTableScan \u00b6 fun checkQueryForTableScan(connection: Connection , database: String ?, query: String ): Unit","title":"checkQueryForTableScan - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/check-query-for-table-scan.html#checkqueryfortablescan","text":"fun checkQueryForTableScan(connection: Connection , database: String ?, query: String ): Unit","title":"checkQueryForTableScan"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/extract-queries-since.html","text":"misk-jdbc-testing / misk.jdbc / ScaleSafetyChecks / extractQueriesSince extractQueriesSince \u00b6 fun extractQueriesSince(connection: Connection , mysqlTime: Timestamp ): List < String > Digs into the MySQL log to find the last executed DML statement.","title":"extractQueriesSince - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/extract-queries-since.html#extractqueriessince","text":"fun extractQueriesSince(connection: Connection , mysqlTime: Timestamp ): List < String > Digs into the MySQL log to find the last executed DML statement.","title":"extractQueriesSince"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/get-last-logged-command.html","text":"misk-jdbc-testing / misk.jdbc / ScaleSafetyChecks / getLastLoggedCommand getLastLoggedCommand \u00b6 fun getLastLoggedCommand(connection: Connection ): Timestamp ?","title":"getLastLoggedCommand - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/get-last-logged-command.html#getlastloggedcommand","text":"fun getLastLoggedCommand(connection: Connection ): Timestamp ?","title":"getLastLoggedCommand"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/is-dml.html","text":"misk-jdbc-testing / misk.jdbc / ScaleSafetyChecks / isDml isDml \u00b6 fun isDml(query: String ): Boolean","title":"isDml - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/is-dml.html#isdml","text":"fun isDml(query: String ): Boolean","title":"isDml"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/turn-on-sql-general-logging.html","text":"misk-jdbc-testing / misk.jdbc / ScaleSafetyChecks / turnOnSqlGeneralLogging turnOnSqlGeneralLogging \u00b6 fun turnOnSqlGeneralLogging(connection: Connection ): Unit Turn on MySQL general_log so that we can inspect it in the detectors.","title":"turnOnSqlGeneralLogging - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-scale-safety-checks/turn-on-sql-general-logging.html#turnonsqlgenerallogging","text":"fun turnOnSqlGeneralLogging(connection: Connection ): Unit Turn on MySQL general_log so that we can inspect it in the detectors.","title":"turnOnSqlGeneralLogging"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/index.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool TestDatabasePool \u00b6 class TestDatabasePool : DatabasePool Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. These are used only in tests, so that each test gets a reserved database to avoid parallelism issues. Thread-safe. Types \u00b6 Name Summary Backend interface Backend A backend for a ConfigSpecificPool . DatabaseName data class DatabaseName Constructors \u00b6 Name Summary <init> TestDatabasePool(backend: TestDatabasePool.Backend , clock: Clock ) Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. Properties \u00b6 Name Summary backend val backend: TestDatabasePool.Backend clock val clock: Clock Functions \u00b6 Name Summary pruneOldDatabases fun pruneOldDatabases(retention: Duration = Duration.ofDays(2)): Unit Drops all databases that were created by an allocator which are older than the retention duration of this allocator. releaseDatabase fun releaseDatabase(config: DataSourceConfig): Unit takeDatabase fun takeDatabase(config: DataSourceConfig): DataSourceConfig","title":"TestDatabasePool - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/index.html#testdatabasepool","text":"class TestDatabasePool : DatabasePool Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. These are used only in tests, so that each test gets a reserved database to avoid parallelism issues. Thread-safe.","title":"TestDatabasePool"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/index.html#types","text":"Name Summary Backend interface Backend A backend for a ConfigSpecificPool . DatabaseName data class DatabaseName","title":"Types"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/index.html#constructors","text":"Name Summary <init> TestDatabasePool(backend: TestDatabasePool.Backend , clock: Clock ) Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number.","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/index.html#properties","text":"Name Summary backend val backend: TestDatabasePool.Backend clock val clock: Clock","title":"Properties"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/index.html#functions","text":"Name Summary pruneOldDatabases fun pruneOldDatabases(retention: Duration = Duration.ofDays(2)): Unit Drops all databases that were created by an allocator which are older than the retention duration of this allocator. releaseDatabase fun releaseDatabase(config: DataSourceConfig): Unit takeDatabase fun takeDatabase(config: DataSourceConfig): DataSourceConfig","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-init-.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / <init> <init> \u00b6 TestDatabasePool(backend: TestDatabasePool.Backend , clock: Clock ) Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. These are used only in tests, so that each test gets a reserved database to avoid parallelism issues. Thread-safe.","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-init-.html#init","text":"TestDatabasePool(backend: TestDatabasePool.Backend , clock: Clock ) Manages an inventory of databases for testing. Databases are named like movies__20190730__5 where movies is the database name in a DataSourceConfig , 20190730 is today\u2019s date, and 5 is a sequence number. These are used only in tests, so that each test gets a reserved database to avoid parallelism issues. Thread-safe.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/backend.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / backend backend \u00b6 val backend: TestDatabasePool.Backend","title":"backend - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/backend.html#backend","text":"val backend: TestDatabasePool.Backend","title":"backend"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/clock.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / clock clock \u00b6 val clock: Clock","title":"clock - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/clock.html#clock","text":"val clock: Clock","title":"clock"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/prune-old-databases.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / pruneOldDatabases pruneOldDatabases \u00b6 fun pruneOldDatabases(retention: Duration = Duration.ofDays(2)): Unit Drops all databases that were created by an allocator which are older than the retention duration of this allocator. Parameters \u00b6 retention - Must be longer than any test could possibly run for.","title":"pruneOldDatabases - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/prune-old-databases.html#pruneolddatabases","text":"fun pruneOldDatabases(retention: Duration = Duration.ofDays(2)): Unit Drops all databases that were created by an allocator which are older than the retention duration of this allocator.","title":"pruneOldDatabases"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/prune-old-databases.html#parameters","text":"retention - Must be longer than any test could possibly run for.","title":"Parameters"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/release-database.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / releaseDatabase releaseDatabase \u00b6 fun releaseDatabase(config: DataSourceConfig): Unit","title":"releaseDatabase - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/release-database.html#releasedatabase","text":"fun releaseDatabase(config: DataSourceConfig): Unit","title":"releaseDatabase"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/take-database.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / takeDatabase takeDatabase \u00b6 fun takeDatabase(config: DataSourceConfig): DataSourceConfig","title":"takeDatabase - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/take-database.html#takedatabase","text":"fun takeDatabase(config: DataSourceConfig): DataSourceConfig","title":"takeDatabase"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/index.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / Backend Backend \u00b6 interface Backend A backend for a ConfigSpecificPool . Functions \u00b6 Name Summary createDatabase abstract fun createDatabase(name: String ): Unit Attempts to create the indicated database in the data source. dropDatabase abstract fun dropDatabase(name: String ): Unit Drops the indicated database from the data source. showDatabases abstract fun showDatabases(): Set < String > Returns a list of all databases present in the data source.","title":"Backend - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/index.html#backend","text":"interface Backend A backend for a ConfigSpecificPool .","title":"Backend"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/index.html#functions","text":"Name Summary createDatabase abstract fun createDatabase(name: String ): Unit Attempts to create the indicated database in the data source. dropDatabase abstract fun dropDatabase(name: String ): Unit Drops the indicated database from the data source. showDatabases abstract fun showDatabases(): Set < String > Returns a list of all databases present in the data source.","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/create-database.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / Backend / createDatabase createDatabase \u00b6 abstract fun createDatabase(name: String ): Unit Attempts to create the indicated database in the data source. Throws PersistenceException if the database already exists.","title":"createDatabase - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/create-database.html#createdatabase","text":"abstract fun createDatabase(name: String ): Unit Attempts to create the indicated database in the data source. Throws PersistenceException if the database already exists.","title":"createDatabase"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/drop-database.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / Backend / dropDatabase dropDatabase \u00b6 abstract fun dropDatabase(name: String ): Unit Drops the indicated database from the data source. Throws PersistenceException if the database cannot be dropped (i.e. it does not exist).","title":"dropDatabase - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/drop-database.html#dropdatabase","text":"abstract fun dropDatabase(name: String ): Unit Drops the indicated database from the data source. Throws PersistenceException if the database cannot be dropped (i.e. it does not exist).","title":"dropDatabase"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/show-databases.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / Backend / showDatabases showDatabases \u00b6 abstract fun showDatabases(): Set < String > Returns a list of all databases present in the data source.","title":"showDatabases - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-backend/show-databases.html#showdatabases","text":"abstract fun showDatabases(): Set < String > Returns a list of all databases present in the data source.","title":"showDatabases"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/index.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / DatabaseName DatabaseName \u00b6 data class DatabaseName Constructors \u00b6 Name Summary <init> DatabaseName(name: String , yearMonthDay: Long , version: Int ) Properties \u00b6 Name Summary name val name: String version val version: Int yearMonthDay val yearMonthDay: Long Functions \u00b6 Name Summary toString fun toString(): String","title":"DatabaseName - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/index.html#databasename","text":"data class DatabaseName","title":"DatabaseName"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/index.html#constructors","text":"Name Summary <init> DatabaseName(name: String , yearMonthDay: Long , version: Int )","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/index.html#properties","text":"Name Summary name val name: String version val version: Int yearMonthDay val yearMonthDay: Long","title":"Properties"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/index.html#functions","text":"Name Summary toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/-init-.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / DatabaseName / <init> <init> \u00b6 DatabaseName(name: String , yearMonthDay: Long , version: Int )","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/-init-.html#init","text":"DatabaseName(name: String , yearMonthDay: Long , version: Int )","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/name.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / DatabaseName / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/to-string.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / DatabaseName / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/version.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / DatabaseName / version version \u00b6 val version: Int","title":"version - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/version.html#version","text":"val version: Int","title":"version"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/year-month-day.html","text":"misk-jdbc-testing / misk.jdbc / TestDatabasePool / DatabaseName / yearMonthDay yearMonthDay \u00b6 val yearMonthDay: Long","title":"yearMonthDay - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-test-database-pool/-database-name/year-month-day.html#yearmonthday","text":"val yearMonthDay: Long","title":"yearMonthDay"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/index.html","text":"misk-jdbc-testing / misk.jdbc / TruncateTablesService TruncateTablesService \u00b6 class TruncateTablesService : AbstractIdleService Truncate tables before running each test. This deletes the data in the tables but leaves the schema as-is. It also leaves the schema_version table as is. We truncate before tests because that way we always have a clean slate, even if a preceding test wasn\u2019t able to clean up after itself. Constructors \u00b6 Name Summary <init> TruncateTablesService(qualifier: KClass <out Annotation >, dataSourceService: DataSourceService, transacterProvider: Provider<Transacter>, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf()) Truncate tables before running each test. Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"TruncateTablesService - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/index.html#truncatetablesservice","text":"class TruncateTablesService : AbstractIdleService Truncate tables before running each test. This deletes the data in the tables but leaves the schema as-is. It also leaves the schema_version table as is. We truncate before tests because that way we always have a clean slate, even if a preceding test wasn\u2019t able to clean up after itself.","title":"TruncateTablesService"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/index.html#constructors","text":"Name Summary <init> TruncateTablesService(qualifier: KClass <out Annotation >, dataSourceService: DataSourceService, transacterProvider: Provider<Transacter>, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf()) Truncate tables before running each test.","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/-init-.html","text":"misk-jdbc-testing / misk.jdbc / TruncateTablesService / <init> <init> \u00b6 TruncateTablesService(qualifier: KClass <out Annotation >, dataSourceService: DataSourceService, transacterProvider: Provider<Transacter>, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf()) Truncate tables before running each test. This deletes the data in the tables but leaves the schema as-is. It also leaves the schema_version table as is. We truncate before tests because that way we always have a clean slate, even if a preceding test wasn\u2019t able to clean up after itself.","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/-init-.html#init","text":"TruncateTablesService(qualifier: KClass <out Annotation >, dataSourceService: DataSourceService, transacterProvider: Provider<Transacter>, startUpStatements: List < String > = listOf(), shutDownStatements: List < String > = listOf()) Truncate tables before running each test. This deletes the data in the tables but leaves the schema as-is. It also leaves the schema_version table as is. We truncate before tests because that way we always have a clean slate, even if a preceding test wasn\u2019t able to clean up after itself.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/shut-down.html","text":"misk-jdbc-testing / misk.jdbc / TruncateTablesService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/start-up.html","text":"misk-jdbc-testing / misk.jdbc / TruncateTablesService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-jdbc-testing/misk.jdbc/-truncate-tables-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-jdbc-testing/misk.vitess/index.html","text":"misk-jdbc-testing / misk.vitess Package misk.vitess \u00b6 Types \u00b6 Name Summary VitessScaleSafetyChecks class VitessScaleSafetyChecks : DataSourceDecorator Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":"Package misk.vitess - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/index.html#package-miskvitess","text":"","title":"Package misk.vitess"},{"location":"0.x/misk-jdbc-testing/misk.vitess/index.html#types","text":"Name Summary VitessScaleSafetyChecks class VitessScaleSafetyChecks : DataSourceDecorator Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":"Types"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/index.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks VitessScaleSafetyChecks \u00b6 @Singleton class VitessScaleSafetyChecks : DataSourceDecorator Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production. Types \u00b6 Name Summary CowriteDetector inner class CowriteDetector : ExtendedQueryExecutionListener FullScatterDetector inner class FullScatterDetector : ExtendedQueryExecutionListener TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener Constructors \u00b6 Name Summary <init> VitessScaleSafetyChecks(config: DataSourceConfig, okHttpClient: OkHttpClient, moshi: Moshi, startDatabaseService: StartDatabaseService) Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production. Properties \u00b6 Name Summary config val config: DataSourceConfig moshi val moshi: Moshi okHttpClient val okHttpClient: OkHttpClient startDatabaseService val startDatabaseService: StartDatabaseService Functions \u00b6 Name Summary connect fun connect(): Connection ? Connects directly to the Docker Vitess mysqld, bypassing vtgate entirely. We use this to dig into the query log. This is a perpetual, not connection pooled connection so should not be closed. We shut down the Vitess docker container after the tests have completed running so this doesn\u2019t need to be closed explicitly. decorate fun decorate(dataSource: DataSource ): DataSource","title":"VitessScaleSafetyChecks - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/index.html#vitessscalesafetychecks","text":"@Singleton class VitessScaleSafetyChecks : DataSourceDecorator Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":"VitessScaleSafetyChecks"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/index.html#types","text":"Name Summary CowriteDetector inner class CowriteDetector : ExtendedQueryExecutionListener FullScatterDetector inner class FullScatterDetector : ExtendedQueryExecutionListener TableScanDetector inner class TableScanDetector : ExtendedQueryExecutionListener","title":"Types"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/index.html#constructors","text":"Name Summary <init> VitessScaleSafetyChecks(config: DataSourceConfig, okHttpClient: OkHttpClient, moshi: Moshi, startDatabaseService: StartDatabaseService) Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/index.html#properties","text":"Name Summary config val config: DataSourceConfig moshi val moshi: Moshi okHttpClient val okHttpClient: OkHttpClient startDatabaseService val startDatabaseService: StartDatabaseService","title":"Properties"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/index.html#functions","text":"Name Summary connect fun connect(): Connection ? Connects directly to the Docker Vitess mysqld, bypassing vtgate entirely. We use this to dig into the query log. This is a perpetual, not connection pooled connection so should not be closed. We shut down the Vitess docker container after the tests have completed running so this doesn\u2019t need to be closed explicitly. decorate fun decorate(dataSource: DataSource ): DataSource","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-init-.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / <init> <init> \u00b6 VitessScaleSafetyChecks(config: DataSourceConfig, okHttpClient: OkHttpClient, moshi: Moshi, startDatabaseService: StartDatabaseService) Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-init-.html#init","text":"VitessScaleSafetyChecks(config: DataSourceConfig, okHttpClient: OkHttpClient, moshi: Moshi, startDatabaseService: StartDatabaseService) Throws a FullScatterException for scatter queries that doesn\u2019t have a lookup vindex. Note: Current implementation is not thread safe and will not work in production.","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/config.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / config config \u00b6 val config: DataSourceConfig","title":"config - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/config.html#config","text":"val config: DataSourceConfig","title":"config"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/connect.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / connect connect \u00b6 fun connect(): Connection ? Connects directly to the Docker Vitess mysqld, bypassing vtgate entirely. We use this to dig into the query log. This is a perpetual, not connection pooled connection so should not be closed. We shut down the Vitess docker container after the tests have completed running so this doesn\u2019t need to be closed explicitly.","title":"connect - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/connect.html#connect","text":"fun connect(): Connection ? Connects directly to the Docker Vitess mysqld, bypassing vtgate entirely. We use this to dig into the query log. This is a perpetual, not connection pooled connection so should not be closed. We shut down the Vitess docker container after the tests have completed running so this doesn\u2019t need to be closed explicitly.","title":"connect"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/decorate.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / decorate decorate \u00b6 fun decorate(dataSource: DataSource ): DataSource","title":"decorate - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/decorate.html#decorate","text":"fun decorate(dataSource: DataSource ): DataSource","title":"decorate"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/moshi.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / moshi moshi \u00b6 val moshi: Moshi","title":"moshi - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/moshi.html#moshi","text":"val moshi: Moshi","title":"moshi"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/ok-http-client.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / okHttpClient okHttpClient \u00b6 val okHttpClient: OkHttpClient","title":"okHttpClient - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/ok-http-client.html#okhttpclient","text":"val okHttpClient: OkHttpClient","title":"okHttpClient"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/start-database-service.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / startDatabaseService startDatabaseService \u00b6 val startDatabaseService: StartDatabaseService","title":"startDatabaseService - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/start-database-service.html#startdatabaseservice","text":"val startDatabaseService: StartDatabaseService","title":"startDatabaseService"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/index.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / CowriteDetector CowriteDetector \u00b6 inner class CowriteDetector : ExtendedQueryExecutionListener Constructors \u00b6 Name Summary <init> CowriteDetector() Functions \u00b6 Name Summary afterQuery fun afterQuery(query: String ): Unit beforeEndTransaction fun beforeEndTransaction(): Unit beforeStartTransaction fun beforeStartTransaction(): Unit Inherited Functions \u00b6 Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit open fun beforeQuery(query: String ): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit","title":"CowriteDetector - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/index.html#cowritedetector","text":"inner class CowriteDetector : ExtendedQueryExecutionListener","title":"CowriteDetector"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/index.html#constructors","text":"Name Summary <init> CowriteDetector()","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/index.html#functions","text":"Name Summary afterQuery fun afterQuery(query: String ): Unit beforeEndTransaction fun beforeEndTransaction(): Unit beforeStartTransaction fun beforeStartTransaction(): Unit","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/index.html#inherited-functions","text":"Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit open fun beforeQuery(query: String ): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit","title":"Inherited Functions"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/-init-.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / CowriteDetector / <init> <init> \u00b6 CowriteDetector()","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/-init-.html#init","text":"CowriteDetector()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/after-query.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / CowriteDetector / afterQuery afterQuery \u00b6 protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/after-query.html#afterquery","text":"protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/before-end-transaction.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / CowriteDetector / beforeEndTransaction beforeEndTransaction \u00b6 protected fun beforeEndTransaction(): Unit Overrides ExtendedQueryExecutionListener.beforeEndTransaction","title":"beforeEndTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/before-end-transaction.html#beforeendtransaction","text":"protected fun beforeEndTransaction(): Unit Overrides ExtendedQueryExecutionListener.beforeEndTransaction","title":"beforeEndTransaction"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/before-start-transaction.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / CowriteDetector / beforeStartTransaction beforeStartTransaction \u00b6 protected fun beforeStartTransaction(): Unit Overrides ExtendedQueryExecutionListener.beforeStartTransaction","title":"beforeStartTransaction - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-cowrite-detector/before-start-transaction.html#beforestarttransaction","text":"protected fun beforeStartTransaction(): Unit Overrides ExtendedQueryExecutionListener.beforeStartTransaction","title":"beforeStartTransaction"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/index.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / FullScatterDetector FullScatterDetector \u00b6 inner class FullScatterDetector : ExtendedQueryExecutionListener Constructors \u00b6 Name Summary <init> FullScatterDetector() Functions \u00b6 Name Summary afterQuery fun afterQuery(query: String ): Unit beforeQuery fun beforeQuery(query: String ): Unit Inherited Functions \u00b6 Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit","title":"FullScatterDetector - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/index.html#fullscatterdetector","text":"inner class FullScatterDetector : ExtendedQueryExecutionListener","title":"FullScatterDetector"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/index.html#constructors","text":"Name Summary <init> FullScatterDetector()","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/index.html#functions","text":"Name Summary afterQuery fun afterQuery(query: String ): Unit beforeQuery fun beforeQuery(query: String ): Unit","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/index.html#inherited-functions","text":"Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit","title":"Inherited Functions"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/-init-.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / FullScatterDetector / <init> <init> \u00b6 FullScatterDetector()","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/-init-.html#init","text":"FullScatterDetector()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/after-query.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / FullScatterDetector / afterQuery afterQuery \u00b6 protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/after-query.html#afterquery","text":"protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/before-query.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / FullScatterDetector / beforeQuery beforeQuery \u00b6 protected fun beforeQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.beforeQuery","title":"beforeQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-full-scatter-detector/before-query.html#beforequery","text":"protected fun beforeQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.beforeQuery","title":"beforeQuery"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/index.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / TableScanDetector TableScanDetector \u00b6 inner class TableScanDetector : ExtendedQueryExecutionListener Constructors \u00b6 Name Summary <init> TableScanDetector() Functions \u00b6 Name Summary afterQuery fun afterQuery(query: String ): Unit beforeQuery fun beforeQuery(query: String ): Unit Inherited Functions \u00b6 Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit","title":"TableScanDetector - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/index.html#tablescandetector","text":"inner class TableScanDetector : ExtendedQueryExecutionListener","title":"TableScanDetector"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/index.html#constructors","text":"Name Summary <init> TableScanDetector()","title":"Constructors"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/index.html#functions","text":"Name Summary afterQuery fun afterQuery(query: String ): Unit beforeQuery fun beforeQuery(query: String ): Unit","title":"Functions"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/index.html#inherited-functions","text":"Name Summary afterCommitTransaction open fun afterCommitTransaction(): Unit afterEndTransaction open fun afterEndTransaction(): Unit afterMethod open fun afterMethod(executionContext: MethodExecutionContext): Unit afterQuery fun afterQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit afterRollbackTransaction open fun afterRollbackTransaction(): Unit afterStartTransaction open fun afterStartTransaction(): Unit beforeCommitTransaction open fun beforeCommitTransaction(): Unit beforeEndTransaction open fun beforeEndTransaction(): Unit beforeMethod open fun beforeMethod(executionContext: MethodExecutionContext): Unit beforeQuery fun beforeQuery(execInfo: ExecutionInfo?, queryInfoList: List <QueryInfo>?): Unit beforeRollbackTransaction open fun beforeRollbackTransaction(): Unit beforeStartTransaction open fun beforeStartTransaction(): Unit","title":"Inherited Functions"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/-init-.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / TableScanDetector / <init> <init> \u00b6 TableScanDetector()","title":" init "},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/-init-.html#init","text":"TableScanDetector()","title":"&lt;init&gt;"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/after-query.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / TableScanDetector / afterQuery afterQuery \u00b6 protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/after-query.html#afterquery","text":"protected fun afterQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.afterQuery","title":"afterQuery"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/before-query.html","text":"misk-jdbc-testing / misk.vitess / VitessScaleSafetyChecks / TableScanDetector / beforeQuery beforeQuery \u00b6 protected fun beforeQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.beforeQuery","title":"beforeQuery - Misk"},{"location":"0.x/misk-jdbc-testing/misk.vitess/-vitess-scale-safety-checks/-table-scan-detector/before-query.html#beforequery","text":"protected fun beforeQuery(query: String ): Unit Overrides ExtendedQueryExecutionListener.beforeQuery","title":"beforeQuery"},{"location":"0.x/misk-jobqueue/index.html","text":"misk-jobqueue Packages \u00b6 Name Summary misk.jobqueue Index \u00b6 All Types","title":"misk-jobqueue"},{"location":"0.x/misk-jobqueue/index.html#packages","text":"Name Summary misk.jobqueue","title":"Packages"},{"location":"0.x/misk-jobqueue/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-jobqueue/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.jobqueue.Job Incoming job misk.jobqueue.JobConsumer A JobConsumer allows applications to subscribe to receive incoming jobs misk.jobqueue.JobHandler A JobHandler is an application implemented interface that handles jobs received by this service. JobHandler s must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded. misk.jobqueue.JobQueue A JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface misk.jobqueue.QueueName","title":"All Types - Misk"},{"location":"0.x/misk-jobqueue/alltypes/index.html#all-types","text":"Name Summary misk.jobqueue.Job Incoming job misk.jobqueue.JobConsumer A JobConsumer allows applications to subscribe to receive incoming jobs misk.jobqueue.JobHandler A JobHandler is an application implemented interface that handles jobs received by this service. JobHandler s must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded. misk.jobqueue.JobQueue A JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface misk.jobqueue.QueueName","title":"All Types"},{"location":"0.x/misk-jobqueue/misk.jobqueue/index.html","text":"misk-jobqueue / misk.jobqueue Package misk.jobqueue \u00b6 Types \u00b6 Name Summary Job interface Job Incoming job JobConsumer interface JobConsumer A JobConsumer allows applications to subscribe to receive incoming jobs JobHandler interface JobHandler A JobHandler is an application implemented interface that handles jobs received by this service. JobHandler s must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded. JobQueue interface JobQueue A JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface QueueName data class QueueName Functions \u00b6 Name Summary subscribe fun JobConsumer .subscribe(queueName: QueueName , handler: ( Job ) -> Unit ): Unit","title":"Package misk.jobqueue - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/index.html#package-miskjobqueue","text":"","title":"Package misk.jobqueue"},{"location":"0.x/misk-jobqueue/misk.jobqueue/index.html#types","text":"Name Summary Job interface Job Incoming job JobConsumer interface JobConsumer A JobConsumer allows applications to subscribe to receive incoming jobs JobHandler interface JobHandler A JobHandler is an application implemented interface that handles jobs received by this service. JobHandler s must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded. JobQueue interface JobQueue A JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface QueueName data class QueueName","title":"Types"},{"location":"0.x/misk-jobqueue/misk.jobqueue/index.html#functions","text":"Name Summary subscribe fun JobConsumer .subscribe(queueName: QueueName , handler: ( Job ) -> Unit ): Unit","title":"Functions"},{"location":"0.x/misk-jobqueue/misk.jobqueue/subscribe.html","text":"misk-jobqueue / misk.jobqueue / subscribe subscribe \u00b6 inline fun JobConsumer .subscribe(queueName: QueueName , crossinline handler: ( Job ) -> Unit ): Unit","title":"subscribe - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/subscribe.html#subscribe","text":"inline fun JobConsumer .subscribe(queueName: QueueName , crossinline handler: ( Job ) -> Unit ): Unit","title":"subscribe"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/index.html","text":"misk-jobqueue / misk.jobqueue / Job Job \u00b6 interface Job Incoming job Properties \u00b6 Name Summary attributes abstract val attributes: Map < String , String > context attributes associated with the job body abstract val body: String body of the job id abstract val id: String system assigned globally unique id for the job idempotenceKey abstract val idempotenceKey: String Application assigned key for a job. queueName abstract val queueName: QueueName name of the queue on which the job was received Functions \u00b6 Name Summary acknowledge abstract fun acknowledge(): Unit Acknowledges the job and deletes it from the underlying queue. May perform an RPC, and thus should not be called while holding database transactions or other resources deadLetter abstract fun deadLetter(): Unit Moves the job from the main queue onto the associated dead letter queue. May perform an RPC","title":"Job - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/index.html#job","text":"interface Job Incoming job","title":"Job"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/index.html#properties","text":"Name Summary attributes abstract val attributes: Map < String , String > context attributes associated with the job body abstract val body: String body of the job id abstract val id: String system assigned globally unique id for the job idempotenceKey abstract val idempotenceKey: String Application assigned key for a job. queueName abstract val queueName: QueueName name of the queue on which the job was received","title":"Properties"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/index.html#functions","text":"Name Summary acknowledge abstract fun acknowledge(): Unit Acknowledges the job and deletes it from the underlying queue. May perform an RPC, and thus should not be called while holding database transactions or other resources deadLetter abstract fun deadLetter(): Unit Moves the job from the main queue onto the associated dead letter queue. May perform an RPC","title":"Functions"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/acknowledge.html","text":"misk-jobqueue / misk.jobqueue / Job / acknowledge acknowledge \u00b6 abstract fun acknowledge(): Unit Acknowledges the job and deletes it from the underlying queue. May perform an RPC, and thus should not be called while holding database transactions or other resources","title":"acknowledge - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/acknowledge.html#acknowledge","text":"abstract fun acknowledge(): Unit Acknowledges the job and deletes it from the underlying queue. May perform an RPC, and thus should not be called while holding database transactions or other resources","title":"acknowledge"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/attributes.html","text":"misk-jobqueue / misk.jobqueue / Job / attributes attributes \u00b6 abstract val attributes: Map < String , String > context attributes associated with the job","title":"attributes - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/attributes.html#attributes","text":"abstract val attributes: Map < String , String > context attributes associated with the job","title":"attributes"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/body.html","text":"misk-jobqueue / misk.jobqueue / Job / body body \u00b6 abstract val body: String body of the job","title":"body - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/body.html#body","text":"abstract val body: String body of the job","title":"body"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/dead-letter.html","text":"misk-jobqueue / misk.jobqueue / Job / deadLetter deadLetter \u00b6 abstract fun deadLetter(): Unit Moves the job from the main queue onto the associated dead letter queue. May perform an RPC","title":"deadLetter - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/dead-letter.html#deadletter","text":"abstract fun deadLetter(): Unit Moves the job from the main queue onto the associated dead letter queue. May perform an RPC","title":"deadLetter"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/id.html","text":"misk-jobqueue / misk.jobqueue / Job / id id \u00b6 abstract val id: String system assigned globally unique id for the job","title":"id - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/id.html#id","text":"abstract val id: String system assigned globally unique id for the job","title":"id"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/idempotence-key.html","text":"misk-jobqueue / misk.jobqueue / Job / idempotenceKey idempotenceKey \u00b6 abstract val idempotenceKey: String Application assigned key for a job. See Also JobQueue.enqueue","title":"idempotenceKey - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/idempotence-key.html#idempotencekey","text":"abstract val idempotenceKey: String Application assigned key for a job. See Also JobQueue.enqueue","title":"idempotenceKey"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/queue-name.html","text":"misk-jobqueue / misk.jobqueue / Job / queueName queueName \u00b6 abstract val queueName: QueueName name of the queue on which the job was received","title":"queueName - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job/queue-name.html#queuename","text":"abstract val queueName: QueueName name of the queue on which the job was received","title":"queueName"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-consumer/index.html","text":"misk-jobqueue / misk.jobqueue / JobConsumer JobConsumer \u00b6 interface JobConsumer A JobConsumer allows applications to subscribe to receive incoming jobs Functions \u00b6 Name Summary subscribe abstract fun subscribe(queueName: QueueName , handler: JobHandler ): Unit Registers a handler to receive messages. Once registered, the consumer will immediately begin receiving messages from the underlying job queue and dispatch them to the provided handler. A service may only have one subscription outstanding per queue Extension Functions \u00b6 Name Summary subscribe fun JobConsumer .subscribe(queueName: QueueName , handler: ( Job ) -> Unit ): Unit","title":"JobConsumer - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-consumer/index.html#jobconsumer","text":"interface JobConsumer A JobConsumer allows applications to subscribe to receive incoming jobs","title":"JobConsumer"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-consumer/index.html#functions","text":"Name Summary subscribe abstract fun subscribe(queueName: QueueName , handler: JobHandler ): Unit Registers a handler to receive messages. Once registered, the consumer will immediately begin receiving messages from the underlying job queue and dispatch them to the provided handler. A service may only have one subscription outstanding per queue","title":"Functions"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-consumer/index.html#extension-functions","text":"Name Summary subscribe fun JobConsumer .subscribe(queueName: QueueName , handler: ( Job ) -> Unit ): Unit","title":"Extension Functions"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-consumer/subscribe.html","text":"misk-jobqueue / misk.jobqueue / JobConsumer / subscribe subscribe \u00b6 abstract fun subscribe(queueName: QueueName , handler: JobHandler ): Unit Registers a handler to receive messages. Once registered, the consumer will immediately begin receiving messages from the underlying job queue and dispatch them to the provided handler. A service may only have one subscription outstanding per queue","title":"subscribe - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-consumer/subscribe.html#subscribe","text":"abstract fun subscribe(queueName: QueueName , handler: JobHandler ): Unit Registers a handler to receive messages. Once registered, the consumer will immediately begin receiving messages from the underlying job queue and dispatch them to the provided handler. A service may only have one subscription outstanding per queue","title":"subscribe"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-handler/index.html","text":"misk-jobqueue / misk.jobqueue / JobHandler JobHandler \u00b6 interface JobHandler A JobHandler is an application implemented interface that handles jobs received by this service. JobHandler s must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded. Functions \u00b6 Name Summary handleJob abstract fun handleJob(job: Job ): Unit","title":"JobHandler - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-handler/index.html#jobhandler","text":"interface JobHandler A JobHandler is an application implemented interface that handles jobs received by this service. JobHandler s must explicitly call Job.acknowledge after successful processing to cause the to be deleted from the underlying queue and not redelivered, or can call Job.deadLetter to put the job onto the associated dead letter queue. The jobqueue framework assumes that the underlying queueing system is at-least-once, so handlers must be prepared for the possibility that a job will be delivered more than once (for example if the process fails or the visibility timeout expires after processing but before acknowledgement). Typically this is handled by either storing some sort of ticket in the local database when the job is enqueued and deleting it as part of the application transaction when the job is processed but prior to acknowledgement, or by storing some sort of \u201cprocessed marker\u201d in the local database during job processing and ignoring jobs whose marker is already recorded.","title":"JobHandler"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-handler/index.html#functions","text":"Name Summary handleJob abstract fun handleJob(job: Job ): Unit","title":"Functions"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-handler/handle-job.html","text":"misk-jobqueue / misk.jobqueue / JobHandler / handleJob handleJob \u00b6 abstract fun handleJob(job: Job ): Unit","title":"handleJob - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-handler/handle-job.html#handlejob","text":"abstract fun handleJob(job: Job ): Unit","title":"handleJob"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/index.html","text":"misk-jobqueue / misk.jobqueue / JobQueue JobQueue \u00b6 interface JobQueue A JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface Types \u00b6 Name Summary EnqueueErrorResult data class EnqueueErrorResult Data class containing the error result of a failed job enqueue JobRequest data class JobRequest Data class containing the necessary information to be enqueued in a batch enqueue Exceptions \u00b6 Name Summary BatchEnqueueException data class BatchEnqueueException : Exception Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned Functions \u00b6 Name Summary batchEnqueue abstract fun batchEnqueue(queueName: QueueName , jobs: List < JobQueue.JobRequest >): Unit throws BatchEnqueueException contains the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned enqueue open fun enqueue(queueName: QueueName , body: String , deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit abstract fun enqueue(queueName: QueueName , body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueue a job onto the given queue, along with a set of job attributes. Companion Object Properties \u00b6 Name Summary SQS_MAX_BATCH_ENQUEUE_JOB_SIZE const val SQS_MAX_BATCH_ENQUEUE_JOB_SIZE: Int","title":"JobQueue - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/index.html#jobqueue","text":"interface JobQueue A JobQueue enqueues jobs for asynchronous execution, possibly in another process. Jobs are enqueued immediately and may involve an RPC to the underlying job queueing system, so should not be done from within a database transaction. Applications that need to enqueue jobs atomically with a local database transaction should use the TransactionalJobQueue interface","title":"JobQueue"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/index.html#types","text":"Name Summary EnqueueErrorResult data class EnqueueErrorResult Data class containing the error result of a failed job enqueue JobRequest data class JobRequest Data class containing the necessary information to be enqueued in a batch enqueue","title":"Types"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/index.html#exceptions","text":"Name Summary BatchEnqueueException data class BatchEnqueueException : Exception Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned","title":"Exceptions"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/index.html#functions","text":"Name Summary batchEnqueue abstract fun batchEnqueue(queueName: QueueName , jobs: List < JobQueue.JobRequest >): Unit throws BatchEnqueueException contains the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned enqueue open fun enqueue(queueName: QueueName , body: String , deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit abstract fun enqueue(queueName: QueueName , body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueue a job onto the given queue, along with a set of job attributes.","title":"Functions"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/index.html#companion-object-properties","text":"Name Summary SQS_MAX_BATCH_ENQUEUE_JOB_SIZE const val SQS_MAX_BATCH_ENQUEUE_JOB_SIZE: Int","title":"Companion Object Properties"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-s-q-s_-m-a-x_-b-a-t-c-h_-e-n-q-u-e-u-e_-j-o-b_-s-i-z-e.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / SQS_MAX_BATCH_ENQUEUE_JOB_SIZE SQS_MAX_BATCH_ENQUEUE_JOB_SIZE \u00b6 const val SQS_MAX_BATCH_ENQUEUE_JOB_SIZE: Int","title":"SQS_MAX_BATCH_ENQUEUE_JOB_SIZE - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-s-q-s_-m-a-x_-b-a-t-c-h_-e-n-q-u-e-u-e_-j-o-b_-s-i-z-e.html#sqs_max_batch_enqueue_job_size","text":"const val SQS_MAX_BATCH_ENQUEUE_JOB_SIZE: Int","title":"SQS_MAX_BATCH_ENQUEUE_JOB_SIZE"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/batch-enqueue.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / batchEnqueue batchEnqueue \u00b6 abstract fun batchEnqueue(queueName: QueueName , jobs: List < JobQueue.JobRequest >): Unit throws BatchEnqueueException contains the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned","title":"batchEnqueue - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/batch-enqueue.html#batchenqueue","text":"abstract fun batchEnqueue(queueName: QueueName , jobs: List < JobQueue.JobRequest >): Unit throws BatchEnqueueException contains the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned","title":"batchEnqueue"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/enqueue.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / enqueue enqueue \u00b6 open fun enqueue(queueName: QueueName , body: String , deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit abstract fun enqueue(queueName: QueueName , body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueue a job onto the given queue, along with a set of job attributes. Parameters \u00b6 queueName - The name of the queue on which to place the job. body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). If a longer delay is required by applications, use the TransactionalJobQueue interface instead. attributes - Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message.","title":"enqueue - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/enqueue.html#enqueue","text":"open fun enqueue(queueName: QueueName , body: String , deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit abstract fun enqueue(queueName: QueueName , body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueue a job onto the given queue, along with a set of job attributes.","title":"enqueue"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/enqueue.html#parameters","text":"queueName - The name of the queue on which to place the job. body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). If a longer delay is required by applications, use the TransactionalJobQueue interface instead. attributes - Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message.","title":"Parameters"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/index.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / BatchEnqueueException BatchEnqueueException \u00b6 data class BatchEnqueueException : Exception Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned Constructors \u00b6 Name Summary <init> BatchEnqueueException(queueName: QueueName , successful: List < String >, failed: List < JobQueue.EnqueueErrorResult >) Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned Properties \u00b6 Name Summary failed val failed: List < JobQueue.EnqueueErrorResult > queueName val queueName: QueueName successful val successful: List < String >","title":"BatchEnqueueException - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/index.html#batchenqueueexception","text":"data class BatchEnqueueException : Exception Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned","title":"BatchEnqueueException"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/index.html#constructors","text":"Name Summary <init> BatchEnqueueException(queueName: QueueName , successful: List < String >, failed: List < JobQueue.EnqueueErrorResult >) Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned","title":"Constructors"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/index.html#properties","text":"Name Summary failed val failed: List < JobQueue.EnqueueErrorResult > queueName val queueName: QueueName successful val successful: List < String >","title":"Properties"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/-init-.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / BatchEnqueueException / <init> <init> \u00b6 BatchEnqueueException(queueName: QueueName , successful: List < String >, failed: List < JobQueue.EnqueueErrorResult >) Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned","title":" init "},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/-init-.html#init","text":"BatchEnqueueException(queueName: QueueName , successful: List < String >, failed: List < JobQueue.EnqueueErrorResult >) Exception Data class containing the list of jobs successfully enqueued and the list of jobs that could not be enqueued. See EnqueueErrorResult for more details on the error information returned","title":"&lt;init&gt;"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/failed.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / BatchEnqueueException / failed failed \u00b6 val failed: List < JobQueue.EnqueueErrorResult >","title":"failed - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/failed.html#failed","text":"val failed: List < JobQueue.EnqueueErrorResult >","title":"failed"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/queue-name.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / BatchEnqueueException / queueName queueName \u00b6 val queueName: QueueName","title":"queueName - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/queue-name.html#queuename","text":"val queueName: QueueName","title":"queueName"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/successful.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / BatchEnqueueException / successful successful \u00b6 val successful: List < String >","title":"successful - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-batch-enqueue-exception/successful.html#successful","text":"val successful: List < String >","title":"successful"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/index.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / EnqueueErrorResult EnqueueErrorResult \u00b6 data class EnqueueErrorResult Data class containing the error result of a failed job enqueue Parameters \u00b6 idempotenceKey - Client-assigned unique key for the failed enqueued job clientError - Indicates whether the error is due to a clientside error code - Error code returned by the JobQueue service message - Error message returned by the JobQueue service Constructors \u00b6 Name Summary <init> EnqueueErrorResult(idempotenceKey: String , clientError: Boolean , code: String , message: String ) Data class containing the error result of a failed job enqueue Properties \u00b6 Name Summary clientError val clientError: Boolean Indicates whether the error is due to a clientside error code val code: String Error code returned by the JobQueue service idempotenceKey val idempotenceKey: String Client-assigned unique key for the failed enqueued job message val message: String Error message returned by the JobQueue service","title":"EnqueueErrorResult - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/index.html#enqueueerrorresult","text":"data class EnqueueErrorResult Data class containing the error result of a failed job enqueue","title":"EnqueueErrorResult"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/index.html#parameters","text":"idempotenceKey - Client-assigned unique key for the failed enqueued job clientError - Indicates whether the error is due to a clientside error code - Error code returned by the JobQueue service message - Error message returned by the JobQueue service","title":"Parameters"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/index.html#constructors","text":"Name Summary <init> EnqueueErrorResult(idempotenceKey: String , clientError: Boolean , code: String , message: String ) Data class containing the error result of a failed job enqueue","title":"Constructors"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/index.html#properties","text":"Name Summary clientError val clientError: Boolean Indicates whether the error is due to a clientside error code val code: String Error code returned by the JobQueue service idempotenceKey val idempotenceKey: String Client-assigned unique key for the failed enqueued job message val message: String Error message returned by the JobQueue service","title":"Properties"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/-init-.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / EnqueueErrorResult / <init> <init> \u00b6 EnqueueErrorResult(idempotenceKey: String , clientError: Boolean , code: String , message: String ) Data class containing the error result of a failed job enqueue Parameters \u00b6 idempotenceKey - Client-assigned unique key for the failed enqueued job clientError - Indicates whether the error is due to a clientside error code - Error code returned by the JobQueue service message - Error message returned by the JobQueue service","title":" init "},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/-init-.html#init","text":"EnqueueErrorResult(idempotenceKey: String , clientError: Boolean , code: String , message: String ) Data class containing the error result of a failed job enqueue","title":"&lt;init&gt;"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/-init-.html#parameters","text":"idempotenceKey - Client-assigned unique key for the failed enqueued job clientError - Indicates whether the error is due to a clientside error code - Error code returned by the JobQueue service message - Error message returned by the JobQueue service","title":"Parameters"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/client-error.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / EnqueueErrorResult / clientError clientError \u00b6 val clientError: Boolean Indicates whether the error is due to a clientside error","title":"clientError - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/client-error.html#clienterror","text":"val clientError: Boolean Indicates whether the error is due to a clientside error","title":"clientError"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/code.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / EnqueueErrorResult / code code \u00b6 val code: String Error code returned by the JobQueue service","title":"code - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/code.html#code","text":"val code: String Error code returned by the JobQueue service","title":"code"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/idempotence-key.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / EnqueueErrorResult / idempotenceKey idempotenceKey \u00b6 val idempotenceKey: String Client-assigned unique key for the failed enqueued job","title":"idempotenceKey - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/idempotence-key.html#idempotencekey","text":"val idempotenceKey: String Client-assigned unique key for the failed enqueued job","title":"idempotenceKey"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/message.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / EnqueueErrorResult / message message \u00b6 val message: String Error message returned by the JobQueue service","title":"message - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-enqueue-error-result/message.html#message","text":"val message: String Error message returned by the JobQueue service","title":"message"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/index.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / JobRequest JobRequest \u00b6 data class JobRequest Data class containing the necessary information to be enqueued in a batch enqueue Parameters \u00b6 body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). attributes - Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message. Constructors \u00b6 Name Summary <init> JobRequest(body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()) Data class containing the necessary information to be enqueued in a batch enqueue Properties \u00b6 Name Summary attributes val attributes: Map < String , String > Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message. body val body: String The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. deliveryDelay val deliveryDelay: Duration ? If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). idempotenceKey val idempotenceKey: String Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set.","title":"JobRequest - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/index.html#jobrequest","text":"data class JobRequest Data class containing the necessary information to be enqueued in a batch enqueue","title":"JobRequest"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/index.html#parameters","text":"body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). attributes - Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message.","title":"Parameters"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/index.html#constructors","text":"Name Summary <init> JobRequest(body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()) Data class containing the necessary information to be enqueued in a batch enqueue","title":"Constructors"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/index.html#properties","text":"Name Summary attributes val attributes: Map < String , String > Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message. body val body: String The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. deliveryDelay val deliveryDelay: Duration ? If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). idempotenceKey val idempotenceKey: String Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set.","title":"Properties"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/-init-.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / JobRequest / <init> <init> \u00b6 JobRequest(body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()) Data class containing the necessary information to be enqueued in a batch enqueue Parameters \u00b6 body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). attributes - Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message.","title":" init "},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/-init-.html#init","text":"JobRequest(body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()) Data class containing the necessary information to be enqueued in a batch enqueue","title":"&lt;init&gt;"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/-init-.html#parameters","text":"body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body. idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m). attributes - Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message.","title":"Parameters"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/attributes.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / JobRequest / attributes attributes \u00b6 val attributes: Map < String , String > Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message.","title":"attributes - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/attributes.html#attributes","text":"val attributes: Map < String , String > Arbitrary contextual attributes associated with the job. Implementations may limit the number of attributes per message.","title":"attributes"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/body.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / JobRequest / body body \u00b6 val body: String The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body.","title":"body - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/body.html#body","text":"val body: String The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body.","title":"body"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/delivery-delay.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / JobRequest / deliveryDelay deliveryDelay \u00b6 val deliveryDelay: Duration ? If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m).","title":"deliveryDelay - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/delivery-delay.html#deliverydelay","text":"val deliveryDelay: Duration ? If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. Note that depending on implementation, there may be an upper limit to this value. For instance, SQS implementation limits deliveryDelay to 900s (15m).","title":"deliveryDelay"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/idempotence-key.html","text":"misk-jobqueue / misk.jobqueue / JobQueue / JobRequest / idempotenceKey idempotenceKey \u00b6 val idempotenceKey: String Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set.","title":"idempotenceKey - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-job-queue/-job-request/idempotence-key.html#idempotencekey","text":"val idempotenceKey: String Client-assigned unique key, useful for application code to detect duplicate work. Implementations of both JobQueue and JobConsumer are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set.","title":"idempotenceKey"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/index.html","text":"misk-jobqueue / misk.jobqueue / QueueName QueueName \u00b6 data class QueueName Constructors \u00b6 Name Summary <init> QueueName(value: String ) Properties \u00b6 Name Summary value val value: String","title":"QueueName - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/index.html#queuename","text":"data class QueueName","title":"QueueName"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/index.html#constructors","text":"Name Summary <init> QueueName(value: String )","title":"Constructors"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/index.html#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/-init-.html","text":"misk-jobqueue / misk.jobqueue / QueueName / <init> <init> \u00b6 QueueName(value: String )","title":" init "},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/-init-.html#init","text":"QueueName(value: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/value.html","text":"misk-jobqueue / misk.jobqueue / QueueName / value value \u00b6 val value: String","title":"value - Misk"},{"location":"0.x/misk-jobqueue/misk.jobqueue/-queue-name/value.html#value","text":"val value: String","title":"value"},{"location":"0.x/misk-jobqueue-testing/index.html","text":"misk-jobqueue-testing Packages \u00b6 Name Summary misk.jobqueue Index \u00b6 All Types","title":"misk-jobqueue-testing"},{"location":"0.x/misk-jobqueue-testing/index.html#packages","text":"Name Summary misk.jobqueue","title":"Packages"},{"location":"0.x/misk-jobqueue-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-jobqueue-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.jobqueue.FakeJob misk.jobqueue.FakeJobHandlerModule misk.jobqueue.FakeJobQueue A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. misk.jobqueue.FakeJobQueueModule","title":"All Types - Misk"},{"location":"0.x/misk-jobqueue-testing/alltypes/index.html#all-types","text":"Name Summary misk.jobqueue.FakeJob misk.jobqueue.FakeJobHandlerModule misk.jobqueue.FakeJobQueue A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. misk.jobqueue.FakeJobQueueModule","title":"All Types"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/index.html","text":"misk-jobqueue-testing / misk.jobqueue Package misk.jobqueue \u00b6 Types \u00b6 Name Summary FakeJob data class FakeJob : Job, Comparable < FakeJob > FakeJobHandlerModule class FakeJobHandlerModule<T : JobHandler> : KAbstractModule FakeJobQueue class FakeJobQueue : JobQueue, TransactionalJobQueue A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. FakeJobQueueModule class FakeJobQueueModule : KAbstractModule","title":"Package misk.jobqueue - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/index.html#package-miskjobqueue","text":"","title":"Package misk.jobqueue"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/index.html#types","text":"Name Summary FakeJob data class FakeJob : Job, Comparable < FakeJob > FakeJobHandlerModule class FakeJobHandlerModule<T : JobHandler> : KAbstractModule FakeJobQueue class FakeJobQueue : JobQueue, TransactionalJobQueue A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. FakeJobQueueModule class FakeJobQueueModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/index.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob FakeJob \u00b6 data class FakeJob : Job, Comparable < FakeJob > Constructors \u00b6 Name Summary <init> FakeJob(queueName: QueueName, id: String , idempotenceKey: String , body: String , attributes: Map < String , String >, enqueuedAt: Instant , deliveryDelay: Duration ? = null) Properties \u00b6 Name Summary acknowledged var acknowledged: Boolean attributes val attributes: Map < String , String > body val body: String deadLettered var deadLettered: Boolean deliverAt val deliverAt: Instant deliveryDelay val deliveryDelay: Duration ? enqueuedAt val enqueuedAt: Instant id val id: String idempotenceKey val idempotenceKey: String queueName val queueName: QueueName Functions \u00b6 Name Summary acknowledge fun acknowledge(): Unit compareTo fun compareTo(other: FakeJob ): Int deadLetter fun deadLetter(): Unit","title":"FakeJob - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/index.html#fakejob","text":"data class FakeJob : Job, Comparable < FakeJob >","title":"FakeJob"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/index.html#constructors","text":"Name Summary <init> FakeJob(queueName: QueueName, id: String , idempotenceKey: String , body: String , attributes: Map < String , String >, enqueuedAt: Instant , deliveryDelay: Duration ? = null)","title":"Constructors"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/index.html#properties","text":"Name Summary acknowledged var acknowledged: Boolean attributes val attributes: Map < String , String > body val body: String deadLettered var deadLettered: Boolean deliverAt val deliverAt: Instant deliveryDelay val deliveryDelay: Duration ? enqueuedAt val enqueuedAt: Instant id val id: String idempotenceKey val idempotenceKey: String queueName val queueName: QueueName","title":"Properties"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/index.html#functions","text":"Name Summary acknowledge fun acknowledge(): Unit compareTo fun compareTo(other: FakeJob ): Int deadLetter fun deadLetter(): Unit","title":"Functions"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/-init-.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / <init> <init> \u00b6 FakeJob(queueName: QueueName, id: String , idempotenceKey: String , body: String , attributes: Map < String , String >, enqueuedAt: Instant , deliveryDelay: Duration ? = null)","title":" init "},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/-init-.html#init","text":"FakeJob(queueName: QueueName, id: String , idempotenceKey: String , body: String , attributes: Map < String , String >, enqueuedAt: Instant , deliveryDelay: Duration ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/acknowledge.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / acknowledge acknowledge \u00b6 fun acknowledge(): Unit","title":"acknowledge - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/acknowledge.html#acknowledge","text":"fun acknowledge(): Unit","title":"acknowledge"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/acknowledged.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / acknowledged acknowledged \u00b6 var acknowledged: Boolean","title":"acknowledged - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/acknowledged.html#acknowledged","text":"var acknowledged: Boolean","title":"acknowledged"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/attributes.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / attributes attributes \u00b6 val attributes: Map < String , String >","title":"attributes - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/attributes.html#attributes","text":"val attributes: Map < String , String >","title":"attributes"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/body.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / body body \u00b6 val body: String","title":"body - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/body.html#body","text":"val body: String","title":"body"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/compare-to.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / compareTo compareTo \u00b6 fun compareTo(other: FakeJob ): Int","title":"compareTo - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/compare-to.html#compareto","text":"fun compareTo(other: FakeJob ): Int","title":"compareTo"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/dead-letter.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / deadLetter deadLetter \u00b6 fun deadLetter(): Unit","title":"deadLetter - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/dead-letter.html#deadletter","text":"fun deadLetter(): Unit","title":"deadLetter"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/dead-lettered.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / deadLettered deadLettered \u00b6 var deadLettered: Boolean","title":"deadLettered - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/dead-lettered.html#deadlettered","text":"var deadLettered: Boolean","title":"deadLettered"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/deliver-at.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / deliverAt deliverAt \u00b6 val deliverAt: Instant","title":"deliverAt - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/deliver-at.html#deliverat","text":"val deliverAt: Instant","title":"deliverAt"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/delivery-delay.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / deliveryDelay deliveryDelay \u00b6 val deliveryDelay: Duration ?","title":"deliveryDelay - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/delivery-delay.html#deliverydelay","text":"val deliveryDelay: Duration ?","title":"deliveryDelay"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/enqueued-at.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / enqueuedAt enqueuedAt \u00b6 val enqueuedAt: Instant","title":"enqueuedAt - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/enqueued-at.html#enqueuedat","text":"val enqueuedAt: Instant","title":"enqueuedAt"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/id.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / id id \u00b6 val id: String","title":"id - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/id.html#id","text":"val id: String","title":"id"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/idempotence-key.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / idempotenceKey idempotenceKey \u00b6 val idempotenceKey: String","title":"idempotenceKey - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/idempotence-key.html#idempotencekey","text":"val idempotenceKey: String","title":"idempotenceKey"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/queue-name.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJob / queueName queueName \u00b6 val queueName: QueueName","title":"queueName - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job/queue-name.html#queuename","text":"val queueName: QueueName","title":"queueName"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/index.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobHandlerModule FakeJobHandlerModule \u00b6 class FakeJobHandlerModule<T : JobHandler> : KAbstractModule Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Functions \u00b6 Name Summary create fun <T : JobHandler> create(queueName: QueueName): FakeJobHandlerModule < T > fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >): FakeJobHandlerModule < T >``fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >): FakeJobHandlerModule < T > Returns a module that registers a handler for a fake job queue.","title":"FakeJobHandlerModule - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/index.html#fakejobhandlermodule","text":"class FakeJobHandlerModule<T : JobHandler> : KAbstractModule","title":"FakeJobHandlerModule"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/index.html#companion-object-functions","text":"Name Summary create fun <T : JobHandler> create(queueName: QueueName): FakeJobHandlerModule < T > fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >): FakeJobHandlerModule < T >``fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >): FakeJobHandlerModule < T > Returns a module that registers a handler for a fake job queue.","title":"Companion Object Functions"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/configure.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobHandlerModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/create.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobHandlerModule / create create \u00b6 inline fun <reified T : JobHandler> create(queueName: QueueName): FakeJobHandlerModule < T > @JvmStatic fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >): FakeJobHandlerModule < T >``fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >): FakeJobHandlerModule < T > Returns a module that registers a handler for a fake job queue.","title":"create - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-handler-module/create.html#create","text":"inline fun <reified T : JobHandler> create(queueName: QueueName): FakeJobHandlerModule < T > @JvmStatic fun <T : JobHandler> create(queueName: QueueName, handlerClass: Class < T >): FakeJobHandlerModule < T >``fun <T : JobHandler> create(queueName: QueueName, handlerClass: KClass < T >): FakeJobHandlerModule < T > Returns a module that registers a handler for a fake job queue.","title":"create"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/index.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue FakeJobQueue \u00b6 @Singleton class FakeJobQueue : JobQueue, TransactionalJobQueue A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. A FakeJobQueue adds helper methods to inspect the jobs in the queue and to trigger processing. Example usage might look like this: callApiThatEnqueuesJob() assertJobIsCorrect(fakeJobQueue.peekJobs(MY_QUEUE).first()) fakeJobQueue.handleJobs() assertJobSideEffects() Constructors \u00b6 Name Summary <init> FakeJobQueue(clock: Clock , jobHandlers: Provider< Map <QueueName, JobHandler>>, tokenGenerator: TokenGenerator) A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. Functions \u00b6 Name Summary batchEnqueue fun batchEnqueue(queueName: QueueName, jobs: List <JobRequest>): Unit enqueue fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit handleJob fun handleJob(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled. handleJobs fun handleJobs(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1, considerDelays: Boolean = false): List < FakeJob > fun handleJobs(assertAcknowledged: Boolean = true, considerDelays: Boolean = false): List < FakeJob > Returns all jobs that were handled. peekDeadlettered fun peekDeadlettered(queueName: QueueName): List <Job> peekJobs fun peekJobs(queueName: QueueName): List <Job> reprocessDeadlettered fun reprocessDeadlettered(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1): List < FakeJob > Returns all jobs that were handled. fun reprocessDeadlettered(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled.","title":"FakeJobQueue - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/index.html#fakejobqueue","text":"@Singleton class FakeJobQueue : JobQueue, TransactionalJobQueue A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. A FakeJobQueue adds helper methods to inspect the jobs in the queue and to trigger processing. Example usage might look like this: callApiThatEnqueuesJob() assertJobIsCorrect(fakeJobQueue.peekJobs(MY_QUEUE).first()) fakeJobQueue.handleJobs() assertJobSideEffects()","title":"FakeJobQueue"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/index.html#constructors","text":"Name Summary <init> FakeJobQueue(clock: Clock , jobHandlers: Provider< Map <QueueName, JobHandler>>, tokenGenerator: TokenGenerator) A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing.","title":"Constructors"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/index.html#functions","text":"Name Summary batchEnqueue fun batchEnqueue(queueName: QueueName, jobs: List <JobRequest>): Unit enqueue fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit handleJob fun handleJob(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled. handleJobs fun handleJobs(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1, considerDelays: Boolean = false): List < FakeJob > fun handleJobs(assertAcknowledged: Boolean = true, considerDelays: Boolean = false): List < FakeJob > Returns all jobs that were handled. peekDeadlettered fun peekDeadlettered(queueName: QueueName): List <Job> peekJobs fun peekJobs(queueName: QueueName): List <Job> reprocessDeadlettered fun reprocessDeadlettered(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1): List < FakeJob > Returns all jobs that were handled. fun reprocessDeadlettered(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled.","title":"Functions"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/-init-.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / <init> <init> \u00b6 FakeJobQueue(clock: Clock , jobHandlers: Provider< Map <QueueName, JobHandler>>, tokenGenerator: TokenGenerator) A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. A FakeJobQueue adds helper methods to inspect the jobs in the queue and to trigger processing. Example usage might look like this: callApiThatEnqueuesJob() assertJobIsCorrect(fakeJobQueue.peekJobs(MY_QUEUE).first()) fakeJobQueue.handleJobs() assertJobSideEffects()","title":" init "},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/-init-.html#init","text":"FakeJobQueue(clock: Clock , jobHandlers: Provider< Map <QueueName, JobHandler>>, tokenGenerator: TokenGenerator) A fake implementation of JobQueue and FakeTransactionalJobQueue intended for testing. A FakeJobQueue adds helper methods to inspect the jobs in the queue and to trigger processing. Example usage might look like this: callApiThatEnqueuesJob() assertJobIsCorrect(fakeJobQueue.peekJobs(MY_QUEUE).first()) fakeJobQueue.handleJobs() assertJobSideEffects()","title":"&lt;init&gt;"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/batch-enqueue.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / batchEnqueue batchEnqueue \u00b6 fun batchEnqueue(queueName: QueueName, jobs: List <JobRequest>): Unit","title":"batchEnqueue - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/batch-enqueue.html#batchenqueue","text":"fun batchEnqueue(queueName: QueueName, jobs: List <JobRequest>): Unit","title":"batchEnqueue"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/enqueue.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / enqueue enqueue \u00b6 fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit","title":"enqueue - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/enqueue.html#enqueue","text":"fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit fun enqueue(queueName: QueueName, body: String , idempotenceKey: String , deliveryDelay: Duration ?, attributes: Map < String , String >): Unit","title":"enqueue"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/handle-job.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / handleJob handleJob \u00b6 fun handleJob(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled.","title":"handleJob - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/handle-job.html#handlejob","text":"fun handleJob(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled.","title":"handleJob"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/handle-jobs.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / handleJobs handleJobs \u00b6 fun handleJobs(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1, considerDelays: Boolean = false): List < FakeJob > fun handleJobs(assertAcknowledged: Boolean = true, considerDelays: Boolean = false): List < FakeJob > Returns all jobs that were handled.","title":"handleJobs - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/handle-jobs.html#handlejobs","text":"fun handleJobs(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1, considerDelays: Boolean = false): List < FakeJob > fun handleJobs(assertAcknowledged: Boolean = true, considerDelays: Boolean = false): List < FakeJob > Returns all jobs that were handled.","title":"handleJobs"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/peek-deadlettered.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / peekDeadlettered peekDeadlettered \u00b6 fun peekDeadlettered(queueName: QueueName): List <Job>","title":"peekDeadlettered - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/peek-deadlettered.html#peekdeadlettered","text":"fun peekDeadlettered(queueName: QueueName): List <Job>","title":"peekDeadlettered"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/peek-jobs.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / peekJobs peekJobs \u00b6 fun peekJobs(queueName: QueueName): List <Job>","title":"peekJobs - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/peek-jobs.html#peekjobs","text":"fun peekJobs(queueName: QueueName): List <Job>","title":"peekJobs"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/reprocess-deadlettered.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueue / reprocessDeadlettered reprocessDeadlettered \u00b6 fun reprocessDeadlettered(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1): List < FakeJob > Returns all jobs that were handled. fun reprocessDeadlettered(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled.","title":"reprocessDeadlettered - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue/reprocess-deadlettered.html#reprocessdeadlettered","text":"fun reprocessDeadlettered(queueName: QueueName, assertAcknowledged: Boolean = true, retries: Int = 1): List < FakeJob > Returns all jobs that were handled. fun reprocessDeadlettered(job: Job, assertAcknowledged: Boolean = true, retries: Int = 1): Boolean Returns true if job was handled.","title":"reprocessDeadlettered"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/index.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueueModule FakeJobQueueModule \u00b6 class FakeJobQueueModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeJobQueueModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeJobQueueModule - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/index.html#fakejobqueuemodule","text":"class FakeJobQueueModule : KAbstractModule","title":"FakeJobQueueModule"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/index.html#constructors","text":"Name Summary <init> FakeJobQueueModule()","title":"Constructors"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/-init-.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueueModule / <init> <init> \u00b6 FakeJobQueueModule()","title":" init "},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/-init-.html#init","text":"FakeJobQueueModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/configure.html","text":"misk-jobqueue-testing / misk.jobqueue / FakeJobQueueModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-jobqueue-testing/misk.jobqueue/-fake-job-queue-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-jooq/index.html","text":"misk-jooq Packages \u00b6 Name Summary misk.jooq misk.jooq.listeners misk.jooq.testgen misk.jooq.testgen.keys misk.jooq.testgen.tables misk.jooq.testgen.tables.records misk.jooq.testgen.tables.references Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-jooq/index.html#packages","text":"Name Summary misk.jooq misk.jooq.listeners misk.jooq.testgen misk.jooq.testgen.keys misk.jooq.testgen.tables misk.jooq.testgen.tables.records misk.jooq.testgen.tables.references","title":"Packages"},{"location":"0.x/misk-jooq/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-jooq/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.jooq.testgen.DefaultCatalog This class is generated by jOOQ. java.time.Instant (extensions in package misk.jooq) misk.jooq.testgen.Jooq This class is generated by jOOQ. misk.jooq.JooqHealthCheck misk.jooq.JooqModule misk.jooq.JooqSession misk.jooq.listeners.JooqSQLLogger misk.jooq.listeners.JooqTimestampRecordListener A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row misk.jooq.listeners.JooqTimestampRecordListenerOptions Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it. misk.jooq.JooqTransacter java.time.LocalDateTime (extensions in package misk.jooq) misk.jooq.testgen.tables.Movie This class is generated by jOOQ. misk.jooq.testgen.tables.records.MovieRecord This class is generated by jOOQ. org.jooq.ResultQuery (extensions in package misk.jooq)","title":"All Types - Misk"},{"location":"0.x/misk-jooq/alltypes/index.html#all-types","text":"Name Summary misk.jooq.testgen.DefaultCatalog This class is generated by jOOQ. java.time.Instant (extensions in package misk.jooq) misk.jooq.testgen.Jooq This class is generated by jOOQ. misk.jooq.JooqHealthCheck misk.jooq.JooqModule misk.jooq.JooqSession misk.jooq.listeners.JooqSQLLogger misk.jooq.listeners.JooqTimestampRecordListener A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row misk.jooq.listeners.JooqTimestampRecordListenerOptions Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it. misk.jooq.JooqTransacter java.time.LocalDateTime (extensions in package misk.jooq) misk.jooq.testgen.tables.Movie This class is generated by jOOQ. misk.jooq.testgen.tables.records.MovieRecord This class is generated by jOOQ. org.jooq.ResultQuery (extensions in package misk.jooq)","title":"All Types"},{"location":"0.x/misk-jooq/misk.jooq/index.html","text":"misk-jooq / misk.jooq Package misk.jooq \u00b6 Types \u00b6 Name Summary JooqHealthCheck class JooqHealthCheck : HealthCheck JooqModule class JooqModule : KAbstractModule JooqSession class JooqSession : Session JooqTransacter class JooqTransacter Extensions for External Classes \u00b6 Name Summary java.time.Instant java.time.LocalDateTime org.jooq.ResultQuery Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Package misk.jooq - Misk"},{"location":"0.x/misk-jooq/misk.jooq/index.html#package-miskjooq","text":"","title":"Package misk.jooq"},{"location":"0.x/misk-jooq/misk.jooq/index.html#types","text":"Name Summary JooqHealthCheck class JooqHealthCheck : HealthCheck JooqModule class JooqModule : KAbstractModule JooqSession class JooqSession : Session JooqTransacter class JooqTransacter","title":"Types"},{"location":"0.x/misk-jooq/misk.jooq/index.html#extensions-for-external-classes","text":"Name Summary java.time.Instant java.time.LocalDateTime org.jooq.ResultQuery","title":"Extensions for External Classes"},{"location":"0.x/misk-jooq/misk.jooq/index.html#functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq/get-or-throw.html","text":"misk-jooq / misk.jooq / getOrThrow getOrThrow \u00b6 fun <ANY> ANY ?.getOrThrow(): ANY","title":"getOrThrow - Misk"},{"location":"0.x/misk-jooq/misk.jooq/get-or-throw.html#getorthrow","text":"fun <ANY> ANY ?.getOrThrow(): ANY","title":"getOrThrow"},{"location":"0.x/misk-jooq/misk.jooq/if-not-null.html","text":"misk-jooq / misk.jooq / ifNotNull ifNotNull \u00b6 inline fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"ifNotNull - Misk"},{"location":"0.x/misk-jooq/misk.jooq/if-not-null.html#ifnotnull","text":"inline fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"ifNotNull"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/index.html","text":"misk-jooq / misk.jooq / JooqHealthCheck JooqHealthCheck \u00b6 class JooqHealthCheck : HealthCheck Constructors \u00b6 Name Summary <init> JooqHealthCheck(qualifier: KClass <out Annotation >, dataSourceProvider: Provider<out Service>, jooqTransacterProvider: Provider< JooqTransacter >, clock: Clock ) Functions \u00b6 Name Summary status fun status(): HealthStatus Companion Object Properties \u00b6 Name Summary CLOCK_SKEW_UNHEALTHY_THRESHOLD val CLOCK_SKEW_UNHEALTHY_THRESHOLD: Duration CLOCK_SKEW_WARN_THRESHOLD val CLOCK_SKEW_WARN_THRESHOLD: Duration log val log: KLogger Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"JooqHealthCheck - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/index.html#jooqhealthcheck","text":"class JooqHealthCheck : HealthCheck","title":"JooqHealthCheck"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/index.html#constructors","text":"Name Summary <init> JooqHealthCheck(qualifier: KClass <out Annotation >, dataSourceProvider: Provider<out Service>, jooqTransacterProvider: Provider< JooqTransacter >, clock: Clock )","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/index.html#functions","text":"Name Summary status fun status(): HealthStatus","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/index.html#companion-object-properties","text":"Name Summary CLOCK_SKEW_UNHEALTHY_THRESHOLD val CLOCK_SKEW_UNHEALTHY_THRESHOLD: Duration CLOCK_SKEW_WARN_THRESHOLD val CLOCK_SKEW_WARN_THRESHOLD: Duration log val log: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/-c-l-o-c-k_-s-k-e-w_-u-n-h-e-a-l-t-h-y_-t-h-r-e-s-h-o-l-d.html","text":"misk-jooq / misk.jooq / JooqHealthCheck / CLOCK_SKEW_UNHEALTHY_THRESHOLD CLOCK_SKEW_UNHEALTHY_THRESHOLD \u00b6 val CLOCK_SKEW_UNHEALTHY_THRESHOLD: Duration","title":"CLOCK_SKEW_UNHEALTHY_THRESHOLD - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/-c-l-o-c-k_-s-k-e-w_-u-n-h-e-a-l-t-h-y_-t-h-r-e-s-h-o-l-d.html#clock_skew_unhealthy_threshold","text":"val CLOCK_SKEW_UNHEALTHY_THRESHOLD: Duration","title":"CLOCK_SKEW_UNHEALTHY_THRESHOLD"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/-c-l-o-c-k_-s-k-e-w_-w-a-r-n_-t-h-r-e-s-h-o-l-d.html","text":"misk-jooq / misk.jooq / JooqHealthCheck / CLOCK_SKEW_WARN_THRESHOLD CLOCK_SKEW_WARN_THRESHOLD \u00b6 val CLOCK_SKEW_WARN_THRESHOLD: Duration","title":"CLOCK_SKEW_WARN_THRESHOLD - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/-c-l-o-c-k_-s-k-e-w_-w-a-r-n_-t-h-r-e-s-h-o-l-d.html#clock_skew_warn_threshold","text":"val CLOCK_SKEW_WARN_THRESHOLD: Duration","title":"CLOCK_SKEW_WARN_THRESHOLD"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/-init-.html","text":"misk-jooq / misk.jooq / JooqHealthCheck / <init> <init> \u00b6 JooqHealthCheck(qualifier: KClass <out Annotation >, dataSourceProvider: Provider<out Service>, jooqTransacterProvider: Provider< JooqTransacter >, clock: Clock )","title":" init "},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/-init-.html#init","text":"JooqHealthCheck(qualifier: KClass <out Annotation >, dataSourceProvider: Provider<out Service>, jooqTransacterProvider: Provider< JooqTransacter >, clock: Clock )","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/log.html","text":"misk-jooq / misk.jooq / JooqHealthCheck / log log \u00b6 val log: KLogger","title":"log - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/log.html#log","text":"val log: KLogger","title":"log"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/status.html","text":"misk-jooq / misk.jooq / JooqHealthCheck / status status \u00b6 fun status(): HealthStatus","title":"status - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-health-check/status.html#status","text":"fun status(): HealthStatus","title":"status"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/index.html","text":"misk-jooq / misk.jooq / JooqModule JooqModule \u00b6 class JooqModule : KAbstractModule Constructors \u00b6 Name Summary <init> JooqModule(qualifier: KClass <out Annotation >, dataSourceClusterConfig: DataSourceClusterConfig, jooqCodeGenSchemaName: String , databasePool: DatabasePool = RealDatabasePool, readerQualifier: KClass <out Annotation >? = null, jooqTimestampRecordListenerOptions: JooqTimestampRecordListenerOptions = JooqTimestampRecordListenerOptions(install = false)) Functions \u00b6 Name Summary configure fun configure(): Unit Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"JooqModule - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/index.html#jooqmodule","text":"class JooqModule : KAbstractModule","title":"JooqModule"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/index.html#constructors","text":"Name Summary <init> JooqModule(qualifier: KClass <out Annotation >, dataSourceClusterConfig: DataSourceClusterConfig, jooqCodeGenSchemaName: String , databasePool: DatabasePool = RealDatabasePool, readerQualifier: KClass <out Annotation >? = null, jooqTimestampRecordListenerOptions: JooqTimestampRecordListenerOptions = JooqTimestampRecordListenerOptions(install = false))","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/-init-.html","text":"misk-jooq / misk.jooq / JooqModule / <init> <init> \u00b6 JooqModule(qualifier: KClass <out Annotation >, dataSourceClusterConfig: DataSourceClusterConfig, jooqCodeGenSchemaName: String , databasePool: DatabasePool = RealDatabasePool, readerQualifier: KClass <out Annotation >? = null, jooqTimestampRecordListenerOptions: JooqTimestampRecordListenerOptions = JooqTimestampRecordListenerOptions(install = false))","title":" init "},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/-init-.html#init","text":"JooqModule(qualifier: KClass <out Annotation >, dataSourceClusterConfig: DataSourceClusterConfig, jooqCodeGenSchemaName: String , databasePool: DatabasePool = RealDatabasePool, readerQualifier: KClass <out Annotation >? = null, jooqTimestampRecordListenerOptions: JooqTimestampRecordListenerOptions = JooqTimestampRecordListenerOptions(install = false))","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/configure.html","text":"misk-jooq / misk.jooq / JooqModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/index.html","text":"misk-jooq / misk.jooq / JooqSession JooqSession \u00b6 class JooqSession : Session Types \u00b6 Name Summary HookType enum class HookType Constructors \u00b6 Name Summary <init> JooqSession(ctx: DSLContext) Properties \u00b6 Name Summary ctx val ctx: DSLContext Functions \u00b6 Name Summary add fun ConcurrentMap < JooqSession.HookType , List <() -> Unit >>.add(hookType: JooqSession.HookType , work: () -> Unit ): Unit component1 operator fun component1(): DSLContext Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (ctx) -> \u2026 } executePostCommitHooks fun executePostCommitHooks(): Unit executePreCommitHooks fun executePreCommitHooks(): Unit executeSessionCloseHooks fun executeSessionCloseHooks(): Unit onPostCommit fun onPostCommit(work: () -> Unit ): Unit onPreCommit fun onPreCommit(work: () -> Unit ): Unit onSessionClose fun onSessionClose(work: () -> Unit ): Unit useConnection fun <T> useConnection(work: ( Connection ) -> T ): T Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"JooqSession - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/index.html#jooqsession","text":"class JooqSession : Session","title":"JooqSession"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/index.html#types","text":"Name Summary HookType enum class HookType","title":"Types"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/index.html#constructors","text":"Name Summary <init> JooqSession(ctx: DSLContext)","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/index.html#properties","text":"Name Summary ctx val ctx: DSLContext","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/index.html#functions","text":"Name Summary add fun ConcurrentMap < JooqSession.HookType , List <() -> Unit >>.add(hookType: JooqSession.HookType , work: () -> Unit ): Unit component1 operator fun component1(): DSLContext Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (ctx) -> \u2026 } executePostCommitHooks fun executePostCommitHooks(): Unit executePreCommitHooks fun executePreCommitHooks(): Unit executeSessionCloseHooks fun executeSessionCloseHooks(): Unit onPostCommit fun onPostCommit(work: () -> Unit ): Unit onPreCommit fun onPreCommit(work: () -> Unit ): Unit onSessionClose fun onSessionClose(work: () -> Unit ): Unit useConnection fun <T> useConnection(work: ( Connection ) -> T ): T","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-init-.html","text":"misk-jooq / misk.jooq / JooqSession / <init> <init> \u00b6 JooqSession(ctx: DSLContext)","title":" init "},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-init-.html#init","text":"JooqSession(ctx: DSLContext)","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/add.html","text":"misk-jooq / misk.jooq / JooqSession / add add \u00b6 fun ConcurrentMap < JooqSession.HookType , List <() -> Unit >>.add(hookType: JooqSession.HookType , work: () -> Unit ): Unit","title":"add - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/add.html#add","text":"fun ConcurrentMap < JooqSession.HookType , List <() -> Unit >>.add(hookType: JooqSession.HookType , work: () -> Unit ): Unit","title":"add"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/component1.html","text":"misk-jooq / misk.jooq / JooqSession / component1 component1 \u00b6 operator fun component1(): DSLContext Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (ctx) -> \u2026 }","title":"component1 - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/component1.html#component1","text":"operator fun component1(): DSLContext Allows for destructuring the JooqSession and writing simpler code like this transacter.transaction { (ctx) -> \u2026 }","title":"component1"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/ctx.html","text":"misk-jooq / misk.jooq / JooqSession / ctx ctx \u00b6 val ctx: DSLContext","title":"ctx - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/ctx.html#ctx","text":"val ctx: DSLContext","title":"ctx"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/execute-post-commit-hooks.html","text":"misk-jooq / misk.jooq / JooqSession / executePostCommitHooks executePostCommitHooks \u00b6 fun executePostCommitHooks(): Unit","title":"executePostCommitHooks - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/execute-post-commit-hooks.html#executepostcommithooks","text":"fun executePostCommitHooks(): Unit","title":"executePostCommitHooks"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/execute-pre-commit-hooks.html","text":"misk-jooq / misk.jooq / JooqSession / executePreCommitHooks executePreCommitHooks \u00b6 fun executePreCommitHooks(): Unit","title":"executePreCommitHooks - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/execute-pre-commit-hooks.html#executeprecommithooks","text":"fun executePreCommitHooks(): Unit","title":"executePreCommitHooks"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/execute-session-close-hooks.html","text":"misk-jooq / misk.jooq / JooqSession / executeSessionCloseHooks executeSessionCloseHooks \u00b6 fun executeSessionCloseHooks(): Unit","title":"executeSessionCloseHooks - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/execute-session-close-hooks.html#executesessionclosehooks","text":"fun executeSessionCloseHooks(): Unit","title":"executeSessionCloseHooks"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/on-post-commit.html","text":"misk-jooq / misk.jooq / JooqSession / onPostCommit onPostCommit \u00b6 fun onPostCommit(work: () -> Unit ): Unit","title":"onPostCommit - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/on-post-commit.html#onpostcommit","text":"fun onPostCommit(work: () -> Unit ): Unit","title":"onPostCommit"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/on-pre-commit.html","text":"misk-jooq / misk.jooq / JooqSession / onPreCommit onPreCommit \u00b6 fun onPreCommit(work: () -> Unit ): Unit","title":"onPreCommit - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/on-pre-commit.html#onprecommit","text":"fun onPreCommit(work: () -> Unit ): Unit","title":"onPreCommit"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/on-session-close.html","text":"misk-jooq / misk.jooq / JooqSession / onSessionClose onSessionClose \u00b6 fun onSessionClose(work: () -> Unit ): Unit","title":"onSessionClose - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/on-session-close.html#onsessionclose","text":"fun onSessionClose(work: () -> Unit ): Unit","title":"onSessionClose"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/use-connection.html","text":"misk-jooq / misk.jooq / JooqSession / useConnection useConnection \u00b6 fun <T> useConnection(work: ( Connection ) -> T ): T","title":"useConnection - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/use-connection.html#useconnection","text":"fun <T> useConnection(work: ( Connection ) -> T ): T","title":"useConnection"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/index.html","text":"misk-jooq / misk.jooq / JooqSession / HookType HookType \u00b6 enum class HookType Enum Values \u00b6 Name Summary PRE POST SESSION_CLOSE","title":"HookType - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/index.html#hooktype","text":"enum class HookType","title":"HookType"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/index.html#enum-values","text":"Name Summary PRE POST SESSION_CLOSE","title":"Enum Values"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-o-s-t.html","text":"misk-jooq / misk.jooq / JooqSession / HookType / POST POST \u00b6 POST","title":"POST - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-o-s-t.html#post","text":"POST","title":"POST"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-r-e.html","text":"misk-jooq / misk.jooq / JooqSession / HookType / PRE PRE \u00b6 PRE","title":"PRE - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/-p-r-e.html#pre","text":"PRE","title":"PRE"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e.html","text":"misk-jooq / misk.jooq / JooqSession / HookType / SESSION_CLOSE SESSION_CLOSE \u00b6 SESSION_CLOSE","title":"SESSION_CLOSE - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-session/-hook-type/-s-e-s-s-i-o-n_-c-l-o-s-e.html#session_close","text":"SESSION_CLOSE","title":"SESSION_CLOSE"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/index.html","text":"misk-jooq / misk.jooq / JooqTransacter JooqTransacter \u00b6 class JooqTransacter Types \u00b6 Name Summary TransacterOptions data class TransacterOptions Constructors \u00b6 Name Summary <init> JooqTransacter(dslContext: DSLContext) Functions \u00b6 Name Summary transaction fun <RETURN_TYPE> transaction(options: JooqTransacter.TransacterOptions = TransacterOptions(), callback: (jooqSession: JooqSession ) -> RETURN_TYPE ): RETURN_TYPE Companion Object Properties \u00b6 Name Summary log val log: KLogger noRetriesOptions val noRetriesOptions: JooqTransacter.TransacterOptions Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"JooqTransacter - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/index.html#jooqtransacter","text":"class JooqTransacter","title":"JooqTransacter"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/index.html#types","text":"Name Summary TransacterOptions data class TransacterOptions","title":"Types"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/index.html#constructors","text":"Name Summary <init> JooqTransacter(dslContext: DSLContext)","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/index.html#functions","text":"Name Summary transaction fun <RETURN_TYPE> transaction(options: JooqTransacter.TransacterOptions = TransacterOptions(), callback: (jooqSession: JooqSession ) -> RETURN_TYPE ): RETURN_TYPE","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/index.html#companion-object-properties","text":"Name Summary log val log: KLogger noRetriesOptions val noRetriesOptions: JooqTransacter.TransacterOptions","title":"Companion Object Properties"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-init-.html","text":"misk-jooq / misk.jooq / JooqTransacter / <init> <init> \u00b6 JooqTransacter(dslContext: DSLContext)","title":" init "},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-init-.html#init","text":"JooqTransacter(dslContext: DSLContext)","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/log.html","text":"misk-jooq / misk.jooq / JooqTransacter / log log \u00b6 val log: KLogger","title":"log - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/log.html#log","text":"val log: KLogger","title":"log"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/no-retries-options.html","text":"misk-jooq / misk.jooq / JooqTransacter / noRetriesOptions noRetriesOptions \u00b6 val noRetriesOptions: JooqTransacter.TransacterOptions","title":"noRetriesOptions - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/no-retries-options.html#noretriesoptions","text":"val noRetriesOptions: JooqTransacter.TransacterOptions","title":"noRetriesOptions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/transaction.html","text":"misk-jooq / misk.jooq / JooqTransacter / transaction transaction \u00b6 fun <RETURN_TYPE> transaction(options: JooqTransacter.TransacterOptions = TransacterOptions(), callback: (jooqSession: JooqSession ) -> RETURN_TYPE ): RETURN_TYPE","title":"transaction - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/transaction.html#transaction","text":"fun <RETURN_TYPE> transaction(options: JooqTransacter.TransacterOptions = TransacterOptions(), callback: (jooqSession: JooqSession ) -> RETURN_TYPE ): RETURN_TYPE","title":"transaction"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/index.html","text":"misk-jooq / misk.jooq / JooqTransacter / TransacterOptions TransacterOptions \u00b6 data class TransacterOptions Constructors \u00b6 Name Summary <init> TransacterOptions(maxAttempts: Int = 3, maxRetryDelayMillis: Long = 500) Properties \u00b6 Name Summary maxAttempts val maxAttempts: Int maxRetryDelayMillis val maxRetryDelayMillis: Long","title":"TransacterOptions - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/index.html#transacteroptions","text":"data class TransacterOptions","title":"TransacterOptions"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/index.html#constructors","text":"Name Summary <init> TransacterOptions(maxAttempts: Int = 3, maxRetryDelayMillis: Long = 500)","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/index.html#properties","text":"Name Summary maxAttempts val maxAttempts: Int maxRetryDelayMillis val maxRetryDelayMillis: Long","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/-init-.html","text":"misk-jooq / misk.jooq / JooqTransacter / TransacterOptions / <init> <init> \u00b6 TransacterOptions(maxAttempts: Int = 3, maxRetryDelayMillis: Long = 500)","title":" init "},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/-init-.html#init","text":"TransacterOptions(maxAttempts: Int = 3, maxRetryDelayMillis: Long = 500)","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-attempts.html","text":"misk-jooq / misk.jooq / JooqTransacter / TransacterOptions / maxAttempts maxAttempts \u00b6 val maxAttempts: Int","title":"maxAttempts - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-attempts.html#maxattempts","text":"val maxAttempts: Int","title":"maxAttempts"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-retry-delay-millis.html","text":"misk-jooq / misk.jooq / JooqTransacter / TransacterOptions / maxRetryDelayMillis maxRetryDelayMillis \u00b6 val maxRetryDelayMillis: Long","title":"maxRetryDelayMillis - Misk"},{"location":"0.x/misk-jooq/misk.jooq/-jooq-transacter/-transacter-options/max-retry-delay-millis.html#maxretrydelaymillis","text":"val maxRetryDelayMillis: Long","title":"maxRetryDelayMillis"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-instant/index.html","text":"misk-jooq / misk.jooq / java.time.Instant Extensions for java.time.Instant \u00b6 Name Summary toLocalDateTime fun Instant .toLocalDateTime(): LocalDateTime","title":"Extensions for java.time.Instant - Misk"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-instant/index.html#extensions-for-javatimeinstant","text":"Name Summary toLocalDateTime fun Instant .toLocalDateTime(): LocalDateTime","title":"Extensions for java.time.Instant"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-instant/to-local-date-time.html","text":"misk-jooq / misk.jooq / java.time.Instant / toLocalDateTime toLocalDateTime \u00b6 fun Instant .toLocalDateTime(): LocalDateTime","title":"toLocalDateTime - Misk"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-instant/to-local-date-time.html#tolocaldatetime","text":"fun Instant .toLocalDateTime(): LocalDateTime","title":"toLocalDateTime"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-local-date-time/index.html","text":"misk-jooq / misk.jooq / java.time.LocalDateTime Extensions for java.time.LocalDateTime \u00b6 Name Summary toInstant fun LocalDateTime .toInstant(): Instant","title":"Extensions for java.time.LocalDateTime - Misk"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-local-date-time/index.html#extensions-for-javatimelocaldatetime","text":"Name Summary toInstant fun LocalDateTime .toInstant(): Instant","title":"Extensions for java.time.LocalDateTime"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-local-date-time/to-instant.html","text":"misk-jooq / misk.jooq / java.time.LocalDateTime / toInstant toInstant \u00b6 fun LocalDateTime .toInstant(): Instant","title":"toInstant - Misk"},{"location":"0.x/misk-jooq/misk.jooq/java.time.-local-date-time/to-instant.html#toinstant","text":"fun LocalDateTime .toInstant(): Instant","title":"toInstant"},{"location":"0.x/misk-jooq/misk.jooq/org.jooq.-result-query/index.html","text":"misk-jooq / misk.jooq / org.jooq.ResultQuery Extensions for org.jooq.ResultQuery \u00b6 Name Summary fetchOneOrNull fun <RECORD : Record?> ResultQuery< RECORD >.fetchOneOrNull(): RECORD ?","title":"Extensions for org.jooq.ResultQuery - Misk"},{"location":"0.x/misk-jooq/misk.jooq/org.jooq.-result-query/index.html#extensions-for-orgjooqresultquery","text":"Name Summary fetchOneOrNull fun <RECORD : Record?> ResultQuery< RECORD >.fetchOneOrNull(): RECORD ?","title":"Extensions for org.jooq.ResultQuery"},{"location":"0.x/misk-jooq/misk.jooq/org.jooq.-result-query/fetch-one-or-null.html","text":"misk-jooq / misk.jooq / org.jooq.ResultQuery / fetchOneOrNull fetchOneOrNull \u00b6 fun <RECORD : Record?> ResultQuery< RECORD >.fetchOneOrNull(): RECORD ?","title":"fetchOneOrNull - Misk"},{"location":"0.x/misk-jooq/misk.jooq/org.jooq.-result-query/fetch-one-or-null.html#fetchoneornull","text":"fun <RECORD : Record?> ResultQuery< RECORD >.fetchOneOrNull(): RECORD ?","title":"fetchOneOrNull"},{"location":"0.x/misk-jooq/misk.jooq.listeners/index.html","text":"misk-jooq / misk.jooq.listeners Package misk.jooq.listeners \u00b6 Types \u00b6 Name Summary JooqSQLLogger class JooqSQLLogger : DefaultExecuteListener JooqTimestampRecordListener class JooqTimestampRecordListener : DefaultRecordListener A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row JooqTimestampRecordListenerOptions data class JooqTimestampRecordListenerOptions Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it.","title":"Package misk.jooq.listeners - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/index.html#package-miskjooqlisteners","text":"","title":"Package misk.jooq.listeners"},{"location":"0.x/misk-jooq/misk.jooq.listeners/index.html#types","text":"Name Summary JooqSQLLogger class JooqSQLLogger : DefaultExecuteListener JooqTimestampRecordListener class JooqTimestampRecordListener : DefaultRecordListener A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row JooqTimestampRecordListenerOptions data class JooqTimestampRecordListenerOptions Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it.","title":"Types"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/index.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger JooqSQLLogger \u00b6 class JooqSQLLogger : DefaultExecuteListener Constructors \u00b6 Name Summary <init> JooqSQLLogger() Functions \u00b6 Name Summary exception fun exception(ctx: ExecuteContext): Unit executeEnd fun executeEnd(ctx: ExecuteContext): Unit outEnd fun outEnd(ctx: ExecuteContext): Unit recordEnd fun recordEnd(ctx: ExecuteContext): Unit renderEnd fun renderEnd(ctx: ExecuteContext): Unit resultEnd fun resultEnd(ctx: ExecuteContext): Unit Companion Object Properties \u00b6 Name Summary log val log: KLogger Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"JooqSQLLogger - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/index.html#jooqsqllogger","text":"class JooqSQLLogger : DefaultExecuteListener","title":"JooqSQLLogger"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/index.html#constructors","text":"Name Summary <init> JooqSQLLogger()","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/index.html#functions","text":"Name Summary exception fun exception(ctx: ExecuteContext): Unit executeEnd fun executeEnd(ctx: ExecuteContext): Unit outEnd fun outEnd(ctx: ExecuteContext): Unit recordEnd fun recordEnd(ctx: ExecuteContext): Unit renderEnd fun renderEnd(ctx: ExecuteContext): Unit resultEnd fun resultEnd(ctx: ExecuteContext): Unit","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/index.html#companion-object-properties","text":"Name Summary log val log: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-init-.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / <init> <init> \u00b6 JooqSQLLogger()","title":" init "},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/-init-.html#init","text":"JooqSQLLogger()","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/exception.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / exception exception \u00b6 fun exception(ctx: ExecuteContext): Unit","title":"exception - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/exception.html#exception","text":"fun exception(ctx: ExecuteContext): Unit","title":"exception"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/execute-end.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / executeEnd executeEnd \u00b6 fun executeEnd(ctx: ExecuteContext): Unit","title":"executeEnd - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/execute-end.html#executeend","text":"fun executeEnd(ctx: ExecuteContext): Unit","title":"executeEnd"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/log.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / log log \u00b6 val log: KLogger","title":"log - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/log.html#log","text":"val log: KLogger","title":"log"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/out-end.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / outEnd outEnd \u00b6 fun outEnd(ctx: ExecuteContext): Unit","title":"outEnd - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/out-end.html#outend","text":"fun outEnd(ctx: ExecuteContext): Unit","title":"outEnd"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/record-end.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / recordEnd recordEnd \u00b6 fun recordEnd(ctx: ExecuteContext): Unit","title":"recordEnd - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/record-end.html#recordend","text":"fun recordEnd(ctx: ExecuteContext): Unit","title":"recordEnd"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/render-end.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / renderEnd renderEnd \u00b6 fun renderEnd(ctx: ExecuteContext): Unit","title":"renderEnd - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/render-end.html#renderend","text":"fun renderEnd(ctx: ExecuteContext): Unit","title":"renderEnd"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/result-end.html","text":"misk-jooq / misk.jooq.listeners / JooqSQLLogger / resultEnd resultEnd \u00b6 fun resultEnd(ctx: ExecuteContext): Unit","title":"resultEnd - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-s-q-l-logger/result-end.html#resultend","text":"fun resultEnd(ctx: ExecuteContext): Unit","title":"resultEnd"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/index.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListener JooqTimestampRecordListener \u00b6 class JooqTimestampRecordListener : DefaultRecordListener A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row Constructors \u00b6 Name Summary <init> JooqTimestampRecordListener(clock: Clock , createdAtColumnName: String , updatedAtColumnName: String ) A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row Functions \u00b6 Name Summary insertStart fun insertStart(ctx: RecordContext?): Unit updateStart fun updateStart(ctx: RecordContext?): Unit Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"JooqTimestampRecordListener - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/index.html#jooqtimestamprecordlistener","text":"class JooqTimestampRecordListener : DefaultRecordListener A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row","title":"JooqTimestampRecordListener"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/index.html#constructors","text":"Name Summary <init> JooqTimestampRecordListener(clock: Clock , createdAtColumnName: String , updatedAtColumnName: String ) A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/index.html#functions","text":"Name Summary insertStart fun insertStart(ctx: RecordContext?): Unit updateStart fun updateStart(ctx: RecordContext?): Unit","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/-init-.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListener / <init> <init> \u00b6 JooqTimestampRecordListener(clock: Clock , createdAtColumnName: String , updatedAtColumnName: String ) A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row","title":" init "},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/-init-.html#init","text":"JooqTimestampRecordListener(clock: Clock , createdAtColumnName: String , updatedAtColumnName: String ) A Record Listener that will automatically set the current timestamp for the createdAtColumnName during insertions. And the current timestamp to the updatedAtColumnName while updating a row","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/insert-start.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListener / insertStart insertStart \u00b6 fun insertStart(ctx: RecordContext?): Unit","title":"insertStart - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/insert-start.html#insertstart","text":"fun insertStart(ctx: RecordContext?): Unit","title":"insertStart"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/update-start.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListener / updateStart updateStart \u00b6 fun updateStart(ctx: RecordContext?): Unit","title":"updateStart - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener/update-start.html#updatestart","text":"fun updateStart(ctx: RecordContext?): Unit","title":"updateStart"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/index.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListenerOptions JooqTimestampRecordListenerOptions \u00b6 data class JooqTimestampRecordListenerOptions Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it. Constructors \u00b6 Name Summary <init> JooqTimestampRecordListenerOptions(install: Boolean , createdAtColumnName: String = \"\", updatedAtColumnName: String = \"\") Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it. Properties \u00b6 Name Summary createdAtColumnName val createdAtColumnName: String install val install: Boolean updatedAtColumnName val updatedAtColumnName: String Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"JooqTimestampRecordListenerOptions - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/index.html#jooqtimestamprecordlisteneroptions","text":"data class JooqTimestampRecordListenerOptions Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it.","title":"JooqTimestampRecordListenerOptions"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/index.html#constructors","text":"Name Summary <init> JooqTimestampRecordListenerOptions(install: Boolean , createdAtColumnName: String = \"\", updatedAtColumnName: String = \"\") Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it.","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/index.html#properties","text":"Name Summary createdAtColumnName val createdAtColumnName: String install val install: Boolean updatedAtColumnName val updatedAtColumnName: String","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/-init-.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListenerOptions / <init> <init> \u00b6 JooqTimestampRecordListenerOptions(install: Boolean , createdAtColumnName: String = \"\", updatedAtColumnName: String = \"\") Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it.","title":" init "},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/-init-.html#init","text":"JooqTimestampRecordListenerOptions(install: Boolean , createdAtColumnName: String = \"\", updatedAtColumnName: String = \"\") Use this class to configure the installation of the misk.jooq.listeners.JooqTimestampRecordListener You can use both or configure just one of the createdAtColumnName to be set to the current timestamp when inserting or updating it. If you leave the one you don\u2019t want set as an empty string the JooqTimestampRecordListener will ignore it.","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/created-at-column-name.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListenerOptions / createdAtColumnName createdAtColumnName \u00b6 val createdAtColumnName: String","title":"createdAtColumnName - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/created-at-column-name.html#createdatcolumnname","text":"val createdAtColumnName: String","title":"createdAtColumnName"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/install.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListenerOptions / install install \u00b6 val install: Boolean","title":"install - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/install.html#install","text":"val install: Boolean","title":"install"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/updated-at-column-name.html","text":"misk-jooq / misk.jooq.listeners / JooqTimestampRecordListenerOptions / updatedAtColumnName updatedAtColumnName \u00b6 val updatedAtColumnName: String","title":"updatedAtColumnName - Misk"},{"location":"0.x/misk-jooq/misk.jooq.listeners/-jooq-timestamp-record-listener-options/updated-at-column-name.html#updatedatcolumnname","text":"val updatedAtColumnName: String","title":"updatedAtColumnName"},{"location":"0.x/misk-jooq/misk.jooq.testgen/index.html","text":"misk-jooq / misk.jooq.testgen Package misk.jooq.testgen \u00b6 Types \u00b6 Name Summary DefaultCatalog open class DefaultCatalog : CatalogImpl This class is generated by jOOQ. Jooq open class Jooq : SchemaImpl This class is generated by jOOQ.","title":"Package misk.jooq.testgen - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/index.html#package-miskjooqtestgen","text":"","title":"Package misk.jooq.testgen"},{"location":"0.x/misk-jooq/misk.jooq.testgen/index.html#types","text":"Name Summary DefaultCatalog open class DefaultCatalog : CatalogImpl This class is generated by jOOQ. Jooq open class Jooq : SchemaImpl This class is generated by jOOQ.","title":"Types"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/index.html","text":"misk-jooq / misk.jooq.testgen / DefaultCatalog DefaultCatalog \u00b6 open class DefaultCatalog : CatalogImpl This class is generated by jOOQ. Constructors \u00b6 Name Summary <init> DefaultCatalog() This class is generated by jOOQ. Properties \u00b6 Name Summary JOOQ val JOOQ: Jooq The schema jooq. Functions \u00b6 Name Summary getSchemas open fun getSchemas(): List <Schema> Companion Object Properties \u00b6 Name Summary DEFAULT_CATALOG val DEFAULT_CATALOG: DefaultCatalog The reference instance of DEFAULT_CATALOG Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"DefaultCatalog - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/index.html#defaultcatalog","text":"open class DefaultCatalog : CatalogImpl This class is generated by jOOQ.","title":"DefaultCatalog"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/index.html#constructors","text":"Name Summary <init> DefaultCatalog() This class is generated by jOOQ.","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/index.html#properties","text":"Name Summary JOOQ val JOOQ: Jooq The schema jooq.","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/index.html#functions","text":"Name Summary getSchemas open fun getSchemas(): List <Schema>","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/index.html#companion-object-properties","text":"Name Summary DEFAULT_CATALOG val DEFAULT_CATALOG: DefaultCatalog The reference instance of DEFAULT_CATALOG","title":"Companion Object Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/-d-e-f-a-u-l-t_-c-a-t-a-l-o-g.html","text":"misk-jooq / misk.jooq.testgen / DefaultCatalog / DEFAULT_CATALOG DEFAULT_CATALOG \u00b6 val DEFAULT_CATALOG: DefaultCatalog The reference instance of DEFAULT_CATALOG","title":"DEFAULT_CATALOG - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/-d-e-f-a-u-l-t_-c-a-t-a-l-o-g.html#default_catalog","text":"val DEFAULT_CATALOG: DefaultCatalog The reference instance of DEFAULT_CATALOG","title":"DEFAULT_CATALOG"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/-init-.html","text":"misk-jooq / misk.jooq.testgen / DefaultCatalog / <init> <init> \u00b6 DefaultCatalog() This class is generated by jOOQ.","title":" init "},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/-init-.html#init","text":"DefaultCatalog() This class is generated by jOOQ.","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/-j-o-o-q.html","text":"misk-jooq / misk.jooq.testgen / DefaultCatalog / JOOQ JOOQ \u00b6 val JOOQ: Jooq The schema jooq.","title":"JOOQ - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/-j-o-o-q.html#jooq","text":"val JOOQ: Jooq The schema jooq.","title":"JOOQ"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/get-schemas.html","text":"misk-jooq / misk.jooq.testgen / DefaultCatalog / getSchemas getSchemas \u00b6 open fun getSchemas(): List <Schema>","title":"getSchemas - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-default-catalog/get-schemas.html#getschemas","text":"open fun getSchemas(): List <Schema>","title":"getSchemas"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/index.html","text":"misk-jooq / misk.jooq.testgen / Jooq Jooq \u00b6 open class Jooq : SchemaImpl This class is generated by jOOQ. Constructors \u00b6 Name Summary <init> Jooq() This class is generated by jOOQ. Properties \u00b6 Name Summary MOVIE val MOVIE: Movie The table jooq.movie. Functions \u00b6 Name Summary getCatalog open fun getCatalog(): Catalog getTables open fun getTables(): List <Table<*>> Companion Object Properties \u00b6 Name Summary JOOQ val JOOQ: Jooq The reference instance of jooq Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Jooq - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/index.html#jooq","text":"open class Jooq : SchemaImpl This class is generated by jOOQ.","title":"Jooq"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/index.html#constructors","text":"Name Summary <init> Jooq() This class is generated by jOOQ.","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/index.html#properties","text":"Name Summary MOVIE val MOVIE: Movie The table jooq.movie.","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/index.html#functions","text":"Name Summary getCatalog open fun getCatalog(): Catalog getTables open fun getTables(): List <Table<*>>","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/index.html#companion-object-properties","text":"Name Summary JOOQ val JOOQ: Jooq The reference instance of jooq","title":"Companion Object Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/-init-.html","text":"misk-jooq / misk.jooq.testgen / Jooq / <init> <init> \u00b6 Jooq() This class is generated by jOOQ.","title":" init "},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/-init-.html#init","text":"Jooq() This class is generated by jOOQ.","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/-j-o-o-q.html","text":"misk-jooq / misk.jooq.testgen / Jooq / JOOQ JOOQ \u00b6 val JOOQ: Jooq The reference instance of jooq","title":"JOOQ - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/-j-o-o-q.html#jooq","text":"val JOOQ: Jooq The reference instance of jooq","title":"JOOQ"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/-m-o-v-i-e.html","text":"misk-jooq / misk.jooq.testgen / Jooq / MOVIE MOVIE \u00b6 val MOVIE: Movie The table jooq.movie.","title":"MOVIE - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/-m-o-v-i-e.html#movie","text":"val MOVIE: Movie The table jooq.movie.","title":"MOVIE"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/get-catalog.html","text":"misk-jooq / misk.jooq.testgen / Jooq / getCatalog getCatalog \u00b6 open fun getCatalog(): Catalog","title":"getCatalog - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/get-catalog.html#getcatalog","text":"open fun getCatalog(): Catalog","title":"getCatalog"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/get-tables.html","text":"misk-jooq / misk.jooq.testgen / Jooq / getTables getTables \u00b6 open fun getTables(): List <Table<*>>","title":"getTables - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen/-jooq/get-tables.html#gettables","text":"open fun getTables(): List <Table<*>>","title":"getTables"},{"location":"0.x/misk-jooq/misk.jooq.testgen.keys/index.html","text":"misk-jooq / misk.jooq.testgen.keys Package misk.jooq.testgen.keys \u00b6 Properties \u00b6 Name Summary KEY_MOVIE_PRIMARY val KEY_MOVIE_PRIMARY: UniqueKey< MovieRecord >","title":"Package misk.jooq.testgen.keys - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.keys/index.html#package-miskjooqtestgenkeys","text":"","title":"Package misk.jooq.testgen.keys"},{"location":"0.x/misk-jooq/misk.jooq.testgen.keys/index.html#properties","text":"Name Summary KEY_MOVIE_PRIMARY val KEY_MOVIE_PRIMARY: UniqueKey< MovieRecord >","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen.keys/-k-e-y_-m-o-v-i-e_-p-r-i-m-a-r-y.html","text":"misk-jooq / misk.jooq.testgen.keys / KEY_MOVIE_PRIMARY KEY_MOVIE_PRIMARY \u00b6 val KEY_MOVIE_PRIMARY: UniqueKey< MovieRecord >","title":"KEY_MOVIE_PRIMARY - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.keys/-k-e-y_-m-o-v-i-e_-p-r-i-m-a-r-y.html#key_movie_primary","text":"val KEY_MOVIE_PRIMARY: UniqueKey< MovieRecord >","title":"KEY_MOVIE_PRIMARY"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/index.html","text":"misk-jooq / misk.jooq.testgen.tables Package misk.jooq.testgen.tables \u00b6 Types \u00b6 Name Summary Movie open class Movie : TableImpl< MovieRecord > This class is generated by jOOQ.","title":"Package misk.jooq.testgen.tables - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/index.html#package-miskjooqtestgentables","text":"","title":"Package misk.jooq.testgen.tables"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/index.html#types","text":"Name Summary Movie open class Movie : TableImpl< MovieRecord > This class is generated by jOOQ.","title":"Types"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/index.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie Movie \u00b6 open class Movie : TableImpl< MovieRecord > This class is generated by jOOQ. Constructors \u00b6 Name Summary <init> Movie(alias: String ) Movie(alias: Name) Create an aliased jooq.movie table reference Movie() Create a jooq.movie table reference Movie(child: Table<out Record>, key: ForeignKey<out Record, MovieRecord >)``Movie(alias: Name, child: Table<out Record>?, path: ForeignKey<out Record, MovieRecord >?, aliased: Table< MovieRecord >?, parameters: Array <Field<*>?>?) This class is generated by jOOQ. Properties \u00b6 Name Summary CREATED_AT val CREATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.created_at. GENRE val GENRE: TableField< MovieRecord , String ?> The column jooq.movie.genre. ID val ID: TableField< MovieRecord , Long ?> The column jooq.movie.id. NAME val NAME: TableField< MovieRecord , String ?> The column jooq.movie.name. UPDATED_AT val UPDATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.updated_at. VERSION val VERSION: TableField< MovieRecord , Int ?> The column jooq.movie.version. Functions \u00b6 Name Summary as open fun as(alias: String ): Movie open fun as(alias: Name): Movie fieldsRow open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> getIdentity open fun getIdentity(): Identity< MovieRecord , Long ?> getKeys open fun getKeys(): List <UniqueKey< MovieRecord >> getPrimaryKey open fun getPrimaryKey(): UniqueKey< MovieRecord > getRecordType open fun getRecordType(): Class < MovieRecord > The class holding records for this type getRecordVersion open fun getRecordVersion(): TableField< MovieRecord , Int ?> getSchema open fun getSchema(): Schema rename open fun rename(name: String ): Movie open fun rename(name: Name): Movie Rename this table Companion Object Properties \u00b6 Name Summary MOVIE val MOVIE: Movie The reference instance of jooq.movie Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Movie - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/index.html#movie","text":"open class Movie : TableImpl< MovieRecord > This class is generated by jOOQ.","title":"Movie"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/index.html#constructors","text":"Name Summary <init> Movie(alias: String ) Movie(alias: Name) Create an aliased jooq.movie table reference Movie() Create a jooq.movie table reference Movie(child: Table<out Record>, key: ForeignKey<out Record, MovieRecord >)``Movie(alias: Name, child: Table<out Record>?, path: ForeignKey<out Record, MovieRecord >?, aliased: Table< MovieRecord >?, parameters: Array <Field<*>?>?) This class is generated by jOOQ.","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/index.html#properties","text":"Name Summary CREATED_AT val CREATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.created_at. GENRE val GENRE: TableField< MovieRecord , String ?> The column jooq.movie.genre. ID val ID: TableField< MovieRecord , Long ?> The column jooq.movie.id. NAME val NAME: TableField< MovieRecord , String ?> The column jooq.movie.name. UPDATED_AT val UPDATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.updated_at. VERSION val VERSION: TableField< MovieRecord , Int ?> The column jooq.movie.version.","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/index.html#functions","text":"Name Summary as open fun as(alias: String ): Movie open fun as(alias: Name): Movie fieldsRow open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> getIdentity open fun getIdentity(): Identity< MovieRecord , Long ?> getKeys open fun getKeys(): List <UniqueKey< MovieRecord >> getPrimaryKey open fun getPrimaryKey(): UniqueKey< MovieRecord > getRecordType open fun getRecordType(): Class < MovieRecord > The class holding records for this type getRecordVersion open fun getRecordVersion(): TableField< MovieRecord , Int ?> getSchema open fun getSchema(): Schema rename open fun rename(name: String ): Movie open fun rename(name: Name): Movie Rename this table","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/index.html#companion-object-properties","text":"Name Summary MOVIE val MOVIE: Movie The reference instance of jooq.movie","title":"Companion Object Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-c-r-e-a-t-e-d_-a-t.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / CREATED_AT CREATED_AT \u00b6 val CREATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.created_at.","title":"CREATED_AT - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-c-r-e-a-t-e-d_-a-t.html#created_at","text":"val CREATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.created_at.","title":"CREATED_AT"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-g-e-n-r-e.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / GENRE GENRE \u00b6 val GENRE: TableField< MovieRecord , String ?> The column jooq.movie.genre.","title":"GENRE - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-g-e-n-r-e.html#genre","text":"val GENRE: TableField< MovieRecord , String ?> The column jooq.movie.genre.","title":"GENRE"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-i-d.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / ID ID \u00b6 val ID: TableField< MovieRecord , Long ?> The column jooq.movie.id.","title":"ID - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-i-d.html#id","text":"val ID: TableField< MovieRecord , Long ?> The column jooq.movie.id.","title":"ID"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-init-.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / <init> <init> \u00b6 Movie(alias: String ) Movie(alias: Name) Create an aliased jooq.movie table reference Movie() Create a jooq.movie table reference Movie(child: Table<out Record>, key: ForeignKey<out Record, MovieRecord >)``Movie(alias: Name, child: Table<out Record>?, path: ForeignKey<out Record, MovieRecord >?, aliased: Table< MovieRecord >?, parameters: Array <Field<*>?>?) This class is generated by jOOQ.","title":" init "},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-init-.html#init","text":"Movie(alias: String ) Movie(alias: Name) Create an aliased jooq.movie table reference Movie() Create a jooq.movie table reference Movie(child: Table<out Record>, key: ForeignKey<out Record, MovieRecord >)``Movie(alias: Name, child: Table<out Record>?, path: ForeignKey<out Record, MovieRecord >?, aliased: Table< MovieRecord >?, parameters: Array <Field<*>?>?) This class is generated by jOOQ.","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-m-o-v-i-e.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / MOVIE MOVIE \u00b6 val MOVIE: Movie The reference instance of jooq.movie","title":"MOVIE - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-m-o-v-i-e.html#movie","text":"val MOVIE: Movie The reference instance of jooq.movie","title":"MOVIE"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-n-a-m-e.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / NAME NAME \u00b6 val NAME: TableField< MovieRecord , String ?> The column jooq.movie.name.","title":"NAME - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-n-a-m-e.html#name","text":"val NAME: TableField< MovieRecord , String ?> The column jooq.movie.name.","title":"NAME"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-u-p-d-a-t-e-d_-a-t.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / UPDATED_AT UPDATED_AT \u00b6 val UPDATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.updated_at.","title":"UPDATED_AT - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-u-p-d-a-t-e-d_-a-t.html#updated_at","text":"val UPDATED_AT: TableField< MovieRecord , LocalDateTime ?> The column jooq.movie.updated_at.","title":"UPDATED_AT"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-v-e-r-s-i-o-n.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / VERSION VERSION \u00b6 val VERSION: TableField< MovieRecord , Int ?> The column jooq.movie.version.","title":"VERSION - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/-v-e-r-s-i-o-n.html#version","text":"val VERSION: TableField< MovieRecord , Int ?> The column jooq.movie.version.","title":"VERSION"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/as.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / as as \u00b6 open fun as(alias: String ): Movie open fun as(alias: Name): Movie","title":"as - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/as.html#as","text":"open fun as(alias: String ): Movie open fun as(alias: Name): Movie","title":"as"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/fields-row.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / fieldsRow fieldsRow \u00b6 open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?>","title":"fieldsRow - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/fields-row.html#fieldsrow","text":"open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?>","title":"fieldsRow"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-identity.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / getIdentity getIdentity \u00b6 open fun getIdentity(): Identity< MovieRecord , Long ?>","title":"getIdentity - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-identity.html#getidentity","text":"open fun getIdentity(): Identity< MovieRecord , Long ?>","title":"getIdentity"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-keys.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / getKeys getKeys \u00b6 open fun getKeys(): List <UniqueKey< MovieRecord >>","title":"getKeys - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-keys.html#getkeys","text":"open fun getKeys(): List <UniqueKey< MovieRecord >>","title":"getKeys"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-primary-key.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / getPrimaryKey getPrimaryKey \u00b6 open fun getPrimaryKey(): UniqueKey< MovieRecord >","title":"getPrimaryKey - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-primary-key.html#getprimarykey","text":"open fun getPrimaryKey(): UniqueKey< MovieRecord >","title":"getPrimaryKey"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-type.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / getRecordType getRecordType \u00b6 open fun getRecordType(): Class < MovieRecord > The class holding records for this type","title":"getRecordType - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-type.html#getrecordtype","text":"open fun getRecordType(): Class < MovieRecord > The class holding records for this type","title":"getRecordType"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-version.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / getRecordVersion getRecordVersion \u00b6 open fun getRecordVersion(): TableField< MovieRecord , Int ?>","title":"getRecordVersion - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-record-version.html#getrecordversion","text":"open fun getRecordVersion(): TableField< MovieRecord , Int ?>","title":"getRecordVersion"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-schema.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / getSchema getSchema \u00b6 open fun getSchema(): Schema","title":"getSchema - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/get-schema.html#getschema","text":"open fun getSchema(): Schema","title":"getSchema"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/rename.html","text":"misk-jooq / misk.jooq.testgen.tables / Movie / rename rename \u00b6 open fun rename(name: String ): Movie open fun rename(name: Name): Movie Rename this table","title":"rename - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables/-movie/rename.html#rename","text":"open fun rename(name: String ): Movie open fun rename(name: Name): Movie Rename this table","title":"rename"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/index.html","text":"misk-jooq / misk.jooq.testgen.tables.records Package misk.jooq.testgen.tables.records \u00b6 Types \u00b6 Name Summary MovieRecord open class MovieRecord : UpdatableRecordImpl< MovieRecord >, Record6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> This class is generated by jOOQ.","title":"Package misk.jooq.testgen.tables.records - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/index.html#package-miskjooqtestgentablesrecords","text":"","title":"Package misk.jooq.testgen.tables.records"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/index.html#types","text":"Name Summary MovieRecord open class MovieRecord : UpdatableRecordImpl< MovieRecord >, Record6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> This class is generated by jOOQ.","title":"Types"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/index.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord MovieRecord \u00b6 open class MovieRecord : UpdatableRecordImpl< MovieRecord >, Record6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> This class is generated by jOOQ. Constructors \u00b6 Name Summary <init> MovieRecord(id: Long ? = null, name: String ? = null, genre: String ? = null, version: Int ? = null, createdAt: LocalDateTime ? = null, updatedAt: LocalDateTime ? = null) Create a detached, initialised MovieRecord MovieRecord() This class is generated by jOOQ. Properties \u00b6 Name Summary createdAt var createdAt: LocalDateTime ? genre var genre: String ? id var id: Long ? name var name: String ? updatedAt var updatedAt: LocalDateTime ? version var version: Int ? Functions \u00b6 Name Summary component1 open fun component1(): Long ? component2 open fun component2(): String ? component3 open fun component3(): String ? component4 open fun component4(): Int ? component5 open fun component5(): LocalDateTime ? component6 open fun component6(): LocalDateTime ? field1 open fun field1(): Field< Long ?> field2 open fun field2(): Field< String ?> field3 open fun field3(): Field< String ?> field4 open fun field4(): Field< Int ?> field5 open fun field5(): Field< LocalDateTime ?> field6 open fun field6(): Field< LocalDateTime ?> fieldsRow open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> key open fun key(): Record1< Long ?> value1 open fun value1(): Long ? open fun value1(value: Long ?): MovieRecord value2 open fun value2(): String ? open fun value2(value: String ?): MovieRecord value3 open fun value3(): String ? open fun value3(value: String ?): MovieRecord value4 open fun value4(): Int ? open fun value4(value: Int ?): MovieRecord value5 open fun value5(): LocalDateTime ? open fun value5(value: LocalDateTime ?): MovieRecord value6 open fun value6(): LocalDateTime ? open fun value6(value: LocalDateTime ?): MovieRecord values open fun values(value1: Long ?, value2: String ?, value3: String ?, value4: Int ?, value5: LocalDateTime ?, value6: LocalDateTime ?): MovieRecord valuesRow open fun valuesRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> Extension Functions \u00b6 Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"MovieRecord - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/index.html#movierecord","text":"open class MovieRecord : UpdatableRecordImpl< MovieRecord >, Record6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> This class is generated by jOOQ.","title":"MovieRecord"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/index.html#constructors","text":"Name Summary <init> MovieRecord(id: Long ? = null, name: String ? = null, genre: String ? = null, version: Int ? = null, createdAt: LocalDateTime ? = null, updatedAt: LocalDateTime ? = null) Create a detached, initialised MovieRecord MovieRecord() This class is generated by jOOQ.","title":"Constructors"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/index.html#properties","text":"Name Summary createdAt var createdAt: LocalDateTime ? genre var genre: String ? id var id: Long ? name var name: String ? updatedAt var updatedAt: LocalDateTime ? version var version: Int ?","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/index.html#functions","text":"Name Summary component1 open fun component1(): Long ? component2 open fun component2(): String ? component3 open fun component3(): String ? component4 open fun component4(): Int ? component5 open fun component5(): LocalDateTime ? component6 open fun component6(): LocalDateTime ? field1 open fun field1(): Field< Long ?> field2 open fun field2(): Field< String ?> field3 open fun field3(): Field< String ?> field4 open fun field4(): Field< Int ?> field5 open fun field5(): Field< LocalDateTime ?> field6 open fun field6(): Field< LocalDateTime ?> fieldsRow open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?> key open fun key(): Record1< Long ?> value1 open fun value1(): Long ? open fun value1(value: Long ?): MovieRecord value2 open fun value2(): String ? open fun value2(value: String ?): MovieRecord value3 open fun value3(): String ? open fun value3(value: String ?): MovieRecord value4 open fun value4(): Int ? open fun value4(value: Int ?): MovieRecord value5 open fun value5(): LocalDateTime ? open fun value5(value: LocalDateTime ?): MovieRecord value6 open fun value6(): LocalDateTime ? open fun value6(value: LocalDateTime ?): MovieRecord values open fun values(value1: Long ?, value2: String ?, value3: String ?, value4: Int ?, value5: LocalDateTime ?, value6: LocalDateTime ?): MovieRecord valuesRow open fun valuesRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?>","title":"Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/index.html#extension-functions","text":"Name Summary getOrThrow fun <ANY> ANY ?.getOrThrow(): ANY ifNotNull fun <ANY> ANY ?.ifNotNull(condition: (any: ANY ) -> Condition): Condition","title":"Extension Functions"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/-init-.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / <init> <init> \u00b6 MovieRecord(id: Long ? = null, name: String ? = null, genre: String ? = null, version: Int ? = null, createdAt: LocalDateTime ? = null, updatedAt: LocalDateTime ? = null) Create a detached, initialised MovieRecord MovieRecord() This class is generated by jOOQ.","title":" init "},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/-init-.html#init","text":"MovieRecord(id: Long ? = null, name: String ? = null, genre: String ? = null, version: Int ? = null, createdAt: LocalDateTime ? = null, updatedAt: LocalDateTime ? = null) Create a detached, initialised MovieRecord MovieRecord() This class is generated by jOOQ.","title":"&lt;init&gt;"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component1.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / component1 component1 \u00b6 open fun component1(): Long ?","title":"component1 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component1.html#component1","text":"open fun component1(): Long ?","title":"component1"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component2.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / component2 component2 \u00b6 open fun component2(): String ?","title":"component2 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component2.html#component2","text":"open fun component2(): String ?","title":"component2"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component3.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / component3 component3 \u00b6 open fun component3(): String ?","title":"component3 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component3.html#component3","text":"open fun component3(): String ?","title":"component3"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component4.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / component4 component4 \u00b6 open fun component4(): Int ?","title":"component4 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component4.html#component4","text":"open fun component4(): Int ?","title":"component4"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component5.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / component5 component5 \u00b6 open fun component5(): LocalDateTime ?","title":"component5 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component5.html#component5","text":"open fun component5(): LocalDateTime ?","title":"component5"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component6.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / component6 component6 \u00b6 open fun component6(): LocalDateTime ?","title":"component6 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/component6.html#component6","text":"open fun component6(): LocalDateTime ?","title":"component6"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/created-at.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / createdAt createdAt \u00b6 var createdAt: LocalDateTime ?","title":"createdAt - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/created-at.html#createdat","text":"var createdAt: LocalDateTime ?","title":"createdAt"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field1.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / field1 field1 \u00b6 open fun field1(): Field< Long ?>","title":"field1 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field1.html#field1","text":"open fun field1(): Field< Long ?>","title":"field1"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field2.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / field2 field2 \u00b6 open fun field2(): Field< String ?>","title":"field2 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field2.html#field2","text":"open fun field2(): Field< String ?>","title":"field2"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field3.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / field3 field3 \u00b6 open fun field3(): Field< String ?>","title":"field3 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field3.html#field3","text":"open fun field3(): Field< String ?>","title":"field3"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field4.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / field4 field4 \u00b6 open fun field4(): Field< Int ?>","title":"field4 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field4.html#field4","text":"open fun field4(): Field< Int ?>","title":"field4"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field5.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / field5 field5 \u00b6 open fun field5(): Field< LocalDateTime ?>","title":"field5 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field5.html#field5","text":"open fun field5(): Field< LocalDateTime ?>","title":"field5"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field6.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / field6 field6 \u00b6 open fun field6(): Field< LocalDateTime ?>","title":"field6 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/field6.html#field6","text":"open fun field6(): Field< LocalDateTime ?>","title":"field6"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/fields-row.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / fieldsRow fieldsRow \u00b6 open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?>","title":"fieldsRow - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/fields-row.html#fieldsrow","text":"open fun fieldsRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?>","title":"fieldsRow"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/genre.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / genre genre \u00b6 var genre: String ?","title":"genre - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/genre.html#genre","text":"var genre: String ?","title":"genre"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/id.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / id id \u00b6 var id: Long ?","title":"id - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/id.html#id","text":"var id: Long ?","title":"id"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/key.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / key key \u00b6 open fun key(): Record1< Long ?>","title":"key - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/key.html#key","text":"open fun key(): Record1< Long ?>","title":"key"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/name.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / name name \u00b6 var name: String ?","title":"name - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/name.html#name","text":"var name: String ?","title":"name"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/updated-at.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / updatedAt updatedAt \u00b6 var updatedAt: LocalDateTime ?","title":"updatedAt - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/updated-at.html#updatedat","text":"var updatedAt: LocalDateTime ?","title":"updatedAt"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value1.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / value1 value1 \u00b6 open fun value1(): Long ? open fun value1(value: Long ?): MovieRecord","title":"value1 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value1.html#value1","text":"open fun value1(): Long ? open fun value1(value: Long ?): MovieRecord","title":"value1"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value2.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / value2 value2 \u00b6 open fun value2(): String ? open fun value2(value: String ?): MovieRecord","title":"value2 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value2.html#value2","text":"open fun value2(): String ? open fun value2(value: String ?): MovieRecord","title":"value2"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value3.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / value3 value3 \u00b6 open fun value3(): String ? open fun value3(value: String ?): MovieRecord","title":"value3 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value3.html#value3","text":"open fun value3(): String ? open fun value3(value: String ?): MovieRecord","title":"value3"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value4.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / value4 value4 \u00b6 open fun value4(): Int ? open fun value4(value: Int ?): MovieRecord","title":"value4 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value4.html#value4","text":"open fun value4(): Int ? open fun value4(value: Int ?): MovieRecord","title":"value4"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value5.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / value5 value5 \u00b6 open fun value5(): LocalDateTime ? open fun value5(value: LocalDateTime ?): MovieRecord","title":"value5 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value5.html#value5","text":"open fun value5(): LocalDateTime ? open fun value5(value: LocalDateTime ?): MovieRecord","title":"value5"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value6.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / value6 value6 \u00b6 open fun value6(): LocalDateTime ? open fun value6(value: LocalDateTime ?): MovieRecord","title":"value6 - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/value6.html#value6","text":"open fun value6(): LocalDateTime ? open fun value6(value: LocalDateTime ?): MovieRecord","title":"value6"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values-row.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / valuesRow valuesRow \u00b6 open fun valuesRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?>","title":"valuesRow - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values-row.html#valuesrow","text":"open fun valuesRow(): Row6< Long ?, String ?, String ?, Int ?, LocalDateTime ?, LocalDateTime ?>","title":"valuesRow"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / values values \u00b6 open fun values(value1: Long ?, value2: String ?, value3: String ?, value4: Int ?, value5: LocalDateTime ?, value6: LocalDateTime ?): MovieRecord","title":"values - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/values.html#values","text":"open fun values(value1: Long ?, value2: String ?, value3: String ?, value4: Int ?, value5: LocalDateTime ?, value6: LocalDateTime ?): MovieRecord","title":"values"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/version.html","text":"misk-jooq / misk.jooq.testgen.tables.records / MovieRecord / version version \u00b6 var version: Int ?","title":"version - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.records/-movie-record/version.html#version","text":"var version: Int ?","title":"version"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.references/index.html","text":"misk-jooq / misk.jooq.testgen.tables.references Package misk.jooq.testgen.tables.references \u00b6 Properties \u00b6 Name Summary MOVIE val MOVIE: Movie The table jooq.movie.","title":"Package misk.jooq.testgen.tables.references - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.references/index.html#package-miskjooqtestgentablesreferences","text":"","title":"Package misk.jooq.testgen.tables.references"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.references/index.html#properties","text":"Name Summary MOVIE val MOVIE: Movie The table jooq.movie.","title":"Properties"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.references/-m-o-v-i-e.html","text":"misk-jooq / misk.jooq.testgen.tables.references / MOVIE MOVIE \u00b6 val MOVIE: Movie The table jooq.movie.","title":"MOVIE - Misk"},{"location":"0.x/misk-jooq/misk.jooq.testgen.tables.references/-m-o-v-i-e.html#movie","text":"val MOVIE: Movie The table jooq.movie.","title":"MOVIE"},{"location":"0.x/misk-launchdarkly/index.html","text":"misk-launchdarkly Packages \u00b6 Name Summary misk.feature.launchdarkly Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-launchdarkly/index.html#packages","text":"Name Summary misk.feature.launchdarkly","title":"Packages"},{"location":"0.x/misk-launchdarkly/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-launchdarkly/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.feature.launchdarkly.LaunchDarklyConfig misk.feature.launchdarkly.LaunchDarklyModule Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":"All Types - Misk"},{"location":"0.x/misk-launchdarkly/alltypes/index.html#all-types","text":"Name Summary misk.feature.launchdarkly.LaunchDarklyConfig misk.feature.launchdarkly.LaunchDarklyModule Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":"All Types"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/index.html","text":"misk-launchdarkly / misk.feature.launchdarkly Package misk.feature.launchdarkly \u00b6 Types \u00b6 Name Summary LaunchDarklyConfig data class LaunchDarklyConfig : Config LaunchDarklyModule class LaunchDarklyModule : KAbstractModule Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":"Package misk.feature.launchdarkly - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/index.html#package-miskfeaturelaunchdarkly","text":"","title":"Package misk.feature.launchdarkly"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/index.html#types","text":"Name Summary LaunchDarklyConfig data class LaunchDarklyConfig : Config LaunchDarklyModule class LaunchDarklyModule : KAbstractModule Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":"Types"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/index.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyConfig LaunchDarklyConfig \u00b6 data class LaunchDarklyConfig : Config Constructors \u00b6 Name Summary <init> LaunchDarklyConfig(sdk_key: String , base_uri: String , ssl: HttpClientSSLConfig? = null) Properties \u00b6 Name Summary base_uri val base_uri: String sdk_key val sdk_key: String ssl val ssl: HttpClientSSLConfig?","title":"LaunchDarklyConfig - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/index.html#launchdarklyconfig","text":"data class LaunchDarklyConfig : Config","title":"LaunchDarklyConfig"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/index.html#constructors","text":"Name Summary <init> LaunchDarklyConfig(sdk_key: String , base_uri: String , ssl: HttpClientSSLConfig? = null)","title":"Constructors"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/index.html#properties","text":"Name Summary base_uri val base_uri: String sdk_key val sdk_key: String ssl val ssl: HttpClientSSLConfig?","title":"Properties"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/-init-.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyConfig / <init> <init> \u00b6 LaunchDarklyConfig(sdk_key: String , base_uri: String , ssl: HttpClientSSLConfig? = null)","title":" init "},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/-init-.html#init","text":"LaunchDarklyConfig(sdk_key: String , base_uri: String , ssl: HttpClientSSLConfig? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/base_uri.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyConfig / base_uri base_uri \u00b6 val base_uri: String","title":"base_uri - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/base_uri.html#base_uri","text":"val base_uri: String","title":"base_uri"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/sdk_key.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyConfig / sdk_key sdk_key \u00b6 val sdk_key: String","title":"sdk_key - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/sdk_key.html#sdk_key","text":"val sdk_key: String","title":"sdk_key"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/ssl.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyConfig / ssl ssl \u00b6 val ssl: HttpClientSSLConfig?","title":"ssl - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-config/ssl.html#ssl","text":"val ssl: HttpClientSSLConfig?","title":"ssl"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/index.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyModule LaunchDarklyModule \u00b6 class LaunchDarklyModule : KAbstractModule Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ). Constructors \u00b6 Name Summary <init> LaunchDarklyModule(config: LaunchDarklyConfig , qualifier: KClass <out Annotation >? = null) Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ). Functions \u00b6 Name Summary configure fun configure(): Unit provideLaunchDarklyClient fun provideLaunchDarklyClient(sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterface","title":"LaunchDarklyModule - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/index.html#launchdarklymodule","text":"class LaunchDarklyModule : KAbstractModule Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":"LaunchDarklyModule"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/index.html#constructors","text":"Name Summary <init> LaunchDarklyModule(config: LaunchDarklyConfig , qualifier: KClass <out Annotation >? = null) Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":"Constructors"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideLaunchDarklyClient fun provideLaunchDarklyClient(sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterface","title":"Functions"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/-init-.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyModule / <init> <init> \u00b6 LaunchDarklyModule(config: LaunchDarklyConfig , qualifier: KClass <out Annotation >? = null) Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":" init "},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/-init-.html#init","text":"LaunchDarklyModule(config: LaunchDarklyConfig , qualifier: KClass <out Annotation >? = null) Binds a FeatureFlags backed by LaunchDarkly ( https://launchdarkly.com ).","title":"&lt;init&gt;"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/configure.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/provide-launch-darkly-client.html","text":"misk-launchdarkly / misk.feature.launchdarkly / LaunchDarklyModule / provideLaunchDarklyClient provideLaunchDarklyClient \u00b6 @Provides fun provideLaunchDarklyClient(sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterface","title":"provideLaunchDarklyClient - Misk"},{"location":"0.x/misk-launchdarkly/misk.feature.launchdarkly/-launch-darkly-module/provide-launch-darkly-client.html#providelaunchdarklyclient","text":"@Provides fun provideLaunchDarklyClient(sslLoader: SslLoader, sslContextFactory: SslContextFactory, resourceLoader: ResourceLoader): LDClientInterface","title":"provideLaunchDarklyClient"},{"location":"0.x/misk-launchdarkly-core/index.html","text":"misk-launchdarkly-core Packages \u00b6 Name Summary misk.feature.launchdarkly Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-launchdarkly-core/index.html#packages","text":"Name Summary misk.feature.launchdarkly","title":"Packages"},{"location":"0.x/misk-launchdarkly-core/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-launchdarkly-core/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.feature.launchdarkly.LaunchDarklyDynamicConfig misk.feature.launchdarkly.LaunchDarklyFeatureFlags Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":"All Types - Misk"},{"location":"0.x/misk-launchdarkly-core/alltypes/index.html#all-types","text":"Name Summary misk.feature.launchdarkly.LaunchDarklyDynamicConfig misk.feature.launchdarkly.LaunchDarklyFeatureFlags Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":"All Types"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/index.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly Package misk.feature.launchdarkly \u00b6 Types \u00b6 Name Summary LaunchDarklyDynamicConfig class LaunchDarklyDynamicConfig : DynamicConfig LaunchDarklyFeatureFlags class LaunchDarklyFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":"Package misk.feature.launchdarkly - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/index.html#package-miskfeaturelaunchdarkly","text":"","title":"Package misk.feature.launchdarkly"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/index.html#types","text":"Name Summary LaunchDarklyDynamicConfig class LaunchDarklyDynamicConfig : DynamicConfig LaunchDarklyFeatureFlags class LaunchDarklyFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":"Types"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/index.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig LaunchDarklyDynamicConfig \u00b6 @Singleton class LaunchDarklyDynamicConfig : DynamicConfig Constructors \u00b6 Name Summary <init> LaunchDarklyDynamicConfig(featureFlags: FeatureFlags) Functions \u00b6 Name Summary getBoolean fun getBoolean(feature: Feature): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T getInt fun getInt(feature: Feature): Int getJson fun <T> getJson(feature: Feature, clazz: Class < T >): T getString fun getString(feature: Feature): String trackBoolean fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Companion Object Properties \u00b6 Name Summary ATTRIBUTES val ATTRIBUTES: Attributes KEY const val KEY: String","title":"LaunchDarklyDynamicConfig - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/index.html#launchdarklydynamicconfig","text":"@Singleton class LaunchDarklyDynamicConfig : DynamicConfig","title":"LaunchDarklyDynamicConfig"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/index.html#constructors","text":"Name Summary <init> LaunchDarklyDynamicConfig(featureFlags: FeatureFlags)","title":"Constructors"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/index.html#functions","text":"Name Summary getBoolean fun getBoolean(feature: Feature): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T getInt fun getInt(feature: Feature): Int getJson fun <T> getJson(feature: Feature, clazz: Class < T >): T getString fun getString(feature: Feature): String trackBoolean fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/index.html#companion-object-properties","text":"Name Summary ATTRIBUTES val ATTRIBUTES: Attributes KEY const val KEY: String","title":"Companion Object Properties"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-a-t-t-r-i-b-u-t-e-s.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / ATTRIBUTES ATTRIBUTES \u00b6 val ATTRIBUTES: Attributes","title":"ATTRIBUTES - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-a-t-t-r-i-b-u-t-e-s.html#attributes","text":"val ATTRIBUTES: Attributes","title":"ATTRIBUTES"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-init-.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / <init> <init> \u00b6 LaunchDarklyDynamicConfig(featureFlags: FeatureFlags)","title":" init "},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-init-.html#init","text":"LaunchDarklyDynamicConfig(featureFlags: FeatureFlags)","title":"&lt;init&gt;"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-k-e-y.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / KEY KEY \u00b6 const val KEY: String","title":"KEY - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/-k-e-y.html#key","text":"const val KEY: String","title":"KEY"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-boolean.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / getBoolean getBoolean \u00b6 fun getBoolean(feature: Feature): Boolean","title":"getBoolean - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-boolean.html#getboolean","text":"fun getBoolean(feature: Feature): Boolean","title":"getBoolean"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-enum.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / getEnum getEnum \u00b6 fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T","title":"getEnum - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-enum.html#getenum","text":"fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T","title":"getEnum"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-int.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / getInt getInt \u00b6 fun getInt(feature: Feature): Int","title":"getInt - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-int.html#getint","text":"fun getInt(feature: Feature): Int","title":"getInt"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-json.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / getJson getJson \u00b6 fun <T> getJson(feature: Feature, clazz: Class < T >): T","title":"getJson - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-json.html#getjson","text":"fun <T> getJson(feature: Feature, clazz: Class < T >): T","title":"getJson"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-string.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / getString getString \u00b6 fun getString(feature: Feature): String","title":"getString - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/get-string.html#getstring","text":"fun getString(feature: Feature): String","title":"getString"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-boolean.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / trackBoolean trackBoolean \u00b6 fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-boolean.html#trackboolean","text":"fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-enum.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / trackEnum trackEnum \u00b6 fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-enum.html#trackenum","text":"fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-int.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / trackInt trackInt \u00b6 fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-int.html#trackint","text":"fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-json.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / trackJson trackJson \u00b6 fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-json.html#trackjson","text":"fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-string.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyDynamicConfig / trackString trackString \u00b6 fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-dynamic-config/track-string.html#trackstring","text":"fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/index.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags LaunchDarklyFeatureFlags \u00b6 @Singleton class LaunchDarklyFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation. Constructors \u00b6 Name Summary <init> LaunchDarklyFeatureFlags(ldClient: LDClientInterface, moshi: Moshi) Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation. Functions \u00b6 Name Summary getBoolean fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T getInt fun getInt(feature: Feature, key: String , attributes: Attributes): Int getJson fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T getString fun getString(feature: Feature, key: String , attributes: Attributes): String shutDown fun shutDown(): Unit startUp fun startUp(): Unit trackBoolean fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Companion Object Properties \u00b6 Name Summary logger val logger: KLogger","title":"LaunchDarklyFeatureFlags - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/index.html#launchdarklyfeatureflags","text":"@Singleton class LaunchDarklyFeatureFlags : AbstractIdleService, FeatureFlags, FeatureService Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":"LaunchDarklyFeatureFlags"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/index.html#constructors","text":"Name Summary <init> LaunchDarklyFeatureFlags(ldClient: LDClientInterface, moshi: Moshi) Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":"Constructors"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/index.html#functions","text":"Name Summary getBoolean fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T getInt fun getInt(feature: Feature, key: String , attributes: Attributes): Int getJson fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T getString fun getString(feature: Feature, key: String , attributes: Attributes): String shutDown fun shutDown(): Unit startUp fun startUp(): Unit trackBoolean fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/index.html#companion-object-properties","text":"Name Summary logger val logger: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/-init-.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / <init> <init> \u00b6 LaunchDarklyFeatureFlags(ldClient: LDClientInterface, moshi: Moshi) Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":" init "},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/-init-.html#init","text":"LaunchDarklyFeatureFlags(ldClient: LDClientInterface, moshi: Moshi) Implementation of FeatureFlags using LaunchDarkly\u2019s Java SDK. See https://docs.launchdarkly.com/docs/java-sdk-reference documentation.","title":"&lt;init&gt;"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-boolean.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / getBoolean getBoolean \u00b6 fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean","title":"getBoolean - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-boolean.html#getboolean","text":"fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean","title":"getBoolean"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-enum.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / getEnum getEnum \u00b6 fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T","title":"getEnum - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-enum.html#getenum","text":"fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T","title":"getEnum"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-int.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / getInt getInt \u00b6 fun getInt(feature: Feature, key: String , attributes: Attributes): Int","title":"getInt - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-int.html#getint","text":"fun getInt(feature: Feature, key: String , attributes: Attributes): Int","title":"getInt"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-json.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / getJson getJson \u00b6 fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T","title":"getJson - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-json.html#getjson","text":"fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T","title":"getJson"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-string.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / getString getString \u00b6 fun getString(feature: Feature, key: String , attributes: Attributes): String","title":"getString - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/get-string.html#getstring","text":"fun getString(feature: Feature, key: String , attributes: Attributes): String","title":"getString"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/logger.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/shut-down.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/start-up.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-boolean.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / trackBoolean trackBoolean \u00b6 fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-boolean.html#trackboolean","text":"fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-enum.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / trackEnum trackEnum \u00b6 fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-enum.html#trackenum","text":"fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-int.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / trackInt trackInt \u00b6 fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-int.html#trackint","text":"fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-json.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / trackJson trackJson \u00b6 fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-json.html#trackjson","text":"fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-string.html","text":"misk-launchdarkly-core / misk.feature.launchdarkly / LaunchDarklyFeatureFlags / trackString trackString \u00b6 fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString - Misk"},{"location":"0.x/misk-launchdarkly-core/misk.feature.launchdarkly/-launch-darkly-feature-flags/track-string.html#trackstring","text":"fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString"},{"location":"0.x/misk-metrics/index.html","text":"misk-metrics Packages \u00b6 Name Summary misk.metrics Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-metrics/index.html#packages","text":"Name Summary misk.metrics","title":"Packages"},{"location":"0.x/misk-metrics/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-metrics/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.metrics.Histogram Skeleton for the functionality of histograms misk.metrics.Metrics Interface for application code to emit metrics to a metrics backend like Prometheus. misk.metrics.MetricsScope","title":"All Types - Misk"},{"location":"0.x/misk-metrics/alltypes/index.html#all-types","text":"Name Summary misk.metrics.Histogram Skeleton for the functionality of histograms misk.metrics.Metrics Interface for application code to emit metrics to a metrics backend like Prometheus. misk.metrics.MetricsScope","title":"All Types"},{"location":"0.x/misk-metrics/misk.metrics/index.html","text":"misk-metrics / misk.metrics Package misk.metrics \u00b6 Types \u00b6 Name Summary Histogram interface Histogram Skeleton for the functionality of histograms Metrics interface Metrics Interface for application code to emit metrics to a metrics backend like Prometheus. MetricsScope open class MetricsScope","title":"Package misk.metrics - Misk"},{"location":"0.x/misk-metrics/misk.metrics/index.html#package-miskmetrics","text":"","title":"Package misk.metrics"},{"location":"0.x/misk-metrics/misk.metrics/index.html#types","text":"Name Summary Histogram interface Histogram Skeleton for the functionality of histograms Metrics interface Metrics Interface for application code to emit metrics to a metrics backend like Prometheus. MetricsScope open class MetricsScope","title":"Types"},{"location":"0.x/misk-metrics/misk.metrics/-metrics-scope.html","text":"misk-metrics / misk.metrics / MetricsScope MetricsScope \u00b6 open class MetricsScope","title":"MetricsScope - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-metrics-scope.html#metricsscope","text":"open class MetricsScope","title":"MetricsScope"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/index.html","text":"misk-metrics / misk.metrics / Histogram Histogram \u00b6 interface Histogram Skeleton for the functionality of histograms A histogram samples observations (usually things like request durations or response sizes) and counts them in configurable buckets. A sample implementation can be found in PrometheusHistogram Functions \u00b6 Name Summary count abstract fun count(vararg labelValues: String ): Int returns the number of buckets record abstract fun record(duration: Double , vararg labelValues: String ): Unit records a new set of labels and accompanying duration timedMills open fun <T> timedMills(vararg labelValues: String , work: () -> T ): T records a new set of labels and the time to execute the work lambda in milliseconds","title":"Histogram - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/index.html#histogram","text":"interface Histogram Skeleton for the functionality of histograms A histogram samples observations (usually things like request durations or response sizes) and counts them in configurable buckets. A sample implementation can be found in PrometheusHistogram","title":"Histogram"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/index.html#functions","text":"Name Summary count abstract fun count(vararg labelValues: String ): Int returns the number of buckets record abstract fun record(duration: Double , vararg labelValues: String ): Unit records a new set of labels and accompanying duration timedMills open fun <T> timedMills(vararg labelValues: String , work: () -> T ): T records a new set of labels and the time to execute the work lambda in milliseconds","title":"Functions"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/count.html","text":"misk-metrics / misk.metrics / Histogram / count count \u00b6 abstract fun count(vararg labelValues: String ): Int returns the number of buckets","title":"count - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/count.html#count","text":"abstract fun count(vararg labelValues: String ): Int returns the number of buckets","title":"count"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/record.html","text":"misk-metrics / misk.metrics / Histogram / record record \u00b6 abstract fun record(duration: Double , vararg labelValues: String ): Unit records a new set of labels and accompanying duration","title":"record - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/record.html#record","text":"abstract fun record(duration: Double , vararg labelValues: String ): Unit records a new set of labels and accompanying duration","title":"record"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/timed-mills.html","text":"misk-metrics / misk.metrics / Histogram / timedMills timedMills \u00b6 open fun <T> timedMills(vararg labelValues: String , work: () -> T ): T records a new set of labels and the time to execute the work lambda in milliseconds","title":"timedMills - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-histogram/timed-mills.html#timedmills","text":"open fun <T> timedMills(vararg labelValues: String , work: () -> T ): T records a new set of labels and the time to execute the work lambda in milliseconds","title":"timedMills"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/index.html","text":"misk-metrics / misk.metrics / Metrics Metrics \u00b6 interface Metrics Interface for application code to emit metrics to a metrics backend like Prometheus. Tests that use this should install a metrics client like PrometheusMetricsClientModule . Services that use this should install a metrics service like PrometheusMetricsServiceModule . Functions \u00b6 Name Summary counter abstract fun counter(name: String , help: String ? = \"\", labelNames: List < String > = listOf()): Counter gauge abstract fun gauge(name: String , help: String = \"\", labelNames: List < String > = listOf()): Gauge histogram abstract fun histogram(name: String , help: String = \"\", labelNames: List < String >, quantiles: Map < Double , Double > = defaultQuantiles): Histogram","title":"Metrics - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/index.html#metrics","text":"interface Metrics Interface for application code to emit metrics to a metrics backend like Prometheus. Tests that use this should install a metrics client like PrometheusMetricsClientModule . Services that use this should install a metrics service like PrometheusMetricsServiceModule .","title":"Metrics"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/index.html#functions","text":"Name Summary counter abstract fun counter(name: String , help: String ? = \"\", labelNames: List < String > = listOf()): Counter gauge abstract fun gauge(name: String , help: String = \"\", labelNames: List < String > = listOf()): Gauge histogram abstract fun histogram(name: String , help: String = \"\", labelNames: List < String >, quantiles: Map < Double , Double > = defaultQuantiles): Histogram","title":"Functions"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/counter.html","text":"misk-metrics / misk.metrics / Metrics / counter counter \u00b6 abstract fun counter(name: String , help: String ? = \"\", labelNames: List < String > = listOf()): Counter","title":"counter - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/counter.html#counter","text":"abstract fun counter(name: String , help: String ? = \"\", labelNames: List < String > = listOf()): Counter","title":"counter"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/gauge.html","text":"misk-metrics / misk.metrics / Metrics / gauge gauge \u00b6 abstract fun gauge(name: String , help: String = \"\", labelNames: List < String > = listOf()): Gauge","title":"gauge - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/gauge.html#gauge","text":"abstract fun gauge(name: String , help: String = \"\", labelNames: List < String > = listOf()): Gauge","title":"gauge"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/histogram.html","text":"misk-metrics / misk.metrics / Metrics / histogram histogram \u00b6 abstract fun histogram(name: String , help: String = \"\", labelNames: List < String >, quantiles: Map < Double , Double > = defaultQuantiles): Histogram","title":"histogram - Misk"},{"location":"0.x/misk-metrics/misk.metrics/-metrics/histogram.html#histogram","text":"abstract fun histogram(name: String , help: String = \"\", labelNames: List < String >, quantiles: Map < Double , Double > = defaultQuantiles): Histogram","title":"histogram"},{"location":"0.x/misk-metrics-digester/index.html","text":"misk-metrics-digester Packages \u00b6 Name Summary com.squareup.digester.protos.service com.squareup.digester.protos.tdigest misk.metrics.digester Index \u00b6 All Types","title":"misk-metrics-digester"},{"location":"0.x/misk-metrics-digester/index.html#packages","text":"Name Summary com.squareup.digester.protos.service com.squareup.digester.protos.tdigest misk.metrics.digester","title":"Packages"},{"location":"0.x/misk-metrics-digester/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-metrics-digester/alltypes/index.html","text":"All Types \u00b6 Name Summary com.squareup.digester.protos.tdigest.Centroid com.squareup.digester.protos.service.DigestData Representation of internals of a t-digest implementation. misk.metrics.digester.FakeDigest Simulates VeneurDigest for testing purposes com.squareup.digester.protos.service.GetDigestsRequest com.squareup.digester.protos.service.GetDigestsResponse misk.metrics.digester.MergingDigest Provides an implementation of t-digest to be used to send histogram data com.squareup.digester.protos.tdigest.MergingDigestData MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. Replica of stripe\u2019s tdigest implementation https://github.com/stripe/veneur/blob/master/tdigest/tdigest.proto com.squareup.digester.protos.service.MetricFamily A group of digest metrics all having the same name and label names. misk.metrics.digester.SlidingWindowDigest SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. misk.metrics.digester.Snapshot Snapshot is the state of a SlidingWindowDigest at a point in time. misk.metrics.digester.TDigest TDigest abstract common methods for t-digest implementations misk.metrics.digester.VeneurDigest Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project misk.metrics.digester.Window Window represents a time range misk.metrics.digester.WindowDigest WindowDigest holds a t-digest whose data points are scoped to a specific time window. misk.metrics.digester.Windower Windower contains multiple windows with a specified duration","title":"All Types - Misk"},{"location":"0.x/misk-metrics-digester/alltypes/index.html#all-types","text":"Name Summary com.squareup.digester.protos.tdigest.Centroid com.squareup.digester.protos.service.DigestData Representation of internals of a t-digest implementation. misk.metrics.digester.FakeDigest Simulates VeneurDigest for testing purposes com.squareup.digester.protos.service.GetDigestsRequest com.squareup.digester.protos.service.GetDigestsResponse misk.metrics.digester.MergingDigest Provides an implementation of t-digest to be used to send histogram data com.squareup.digester.protos.tdigest.MergingDigestData MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. Replica of stripe\u2019s tdigest implementation https://github.com/stripe/veneur/blob/master/tdigest/tdigest.proto com.squareup.digester.protos.service.MetricFamily A group of digest metrics all having the same name and label names. misk.metrics.digester.SlidingWindowDigest SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. misk.metrics.digester.Snapshot Snapshot is the state of a SlidingWindowDigest at a point in time. misk.metrics.digester.TDigest TDigest abstract common methods for t-digest implementations misk.metrics.digester.VeneurDigest Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project misk.metrics.digester.Window Window represents a time range misk.metrics.digester.WindowDigest WindowDigest holds a t-digest whose data points are scoped to a specific time window. misk.metrics.digester.Windower Windower contains multiple windows with a specified duration","title":"All Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service Package com.squareup.digester.protos.service \u00b6 Types \u00b6 Name Summary DigestData class DigestData : Message< DigestData !, DigestData.Builder !> Representation of internals of a t-digest implementation. GetDigestsRequest class GetDigestsRequest : Message< GetDigestsRequest !, GetDigestsRequest.Builder !> GetDigestsResponse class GetDigestsResponse : Message< GetDigestsResponse !, GetDigestsResponse.Builder !> MetricFamily class MetricFamily : Message< MetricFamily !, MetricFamily.Builder !> A group of digest metrics all having the same name and label names.","title":"Package com.squareup.digester.protos.service - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/index.html#package-comsquareupdigesterprotosservice","text":"","title":"Package com.squareup.digester.protos.service"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/index.html#types","text":"Name Summary DigestData class DigestData : Message< DigestData !, DigestData.Builder !> Representation of internals of a t-digest implementation. GetDigestsRequest class GetDigestsRequest : Message< GetDigestsRequest !, GetDigestsRequest.Builder !> GetDigestsResponse class GetDigestsResponse : Message< GetDigestsResponse !, GetDigestsResponse.Builder !> MetricFamily class MetricFamily : Message< MetricFamily !, MetricFamily.Builder !> A group of digest metrics all having the same name and label names.","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData DigestData \u00b6 class DigestData : Message< DigestData !, DigestData.Builder !> Representation of internals of a t-digest implementation. Types \u00b6 Name Summary Builder class Builder : Builder< DigestData !, DigestData.Builder !> Constructors \u00b6 Name Summary <init> DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!) DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< DigestData !>! count val count: Long ! Count of values observed. DEFAULT_COUNT static val DEFAULT_COUNT: Long ! DEFAULT_SUM static val DEFAULT_SUM: Double ! DEFAULT_VENEUR_DIGEST static val DEFAULT_VENEUR_DIGEST: ByteString! sum val sum: Double ! Sum of observed values. veneur_digest val veneur_digest: ByteString! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): DigestData.Builder ! toString fun toString(): String","title":"DigestData - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/index.html#digestdata","text":"class DigestData : Message< DigestData !, DigestData.Builder !> Representation of internals of a t-digest implementation.","title":"DigestData"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/index.html#types","text":"Name Summary Builder class Builder : Builder< DigestData !, DigestData.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/index.html#constructors","text":"Name Summary <init> DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!) DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< DigestData !>! count val count: Long ! Count of values observed. DEFAULT_COUNT static val DEFAULT_COUNT: Long ! DEFAULT_SUM static val DEFAULT_SUM: Double ! DEFAULT_VENEUR_DIGEST static val DEFAULT_VENEUR_DIGEST: ByteString! sum val sum: Double ! Sum of observed values. veneur_digest val veneur_digest: ByteString! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): DigestData.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< DigestData !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< DigestData !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-c-o-u-n-t.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / DEFAULT_COUNT DEFAULT_COUNT \u00b6 static val DEFAULT_COUNT: Long !","title":"DEFAULT_COUNT - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-c-o-u-n-t.html#default_count","text":"static val DEFAULT_COUNT: Long !","title":"DEFAULT_COUNT"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-s-u-m.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / DEFAULT_SUM DEFAULT_SUM \u00b6 static val DEFAULT_SUM: Double !","title":"DEFAULT_SUM - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-s-u-m.html#default_sum","text":"static val DEFAULT_SUM: Double !","title":"DEFAULT_SUM"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-v-e-n-e-u-r_-d-i-g-e-s-t.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / DEFAULT_VENEUR_DIGEST DEFAULT_VENEUR_DIGEST \u00b6 static val DEFAULT_VENEUR_DIGEST: ByteString!","title":"DEFAULT_VENEUR_DIGEST - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-d-e-f-a-u-l-t_-v-e-n-e-u-r_-d-i-g-e-s-t.html#default_veneur_digest","text":"static val DEFAULT_VENEUR_DIGEST: ByteString!","title":"DEFAULT_VENEUR_DIGEST"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / <init> <init> \u00b6 DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!) DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-init-.html#init","text":"DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!) DigestData(count: Long !, sum: Double !, veneur_digest: ByteString!, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/count.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / count count \u00b6 val count: Long ! Count of values observed.","title":"count - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/count.html#count","text":"val count: Long ! Count of values observed.","title":"count"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / newBuilder newBuilder \u00b6 fun newBuilder(): DigestData.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/new-builder.html#newbuilder","text":"fun newBuilder(): DigestData.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/sum.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / sum sum \u00b6 val sum: Double ! Sum of observed values.","title":"sum - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/sum.html#sum","text":"val sum: Double ! Sum of observed values.","title":"sum"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/veneur_digest.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / veneur_digest veneur_digest \u00b6 val veneur_digest: ByteString! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest","title":"veneur_digest - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/veneur_digest.html#veneur_digest","text":"val veneur_digest: ByteString! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest","title":"veneur_digest"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / Builder Builder \u00b6 class Builder : Builder< DigestData !, DigestData.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary count var count: Long ! sum var sum: Double ! veneur_digest var veneur_digest: ByteString! Functions \u00b6 Name Summary build fun build(): DigestData ! count fun count(count: Long !): DigestData.Builder ! Count of values observed. sum fun sum(sum: Double !): DigestData.Builder ! Sum of observed values. veneur_digest fun veneur_digest(veneur_digest: ByteString!): DigestData.Builder ! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/index.html#builder","text":"class Builder : Builder< DigestData !, DigestData.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/index.html#properties","text":"Name Summary count var count: Long ! sum var sum: Double ! veneur_digest var veneur_digest: ByteString!","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/index.html#functions","text":"Name Summary build fun build(): DigestData ! count fun count(count: Long !): DigestData.Builder ! Count of values observed. sum fun sum(sum: Double !): DigestData.Builder ! Sum of observed values. veneur_digest fun veneur_digest(veneur_digest: ByteString!): DigestData.Builder ! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / Builder / build build \u00b6 fun build(): DigestData !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/build.html#build","text":"fun build(): DigestData !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/count.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / Builder / count count \u00b6 fun count(count: Long !): DigestData.Builder ! Count of values observed. var count: Long !","title":"count - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/count.html#count","text":"fun count(count: Long !): DigestData.Builder ! Count of values observed. var count: Long !","title":"count"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/sum.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / Builder / sum sum \u00b6 fun sum(sum: Double !): DigestData.Builder ! Sum of observed values. var sum: Double !","title":"sum - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/sum.html#sum","text":"fun sum(sum: Double !): DigestData.Builder ! Sum of observed values. var sum: Double !","title":"sum"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/veneur_digest.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / DigestData / Builder / veneur_digest veneur_digest \u00b6 fun veneur_digest(veneur_digest: ByteString!): DigestData.Builder ! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest var veneur_digest: ByteString!","title":"veneur_digest - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-digest-data/-builder/veneur_digest.html#veneur_digest","text":"fun veneur_digest(veneur_digest: ByteString!): DigestData.Builder ! Serialized Veneur t-digest proto bytes. github.com/stripe/veneur/tdigest var veneur_digest: ByteString!","title":"veneur_digest"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest GetDigestsRequest \u00b6 class GetDigestsRequest : Message< GetDigestsRequest !, GetDigestsRequest.Builder !> Types \u00b6 Name Summary Builder class Builder : Builder< GetDigestsRequest !, GetDigestsRequest.Builder !> Constructors \u00b6 Name Summary <init> GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !) GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetDigestsRequest !>! DEFAULT_WINDOWS_END_FROM_MS static val DEFAULT_WINDOWS_END_FROM_MS: Long ! DEFAULT_WINDOWS_END_TO_MS static val DEFAULT_WINDOWS_END_TO_MS: Long ! windows_end_from_ms val windows_end_from_ms: Long ! Earliest end time of windows to return, inclusive. windows_end_to_ms val windows_end_to_ms: Long ! Latest end time of windows to return, inclusive. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): GetDigestsRequest.Builder ! toString fun toString(): String","title":"GetDigestsRequest - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/index.html#getdigestsrequest","text":"class GetDigestsRequest : Message< GetDigestsRequest !, GetDigestsRequest.Builder !>","title":"GetDigestsRequest"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/index.html#types","text":"Name Summary Builder class Builder : Builder< GetDigestsRequest !, GetDigestsRequest.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/index.html#constructors","text":"Name Summary <init> GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !) GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetDigestsRequest !>! DEFAULT_WINDOWS_END_FROM_MS static val DEFAULT_WINDOWS_END_FROM_MS: Long ! DEFAULT_WINDOWS_END_TO_MS static val DEFAULT_WINDOWS_END_TO_MS: Long ! windows_end_from_ms val windows_end_from_ms: Long ! Earliest end time of windows to return, inclusive. windows_end_to_ms val windows_end_to_ms: Long ! Latest end time of windows to return, inclusive.","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): GetDigestsRequest.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< GetDigestsRequest !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< GetDigestsRequest !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-f-r-o-m_-m-s.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / DEFAULT_WINDOWS_END_FROM_MS DEFAULT_WINDOWS_END_FROM_MS \u00b6 static val DEFAULT_WINDOWS_END_FROM_MS: Long !","title":"DEFAULT_WINDOWS_END_FROM_MS - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-f-r-o-m_-m-s.html#default_windows_end_from_ms","text":"static val DEFAULT_WINDOWS_END_FROM_MS: Long !","title":"DEFAULT_WINDOWS_END_FROM_MS"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-t-o_-m-s.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / DEFAULT_WINDOWS_END_TO_MS DEFAULT_WINDOWS_END_TO_MS \u00b6 static val DEFAULT_WINDOWS_END_TO_MS: Long !","title":"DEFAULT_WINDOWS_END_TO_MS - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-d-e-f-a-u-l-t_-w-i-n-d-o-w-s_-e-n-d_-t-o_-m-s.html#default_windows_end_to_ms","text":"static val DEFAULT_WINDOWS_END_TO_MS: Long !","title":"DEFAULT_WINDOWS_END_TO_MS"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / <init> <init> \u00b6 GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !) GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-init-.html#init","text":"GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !) GetDigestsRequest(windows_end_from_ms: Long !, windows_end_to_ms: Long !, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / newBuilder newBuilder \u00b6 fun newBuilder(): GetDigestsRequest.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/new-builder.html#newbuilder","text":"fun newBuilder(): GetDigestsRequest.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_from_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / windows_end_from_ms windows_end_from_ms \u00b6 val windows_end_from_ms: Long ! Earliest end time of windows to return, inclusive.","title":"windows_end_from_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_from_ms.html#windows_end_from_ms","text":"val windows_end_from_ms: Long ! Earliest end time of windows to return, inclusive.","title":"windows_end_from_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_to_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / windows_end_to_ms windows_end_to_ms \u00b6 val windows_end_to_ms: Long ! Latest end time of windows to return, inclusive.","title":"windows_end_to_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/windows_end_to_ms.html#windows_end_to_ms","text":"val windows_end_to_ms: Long ! Latest end time of windows to return, inclusive.","title":"windows_end_to_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / Builder Builder \u00b6 class Builder : Builder< GetDigestsRequest !, GetDigestsRequest.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary windows_end_from_ms var windows_end_from_ms: Long ! windows_end_to_ms var windows_end_to_ms: Long ! Functions \u00b6 Name Summary build fun build(): GetDigestsRequest ! windows_end_from_ms fun windows_end_from_ms(windows_end_from_ms: Long !): GetDigestsRequest.Builder ! Earliest end time of windows to return, inclusive. windows_end_to_ms fun windows_end_to_ms(windows_end_to_ms: Long !): GetDigestsRequest.Builder ! Latest end time of windows to return, inclusive.","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/index.html#builder","text":"class Builder : Builder< GetDigestsRequest !, GetDigestsRequest.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/index.html#properties","text":"Name Summary windows_end_from_ms var windows_end_from_ms: Long ! windows_end_to_ms var windows_end_to_ms: Long !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/index.html#functions","text":"Name Summary build fun build(): GetDigestsRequest ! windows_end_from_ms fun windows_end_from_ms(windows_end_from_ms: Long !): GetDigestsRequest.Builder ! Earliest end time of windows to return, inclusive. windows_end_to_ms fun windows_end_to_ms(windows_end_to_ms: Long !): GetDigestsRequest.Builder ! Latest end time of windows to return, inclusive.","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / Builder / build build \u00b6 fun build(): GetDigestsRequest !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/build.html#build","text":"fun build(): GetDigestsRequest !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_from_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / Builder / windows_end_from_ms windows_end_from_ms \u00b6 fun windows_end_from_ms(windows_end_from_ms: Long !): GetDigestsRequest.Builder ! Earliest end time of windows to return, inclusive. var windows_end_from_ms: Long !","title":"windows_end_from_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_from_ms.html#windows_end_from_ms","text":"fun windows_end_from_ms(windows_end_from_ms: Long !): GetDigestsRequest.Builder ! Earliest end time of windows to return, inclusive. var windows_end_from_ms: Long !","title":"windows_end_from_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_to_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsRequest / Builder / windows_end_to_ms windows_end_to_ms \u00b6 fun windows_end_to_ms(windows_end_to_ms: Long !): GetDigestsRequest.Builder ! Latest end time of windows to return, inclusive. var windows_end_to_ms: Long !","title":"windows_end_to_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-request/-builder/windows_end_to_ms.html#windows_end_to_ms","text":"fun windows_end_to_ms(windows_end_to_ms: Long !): GetDigestsRequest.Builder ! Latest end time of windows to return, inclusive. var windows_end_to_ms: Long !","title":"windows_end_to_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse GetDigestsResponse \u00b6 class GetDigestsResponse : Message< GetDigestsResponse !, GetDigestsResponse.Builder !> Types \u00b6 Name Summary Builder class Builder : Builder< GetDigestsResponse !, GetDigestsResponse.Builder !> Constructors \u00b6 Name Summary <init> GetDigestsResponse(metric_family: MetricFamily !) GetDigestsResponse(metric_family: MetricFamily !, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetDigestsResponse !>! metric_family val metric_family: MetricFamily ! Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): GetDigestsResponse.Builder ! toString fun toString(): String","title":"GetDigestsResponse - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/index.html#getdigestsresponse","text":"class GetDigestsResponse : Message< GetDigestsResponse !, GetDigestsResponse.Builder !>","title":"GetDigestsResponse"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/index.html#types","text":"Name Summary Builder class Builder : Builder< GetDigestsResponse !, GetDigestsResponse.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/index.html#constructors","text":"Name Summary <init> GetDigestsResponse(metric_family: MetricFamily !) GetDigestsResponse(metric_family: MetricFamily !, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< GetDigestsResponse !>! metric_family val metric_family: MetricFamily !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): GetDigestsResponse.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< GetDigestsResponse !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< GetDigestsResponse !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / <init> <init> \u00b6 GetDigestsResponse(metric_family: MetricFamily !) GetDigestsResponse(metric_family: MetricFamily !, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-init-.html#init","text":"GetDigestsResponse(metric_family: MetricFamily !) GetDigestsResponse(metric_family: MetricFamily !, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/metric_family.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / metric_family metric_family \u00b6 val metric_family: MetricFamily !","title":"metric_family - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/metric_family.html#metric_family","text":"val metric_family: MetricFamily !","title":"metric_family"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / newBuilder newBuilder \u00b6 fun newBuilder(): GetDigestsResponse.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/new-builder.html#newbuilder","text":"fun newBuilder(): GetDigestsResponse.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / Builder Builder \u00b6 class Builder : Builder< GetDigestsResponse !, GetDigestsResponse.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary metric_family var metric_family: MetricFamily ! Functions \u00b6 Name Summary build fun build(): GetDigestsResponse ! metric_family fun metric_family(metric_family: MetricFamily !): GetDigestsResponse.Builder !","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/index.html#builder","text":"class Builder : Builder< GetDigestsResponse !, GetDigestsResponse.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/index.html#properties","text":"Name Summary metric_family var metric_family: MetricFamily !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/index.html#functions","text":"Name Summary build fun build(): GetDigestsResponse ! metric_family fun metric_family(metric_family: MetricFamily !): GetDigestsResponse.Builder !","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / Builder / build build \u00b6 fun build(): GetDigestsResponse !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/build.html#build","text":"fun build(): GetDigestsResponse !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/metric_family.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / GetDigestsResponse / Builder / metric_family metric_family \u00b6 fun metric_family(metric_family: MetricFamily !): GetDigestsResponse.Builder ! var metric_family: MetricFamily !","title":"metric_family - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-get-digests-response/-builder/metric_family.html#metric_family","text":"fun metric_family(metric_family: MetricFamily !): GetDigestsResponse.Builder ! var metric_family: MetricFamily !","title":"metric_family"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily MetricFamily \u00b6 class MetricFamily : Message< MetricFamily !, MetricFamily.Builder !> A group of digest metrics all having the same name and label names. Types \u00b6 Name Summary Builder class Builder : Builder< MetricFamily !, MetricFamily.Builder !> Digest class Digest : Message< MetricFamily.Digest !, MetricFamily.Digest.Builder !> Digest holds a t-digest of data points observed in a specific time range. Metric class Metric : Message< MetricFamily.Metric !, MetricFamily.Metric.Builder !> MetricDescriptor class MetricDescriptor : Message< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !> MetricDescriptor describes a named metric. Constructors \u00b6 Name Summary <init> MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!) MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily !>! metric_descriptor val metric_descriptor: MetricFamily.MetricDescriptor ! Descriptor shared by each metric in this family. metrics val metrics: MutableList < MetricFamily.Metric !>! Metrics in the family, each having a unique set of labels. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.Builder ! toString fun toString(): String","title":"MetricFamily - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/index.html#metricfamily","text":"class MetricFamily : Message< MetricFamily !, MetricFamily.Builder !> A group of digest metrics all having the same name and label names.","title":"MetricFamily"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/index.html#types","text":"Name Summary Builder class Builder : Builder< MetricFamily !, MetricFamily.Builder !> Digest class Digest : Message< MetricFamily.Digest !, MetricFamily.Digest.Builder !> Digest holds a t-digest of data points observed in a specific time range. Metric class Metric : Message< MetricFamily.Metric !, MetricFamily.Metric.Builder !> MetricDescriptor class MetricDescriptor : Message< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !> MetricDescriptor describes a named metric.","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/index.html#constructors","text":"Name Summary <init> MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!) MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily !>! metric_descriptor val metric_descriptor: MetricFamily.MetricDescriptor ! Descriptor shared by each metric in this family. metrics val metrics: MutableList < MetricFamily.Metric !>! Metrics in the family, each having a unique set of labels.","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< MetricFamily !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< MetricFamily !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / <init> <init> \u00b6 MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!) MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-init-.html#init","text":"MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!) MetricFamily(metric_descriptor: MetricFamily.MetricDescriptor !, metrics: MutableList < MetricFamily.Metric !>!, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metric_descriptor.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / metric_descriptor metric_descriptor \u00b6 val metric_descriptor: MetricFamily.MetricDescriptor ! Descriptor shared by each metric in this family.","title":"metric_descriptor - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metric_descriptor.html#metric_descriptor","text":"val metric_descriptor: MetricFamily.MetricDescriptor ! Descriptor shared by each metric in this family.","title":"metric_descriptor"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metrics.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / metrics metrics \u00b6 val metrics: MutableList < MetricFamily.Metric !>! Metrics in the family, each having a unique set of labels.","title":"metrics - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/metrics.html#metrics","text":"val metrics: MutableList < MetricFamily.Metric !>! Metrics in the family, each having a unique set of labels.","title":"metrics"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / newBuilder newBuilder \u00b6 fun newBuilder(): MetricFamily.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/new-builder.html#newbuilder","text":"fun newBuilder(): MetricFamily.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Builder Builder \u00b6 class Builder : Builder< MetricFamily !, MetricFamily.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary metric_descriptor var metric_descriptor: MetricFamily.MetricDescriptor ! metrics var metrics: MutableList < MetricFamily.Metric !>! Functions \u00b6 Name Summary build fun build(): MetricFamily ! metric_descriptor fun metric_descriptor(metric_descriptor: MetricFamily.MetricDescriptor !): MetricFamily.Builder ! Descriptor shared by each metric in this family. metrics fun metrics(metrics: MutableList < MetricFamily.Metric !>!): MetricFamily.Builder ! Metrics in the family, each having a unique set of labels.","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/index.html#builder","text":"class Builder : Builder< MetricFamily !, MetricFamily.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/index.html#properties","text":"Name Summary metric_descriptor var metric_descriptor: MetricFamily.MetricDescriptor ! metrics var metrics: MutableList < MetricFamily.Metric !>!","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/index.html#functions","text":"Name Summary build fun build(): MetricFamily ! metric_descriptor fun metric_descriptor(metric_descriptor: MetricFamily.MetricDescriptor !): MetricFamily.Builder ! Descriptor shared by each metric in this family. metrics fun metrics(metrics: MutableList < MetricFamily.Metric !>!): MetricFamily.Builder ! Metrics in the family, each having a unique set of labels.","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Builder / build build \u00b6 fun build(): MetricFamily !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/build.html#build","text":"fun build(): MetricFamily !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metric_descriptor.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Builder / metric_descriptor metric_descriptor \u00b6 fun metric_descriptor(metric_descriptor: MetricFamily.MetricDescriptor !): MetricFamily.Builder ! Descriptor shared by each metric in this family. var metric_descriptor: MetricFamily.MetricDescriptor !","title":"metric_descriptor - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metric_descriptor.html#metric_descriptor","text":"fun metric_descriptor(metric_descriptor: MetricFamily.MetricDescriptor !): MetricFamily.Builder ! Descriptor shared by each metric in this family. var metric_descriptor: MetricFamily.MetricDescriptor !","title":"metric_descriptor"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metrics.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Builder / metrics metrics \u00b6 fun metrics(metrics: MutableList < MetricFamily.Metric !>!): MetricFamily.Builder ! Metrics in the family, each having a unique set of labels. var metrics: MutableList < MetricFamily.Metric !>!","title":"metrics - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-builder/metrics.html#metrics","text":"fun metrics(metrics: MutableList < MetricFamily.Metric !>!): MetricFamily.Builder ! Metrics in the family, each having a unique set of labels. var metrics: MutableList < MetricFamily.Metric !>!","title":"metrics"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest Digest \u00b6 class Digest : Message< MetricFamily.Digest !, MetricFamily.Digest.Builder !> Digest holds a t-digest of data points observed in a specific time range. Types \u00b6 Name Summary Builder class Builder : Builder< MetricFamily.Digest !, MetricFamily.Digest.Builder !> Constructors \u00b6 Name Summary <init> Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !) Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily.Digest !>! DEFAULT_END_AT_MS static val DEFAULT_END_AT_MS: Long ! DEFAULT_STAGGER static val DEFAULT_STAGGER: Long ! DEFAULT_START_AT_MS static val DEFAULT_START_AT_MS: Long ! digest_data val digest_data: DigestData ! t-digest of observed values. The registry and server must agree on the format of the digest. end_at_ms val end_at_ms: Long ! End time window of data points, exclusive. stagger val stagger: Long ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible. start_at_ms val start_at_ms: Long ! Start time window of data points, inclusive. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.Digest.Builder ! toString fun toString(): String","title":"Digest - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/index.html#digest","text":"class Digest : Message< MetricFamily.Digest !, MetricFamily.Digest.Builder !> Digest holds a t-digest of data points observed in a specific time range.","title":"Digest"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/index.html#types","text":"Name Summary Builder class Builder : Builder< MetricFamily.Digest !, MetricFamily.Digest.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/index.html#constructors","text":"Name Summary <init> Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !) Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily.Digest !>! DEFAULT_END_AT_MS static val DEFAULT_END_AT_MS: Long ! DEFAULT_STAGGER static val DEFAULT_STAGGER: Long ! DEFAULT_START_AT_MS static val DEFAULT_START_AT_MS: Long ! digest_data val digest_data: DigestData ! t-digest of observed values. The registry and server must agree on the format of the digest. end_at_ms val end_at_ms: Long ! End time window of data points, exclusive. stagger val stagger: Long ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible. start_at_ms val start_at_ms: Long ! Start time window of data points, inclusive.","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.Digest.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< MetricFamily.Digest !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< MetricFamily.Digest !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-e-n-d_-a-t_-m-s.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / DEFAULT_END_AT_MS DEFAULT_END_AT_MS \u00b6 static val DEFAULT_END_AT_MS: Long !","title":"DEFAULT_END_AT_MS - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-e-n-d_-a-t_-m-s.html#default_end_at_ms","text":"static val DEFAULT_END_AT_MS: Long !","title":"DEFAULT_END_AT_MS"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-g-g-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / DEFAULT_STAGGER DEFAULT_STAGGER \u00b6 static val DEFAULT_STAGGER: Long !","title":"DEFAULT_STAGGER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-g-g-e-r.html#default_stagger","text":"static val DEFAULT_STAGGER: Long !","title":"DEFAULT_STAGGER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-r-t_-a-t_-m-s.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / DEFAULT_START_AT_MS DEFAULT_START_AT_MS \u00b6 static val DEFAULT_START_AT_MS: Long !","title":"DEFAULT_START_AT_MS - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-d-e-f-a-u-l-t_-s-t-a-r-t_-a-t_-m-s.html#default_start_at_ms","text":"static val DEFAULT_START_AT_MS: Long !","title":"DEFAULT_START_AT_MS"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / <init> <init> \u00b6 Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !) Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-init-.html#init","text":"Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !) Digest(start_at_ms: Long !, end_at_ms: Long !, stagger: Long !, digest_data: DigestData !, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/digest_data.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / digest_data digest_data \u00b6 val digest_data: DigestData ! t-digest of observed values. The registry and server must agree on the format of the digest.","title":"digest_data - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/digest_data.html#digest_data","text":"val digest_data: DigestData ! t-digest of observed values. The registry and server must agree on the format of the digest.","title":"digest_data"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/end_at_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / end_at_ms end_at_ms \u00b6 val end_at_ms: Long ! End time window of data points, exclusive.","title":"end_at_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/end_at_ms.html#end_at_ms","text":"val end_at_ms: Long ! End time window of data points, exclusive.","title":"end_at_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / newBuilder newBuilder \u00b6 fun newBuilder(): MetricFamily.Digest.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/new-builder.html#newbuilder","text":"fun newBuilder(): MetricFamily.Digest.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/stagger.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / stagger stagger \u00b6 val stagger: Long ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible.","title":"stagger - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/stagger.html#stagger","text":"val stagger: Long ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible.","title":"stagger"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/start_at_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / start_at_ms start_at_ms \u00b6 val start_at_ms: Long ! Start time window of data points, inclusive.","title":"start_at_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/start_at_ms.html#start_at_ms","text":"val start_at_ms: Long ! Start time window of data points, inclusive.","title":"start_at_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / Builder Builder \u00b6 class Builder : Builder< MetricFamily.Digest !, MetricFamily.Digest.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary digest_data var digest_data: DigestData ! end_at_ms var end_at_ms: Long ! stagger var stagger: Long ! start_at_ms var start_at_ms: Long ! Functions \u00b6 Name Summary build fun build(): MetricFamily.Digest ! digest_data fun digest_data(digest_data: DigestData !): MetricFamily.Digest.Builder ! t-digest of observed values. The registry and server must agree on the format of the digest. end_at_ms fun end_at_ms(end_at_ms: Long !): MetricFamily.Digest.Builder ! End time window of data points, exclusive. stagger fun stagger(stagger: Long !): MetricFamily.Digest.Builder ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible. start_at_ms fun start_at_ms(start_at_ms: Long !): MetricFamily.Digest.Builder ! Start time window of data points, inclusive.","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/index.html#builder","text":"class Builder : Builder< MetricFamily.Digest !, MetricFamily.Digest.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/index.html#properties","text":"Name Summary digest_data var digest_data: DigestData ! end_at_ms var end_at_ms: Long ! stagger var stagger: Long ! start_at_ms var start_at_ms: Long !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/index.html#functions","text":"Name Summary build fun build(): MetricFamily.Digest ! digest_data fun digest_data(digest_data: DigestData !): MetricFamily.Digest.Builder ! t-digest of observed values. The registry and server must agree on the format of the digest. end_at_ms fun end_at_ms(end_at_ms: Long !): MetricFamily.Digest.Builder ! End time window of data points, exclusive. stagger fun stagger(stagger: Long !): MetricFamily.Digest.Builder ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible. start_at_ms fun start_at_ms(start_at_ms: Long !): MetricFamily.Digest.Builder ! Start time window of data points, inclusive.","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / Builder / build build \u00b6 fun build(): MetricFamily.Digest !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/build.html#build","text":"fun build(): MetricFamily.Digest !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/digest_data.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / Builder / digest_data digest_data \u00b6 fun digest_data(digest_data: DigestData !): MetricFamily.Digest.Builder ! t-digest of observed values. The registry and server must agree on the format of the digest. var digest_data: DigestData !","title":"digest_data - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/digest_data.html#digest_data","text":"fun digest_data(digest_data: DigestData !): MetricFamily.Digest.Builder ! t-digest of observed values. The registry and server must agree on the format of the digest. var digest_data: DigestData !","title":"digest_data"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/end_at_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / Builder / end_at_ms end_at_ms \u00b6 fun end_at_ms(end_at_ms: Long !): MetricFamily.Digest.Builder ! End time window of data points, exclusive. var end_at_ms: Long !","title":"end_at_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/end_at_ms.html#end_at_ms","text":"fun end_at_ms(end_at_ms: Long !): MetricFamily.Digest.Builder ! End time window of data points, exclusive. var end_at_ms: Long !","title":"end_at_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/stagger.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / Builder / stagger stagger \u00b6 fun stagger(stagger: Long !): MetricFamily.Digest.Builder ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible. var stagger: Long !","title":"stagger - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/stagger.html#stagger","text":"fun stagger(stagger: Long !): MetricFamily.Digest.Builder ! Number of overlapping windows. This is not directly related to the data, but is used by the collector to validate that registry and server configurations are compatible. var stagger: Long !","title":"stagger"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/start_at_ms.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Digest / Builder / start_at_ms start_at_ms \u00b6 fun start_at_ms(start_at_ms: Long !): MetricFamily.Digest.Builder ! Start time window of data points, inclusive. var start_at_ms: Long !","title":"start_at_ms - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-digest/-builder/start_at_ms.html#start_at_ms","text":"fun start_at_ms(start_at_ms: Long !): MetricFamily.Digest.Builder ! Start time window of data points, inclusive. var start_at_ms: Long !","title":"start_at_ms"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric Metric \u00b6 class Metric : Message< MetricFamily.Metric !, MetricFamily.Metric.Builder !> Types \u00b6 Name Summary Builder class Builder : Builder< MetricFamily.Metric !, MetricFamily.Metric.Builder !> Constructors \u00b6 Name Summary <init> Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!) Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily.Metric !>! digests val digests: MutableList < MetricFamily.Digest !>! t-digests for the metric, each for a different window of time. labels val labels: MutableMap < String !, String !>! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.Metric.Builder ! toString fun toString(): String","title":"Metric - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/index.html#metric","text":"class Metric : Message< MetricFamily.Metric !, MetricFamily.Metric.Builder !>","title":"Metric"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/index.html#types","text":"Name Summary Builder class Builder : Builder< MetricFamily.Metric !, MetricFamily.Metric.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/index.html#constructors","text":"Name Summary <init> Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!) Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily.Metric !>! digests val digests: MutableList < MetricFamily.Digest !>! t-digests for the metric, each for a different window of time. labels val labels: MutableMap < String !, String !>! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names.","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.Metric.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< MetricFamily.Metric !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< MetricFamily.Metric !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / <init> <init> \u00b6 Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!) Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-init-.html#init","text":"Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!) Metric(labels: MutableMap < String !, String !>!, digests: MutableList < MetricFamily.Digest !>!, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/digests.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / digests digests \u00b6 val digests: MutableList < MetricFamily.Digest !>! t-digests for the metric, each for a different window of time.","title":"digests - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/digests.html#digests","text":"val digests: MutableList < MetricFamily.Digest !>! t-digests for the metric, each for a different window of time.","title":"digests"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/labels.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / labels labels \u00b6 val labels: MutableMap < String !, String !>! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names.","title":"labels - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/labels.html#labels","text":"val labels: MutableMap < String !, String !>! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names.","title":"labels"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / newBuilder newBuilder \u00b6 fun newBuilder(): MetricFamily.Metric.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/new-builder.html#newbuilder","text":"fun newBuilder(): MetricFamily.Metric.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / Builder Builder \u00b6 class Builder : Builder< MetricFamily.Metric !, MetricFamily.Metric.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary digests var digests: MutableList < MetricFamily.Digest !>! labels var labels: MutableMap < String !, String !>! Functions \u00b6 Name Summary build fun build(): MetricFamily.Metric ! digests fun digests(digests: MutableList < MetricFamily.Digest !>!): MetricFamily.Metric.Builder ! t-digests for the metric, each for a different window of time. labels fun labels(labels: MutableMap < String !, String !>!): MetricFamily.Metric.Builder ! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names.","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/index.html#builder","text":"class Builder : Builder< MetricFamily.Metric !, MetricFamily.Metric.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/index.html#properties","text":"Name Summary digests var digests: MutableList < MetricFamily.Digest !>! labels var labels: MutableMap < String !, String !>!","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/index.html#functions","text":"Name Summary build fun build(): MetricFamily.Metric ! digests fun digests(digests: MutableList < MetricFamily.Digest !>!): MetricFamily.Metric.Builder ! t-digests for the metric, each for a different window of time. labels fun labels(labels: MutableMap < String !, String !>!): MetricFamily.Metric.Builder ! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names.","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / Builder / build build \u00b6 fun build(): MetricFamily.Metric !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/build.html#build","text":"fun build(): MetricFamily.Metric !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/digests.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / Builder / digests digests \u00b6 fun digests(digests: MutableList < MetricFamily.Digest !>!): MetricFamily.Metric.Builder ! t-digests for the metric, each for a different window of time. var digests: MutableList < MetricFamily.Digest !>!","title":"digests - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/digests.html#digests","text":"fun digests(digests: MutableList < MetricFamily.Digest !>!): MetricFamily.Metric.Builder ! t-digests for the metric, each for a different window of time. var digests: MutableList < MetricFamily.Digest !>!","title":"digests"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/labels.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / Metric / Builder / labels labels \u00b6 fun labels(labels: MutableMap < String !, String !>!): MetricFamily.Metric.Builder ! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names. var labels: MutableMap < String !, String !>!","title":"labels - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric/-builder/labels.html#labels","text":"fun labels(labels: MutableMap < String !, String !>!): MetricFamily.Metric.Builder ! Label values. There will be one value corresponding to each entry in the MetricDescriptor\u2019s label_names. var labels: MutableMap < String !, String !>!","title":"labels"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor MetricDescriptor \u00b6 class MetricDescriptor : Message< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !> MetricDescriptor describes a named metric. Types \u00b6 Name Summary Builder class Builder : Builder< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !> Constructors \u00b6 Name Summary <init> MetricDescriptor(name: String !, help: String !) MetricDescriptor(name: String !, help: String !, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily.MetricDescriptor !>! DEFAULT_HELP static val DEFAULT_HELP: String DEFAULT_NAME static val DEFAULT_NAME: String help val help: String ! User-friendly description of the metric. name val name: String ! Name of the metric. Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.MetricDescriptor.Builder ! toString fun toString(): String","title":"MetricDescriptor - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/index.html#metricdescriptor","text":"class MetricDescriptor : Message< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !> MetricDescriptor describes a named metric.","title":"MetricDescriptor"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/index.html#types","text":"Name Summary Builder class Builder : Builder< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/index.html#constructors","text":"Name Summary <init> MetricDescriptor(name: String !, help: String !) MetricDescriptor(name: String !, help: String !, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MetricFamily.MetricDescriptor !>! DEFAULT_HELP static val DEFAULT_HELP: String DEFAULT_NAME static val DEFAULT_NAME: String help val help: String ! User-friendly description of the metric. name val name: String ! Name of the metric.","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MetricFamily.MetricDescriptor.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< MetricFamily.MetricDescriptor !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< MetricFamily.MetricDescriptor !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-h-e-l-p.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / DEFAULT_HELP DEFAULT_HELP \u00b6 static val DEFAULT_HELP: String","title":"DEFAULT_HELP - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-h-e-l-p.html#default_help","text":"static val DEFAULT_HELP: String","title":"DEFAULT_HELP"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-n-a-m-e.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / DEFAULT_NAME DEFAULT_NAME \u00b6 static val DEFAULT_NAME: String","title":"DEFAULT_NAME - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-d-e-f-a-u-l-t_-n-a-m-e.html#default_name","text":"static val DEFAULT_NAME: String","title":"DEFAULT_NAME"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / <init> <init> \u00b6 MetricDescriptor(name: String !, help: String !) MetricDescriptor(name: String !, help: String !, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-init-.html#init","text":"MetricDescriptor(name: String !, help: String !) MetricDescriptor(name: String !, help: String !, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/help.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / help help \u00b6 val help: String ! User-friendly description of the metric.","title":"help - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/help.html#help","text":"val help: String ! User-friendly description of the metric.","title":"help"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/name.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / name name \u00b6 val name: String ! Name of the metric.","title":"name - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/name.html#name","text":"val name: String ! Name of the metric.","title":"name"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / newBuilder newBuilder \u00b6 fun newBuilder(): MetricFamily.MetricDescriptor.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/new-builder.html#newbuilder","text":"fun newBuilder(): MetricFamily.MetricDescriptor.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / Builder Builder \u00b6 class Builder : Builder< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary help var help: String ! name var name: String ! Functions \u00b6 Name Summary build fun build(): MetricFamily.MetricDescriptor ! help fun help(help: String !): MetricFamily.MetricDescriptor.Builder ! User-friendly description of the metric. name fun name(name: String !): MetricFamily.MetricDescriptor.Builder ! Name of the metric.","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/index.html#builder","text":"class Builder : Builder< MetricFamily.MetricDescriptor !, MetricFamily.MetricDescriptor.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/index.html#properties","text":"Name Summary help var help: String ! name var name: String !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/index.html#functions","text":"Name Summary build fun build(): MetricFamily.MetricDescriptor ! help fun help(help: String !): MetricFamily.MetricDescriptor.Builder ! User-friendly description of the metric. name fun name(name: String !): MetricFamily.MetricDescriptor.Builder ! Name of the metric.","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / Builder / build build \u00b6 fun build(): MetricFamily.MetricDescriptor !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/build.html#build","text":"fun build(): MetricFamily.MetricDescriptor !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/help.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / Builder / help help \u00b6 fun help(help: String !): MetricFamily.MetricDescriptor.Builder ! User-friendly description of the metric. var help: String !","title":"help - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/help.html#help","text":"fun help(help: String !): MetricFamily.MetricDescriptor.Builder ! User-friendly description of the metric. var help: String !","title":"help"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/name.html","text":"misk-metrics-digester / com.squareup.digester.protos.service / MetricFamily / MetricDescriptor / Builder / name name \u00b6 fun name(name: String !): MetricFamily.MetricDescriptor.Builder ! Name of the metric. var name: String !","title":"name - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.service/-metric-family/-metric-descriptor/-builder/name.html#name","text":"fun name(name: String !): MetricFamily.MetricDescriptor.Builder ! Name of the metric. var name: String !","title":"name"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest Package com.squareup.digester.protos.tdigest \u00b6 Types \u00b6 Name Summary Centroid class Centroid : Message< Centroid !, Centroid.Builder !> MergingDigestData class MergingDigestData : Message< MergingDigestData !, MergingDigestData.Builder !> MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. Replica of stripe\u2019s tdigest implementation https://github.com/stripe/veneur/blob/master/tdigest/tdigest.proto","title":"Package com.squareup.digester.protos.tdigest - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/index.html#package-comsquareupdigesterprotostdigest","text":"","title":"Package com.squareup.digester.protos.tdigest"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/index.html#types","text":"Name Summary Centroid class Centroid : Message< Centroid !, Centroid.Builder !> MergingDigestData class MergingDigestData : Message< MergingDigestData !, MergingDigestData.Builder !> MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. Replica of stripe\u2019s tdigest implementation https://github.com/stripe/veneur/blob/master/tdigest/tdigest.proto","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid Centroid \u00b6 class Centroid : Message< Centroid !, Centroid.Builder !> Types \u00b6 Name Summary Builder class Builder : Builder< Centroid !, Centroid.Builder !> Constructors \u00b6 Name Summary <init> Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!) Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Centroid !>! DEFAULT_MEAN static val DEFAULT_MEAN: Double ! DEFAULT_WEIGHT static val DEFAULT_WEIGHT: Double ! mean val mean: Double ! samples val samples: MutableList < Double !>! weight val weight: Double ! Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Centroid.Builder ! toString fun toString(): String","title":"Centroid - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/index.html#centroid","text":"class Centroid : Message< Centroid !, Centroid.Builder !>","title":"Centroid"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/index.html#types","text":"Name Summary Builder class Builder : Builder< Centroid !, Centroid.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/index.html#constructors","text":"Name Summary <init> Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!) Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< Centroid !>! DEFAULT_MEAN static val DEFAULT_MEAN: Double ! DEFAULT_WEIGHT static val DEFAULT_WEIGHT: Double ! mean val mean: Double ! samples val samples: MutableList < Double !>! weight val weight: Double !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): Centroid.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< Centroid !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< Centroid !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-m-e-a-n.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / DEFAULT_MEAN DEFAULT_MEAN \u00b6 static val DEFAULT_MEAN: Double !","title":"DEFAULT_MEAN - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-m-e-a-n.html#default_mean","text":"static val DEFAULT_MEAN: Double !","title":"DEFAULT_MEAN"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-w-e-i-g-h-t.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / DEFAULT_WEIGHT DEFAULT_WEIGHT \u00b6 static val DEFAULT_WEIGHT: Double !","title":"DEFAULT_WEIGHT - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-d-e-f-a-u-l-t_-w-e-i-g-h-t.html#default_weight","text":"static val DEFAULT_WEIGHT: Double !","title":"DEFAULT_WEIGHT"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / <init> <init> \u00b6 Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!) Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-init-.html#init","text":"Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!) Centroid(mean: Double !, weight: Double !, samples: MutableList < Double !>!, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/mean.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / mean mean \u00b6 val mean: Double !","title":"mean - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/mean.html#mean","text":"val mean: Double !","title":"mean"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / newBuilder newBuilder \u00b6 fun newBuilder(): Centroid.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/new-builder.html#newbuilder","text":"fun newBuilder(): Centroid.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/samples.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / samples samples \u00b6 val samples: MutableList < Double !>!","title":"samples - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/samples.html#samples","text":"val samples: MutableList < Double !>!","title":"samples"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/weight.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / weight weight \u00b6 val weight: Double !","title":"weight - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/weight.html#weight","text":"val weight: Double !","title":"weight"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / Builder Builder \u00b6 class Builder : Builder< Centroid !, Centroid.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary mean var mean: Double ! samples var samples: MutableList < Double !>! weight var weight: Double ! Functions \u00b6 Name Summary build fun build(): Centroid ! mean fun mean(mean: Double !): Centroid.Builder ! samples fun samples(samples: MutableList < Double !>!): Centroid.Builder ! weight fun weight(weight: Double !): Centroid.Builder !","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/index.html#builder","text":"class Builder : Builder< Centroid !, Centroid.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/index.html#properties","text":"Name Summary mean var mean: Double ! samples var samples: MutableList < Double !>! weight var weight: Double !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/index.html#functions","text":"Name Summary build fun build(): Centroid ! mean fun mean(mean: Double !): Centroid.Builder ! samples fun samples(samples: MutableList < Double !>!): Centroid.Builder ! weight fun weight(weight: Double !): Centroid.Builder !","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / Builder / build build \u00b6 fun build(): Centroid !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/build.html#build","text":"fun build(): Centroid !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/mean.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / Builder / mean mean \u00b6 fun mean(mean: Double !): Centroid.Builder ! var mean: Double !","title":"mean - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/mean.html#mean","text":"fun mean(mean: Double !): Centroid.Builder ! var mean: Double !","title":"mean"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/samples.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / Builder / samples samples \u00b6 fun samples(samples: MutableList < Double !>!): Centroid.Builder ! var samples: MutableList < Double !>!","title":"samples - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/samples.html#samples","text":"fun samples(samples: MutableList < Double !>!): Centroid.Builder ! var samples: MutableList < Double !>!","title":"samples"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/weight.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / Centroid / Builder / weight weight \u00b6 fun weight(weight: Double !): Centroid.Builder ! var weight: Double !","title":"weight - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-centroid/-builder/weight.html#weight","text":"fun weight(weight: Double !): Centroid.Builder ! var weight: Double !","title":"weight"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData MergingDigestData \u00b6 class MergingDigestData : Message< MergingDigestData !, MergingDigestData.Builder !> MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. Replica of stripe\u2019s tdigest implementation https://github.com/stripe/veneur/blob/master/tdigest/tdigest.proto Types \u00b6 Name Summary Builder class Builder : Builder< MergingDigestData !, MergingDigestData.Builder !> Constructors \u00b6 Name Summary <init> MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !) MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !, unknownFields: ByteString!) Properties \u00b6 Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MergingDigestData !>! compression val compression: Double ! DEFAULT_COMPRESSION static val DEFAULT_COMPRESSION: Double ! DEFAULT_MAX static val DEFAULT_MAX: Double ! DEFAULT_MIN static val DEFAULT_MIN: Double ! main_centroids val main_centroids: MutableList < Centroid !>! max val max: Double ! min val min: Double ! Functions \u00b6 Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MergingDigestData.Builder ! toString fun toString(): String","title":"MergingDigestData - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/index.html#mergingdigestdata","text":"class MergingDigestData : Message< MergingDigestData !, MergingDigestData.Builder !> MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. Replica of stripe\u2019s tdigest implementation https://github.com/stripe/veneur/blob/master/tdigest/tdigest.proto","title":"MergingDigestData"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/index.html#types","text":"Name Summary Builder class Builder : Builder< MergingDigestData !, MergingDigestData.Builder !>","title":"Types"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/index.html#constructors","text":"Name Summary <init> MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !) MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !, unknownFields: ByteString!)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/index.html#properties","text":"Name Summary ADAPTER static val ADAPTER: ProtoAdapter< MergingDigestData !>! compression val compression: Double ! DEFAULT_COMPRESSION static val DEFAULT_COMPRESSION: Double ! DEFAULT_MAX static val DEFAULT_MAX: Double ! DEFAULT_MIN static val DEFAULT_MIN: Double ! main_centroids val main_centroids: MutableList < Centroid !>! max val max: Double ! min val min: Double !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/index.html#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean hashCode fun hashCode(): Int newBuilder fun newBuilder(): MergingDigestData.Builder ! toString fun toString(): String","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-a-d-a-p-t-e-r.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / ADAPTER ADAPTER \u00b6 static val ADAPTER: ProtoAdapter< MergingDigestData !>!","title":"ADAPTER - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-a-d-a-p-t-e-r.html#adapter","text":"static val ADAPTER: ProtoAdapter< MergingDigestData !>!","title":"ADAPTER"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-c-o-m-p-r-e-s-s-i-o-n.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / DEFAULT_COMPRESSION DEFAULT_COMPRESSION \u00b6 static val DEFAULT_COMPRESSION: Double !","title":"DEFAULT_COMPRESSION - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-c-o-m-p-r-e-s-s-i-o-n.html#default_compression","text":"static val DEFAULT_COMPRESSION: Double !","title":"DEFAULT_COMPRESSION"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-a-x.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / DEFAULT_MAX DEFAULT_MAX \u00b6 static val DEFAULT_MAX: Double !","title":"DEFAULT_MAX - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-a-x.html#default_max","text":"static val DEFAULT_MAX: Double !","title":"DEFAULT_MAX"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-i-n.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / DEFAULT_MIN DEFAULT_MIN \u00b6 static val DEFAULT_MIN: Double !","title":"DEFAULT_MIN - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-d-e-f-a-u-l-t_-m-i-n.html#default_min","text":"static val DEFAULT_MIN: Double !","title":"DEFAULT_MIN"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / <init> <init> \u00b6 MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !) MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !, unknownFields: ByteString!)","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-init-.html#init","text":"MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !) MergingDigestData(main_centroids: MutableList < Centroid !>!, compression: Double !, min: Double !, max: Double !, unknownFields: ByteString!)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/compression.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / compression compression \u00b6 val compression: Double !","title":"compression - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/compression.html#compression","text":"val compression: Double !","title":"compression"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/equals.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / equals equals \u00b6 fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/equals.html#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/hash-code.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / hashCode hashCode \u00b6 fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/hash-code.html#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/main_centroids.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / main_centroids main_centroids \u00b6 val main_centroids: MutableList < Centroid !>!","title":"main_centroids - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/main_centroids.html#main_centroids","text":"val main_centroids: MutableList < Centroid !>!","title":"main_centroids"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/max.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / max max \u00b6 val max: Double !","title":"max - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/max.html#max","text":"val max: Double !","title":"max"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/min.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / min min \u00b6 val min: Double !","title":"min - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/min.html#min","text":"val min: Double !","title":"min"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/new-builder.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / newBuilder newBuilder \u00b6 fun newBuilder(): MergingDigestData.Builder !","title":"newBuilder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/new-builder.html#newbuilder","text":"fun newBuilder(): MergingDigestData.Builder !","title":"newBuilder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/to-string.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / toString toString \u00b6 fun toString(): String","title":"toString - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/to-string.html#tostring","text":"fun toString(): String","title":"toString"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/index.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / Builder Builder \u00b6 class Builder : Builder< MergingDigestData !, MergingDigestData.Builder !> Constructors \u00b6 Name Summary <init> Builder() Properties \u00b6 Name Summary compression var compression: Double ! main_centroids var main_centroids: MutableList < Centroid !>! max var max: Double ! min var min: Double ! Functions \u00b6 Name Summary build fun build(): MergingDigestData ! compression fun compression(compression: Double !): MergingDigestData.Builder ! main_centroids fun main_centroids(main_centroids: MutableList < Centroid !>!): MergingDigestData.Builder ! max fun max(max: Double !): MergingDigestData.Builder ! min fun min(min: Double !): MergingDigestData.Builder !","title":"Builder - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/index.html#builder","text":"class Builder : Builder< MergingDigestData !, MergingDigestData.Builder !>","title":"Builder"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/index.html#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/index.html#properties","text":"Name Summary compression var compression: Double ! main_centroids var main_centroids: MutableList < Centroid !>! max var max: Double ! min var min: Double !","title":"Properties"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/index.html#functions","text":"Name Summary build fun build(): MergingDigestData ! compression fun compression(compression: Double !): MergingDigestData.Builder ! main_centroids fun main_centroids(main_centroids: MutableList < Centroid !>!): MergingDigestData.Builder ! max fun max(max: Double !): MergingDigestData.Builder ! min fun min(min: Double !): MergingDigestData.Builder !","title":"Functions"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/-init-.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / Builder / <init> <init> \u00b6 Builder()","title":" init "},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/-init-.html#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/build.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / Builder / build build \u00b6 fun build(): MergingDigestData !","title":"build - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/build.html#build","text":"fun build(): MergingDigestData !","title":"build"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/compression.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / Builder / compression compression \u00b6 fun compression(compression: Double !): MergingDigestData.Builder ! var compression: Double !","title":"compression - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/compression.html#compression","text":"fun compression(compression: Double !): MergingDigestData.Builder ! var compression: Double !","title":"compression"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/main_centroids.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / Builder / main_centroids main_centroids \u00b6 fun main_centroids(main_centroids: MutableList < Centroid !>!): MergingDigestData.Builder ! var main_centroids: MutableList < Centroid !>!","title":"main_centroids - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/main_centroids.html#main_centroids","text":"fun main_centroids(main_centroids: MutableList < Centroid !>!): MergingDigestData.Builder ! var main_centroids: MutableList < Centroid !>!","title":"main_centroids"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/max.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / Builder / max max \u00b6 fun max(max: Double !): MergingDigestData.Builder ! var max: Double !","title":"max - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/max.html#max","text":"fun max(max: Double !): MergingDigestData.Builder ! var max: Double !","title":"max"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/min.html","text":"misk-metrics-digester / com.squareup.digester.protos.tdigest / MergingDigestData / Builder / min min \u00b6 fun min(min: Double !): MergingDigestData.Builder ! var min: Double !","title":"min - Misk"},{"location":"0.x/misk-metrics-digester/com.squareup.digester.protos.tdigest/-merging-digest-data/-builder/min.html#min","text":"fun min(min: Double !): MergingDigestData.Builder ! var min: Double !","title":"min"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/index.html","text":"misk-metrics-digester / misk.metrics.digester Package misk.metrics.digester \u00b6 Types \u00b6 Name Summary FakeDigest class FakeDigest : TDigest < FakeDigest > Simulates VeneurDigest for testing purposes MergingDigest class MergingDigest Provides an implementation of t-digest to be used to send histogram data SlidingWindowDigest class SlidingWindowDigest<T : TDigest < T >> SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. Snapshot data class Snapshot Snapshot is the state of a SlidingWindowDigest at a point in time. TDigest interface TDigest<T : TDigest < T >> TDigest abstract common methods for t-digest implementations VeneurDigest class VeneurDigest : TDigest < VeneurDigest > Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project Window data class Window Window represents a time range WindowDigest data class WindowDigest<T : TDigest < T >> WindowDigest holds a t-digest whose data points are scoped to a specific time window. Windower class Windower Windower contains multiple windows with a specified duration","title":"Package misk.metrics.digester - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/index.html#package-miskmetricsdigester","text":"","title":"Package misk.metrics.digester"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/index.html#types","text":"Name Summary FakeDigest class FakeDigest : TDigest < FakeDigest > Simulates VeneurDigest for testing purposes MergingDigest class MergingDigest Provides an implementation of t-digest to be used to send histogram data SlidingWindowDigest class SlidingWindowDigest<T : TDigest < T >> SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. Snapshot data class Snapshot Snapshot is the state of a SlidingWindowDigest at a point in time. TDigest interface TDigest<T : TDigest < T >> TDigest abstract common methods for t-digest implementations VeneurDigest class VeneurDigest : TDigest < VeneurDigest > Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project Window data class Window Window represents a time range WindowDigest data class WindowDigest<T : TDigest < T >> WindowDigest holds a t-digest whose data points are scoped to a specific time window. Windower class Windower Windower contains multiple windows with a specified duration","title":"Types"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/index.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest FakeDigest \u00b6 class FakeDigest : TDigest < FakeDigest > Simulates VeneurDigest for testing purposes Constructors \u00b6 Name Summary <init> FakeDigest() FakeDigest(values: List < Double >) Functions \u00b6 Name Summary add fun add(value: Double ): Unit Adds a new observation to the t-digest count fun count(): Long Returns the count of the number of observations recorded within the t-digest mergeInto fun mergeInto(other: FakeDigest ): Unit Merges this t-digest into another t-digest proto fun proto(): DigestData Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type quantile fun quantile(quantile: Double ): Double Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned. sum fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added","title":"FakeDigest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/index.html#fakedigest","text":"class FakeDigest : TDigest < FakeDigest > Simulates VeneurDigest for testing purposes","title":"FakeDigest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/index.html#constructors","text":"Name Summary <init> FakeDigest() FakeDigest(values: List < Double >)","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/index.html#functions","text":"Name Summary add fun add(value: Double ): Unit Adds a new observation to the t-digest count fun count(): Long Returns the count of the number of observations recorded within the t-digest mergeInto fun mergeInto(other: FakeDigest ): Unit Merges this t-digest into another t-digest proto fun proto(): DigestData Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type quantile fun quantile(quantile: Double ): Double Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned. sum fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added","title":"Functions"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest / <init> <init> \u00b6 FakeDigest() FakeDigest(values: List < Double >)","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/-init-.html#init","text":"FakeDigest() FakeDigest(values: List < Double >)","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/add.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest / add add \u00b6 fun add(value: Double ): Unit Overrides TDigest.add Adds a new observation to the t-digest","title":"add - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/add.html#add","text":"fun add(value: Double ): Unit Overrides TDigest.add Adds a new observation to the t-digest","title":"add"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/count.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest / count count \u00b6 fun count(): Long Overrides TDigest.count Returns the count of the number of observations recorded within the t-digest","title":"count - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/count.html#count","text":"fun count(): Long Overrides TDigest.count Returns the count of the number of observations recorded within the t-digest","title":"count"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/merge-into.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest / mergeInto mergeInto \u00b6 fun mergeInto(other: FakeDigest ): Unit Overrides TDigest.mergeInto Merges this t-digest into another t-digest","title":"mergeInto - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/merge-into.html#mergeinto","text":"fun mergeInto(other: FakeDigest ): Unit Overrides TDigest.mergeInto Merges this t-digest into another t-digest","title":"mergeInto"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/proto.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest / proto proto \u00b6 fun proto(): DigestData Overrides TDigest.proto Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type","title":"proto - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/proto.html#proto","text":"fun proto(): DigestData Overrides TDigest.proto Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type","title":"proto"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/quantile.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest / quantile quantile \u00b6 fun quantile(quantile: Double ): Double Overrides TDigest.quantile Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned.","title":"quantile - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/quantile.html#quantile","text":"fun quantile(quantile: Double ): Double Overrides TDigest.quantile Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned.","title":"quantile"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/sum.html","text":"misk-metrics-digester / misk.metrics.digester / FakeDigest / sum sum \u00b6 fun sum(): Double Overrides TDigest.sum Returns the sum of all values added into the digest, or NaN if no values have been added","title":"sum - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-fake-digest/sum.html#sum","text":"fun sum(): Double Overrides TDigest.sum Returns the sum of all values added into the digest, or NaN if no values have been added","title":"sum"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/index.html","text":"misk-metrics-digester / misk.metrics.digester / MergingDigest MergingDigest \u00b6 class MergingDigest Provides an implementation of t-digest to be used to send histogram data Direct port of Veneur digest created by Stripe https://github.com/stripe/veneur/blob/master/tdigest/merging_digest.go Constructors \u00b6 Name Summary <init> MergingDigest(mergingDigestData: MergingDigestData ) Constructs a MergingDigest with values initialized from MergingDigestData. This should be the way to generate a MergingDigest from a serialized protobuf. MergingDigest(compression: Double ) Provides an implementation of t-digest to be used to send histogram data Functions \u00b6 Name Summary add fun add(value: Double , weight: Double ): Unit Adds a new value to the t-digest, with a given weight that must be positive. Infinities and NaN cannot be added. data fun data(): MergingDigestData MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. mergeFrom fun mergeFrom(other: MergingDigest ): Unit Merge another digest into this one. Neither td nor other can be shared concurrently during the execution of this method. quantile fun quantile(quantile: Double ): Double Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.","title":"MergingDigest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/index.html#mergingdigest","text":"class MergingDigest Provides an implementation of t-digest to be used to send histogram data Direct port of Veneur digest created by Stripe https://github.com/stripe/veneur/blob/master/tdigest/merging_digest.go","title":"MergingDigest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/index.html#constructors","text":"Name Summary <init> MergingDigest(mergingDigestData: MergingDigestData ) Constructs a MergingDigest with values initialized from MergingDigestData. This should be the way to generate a MergingDigest from a serialized protobuf. MergingDigest(compression: Double ) Provides an implementation of t-digest to be used to send histogram data","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/index.html#functions","text":"Name Summary add fun add(value: Double , weight: Double ): Unit Adds a new value to the t-digest, with a given weight that must be positive. Infinities and NaN cannot be added. data fun data(): MergingDigestData MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own. mergeFrom fun mergeFrom(other: MergingDigest ): Unit Merge another digest into this one. Neither td nor other can be shared concurrently during the execution of this method. quantile fun quantile(quantile: Double ): Double Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.","title":"Functions"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / MergingDigest / <init> <init> \u00b6 MergingDigest(mergingDigestData: MergingDigestData ) Constructs a MergingDigest with values initialized from MergingDigestData. This should be the way to generate a MergingDigest from a serialized protobuf. MergingDigest(compression: Double ) Provides an implementation of t-digest to be used to send histogram data Direct port of Veneur digest created by Stripe https://github.com/stripe/veneur/blob/master/tdigest/merging_digest.go","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/-init-.html#init","text":"MergingDigest(mergingDigestData: MergingDigestData ) Constructs a MergingDigest with values initialized from MergingDigestData. This should be the way to generate a MergingDigest from a serialized protobuf. MergingDigest(compression: Double ) Provides an implementation of t-digest to be used to send histogram data Direct port of Veneur digest created by Stripe https://github.com/stripe/veneur/blob/master/tdigest/merging_digest.go","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/add.html","text":"misk-metrics-digester / misk.metrics.digester / MergingDigest / add add \u00b6 fun add(value: Double , weight: Double ): Unit Adds a new value to the t-digest, with a given weight that must be positive. Infinities and NaN cannot be added.","title":"add - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/add.html#add","text":"fun add(value: Double , weight: Double ): Unit Adds a new value to the t-digest, with a given weight that must be positive. Infinities and NaN cannot be added.","title":"add"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/data.html","text":"misk-metrics-digester / misk.metrics.digester / MergingDigest / data data \u00b6 fun data(): MergingDigestData MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own.","title":"data - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/data.html#data","text":"fun data(): MergingDigestData MergingDigestData contains all fields necessary to generate a MergingDigest. This type should generally just be used when serializing MergingDigest\u2019s, and doesn\u2019t have much of a purpose on its own.","title":"data"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/merge-from.html","text":"misk-metrics-digester / misk.metrics.digester / MergingDigest / mergeFrom mergeFrom \u00b6 fun mergeFrom(other: MergingDigest ): Unit Merge another digest into this one. Neither td nor other can be shared concurrently during the execution of this method.","title":"mergeFrom - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/merge-from.html#mergefrom","text":"fun mergeFrom(other: MergingDigest ): Unit Merge another digest into this one. Neither td nor other can be shared concurrently during the execution of this method.","title":"mergeFrom"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/quantile.html","text":"misk-metrics-digester / misk.metrics.digester / MergingDigest / quantile quantile \u00b6 fun quantile(quantile: Double ): Double Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.","title":"quantile - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-merging-digest/quantile.html#quantile","text":"fun quantile(quantile: Double ): Double Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.","title":"quantile"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/index.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest SlidingWindowDigest \u00b6 class SlidingWindowDigest<T : TDigest < T >> SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. To efficiently store observed data in a mergeable way, t-openDigests are used. As t-openDigests do not support discarding older data points, the sliding window aspect is approximated by keeping multiple separate t-openDigests scoped to discrete overlapping time windows. As a result, quantile data is reported from the most recent window that has ended. The following example creates a 1 minute sliding window where there are 6 overlapping windows at a given time. Reported quantiles are at most 10 seconds out of date. SlidingWindowDigest(Windower(60, 6), fun() = VeneurDigest()) The following example creates a 10 second sliding window where there are 2 overlapping windows at a given time. Reported quantiles are at most 5 seconds out of date: NewSlidingWindowDigest(Windower(10, 2), fun() = VeneurDigest()) Constructors \u00b6 Name Summary <init> SlidingWindowDigest(windower: Windower , tDigest: () -> T , utcNowClock: Clock = Clock.systemUTC()) SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. Functions \u00b6 Name Summary closedDigests fun closedDigests(from: ZonedDateTime ): List < WindowDigest < T >> Returns all WindowDigests that ended starting from the given time (inclusive). The returned WindowDigest are ordered by their start time. mergeIn fun mergeIn(windowDigests: List < WindowDigest < T >>): Unit Merges in the data from the given WindowDigests. The given windowDigests should use the same windowing boundaries as this; if they do not then quantiles reported by this sliding window digest may be incorrect. observe fun observe(value: Double ): Unit Adds the given value to all currently open t-openDigests. It is important to note that an observed value is not immediately reflected in calls to Quantile. openDigests fun openDigests(gc: Boolean ): List < WindowDigest < T >> Returns all WindowDigests that are currently open, creating new windows if necessary. Older openDigests that ended more than 1 minute earlier are discarded if gc is true. quantile fun quantile(quantile: Double ): Double Returns estimated value for a quantile. The returned value may not include recently observed values due to how sliding windows are approximated. If no data has been observed then NaN is returned. snapshot fun snapshot(quantiles: List < Double >): Snapshot Returns a snapshot of estimated values for quantiles, along with the count of observations and their sum. The returned values may not include recent observations due to how sliding windows are approximated. If no data has been observed then a slice of NaNs of having quantiles.count() is returned and NaN is returned for the sum.","title":"SlidingWindowDigest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/index.html#slidingwindowdigest","text":"class SlidingWindowDigest<T : TDigest < T >> SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. To efficiently store observed data in a mergeable way, t-openDigests are used. As t-openDigests do not support discarding older data points, the sliding window aspect is approximated by keeping multiple separate t-openDigests scoped to discrete overlapping time windows. As a result, quantile data is reported from the most recent window that has ended. The following example creates a 1 minute sliding window where there are 6 overlapping windows at a given time. Reported quantiles are at most 10 seconds out of date. SlidingWindowDigest(Windower(60, 6), fun() = VeneurDigest()) The following example creates a 10 second sliding window where there are 2 overlapping windows at a given time. Reported quantiles are at most 5 seconds out of date: NewSlidingWindowDigest(Windower(10, 2), fun() = VeneurDigest())","title":"SlidingWindowDigest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/index.html#constructors","text":"Name Summary <init> SlidingWindowDigest(windower: Windower , tDigest: () -> T , utcNowClock: Clock = Clock.systemUTC()) SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe.","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/index.html#functions","text":"Name Summary closedDigests fun closedDigests(from: ZonedDateTime ): List < WindowDigest < T >> Returns all WindowDigests that ended starting from the given time (inclusive). The returned WindowDigest are ordered by their start time. mergeIn fun mergeIn(windowDigests: List < WindowDigest < T >>): Unit Merges in the data from the given WindowDigests. The given windowDigests should use the same windowing boundaries as this; if they do not then quantiles reported by this sliding window digest may be incorrect. observe fun observe(value: Double ): Unit Adds the given value to all currently open t-openDigests. It is important to note that an observed value is not immediately reflected in calls to Quantile. openDigests fun openDigests(gc: Boolean ): List < WindowDigest < T >> Returns all WindowDigests that are currently open, creating new windows if necessary. Older openDigests that ended more than 1 minute earlier are discarded if gc is true. quantile fun quantile(quantile: Double ): Double Returns estimated value for a quantile. The returned value may not include recently observed values due to how sliding windows are approximated. If no data has been observed then NaN is returned. snapshot fun snapshot(quantiles: List < Double >): Snapshot Returns a snapshot of estimated values for quantiles, along with the count of observations and their sum. The returned values may not include recent observations due to how sliding windows are approximated. If no data has been observed then a slice of NaNs of having quantiles.count() is returned and NaN is returned for the sum.","title":"Functions"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest / <init> <init> \u00b6 SlidingWindowDigest(windower: Windower , tDigest: () -> T , utcNowClock: Clock = Clock.systemUTC()) SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. To efficiently store observed data in a mergeable way, t-openDigests are used. As t-openDigests do not support discarding older data points, the sliding window aspect is approximated by keeping multiple separate t-openDigests scoped to discrete overlapping time windows. As a result, quantile data is reported from the most recent window that has ended. The following example creates a 1 minute sliding window where there are 6 overlapping windows at a given time. Reported quantiles are at most 10 seconds out of date. SlidingWindowDigest(Windower(60, 6), fun() = VeneurDigest()) The following example creates a 10 second sliding window where there are 2 overlapping windows at a given time. Reported quantiles are at most 5 seconds out of date: NewSlidingWindowDigest(Windower(10, 2), fun() = VeneurDigest())","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/-init-.html#init","text":"SlidingWindowDigest(windower: Windower , tDigest: () -> T , utcNowClock: Clock = Clock.systemUTC()) SlidingWindowDigest approximates quantiles of data for a trailing time period. It is thread-safe. To efficiently store observed data in a mergeable way, t-openDigests are used. As t-openDigests do not support discarding older data points, the sliding window aspect is approximated by keeping multiple separate t-openDigests scoped to discrete overlapping time windows. As a result, quantile data is reported from the most recent window that has ended. The following example creates a 1 minute sliding window where there are 6 overlapping windows at a given time. Reported quantiles are at most 10 seconds out of date. SlidingWindowDigest(Windower(60, 6), fun() = VeneurDigest()) The following example creates a 10 second sliding window where there are 2 overlapping windows at a given time. Reported quantiles are at most 5 seconds out of date: NewSlidingWindowDigest(Windower(10, 2), fun() = VeneurDigest())","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/closed-digests.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest / closedDigests closedDigests \u00b6 @Synchronized fun closedDigests(from: ZonedDateTime ): List < WindowDigest < T >> Returns all WindowDigests that ended starting from the given time (inclusive). The returned WindowDigest are ordered by their start time.","title":"closedDigests - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/closed-digests.html#closeddigests","text":"@Synchronized fun closedDigests(from: ZonedDateTime ): List < WindowDigest < T >> Returns all WindowDigests that ended starting from the given time (inclusive). The returned WindowDigest are ordered by their start time.","title":"closedDigests"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/merge-in.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest / mergeIn mergeIn \u00b6 @Synchronized fun mergeIn(windowDigests: List < WindowDigest < T >>): Unit Merges in the data from the given WindowDigests. The given windowDigests should use the same windowing boundaries as this; if they do not then quantiles reported by this sliding window digest may be incorrect.","title":"mergeIn - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/merge-in.html#mergein","text":"@Synchronized fun mergeIn(windowDigests: List < WindowDigest < T >>): Unit Merges in the data from the given WindowDigests. The given windowDigests should use the same windowing boundaries as this; if they do not then quantiles reported by this sliding window digest may be incorrect.","title":"mergeIn"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/observe.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest / observe observe \u00b6 @Synchronized fun observe(value: Double ): Unit Adds the given value to all currently open t-openDigests. It is important to note that an observed value is not immediately reflected in calls to Quantile.","title":"observe - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/observe.html#observe","text":"@Synchronized fun observe(value: Double ): Unit Adds the given value to all currently open t-openDigests. It is important to note that an observed value is not immediately reflected in calls to Quantile.","title":"observe"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/open-digests.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest / openDigests openDigests \u00b6 fun openDigests(gc: Boolean ): List < WindowDigest < T >> Returns all WindowDigests that are currently open, creating new windows if necessary. Older openDigests that ended more than 1 minute earlier are discarded if gc is true.","title":"openDigests - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/open-digests.html#opendigests","text":"fun openDigests(gc: Boolean ): List < WindowDigest < T >> Returns all WindowDigests that are currently open, creating new windows if necessary. Older openDigests that ended more than 1 minute earlier are discarded if gc is true.","title":"openDigests"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/quantile.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest / quantile quantile \u00b6 @Synchronized fun quantile(quantile: Double ): Double Returns estimated value for a quantile. The returned value may not include recently observed values due to how sliding windows are approximated. If no data has been observed then NaN is returned.","title":"quantile - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/quantile.html#quantile","text":"@Synchronized fun quantile(quantile: Double ): Double Returns estimated value for a quantile. The returned value may not include recently observed values due to how sliding windows are approximated. If no data has been observed then NaN is returned.","title":"quantile"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/snapshot.html","text":"misk-metrics-digester / misk.metrics.digester / SlidingWindowDigest / snapshot snapshot \u00b6 @Synchronized fun snapshot(quantiles: List < Double >): Snapshot Returns a snapshot of estimated values for quantiles, along with the count of observations and their sum. The returned values may not include recent observations due to how sliding windows are approximated. If no data has been observed then a slice of NaNs of having quantiles.count() is returned and NaN is returned for the sum.","title":"snapshot - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-sliding-window-digest/snapshot.html#snapshot","text":"@Synchronized fun snapshot(quantiles: List < Double >): Snapshot Returns a snapshot of estimated values for quantiles, along with the count of observations and their sum. The returned values may not include recent observations due to how sliding windows are approximated. If no data has been observed then a slice of NaNs of having quantiles.count() is returned and NaN is returned for the sum.","title":"snapshot"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/index.html","text":"misk-metrics-digester / misk.metrics.digester / Snapshot Snapshot \u00b6 data class Snapshot Snapshot is the state of a SlidingWindowDigest at a point in time. Constructors \u00b6 Name Summary <init> Snapshot(quantileVals: List < Double >, count: Long , sum: Double ) Snapshot is the state of a SlidingWindowDigest at a point in time. Properties \u00b6 Name Summary count val count: Long quantileVals val quantileVals: List < Double > sum val sum: Double","title":"Snapshot - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/index.html#snapshot","text":"data class Snapshot Snapshot is the state of a SlidingWindowDigest at a point in time.","title":"Snapshot"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/index.html#constructors","text":"Name Summary <init> Snapshot(quantileVals: List < Double >, count: Long , sum: Double ) Snapshot is the state of a SlidingWindowDigest at a point in time.","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/index.html#properties","text":"Name Summary count val count: Long quantileVals val quantileVals: List < Double > sum val sum: Double","title":"Properties"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / Snapshot / <init> <init> \u00b6 Snapshot(quantileVals: List < Double >, count: Long , sum: Double ) Snapshot is the state of a SlidingWindowDigest at a point in time.","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/-init-.html#init","text":"Snapshot(quantileVals: List < Double >, count: Long , sum: Double ) Snapshot is the state of a SlidingWindowDigest at a point in time.","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/count.html","text":"misk-metrics-digester / misk.metrics.digester / Snapshot / count count \u00b6 val count: Long","title":"count - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/count.html#count","text":"val count: Long","title":"count"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/quantile-vals.html","text":"misk-metrics-digester / misk.metrics.digester / Snapshot / quantileVals quantileVals \u00b6 val quantileVals: List < Double >","title":"quantileVals - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/quantile-vals.html#quantilevals","text":"val quantileVals: List < Double >","title":"quantileVals"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/sum.html","text":"misk-metrics-digester / misk.metrics.digester / Snapshot / sum sum \u00b6 val sum: Double","title":"sum - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-snapshot/sum.html#sum","text":"val sum: Double","title":"sum"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/index.html","text":"misk-metrics-digester / misk.metrics.digester / TDigest TDigest \u00b6 interface TDigest<T : TDigest < T >> TDigest abstract common methods for t-digest implementations Functions \u00b6 Name Summary add abstract fun add(value: Double ): Unit Adds an observed value to the digest. count abstract fun count(): Long Returns the count of values added into the digest. mergeInto abstract fun mergeInto(other: T ): Unit MergeInto merges the data in this digest into the other digest. The other digest is mutated and must be of the same TDigest type. proto abstract fun proto(): DigestData Proto returns a representation of the t-digest that can be later reconstituted into an instance of the same type. quantile abstract fun quantile(quantile: Double ): Double Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned. sum abstract fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added. Inheritors \u00b6 Name Summary FakeDigest class FakeDigest : TDigest < FakeDigest > Simulates VeneurDigest for testing purposes VeneurDigest class VeneurDigest : TDigest < VeneurDigest > Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project","title":"TDigest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/index.html#tdigest","text":"interface TDigest<T : TDigest < T >> TDigest abstract common methods for t-digest implementations","title":"TDigest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/index.html#functions","text":"Name Summary add abstract fun add(value: Double ): Unit Adds an observed value to the digest. count abstract fun count(): Long Returns the count of values added into the digest. mergeInto abstract fun mergeInto(other: T ): Unit MergeInto merges the data in this digest into the other digest. The other digest is mutated and must be of the same TDigest type. proto abstract fun proto(): DigestData Proto returns a representation of the t-digest that can be later reconstituted into an instance of the same type. quantile abstract fun quantile(quantile: Double ): Double Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned. sum abstract fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added.","title":"Functions"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/index.html#inheritors","text":"Name Summary FakeDigest class FakeDigest : TDigest < FakeDigest > Simulates VeneurDigest for testing purposes VeneurDigest class VeneurDigest : TDigest < VeneurDigest > Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project","title":"Inheritors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/add.html","text":"misk-metrics-digester / misk.metrics.digester / TDigest / add add \u00b6 abstract fun add(value: Double ): Unit Adds an observed value to the digest.","title":"add - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/add.html#add","text":"abstract fun add(value: Double ): Unit Adds an observed value to the digest.","title":"add"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/count.html","text":"misk-metrics-digester / misk.metrics.digester / TDigest / count count \u00b6 abstract fun count(): Long Returns the count of values added into the digest.","title":"count - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/count.html#count","text":"abstract fun count(): Long Returns the count of values added into the digest.","title":"count"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/merge-into.html","text":"misk-metrics-digester / misk.metrics.digester / TDigest / mergeInto mergeInto \u00b6 abstract fun mergeInto(other: T ): Unit MergeInto merges the data in this digest into the other digest. The other digest is mutated and must be of the same TDigest type.","title":"mergeInto - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/merge-into.html#mergeinto","text":"abstract fun mergeInto(other: T ): Unit MergeInto merges the data in this digest into the other digest. The other digest is mutated and must be of the same TDigest type.","title":"mergeInto"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/proto.html","text":"misk-metrics-digester / misk.metrics.digester / TDigest / proto proto \u00b6 abstract fun proto(): DigestData Proto returns a representation of the t-digest that can be later reconstituted into an instance of the same type.","title":"proto - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/proto.html#proto","text":"abstract fun proto(): DigestData Proto returns a representation of the t-digest that can be later reconstituted into an instance of the same type.","title":"proto"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/quantile.html","text":"misk-metrics-digester / misk.metrics.digester / TDigest / quantile quantile \u00b6 abstract fun quantile(quantile: Double ): Double Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned.","title":"quantile - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/quantile.html#quantile","text":"abstract fun quantile(quantile: Double ): Double Quantile returns the estimated value at quantile. A given quantile should be in the range of 0,1.0 . If no data has been added then NaN is returned.","title":"quantile"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/sum.html","text":"misk-metrics-digester / misk.metrics.digester / TDigest / sum sum \u00b6 abstract fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added.","title":"sum - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-t-digest/sum.html#sum","text":"abstract fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added.","title":"sum"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/index.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest VeneurDigest \u00b6 class VeneurDigest : TDigest < VeneurDigest > Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project Constructors \u00b6 Name Summary <init> VeneurDigest() Creates a TDigest backed by a VeneurDigest, using a default compression level VeneurDigest(digestData: DigestData ) Creates a VeneurDigest from a DigestData proto The DigestData proto must have veneur_digest set correctly Functions \u00b6 Name Summary add fun add(value: Double ): Unit Adds a new observation to the t-digest count fun count(): Long Returns the count of the number of observations recorded within the t-digest mergeInto fun mergeInto(other: VeneurDigest ): Unit Merges this t-digest into another t-digest mergingDigest fun mergingDigest(): MergingDigest Returns the mergingDigest instance proto fun proto(): DigestData Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type quantile fun quantile(quantile: Double ): Double Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty. sum fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added","title":"VeneurDigest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/index.html#veneurdigest","text":"class VeneurDigest : TDigest < VeneurDigest > Wraps an adapted t-digest implementation from Stripe\u2019s Veneur project","title":"VeneurDigest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/index.html#constructors","text":"Name Summary <init> VeneurDigest() Creates a TDigest backed by a VeneurDigest, using a default compression level VeneurDigest(digestData: DigestData ) Creates a VeneurDigest from a DigestData proto The DigestData proto must have veneur_digest set correctly","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/index.html#functions","text":"Name Summary add fun add(value: Double ): Unit Adds a new observation to the t-digest count fun count(): Long Returns the count of the number of observations recorded within the t-digest mergeInto fun mergeInto(other: VeneurDigest ): Unit Merges this t-digest into another t-digest mergingDigest fun mergingDigest(): MergingDigest Returns the mergingDigest instance proto fun proto(): DigestData Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type quantile fun quantile(quantile: Double ): Double Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty. sum fun sum(): Double Returns the sum of all values added into the digest, or NaN if no values have been added","title":"Functions"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / <init> <init> \u00b6 VeneurDigest() Creates a TDigest backed by a VeneurDigest, using a default compression level VeneurDigest(digestData: DigestData ) Creates a VeneurDigest from a DigestData proto The DigestData proto must have veneur_digest set correctly","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/-init-.html#init","text":"VeneurDigest() Creates a TDigest backed by a VeneurDigest, using a default compression level VeneurDigest(digestData: DigestData ) Creates a VeneurDigest from a DigestData proto The DigestData proto must have veneur_digest set correctly","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/add.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / add add \u00b6 fun add(value: Double ): Unit Overrides TDigest.add Adds a new observation to the t-digest","title":"add - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/add.html#add","text":"fun add(value: Double ): Unit Overrides TDigest.add Adds a new observation to the t-digest","title":"add"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/count.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / count count \u00b6 fun count(): Long Overrides TDigest.count Returns the count of the number of observations recorded within the t-digest","title":"count - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/count.html#count","text":"fun count(): Long Overrides TDigest.count Returns the count of the number of observations recorded within the t-digest","title":"count"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merge-into.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / mergeInto mergeInto \u00b6 fun mergeInto(other: VeneurDigest ): Unit Overrides TDigest.mergeInto Merges this t-digest into another t-digest","title":"mergeInto - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merge-into.html#mergeinto","text":"fun mergeInto(other: VeneurDigest ): Unit Overrides TDigest.mergeInto Merges this t-digest into another t-digest","title":"mergeInto"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merging-digest.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / mergingDigest mergingDigest \u00b6 fun mergingDigest(): MergingDigest Returns the mergingDigest instance","title":"mergingDigest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/merging-digest.html#mergingdigest","text":"fun mergingDigest(): MergingDigest Returns the mergingDigest instance","title":"mergingDigest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/proto.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / proto proto \u00b6 fun proto(): DigestData Overrides TDigest.proto Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type","title":"proto - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/proto.html#proto","text":"fun proto(): DigestData Overrides TDigest.proto Returns a representation fo the t-digest that can be later be reconstituted into an instance of the same type","title":"proto"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/quantile.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / quantile quantile \u00b6 fun quantile(quantile: Double ): Double Overrides TDigest.quantile Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.","title":"quantile - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/quantile.html#quantile","text":"fun quantile(quantile: Double ): Double Overrides TDigest.quantile Returns a value such that the fraction of values in td below that value is approximately equal to quantile. Returns NaN if the digest is empty.","title":"quantile"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/sum.html","text":"misk-metrics-digester / misk.metrics.digester / VeneurDigest / sum sum \u00b6 fun sum(): Double Overrides TDigest.sum Returns the sum of all values added into the digest, or NaN if no values have been added","title":"sum - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-veneur-digest/sum.html#sum","text":"fun sum(): Double Overrides TDigest.sum Returns the sum of all values added into the digest, or NaN if no values have been added","title":"sum"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/index.html","text":"misk-metrics-digester / misk.metrics.digester / Window Window \u00b6 data class Window Window represents a time range Constructors \u00b6 Name Summary <init> Window(start: ZonedDateTime , end: ZonedDateTime ) Window represents a time range Properties \u00b6 Name Summary end val end: ZonedDateTime start val start: ZonedDateTime Functions \u00b6 Name Summary contains fun contains(t: ZonedDateTime ): Boolean Returns true if the given time t falls within the window\u2019s Start <= t < End.","title":"Window - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/index.html#window","text":"data class Window Window represents a time range","title":"Window"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/index.html#constructors","text":"Name Summary <init> Window(start: ZonedDateTime , end: ZonedDateTime ) Window represents a time range","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/index.html#properties","text":"Name Summary end val end: ZonedDateTime start val start: ZonedDateTime","title":"Properties"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/index.html#functions","text":"Name Summary contains fun contains(t: ZonedDateTime ): Boolean Returns true if the given time t falls within the window\u2019s Start <= t < End.","title":"Functions"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / Window / <init> <init> \u00b6 Window(start: ZonedDateTime , end: ZonedDateTime ) Window represents a time range","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/-init-.html#init","text":"Window(start: ZonedDateTime , end: ZonedDateTime ) Window represents a time range","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/contains.html","text":"misk-metrics-digester / misk.metrics.digester / Window / contains contains \u00b6 fun contains(t: ZonedDateTime ): Boolean Returns true if the given time t falls within the window\u2019s Start <= t < End.","title":"contains - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/contains.html#contains","text":"fun contains(t: ZonedDateTime ): Boolean Returns true if the given time t falls within the window\u2019s Start <= t < End.","title":"contains"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/end.html","text":"misk-metrics-digester / misk.metrics.digester / Window / end end \u00b6 val end: ZonedDateTime","title":"end - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/end.html#end","text":"val end: ZonedDateTime","title":"end"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/start.html","text":"misk-metrics-digester / misk.metrics.digester / Window / start start \u00b6 val start: ZonedDateTime","title":"start - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window/start.html#start","text":"val start: ZonedDateTime","title":"start"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/index.html","text":"misk-metrics-digester / misk.metrics.digester / WindowDigest WindowDigest \u00b6 data class WindowDigest<T : TDigest < T >> WindowDigest holds a t-digest whose data points are scoped to a specific time window. Constructors \u00b6 Name Summary <init> WindowDigest(window: Window , digest: T ) WindowDigest holds a t-digest whose data points are scoped to a specific time window. Properties \u00b6 Name Summary digest val digest: T window val window: Window","title":"WindowDigest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/index.html#windowdigest","text":"data class WindowDigest<T : TDigest < T >> WindowDigest holds a t-digest whose data points are scoped to a specific time window.","title":"WindowDigest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/index.html#constructors","text":"Name Summary <init> WindowDigest(window: Window , digest: T ) WindowDigest holds a t-digest whose data points are scoped to a specific time window.","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/index.html#properties","text":"Name Summary digest val digest: T window val window: Window","title":"Properties"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / WindowDigest / <init> <init> \u00b6 WindowDigest(window: Window , digest: T ) WindowDigest holds a t-digest whose data points are scoped to a specific time window.","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/-init-.html#init","text":"WindowDigest(window: Window , digest: T ) WindowDigest holds a t-digest whose data points are scoped to a specific time window.","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/digest.html","text":"misk-metrics-digester / misk.metrics.digester / WindowDigest / digest digest \u00b6 val digest: T","title":"digest - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/digest.html#digest","text":"val digest: T","title":"digest"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/window.html","text":"misk-metrics-digester / misk.metrics.digester / WindowDigest / window window \u00b6 val window: Window","title":"window - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-window-digest/window.html#window","text":"val window: Window","title":"window"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/index.html","text":"misk-metrics-digester / misk.metrics.digester / Windower Windower \u00b6 class Windower Windower contains multiple windows with a specified duration Constructors \u00b6 Name Summary <init> Windower(windowSecs: Int , stagger: Int ) Windower contains multiple windows with a specified duration Functions \u00b6 Name Summary windowsContaining fun windowsContaining(t: ZonedDateTime ): List < Window > Returns all windows that the given time falls into. The returned slice will be ordered by window start time, and the number of windows in the returned slice will the same as the stagger given when the Windower was created.","title":"Windower - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/index.html#windower","text":"class Windower Windower contains multiple windows with a specified duration","title":"Windower"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/index.html#constructors","text":"Name Summary <init> Windower(windowSecs: Int , stagger: Int ) Windower contains multiple windows with a specified duration","title":"Constructors"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/index.html#functions","text":"Name Summary windowsContaining fun windowsContaining(t: ZonedDateTime ): List < Window > Returns all windows that the given time falls into. The returned slice will be ordered by window start time, and the number of windows in the returned slice will the same as the stagger given when the Windower was created.","title":"Functions"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/-init-.html","text":"misk-metrics-digester / misk.metrics.digester / Windower / <init> <init> \u00b6 Windower(windowSecs: Int , stagger: Int ) Windower contains multiple windows with a specified duration","title":" init "},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/-init-.html#init","text":"Windower(windowSecs: Int , stagger: Int ) Windower contains multiple windows with a specified duration","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/windows-containing.html","text":"misk-metrics-digester / misk.metrics.digester / Windower / windowsContaining windowsContaining \u00b6 fun windowsContaining(t: ZonedDateTime ): List < Window > Returns all windows that the given time falls into. The returned slice will be ordered by window start time, and the number of windows in the returned slice will the same as the stagger given when the Windower was created.","title":"windowsContaining - Misk"},{"location":"0.x/misk-metrics-digester/misk.metrics.digester/-windower/windows-containing.html#windowscontaining","text":"fun windowsContaining(t: ZonedDateTime ): List < Window > Returns all windows that the given time falls into. The returned slice will be ordered by window start time, and the number of windows in the returned slice will the same as the stagger given when the Windower was created.","title":"windowsContaining"},{"location":"0.x/misk-metrics-testing/index.html","text":"misk-metrics-testing Packages \u00b6 Name Summary misk.metrics Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-metrics-testing/index.html#packages","text":"Name Summary misk.metrics","title":"Packages"},{"location":"0.x/misk-metrics-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-metrics-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.metrics.FakeMetrics An in-memory metrics store with APIs to verify which metrics were collected. misk.metrics.FakeMetricsModule","title":"All Types - Misk"},{"location":"0.x/misk-metrics-testing/alltypes/index.html#all-types","text":"Name Summary misk.metrics.FakeMetrics An in-memory metrics store with APIs to verify which metrics were collected. misk.metrics.FakeMetricsModule","title":"All Types"},{"location":"0.x/misk-metrics-testing/misk.metrics/index.html","text":"misk-metrics-testing / misk.metrics Package misk.metrics \u00b6 Types \u00b6 Name Summary FakeMetrics class FakeMetrics : Metrics An in-memory metrics store with APIs to verify which metrics were collected. FakeMetricsModule class FakeMetricsModule : KAbstractModule","title":"Package misk.metrics - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/index.html#package-miskmetrics","text":"","title":"Package misk.metrics"},{"location":"0.x/misk-metrics-testing/misk.metrics/index.html#types","text":"Name Summary FakeMetrics class FakeMetrics : Metrics An in-memory metrics store with APIs to verify which metrics were collected. FakeMetricsModule class FakeMetricsModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/index.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics FakeMetrics \u00b6 class FakeMetrics : Metrics An in-memory metrics store with APIs to verify which metrics were collected. The only way to create an instance of this is with FakeMetricsModule . Functions \u00b6 Name Summary counter fun counter(name: String , help: String ?, labelNames: List < String >): Counter gauge fun gauge(name: String , help: String , labelNames: List < String >): Gauge get fun get(name: String , vararg labels: Pair < String , String >): Double ? Returns a measurement for a counter or gauge . getSample fun getSample(name: String , labels: Array <out Pair < String , String >>, sampleName: String = name): Sample? histogram fun histogram(name: String , help: String , labelNames: List < String >, quantiles: Map < Double , Double >): Histogram histogramCount fun histogramCount(name: String , vararg labels: Pair < String , String >): Double ? Returns the number of histogram samples taken. histogramMean fun histogramMean(name: String , vararg labels: Pair < String , String >): Double ? Returns the average of all histogram samples taken. histogramP50 fun histogramP50(name: String , vararg labels: Pair < String , String >): Double ? Returns the median for a histogram . In small samples this is the element preceding the middle element. histogramP99 fun histogramP99(name: String , vararg labels: Pair < String , String >): Double ? Returns the 0.99 th percentile for a histogram . In small samples this is the second largest element. histogramQuantile fun histogramQuantile(name: String , quantile: String , vararg labels: Pair < String , String >): Double ? histogramSum fun histogramSum(name: String , vararg labels: Pair < String , String >): Double ? Returns the sum of all histogram samples taken.","title":"FakeMetrics - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/index.html#fakemetrics","text":"class FakeMetrics : Metrics An in-memory metrics store with APIs to verify which metrics were collected. The only way to create an instance of this is with FakeMetricsModule .","title":"FakeMetrics"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/index.html#functions","text":"Name Summary counter fun counter(name: String , help: String ?, labelNames: List < String >): Counter gauge fun gauge(name: String , help: String , labelNames: List < String >): Gauge get fun get(name: String , vararg labels: Pair < String , String >): Double ? Returns a measurement for a counter or gauge . getSample fun getSample(name: String , labels: Array <out Pair < String , String >>, sampleName: String = name): Sample? histogram fun histogram(name: String , help: String , labelNames: List < String >, quantiles: Map < Double , Double >): Histogram histogramCount fun histogramCount(name: String , vararg labels: Pair < String , String >): Double ? Returns the number of histogram samples taken. histogramMean fun histogramMean(name: String , vararg labels: Pair < String , String >): Double ? Returns the average of all histogram samples taken. histogramP50 fun histogramP50(name: String , vararg labels: Pair < String , String >): Double ? Returns the median for a histogram . In small samples this is the element preceding the middle element. histogramP99 fun histogramP99(name: String , vararg labels: Pair < String , String >): Double ? Returns the 0.99 th percentile for a histogram . In small samples this is the second largest element. histogramQuantile fun histogramQuantile(name: String , quantile: String , vararg labels: Pair < String , String >): Double ? histogramSum fun histogramSum(name: String , vararg labels: Pair < String , String >): Double ? Returns the sum of all histogram samples taken.","title":"Functions"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/counter.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / counter counter \u00b6 fun counter(name: String , help: String ?, labelNames: List < String >): Counter","title":"counter - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/counter.html#counter","text":"fun counter(name: String , help: String ?, labelNames: List < String >): Counter","title":"counter"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/gauge.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / gauge gauge \u00b6 fun gauge(name: String , help: String , labelNames: List < String >): Gauge","title":"gauge - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/gauge.html#gauge","text":"fun gauge(name: String , help: String , labelNames: List < String >): Gauge","title":"gauge"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/get-sample.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / getSample getSample \u00b6 fun getSample(name: String , labels: Array <out Pair < String , String >>, sampleName: String = name): Sample?","title":"getSample - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/get-sample.html#getsample","text":"fun getSample(name: String , labels: Array <out Pair < String , String >>, sampleName: String = name): Sample?","title":"getSample"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/get.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / get get \u00b6 fun get(name: String , vararg labels: Pair < String , String >): Double ? Returns a measurement for a counter or gauge .","title":"get - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/get.html#get","text":"fun get(name: String , vararg labels: Pair < String , String >): Double ? Returns a measurement for a counter or gauge .","title":"get"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-count.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / histogramCount histogramCount \u00b6 fun histogramCount(name: String , vararg labels: Pair < String , String >): Double ? Returns the number of histogram samples taken.","title":"histogramCount - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-count.html#histogramcount","text":"fun histogramCount(name: String , vararg labels: Pair < String , String >): Double ? Returns the number of histogram samples taken.","title":"histogramCount"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-mean.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / histogramMean histogramMean \u00b6 fun histogramMean(name: String , vararg labels: Pair < String , String >): Double ? Returns the average of all histogram samples taken.","title":"histogramMean - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-mean.html#histogrammean","text":"fun histogramMean(name: String , vararg labels: Pair < String , String >): Double ? Returns the average of all histogram samples taken.","title":"histogramMean"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-p50.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / histogramP50 histogramP50 \u00b6 fun histogramP50(name: String , vararg labels: Pair < String , String >): Double ? Returns the median for a histogram . In small samples this is the element preceding the middle element.","title":"histogramP50 - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-p50.html#histogramp50","text":"fun histogramP50(name: String , vararg labels: Pair < String , String >): Double ? Returns the median for a histogram . In small samples this is the element preceding the middle element.","title":"histogramP50"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-p99.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / histogramP99 histogramP99 \u00b6 fun histogramP99(name: String , vararg labels: Pair < String , String >): Double ? Returns the 0.99 th percentile for a histogram . In small samples this is the second largest element.","title":"histogramP99 - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-p99.html#histogramp99","text":"fun histogramP99(name: String , vararg labels: Pair < String , String >): Double ? Returns the 0.99 th percentile for a histogram . In small samples this is the second largest element.","title":"histogramP99"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-quantile.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / histogramQuantile histogramQuantile \u00b6 fun histogramQuantile(name: String , quantile: String , vararg labels: Pair < String , String >): Double ?","title":"histogramQuantile - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-quantile.html#histogramquantile","text":"fun histogramQuantile(name: String , quantile: String , vararg labels: Pair < String , String >): Double ?","title":"histogramQuantile"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-sum.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / histogramSum histogramSum \u00b6 fun histogramSum(name: String , vararg labels: Pair < String , String >): Double ? Returns the sum of all histogram samples taken.","title":"histogramSum - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram-sum.html#histogramsum","text":"fun histogramSum(name: String , vararg labels: Pair < String , String >): Double ? Returns the sum of all histogram samples taken.","title":"histogramSum"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram.html","text":"misk-metrics-testing / misk.metrics / FakeMetrics / histogram histogram \u00b6 fun histogram(name: String , help: String , labelNames: List < String >, quantiles: Map < Double , Double >): Histogram","title":"histogram - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics/histogram.html#histogram","text":"fun histogram(name: String , help: String , labelNames: List < String >, quantiles: Map < Double , Double >): Histogram","title":"histogram"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/index.html","text":"misk-metrics-testing / misk.metrics / FakeMetricsModule FakeMetricsModule \u00b6 class FakeMetricsModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeMetricsModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeMetricsModule - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/index.html#fakemetricsmodule","text":"class FakeMetricsModule : KAbstractModule","title":"FakeMetricsModule"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/index.html#constructors","text":"Name Summary <init> FakeMetricsModule()","title":"Constructors"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/-init-.html","text":"misk-metrics-testing / misk.metrics / FakeMetricsModule / <init> <init> \u00b6 FakeMetricsModule()","title":" init "},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/-init-.html#init","text":"FakeMetricsModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/configure.html","text":"misk-metrics-testing / misk.metrics / FakeMetricsModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-metrics-testing/misk.metrics/-fake-metrics-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-policy/index.html","text":"misk-policy Packages \u00b6 Name Summary misk.policy.opa Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-policy/index.html#packages","text":"Name Summary misk.policy.opa","title":"Packages"},{"location":"0.x/misk-policy/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-policy/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.policy.opa.OpaApi misk.policy.opa.OpaConfig misk.policy.opa.OpaModule misk.policy.opa.OpaPolicyEngine misk.policy.opa.OpaRequest misk.policy.opa.OpaResponse misk.policy.opa.PolicyEngineException misk.policy.opa.RealOpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes. misk.policy.opa.Request OPA Request wrapper. misk.policy.opa.Response OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.","title":"All Types - Misk"},{"location":"0.x/misk-policy/alltypes/index.html#all-types","text":"Name Summary misk.policy.opa.OpaApi misk.policy.opa.OpaConfig misk.policy.opa.OpaModule misk.policy.opa.OpaPolicyEngine misk.policy.opa.OpaRequest misk.policy.opa.OpaResponse misk.policy.opa.PolicyEngineException misk.policy.opa.RealOpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes. misk.policy.opa.Request OPA Request wrapper. misk.policy.opa.Response OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.","title":"All Types"},{"location":"0.x/misk-policy/misk.policy.opa/index.html","text":"misk-policy / misk.policy.opa Package misk.policy.opa \u00b6 Types \u00b6 Name Summary OpaApi interface OpaApi OpaConfig data class OpaConfig : Config OpaModule class OpaModule : KAbstractModule OpaPolicyEngine interface OpaPolicyEngine OpaRequest interface OpaRequest OpaResponse interface OpaResponse RealOpaPolicyEngine class RealOpaPolicyEngine : OpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes. Request data class Request<T> OPA Request wrapper. Response data class Response<T> OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type. Exceptions \u00b6 Name Summary PolicyEngineException class PolicyEngineException : Exception Functions \u00b6 Name Summary evaluate fun <R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. fun <T : OpaRequest , R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"Package misk.policy.opa - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/index.html#package-miskpolicyopa","text":"","title":"Package misk.policy.opa"},{"location":"0.x/misk-policy/misk.policy.opa/index.html#types","text":"Name Summary OpaApi interface OpaApi OpaConfig data class OpaConfig : Config OpaModule class OpaModule : KAbstractModule OpaPolicyEngine interface OpaPolicyEngine OpaRequest interface OpaRequest OpaResponse interface OpaResponse RealOpaPolicyEngine class RealOpaPolicyEngine : OpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes. Request data class Request<T> OPA Request wrapper. Response data class Response<T> OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.","title":"Types"},{"location":"0.x/misk-policy/misk.policy.opa/index.html#exceptions","text":"Name Summary PolicyEngineException class PolicyEngineException : Exception","title":"Exceptions"},{"location":"0.x/misk-policy/misk.policy.opa/index.html#functions","text":"Name Summary evaluate fun <R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. fun <T : OpaRequest , R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"Functions"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-request.html","text":"misk-policy / misk.policy.opa / OpaRequest OpaRequest \u00b6 interface OpaRequest","title":"OpaRequest - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-request.html#oparequest","text":"interface OpaRequest","title":"OpaRequest"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-response.html","text":"misk-policy / misk.policy.opa / OpaResponse OpaResponse \u00b6 interface OpaResponse","title":"OpaResponse - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-response.html#oparesponse","text":"interface OpaResponse","title":"OpaResponse"},{"location":"0.x/misk-policy/misk.policy.opa/evaluate.html","text":"misk-policy / misk.policy.opa / evaluate evaluate \u00b6 inline fun <reified R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. Parameters \u00b6 document - Name or Path of the OPA document to query. Exceptions \u00b6 PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA. inline fun <reified T : OpaRequest , reified R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. Parameters \u00b6 document - Name or Path of the OPA document to query. input - Input data to be supplied to OPA at evaluation time (the input global field). Exceptions \u00b6 PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA.","title":"evaluate - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/evaluate.html#evaluate","text":"inline fun <reified R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"evaluate"},{"location":"0.x/misk-policy/misk.policy.opa/evaluate.html#parameters","text":"document - Name or Path of the OPA document to query.","title":"Parameters"},{"location":"0.x/misk-policy/misk.policy.opa/evaluate.html#exceptions","text":"PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA. inline fun <reified T : OpaRequest , reified R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"Exceptions"},{"location":"0.x/misk-policy/misk.policy.opa/evaluate.html#parameters_1","text":"document - Name or Path of the OPA document to query. input - Input data to be supplied to OPA at evaluation time (the input global field).","title":"Parameters"},{"location":"0.x/misk-policy/misk.policy.opa/evaluate.html#exceptions_1","text":"PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA.","title":"Exceptions"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-api/index.html","text":"misk-policy / misk.policy.opa / OpaApi OpaApi \u00b6 interface OpaApi Functions \u00b6 Name Summary queryDocument abstract fun queryDocument(documentPath: String , input: String ): Call<ResponseBody>","title":"OpaApi - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-api/index.html#opaapi","text":"interface OpaApi","title":"OpaApi"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-api/index.html#functions","text":"Name Summary queryDocument abstract fun queryDocument(documentPath: String , input: String ): Call<ResponseBody>","title":"Functions"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-api/query-document.html","text":"misk-policy / misk.policy.opa / OpaApi / queryDocument queryDocument \u00b6 @Headers([\"Content-Type: application/json\"]) @POST(\"/v1/data/{documentPath}\") abstract fun queryDocument(@Path(\"documentPath\") documentPath: String , @Body input: String ): Call<ResponseBody>","title":"queryDocument - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-api/query-document.html#querydocument","text":"@Headers([\"Content-Type: application/json\"]) @POST(\"/v1/data/{documentPath}\") abstract fun queryDocument(@Path(\"documentPath\") documentPath: String , @Body input: String ): Call<ResponseBody>","title":"queryDocument"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/index.html","text":"misk-policy / misk.policy.opa / OpaConfig OpaConfig \u00b6 data class OpaConfig : Config Constructors \u00b6 Name Summary <init> OpaConfig(baseUrl: String , unixSocket: String ?) Properties \u00b6 Name Summary baseUrl val baseUrl: String unixSocket val unixSocket: String ?","title":"OpaConfig - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/index.html#opaconfig","text":"data class OpaConfig : Config","title":"OpaConfig"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/index.html#constructors","text":"Name Summary <init> OpaConfig(baseUrl: String , unixSocket: String ?)","title":"Constructors"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/index.html#properties","text":"Name Summary baseUrl val baseUrl: String unixSocket val unixSocket: String ?","title":"Properties"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/-init-.html","text":"misk-policy / misk.policy.opa / OpaConfig / <init> <init> \u00b6 OpaConfig(baseUrl: String , unixSocket: String ?)","title":" init "},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/-init-.html#init","text":"OpaConfig(baseUrl: String , unixSocket: String ?)","title":"&lt;init&gt;"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/base-url.html","text":"misk-policy / misk.policy.opa / OpaConfig / baseUrl baseUrl \u00b6 val baseUrl: String","title":"baseUrl - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/base-url.html#baseurl","text":"val baseUrl: String","title":"baseUrl"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/unix-socket.html","text":"misk-policy / misk.policy.opa / OpaConfig / unixSocket unixSocket \u00b6 val unixSocket: String ?","title":"unixSocket - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-config/unix-socket.html#unixsocket","text":"val unixSocket: String ?","title":"unixSocket"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/index.html","text":"misk-policy / misk.policy.opa / OpaModule OpaModule \u00b6 class OpaModule : KAbstractModule Constructors \u00b6 Name Summary <init> OpaModule(config: OpaConfig ) Functions \u00b6 Name Summary configure fun configure(): Unit provideMoshi fun provideMoshi(): Moshi","title":"OpaModule - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/index.html#opamodule","text":"class OpaModule : KAbstractModule","title":"OpaModule"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/index.html#constructors","text":"Name Summary <init> OpaModule(config: OpaConfig )","title":"Constructors"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideMoshi fun provideMoshi(): Moshi","title":"Functions"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/-init-.html","text":"misk-policy / misk.policy.opa / OpaModule / <init> <init> \u00b6 OpaModule(config: OpaConfig )","title":" init "},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/-init-.html#init","text":"OpaModule(config: OpaConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/configure.html","text":"misk-policy / misk.policy.opa / OpaModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/provide-moshi.html","text":"misk-policy / misk.policy.opa / OpaModule / provideMoshi provideMoshi \u00b6 @Provides @Singleton @Named(\"opa-moshi\") fun provideMoshi(): Moshi","title":"provideMoshi - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-module/provide-moshi.html#providemoshi","text":"@Provides @Singleton @Named(\"opa-moshi\") fun provideMoshi(): Moshi","title":"provideMoshi"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/index.html","text":"misk-policy / misk.policy.opa / OpaPolicyEngine OpaPolicyEngine \u00b6 interface OpaPolicyEngine Functions \u00b6 Name Summary evaluateNoInput abstract fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R evaluateWithInput abstract fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R Extension Functions \u00b6 Name Summary evaluate fun <R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. fun <T : OpaRequest , R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. Inheritors \u00b6 Name Summary RealOpaPolicyEngine class RealOpaPolicyEngine : OpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes.","title":"OpaPolicyEngine - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/index.html#opapolicyengine","text":"interface OpaPolicyEngine","title":"OpaPolicyEngine"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/index.html#functions","text":"Name Summary evaluateNoInput abstract fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R evaluateWithInput abstract fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R","title":"Functions"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/index.html#extension-functions","text":"Name Summary evaluate fun <R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. fun <T : OpaRequest , R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"Extension Functions"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/index.html#inheritors","text":"Name Summary RealOpaPolicyEngine class RealOpaPolicyEngine : OpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes.","title":"Inheritors"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-no-input.html","text":"misk-policy / misk.policy.opa / OpaPolicyEngine / evaluateNoInput evaluateNoInput \u00b6 abstract fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R","title":"evaluateNoInput - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-no-input.html#evaluatenoinput","text":"abstract fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R","title":"evaluateNoInput"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-with-input.html","text":"misk-policy / misk.policy.opa / OpaPolicyEngine / evaluateWithInput evaluateWithInput \u00b6 abstract fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R","title":"evaluateWithInput - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-opa-policy-engine/evaluate-with-input.html#evaluatewithinput","text":"abstract fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R","title":"evaluateWithInput"},{"location":"0.x/misk-policy/misk.policy.opa/-policy-engine-exception/index.html","text":"misk-policy / misk.policy.opa / PolicyEngineException PolicyEngineException \u00b6 class PolicyEngineException : Exception Constructors \u00b6 Name Summary <init> PolicyEngineException(message: String , cause: Throwable ? = null)","title":"PolicyEngineException - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-policy-engine-exception/index.html#policyengineexception","text":"class PolicyEngineException : Exception","title":"PolicyEngineException"},{"location":"0.x/misk-policy/misk.policy.opa/-policy-engine-exception/index.html#constructors","text":"Name Summary <init> PolicyEngineException(message: String , cause: Throwable ? = null)","title":"Constructors"},{"location":"0.x/misk-policy/misk.policy.opa/-policy-engine-exception/-init-.html","text":"misk-policy / misk.policy.opa / PolicyEngineException / <init> <init> \u00b6 PolicyEngineException(message: String , cause: Throwable ? = null)","title":" init "},{"location":"0.x/misk-policy/misk.policy.opa/-policy-engine-exception/-init-.html#init","text":"PolicyEngineException(message: String , cause: Throwable ? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/index.html","text":"misk-policy / misk.policy.opa / RealOpaPolicyEngine RealOpaPolicyEngine \u00b6 class RealOpaPolicyEngine : OpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes. Constructors \u00b6 Name Summary <init> RealOpaPolicyEngine(opaApi: OpaApi , moshi: Moshi) Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes. Functions \u00b6 Name Summary evaluateNoInput fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. evaluateWithInput fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. Extension Functions \u00b6 Name Summary evaluate fun <R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. fun <T : OpaRequest , R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"RealOpaPolicyEngine - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/index.html#realopapolicyengine","text":"class RealOpaPolicyEngine : OpaPolicyEngine Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes.","title":"RealOpaPolicyEngine"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/index.html#constructors","text":"Name Summary <init> RealOpaPolicyEngine(opaApi: OpaApi , moshi: Moshi) Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes.","title":"Constructors"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/index.html#functions","text":"Name Summary evaluateNoInput fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. evaluateWithInput fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"Functions"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/index.html#extension-functions","text":"Name Summary evaluate fun <R : OpaResponse > OpaPolicyEngine .evaluate(document: String ): R Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. fun <T : OpaRequest , R : OpaResponse > OpaPolicyEngine .evaluate(document: String , input: T ): R Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"Extension Functions"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/-init-.html","text":"misk-policy / misk.policy.opa / RealOpaPolicyEngine / <init> <init> \u00b6 RealOpaPolicyEngine(opaApi: OpaApi , @Named(\"opa-moshi\") moshi: Moshi) Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes.","title":" init "},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/-init-.html#init","text":"RealOpaPolicyEngine(opaApi: OpaApi , @Named(\"opa-moshi\") moshi: Moshi) Support for the Open Policy Engine (OPA). OPA provides a means to decouple policy from business logic. The resulting query response may have arbitrary shapes.","title":"&lt;init&gt;"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input.html","text":"misk-policy / misk.policy.opa / RealOpaPolicyEngine / evaluateNoInput evaluateNoInput \u00b6 fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R Overrides OpaPolicyEngine.evaluateNoInput Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. Parameters \u00b6 document - Name or Path of the OPA document to query. returnType - Shape of response to be demarshelled from OPA Exceptions \u00b6 PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA.","title":"evaluateNoInput - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input.html#evaluatenoinput","text":"fun <R : OpaResponse > evaluateNoInput(document: String , returnType: Class < R >): R Overrides OpaPolicyEngine.evaluateNoInput Evaluate / Query a document with no additional input. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"evaluateNoInput"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input.html#parameters","text":"document - Name or Path of the OPA document to query. returnType - Shape of response to be demarshelled from OPA","title":"Parameters"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-no-input.html#exceptions","text":"PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA.","title":"Exceptions"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input.html","text":"misk-policy / misk.policy.opa / RealOpaPolicyEngine / evaluateWithInput evaluateWithInput \u00b6 fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R Overrides OpaPolicyEngine.evaluateWithInput Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST. Parameters \u00b6 document - Name or Path of the OPA document to query. input - Input data to be supplied to OPA at evaluation time (the input global field). inputType - Input shape to be JSONified for OPA returnType - Return shape to be JSONified from OPA Exceptions \u00b6 PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA.","title":"evaluateWithInput - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input.html#evaluatewithinput","text":"fun <T : OpaRequest , R : OpaResponse > evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R Overrides OpaPolicyEngine.evaluateWithInput Evaluate / Query a document with given input of shape T. This will connect to OPA via a retrofit interface and perform a /v1/data/{document} POST.","title":"evaluateWithInput"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input.html#parameters","text":"document - Name or Path of the OPA document to query. input - Input data to be supplied to OPA at evaluation time (the input global field). inputType - Input shape to be JSONified for OPA returnType - Return shape to be JSONified from OPA","title":"Parameters"},{"location":"0.x/misk-policy/misk.policy.opa/-real-opa-policy-engine/evaluate-with-input.html#exceptions","text":"PolicyEngineException - if the request to OPA failed or the response shape didn\u2019t match R. IllegalArgumentException - if no document path was specified. Return Response shape R from OPA.","title":"Exceptions"},{"location":"0.x/misk-policy/misk.policy.opa/-request/index.html","text":"misk-policy / misk.policy.opa / Request Request \u00b6 data class Request<T> OPA Request wrapper. Constructors \u00b6 Name Summary <init> Request(input: T ) OPA Request wrapper. Properties \u00b6 Name Summary input val input: T","title":"Request - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-request/index.html#request","text":"data class Request<T> OPA Request wrapper.","title":"Request"},{"location":"0.x/misk-policy/misk.policy.opa/-request/index.html#constructors","text":"Name Summary <init> Request(input: T ) OPA Request wrapper.","title":"Constructors"},{"location":"0.x/misk-policy/misk.policy.opa/-request/index.html#properties","text":"Name Summary input val input: T","title":"Properties"},{"location":"0.x/misk-policy/misk.policy.opa/-request/-init-.html","text":"misk-policy / misk.policy.opa / Request / <init> <init> \u00b6 Request(input: T ) OPA Request wrapper.","title":" init "},{"location":"0.x/misk-policy/misk.policy.opa/-request/-init-.html#init","text":"Request(input: T ) OPA Request wrapper.","title":"&lt;init&gt;"},{"location":"0.x/misk-policy/misk.policy.opa/-request/input.html","text":"misk-policy / misk.policy.opa / Request / input input \u00b6 val input: T","title":"input - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-request/input.html#input","text":"val input: T","title":"input"},{"location":"0.x/misk-policy/misk.policy.opa/-response/index.html","text":"misk-policy / misk.policy.opa / Response Response \u00b6 data class Response<T> OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type. Constructors \u00b6 Name Summary <init> Response(decision_id: String ?, result: T ?) OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type. Properties \u00b6 Name Summary decision_id val decision_id: String ? result val result: T ?","title":"Response - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-response/index.html#response","text":"data class Response<T> OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.","title":"Response"},{"location":"0.x/misk-policy/misk.policy.opa/-response/index.html#constructors","text":"Name Summary <init> Response(decision_id: String ?, result: T ?) OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.","title":"Constructors"},{"location":"0.x/misk-policy/misk.policy.opa/-response/index.html#properties","text":"Name Summary decision_id val decision_id: String ? result val result: T ?","title":"Properties"},{"location":"0.x/misk-policy/misk.policy.opa/-response/-init-.html","text":"misk-policy / misk.policy.opa / Response / <init> <init> \u00b6 Response(decision_id: String ?, result: T ?) OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.","title":" init "},{"location":"0.x/misk-policy/misk.policy.opa/-response/-init-.html#init","text":"Response(decision_id: String ?, result: T ?) OPA Response wrapper. Every response has this standard shape, made concrete by the expected response type.","title":"&lt;init&gt;"},{"location":"0.x/misk-policy/misk.policy.opa/-response/decision_id.html","text":"misk-policy / misk.policy.opa / Response / decision_id decision_id \u00b6 val decision_id: String ?","title":"decision_id - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-response/decision_id.html#decision_id","text":"val decision_id: String ?","title":"decision_id"},{"location":"0.x/misk-policy/misk.policy.opa/-response/result.html","text":"misk-policy / misk.policy.opa / Response / result result \u00b6 val result: T ?","title":"result - Misk"},{"location":"0.x/misk-policy/misk.policy.opa/-response/result.html#result","text":"val result: T ?","title":"result"},{"location":"0.x/misk-policy-testing/index.html","text":"misk-policy-testing Packages \u00b6 Name Summary misk.policy.opa Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-policy-testing/index.html#packages","text":"Name Summary misk.policy.opa","title":"Packages"},{"location":"0.x/misk-policy-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-policy-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.policy.opa.FakeOpaModule misk.policy.opa.FakeOpaPolicyEngine","title":"All Types - Misk"},{"location":"0.x/misk-policy-testing/alltypes/index.html#all-types","text":"Name Summary misk.policy.opa.FakeOpaModule misk.policy.opa.FakeOpaPolicyEngine","title":"All Types"},{"location":"0.x/misk-policy-testing/misk.policy.opa/index.html","text":"misk-policy-testing / misk.policy.opa Package misk.policy.opa \u00b6 Types \u00b6 Name Summary FakeOpaModule class FakeOpaModule : KAbstractModule FakeOpaPolicyEngine class FakeOpaPolicyEngine : OpaPolicyEngine","title":"Package misk.policy.opa - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/index.html#package-miskpolicyopa","text":"","title":"Package misk.policy.opa"},{"location":"0.x/misk-policy-testing/misk.policy.opa/index.html#types","text":"Name Summary FakeOpaModule class FakeOpaModule : KAbstractModule FakeOpaPolicyEngine class FakeOpaPolicyEngine : OpaPolicyEngine","title":"Types"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/index.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaModule FakeOpaModule \u00b6 class FakeOpaModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeOpaModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeOpaModule - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/index.html#fakeopamodule","text":"class FakeOpaModule : KAbstractModule","title":"FakeOpaModule"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/index.html#constructors","text":"Name Summary <init> FakeOpaModule()","title":"Constructors"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/-init-.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaModule / <init> <init> \u00b6 FakeOpaModule()","title":" init "},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/-init-.html#init","text":"FakeOpaModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/configure.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/index.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaPolicyEngine FakeOpaPolicyEngine \u00b6 @Singleton class FakeOpaPolicyEngine : OpaPolicyEngine Constructors \u00b6 Name Summary <init> FakeOpaPolicyEngine() Functions \u00b6 Name Summary addOverride fun addOverride(document: String , obj: OpaResponse): Unit addOverrideForInput fun addOverrideForInput(document: String , key: OpaRequest, obj: OpaResponse): Unit evaluateNoInput fun <R : OpaResponse> evaluateNoInput(document: String , returnType: Class < R >): R evaluateWithInput fun <T : OpaRequest, R : OpaResponse> evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R","title":"FakeOpaPolicyEngine - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/index.html#fakeopapolicyengine","text":"@Singleton class FakeOpaPolicyEngine : OpaPolicyEngine","title":"FakeOpaPolicyEngine"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/index.html#constructors","text":"Name Summary <init> FakeOpaPolicyEngine()","title":"Constructors"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/index.html#functions","text":"Name Summary addOverride fun addOverride(document: String , obj: OpaResponse): Unit addOverrideForInput fun addOverrideForInput(document: String , key: OpaRequest, obj: OpaResponse): Unit evaluateNoInput fun <R : OpaResponse> evaluateNoInput(document: String , returnType: Class < R >): R evaluateWithInput fun <T : OpaRequest, R : OpaResponse> evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R","title":"Functions"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/-init-.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaPolicyEngine / <init> <init> \u00b6 FakeOpaPolicyEngine()","title":" init "},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/-init-.html#init","text":"FakeOpaPolicyEngine()","title":"&lt;init&gt;"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/add-override-for-input.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaPolicyEngine / addOverrideForInput addOverrideForInput \u00b6 fun addOverrideForInput(document: String , key: OpaRequest, obj: OpaResponse): Unit","title":"addOverrideForInput - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/add-override-for-input.html#addoverrideforinput","text":"fun addOverrideForInput(document: String , key: OpaRequest, obj: OpaResponse): Unit","title":"addOverrideForInput"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/add-override.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaPolicyEngine / addOverride addOverride \u00b6 fun addOverride(document: String , obj: OpaResponse): Unit","title":"addOverride - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/add-override.html#addoverride","text":"fun addOverride(document: String , obj: OpaResponse): Unit","title":"addOverride"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/evaluate-no-input.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaPolicyEngine / evaluateNoInput evaluateNoInput \u00b6 fun <R : OpaResponse> evaluateNoInput(document: String , returnType: Class < R >): R","title":"evaluateNoInput - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/evaluate-no-input.html#evaluatenoinput","text":"fun <R : OpaResponse> evaluateNoInput(document: String , returnType: Class < R >): R","title":"evaluateNoInput"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/evaluate-with-input.html","text":"misk-policy-testing / misk.policy.opa / FakeOpaPolicyEngine / evaluateWithInput evaluateWithInput \u00b6 fun <T : OpaRequest, R : OpaResponse> evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R","title":"evaluateWithInput - Misk"},{"location":"0.x/misk-policy-testing/misk.policy.opa/-fake-opa-policy-engine/evaluate-with-input.html#evaluatewithinput","text":"fun <T : OpaRequest, R : OpaResponse> evaluateWithInput(document: String , input: T , inputType: Class < T >, returnType: Class < R >): R","title":"evaluateWithInput"},{"location":"0.x/misk-prometheus/index.html","text":"misk-prometheus Packages \u00b6 Name Summary misk.metrics.backends.prometheus misk.prometheus Index \u00b6 All Types","title":"misk-prometheus"},{"location":"0.x/misk-prometheus/index.html#packages","text":"Name Summary misk.metrics.backends.prometheus misk.prometheus","title":"Packages"},{"location":"0.x/misk-prometheus/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-prometheus/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.metrics.backends.prometheus.PrometheusConfig Configuration for exporting metrics to prometheus misk.prometheus.PrometheusHistogram misk.metrics.backends.prometheus.PrometheusMetricsClientModule Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule . misk.metrics.backends.prometheus.PrometheusMetricsServiceModule Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":"All Types - Misk"},{"location":"0.x/misk-prometheus/alltypes/index.html#all-types","text":"Name Summary misk.metrics.backends.prometheus.PrometheusConfig Configuration for exporting metrics to prometheus misk.prometheus.PrometheusHistogram misk.metrics.backends.prometheus.PrometheusMetricsClientModule Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule . misk.metrics.backends.prometheus.PrometheusMetricsServiceModule Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":"All Types"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/index.html","text":"misk-prometheus / misk.metrics.backends.prometheus Package misk.metrics.backends.prometheus \u00b6 Types \u00b6 Name Summary PrometheusConfig data class PrometheusConfig : Config Configuration for exporting metrics to prometheus PrometheusMetricsClientModule class PrometheusMetricsClientModule : KAbstractModule Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule . PrometheusMetricsServiceModule class PrometheusMetricsServiceModule : KAbstractModule Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":"Package misk.metrics.backends.prometheus - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/index.html#package-miskmetricsbackendsprometheus","text":"","title":"Package misk.metrics.backends.prometheus"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/index.html#types","text":"Name Summary PrometheusConfig data class PrometheusConfig : Config Configuration for exporting metrics to prometheus PrometheusMetricsClientModule class PrometheusMetricsClientModule : KAbstractModule Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule . PrometheusMetricsServiceModule class PrometheusMetricsServiceModule : KAbstractModule Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":"Types"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/index.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusConfig PrometheusConfig \u00b6 data class PrometheusConfig : Config Configuration for exporting metrics to prometheus Constructors \u00b6 Name Summary <init> PrometheusConfig(hostname: String ? = null, http_port: Int ) Configuration for exporting metrics to prometheus Properties \u00b6 Name Summary hostname val hostname: String ? http_port val http_port: Int","title":"PrometheusConfig - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/index.html#prometheusconfig","text":"data class PrometheusConfig : Config Configuration for exporting metrics to prometheus","title":"PrometheusConfig"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/index.html#constructors","text":"Name Summary <init> PrometheusConfig(hostname: String ? = null, http_port: Int ) Configuration for exporting metrics to prometheus","title":"Constructors"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/index.html#properties","text":"Name Summary hostname val hostname: String ? http_port val http_port: Int","title":"Properties"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/-init-.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusConfig / <init> <init> \u00b6 PrometheusConfig(hostname: String ? = null, http_port: Int ) Configuration for exporting metrics to prometheus","title":" init "},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/-init-.html#init","text":"PrometheusConfig(hostname: String ? = null, http_port: Int ) Configuration for exporting metrics to prometheus","title":"&lt;init&gt;"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/hostname.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusConfig / hostname hostname \u00b6 val hostname: String ?","title":"hostname - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/hostname.html#hostname","text":"val hostname: String ?","title":"hostname"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/http_port.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusConfig / http_port http_port \u00b6 val http_port: Int","title":"http_port - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-config/http_port.html#http_port","text":"val http_port: Int","title":"http_port"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/index.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusMetricsClientModule PrometheusMetricsClientModule \u00b6 class PrometheusMetricsClientModule : KAbstractModule Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule . Constructors \u00b6 Name Summary <init> PrometheusMetricsClientModule() Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule . Functions \u00b6 Name Summary configure fun configure(): Unit","title":"PrometheusMetricsClientModule - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/index.html#prometheusmetricsclientmodule","text":"class PrometheusMetricsClientModule : KAbstractModule Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule .","title":"PrometheusMetricsClientModule"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/index.html#constructors","text":"Name Summary <init> PrometheusMetricsClientModule() Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule .","title":"Constructors"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/-init-.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusMetricsClientModule / <init> <init> \u00b6 PrometheusMetricsClientModule() Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule .","title":" init "},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/-init-.html#init","text":"PrometheusMetricsClientModule() Binds a Metrics implementation whose metrics don\u2019t write to a Prometheus infrastructure. For that you should install PrometheusMetricsServiceModule .","title":"&lt;init&gt;"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/configure.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusMetricsClientModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-client-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/index.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusMetricsServiceModule PrometheusMetricsServiceModule \u00b6 class PrometheusMetricsServiceModule : KAbstractModule Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label. Constructors \u00b6 Name Summary <init> PrometheusMetricsServiceModule(config: PrometheusConfig ) Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"PrometheusMetricsServiceModule - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/index.html#prometheusmetricsservicemodule","text":"class PrometheusMetricsServiceModule : KAbstractModule Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":"PrometheusMetricsServiceModule"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/index.html#constructors","text":"Name Summary <init> PrometheusMetricsServiceModule(config: PrometheusConfig ) Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":"Constructors"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/-init-.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusMetricsServiceModule / <init> <init> \u00b6 PrometheusMetricsServiceModule(config: PrometheusConfig ) Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":" init "},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/-init-.html#init","text":"PrometheusMetricsServiceModule(config: PrometheusConfig ) Exposes prometheus metrics over a dedicated port. Allows internal metrics to be exposed via a k8s ClusterIP address, where they can be scraped by a cluster local Prometheus server without also exposing them to the outside world via the port bound to the service load balancer. If using the prometheus operator, one would generally create a k8s ClusterIP service exporting the metrics port, then a prometheus ServiceMonitor selecting that service via a label.","title":"&lt;init&gt;"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/configure.html","text":"misk-prometheus / misk.metrics.backends.prometheus / PrometheusMetricsServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-prometheus/misk.metrics.backends.prometheus/-prometheus-metrics-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-prometheus/misk.prometheus/index.html","text":"misk-prometheus / misk.prometheus Package misk.prometheus \u00b6 Types \u00b6 Name Summary PrometheusHistogram class PrometheusHistogram : Histogram","title":"Package misk.prometheus - Misk"},{"location":"0.x/misk-prometheus/misk.prometheus/index.html#package-miskprometheus","text":"","title":"Package misk.prometheus"},{"location":"0.x/misk-prometheus/misk.prometheus/index.html#types","text":"Name Summary PrometheusHistogram class PrometheusHistogram : Histogram","title":"Types"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/index.html","text":"misk-prometheus / misk.prometheus / PrometheusHistogram PrometheusHistogram \u00b6 class PrometheusHistogram : Histogram Constructors \u00b6 Name Summary <init> PrometheusHistogram(histogram: Summary) Properties \u00b6 Name Summary histogram val histogram: Summary Functions \u00b6 Name Summary count fun count(vararg labelValues: String ): Int record fun record(duration: Double , vararg labelValues: String ): Unit","title":"PrometheusHistogram - Misk"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/index.html#prometheushistogram","text":"class PrometheusHistogram : Histogram","title":"PrometheusHistogram"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/index.html#constructors","text":"Name Summary <init> PrometheusHistogram(histogram: Summary)","title":"Constructors"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/index.html#properties","text":"Name Summary histogram val histogram: Summary","title":"Properties"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/index.html#functions","text":"Name Summary count fun count(vararg labelValues: String ): Int record fun record(duration: Double , vararg labelValues: String ): Unit","title":"Functions"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/-init-.html","text":"misk-prometheus / misk.prometheus / PrometheusHistogram / <init> <init> \u00b6 PrometheusHistogram(histogram: Summary)","title":" init "},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/-init-.html#init","text":"PrometheusHistogram(histogram: Summary)","title":"&lt;init&gt;"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/count.html","text":"misk-prometheus / misk.prometheus / PrometheusHistogram / count count \u00b6 fun count(vararg labelValues: String ): Int","title":"count - Misk"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/count.html#count","text":"fun count(vararg labelValues: String ): Int","title":"count"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/histogram.html","text":"misk-prometheus / misk.prometheus / PrometheusHistogram / histogram histogram \u00b6 val histogram: Summary","title":"histogram - Misk"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/histogram.html#histogram","text":"val histogram: Summary","title":"histogram"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/record.html","text":"misk-prometheus / misk.prometheus / PrometheusHistogram / record record \u00b6 fun record(duration: Double , vararg labelValues: String ): Unit","title":"record - Misk"},{"location":"0.x/misk-prometheus/misk.prometheus/-prometheus-histogram/record.html#record","text":"fun record(duration: Double , vararg labelValues: String ): Unit","title":"record"},{"location":"0.x/misk-redis/index.html","text":"misk-redis Packages \u00b6 Name Summary misk.redis Index \u00b6 All Types","title":"misk-redis"},{"location":"0.x/misk-redis/index.html#packages","text":"Name Summary misk.redis","title":"Packages"},{"location":"0.x/misk-redis/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-redis/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.redis.FakeRedis Mimics a Redis instance for testing. misk.redis.RealRedis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued. misk.redis.Redis A Redis client. misk.redis.RedisConfig misk.redis.RedisConnectionException misk.redis.RedisModule Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment misk.redis.RedisNodeConfig misk.redis.RedisReplicationGroupConfig misk.redis.RedisService Controls the connection lifecycle for Redis. misk.redis.RedisTestModule","title":"All Types - Misk"},{"location":"0.x/misk-redis/alltypes/index.html#all-types","text":"Name Summary misk.redis.FakeRedis Mimics a Redis instance for testing. misk.redis.RealRedis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued. misk.redis.Redis A Redis client. misk.redis.RedisConfig misk.redis.RedisConnectionException misk.redis.RedisModule Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment misk.redis.RedisNodeConfig misk.redis.RedisReplicationGroupConfig misk.redis.RedisService Controls the connection lifecycle for Redis. misk.redis.RedisTestModule","title":"All Types"},{"location":"0.x/misk-redis/misk.redis/index.html","text":"misk-redis / misk.redis Package misk.redis \u00b6 Types \u00b6 Name Summary FakeRedis class FakeRedis : Redis Mimics a Redis instance for testing. RealRedis class RealRedis : Redis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued. Redis interface Redis A Redis client. RedisConfig class RedisConfig : LinkedHashMap < String , RedisReplicationGroupConfig >, Config RedisModule class RedisModule : KAbstractModule Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment RedisNodeConfig data class RedisNodeConfig RedisReplicationGroupConfig data class RedisReplicationGroupConfig RedisService class RedisService : AbstractIdleService Controls the connection lifecycle for Redis. RedisTestModule class RedisTestModule : KAbstractModule Exceptions \u00b6 Name Summary RedisConnectionException class RedisConnectionException : RuntimeException","title":"Package misk.redis - Misk"},{"location":"0.x/misk-redis/misk.redis/index.html#package-miskredis","text":"","title":"Package misk.redis"},{"location":"0.x/misk-redis/misk.redis/index.html#types","text":"Name Summary FakeRedis class FakeRedis : Redis Mimics a Redis instance for testing. RealRedis class RealRedis : Redis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued. Redis interface Redis A Redis client. RedisConfig class RedisConfig : LinkedHashMap < String , RedisReplicationGroupConfig >, Config RedisModule class RedisModule : KAbstractModule Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment RedisNodeConfig data class RedisNodeConfig RedisReplicationGroupConfig data class RedisReplicationGroupConfig RedisService class RedisService : AbstractIdleService Controls the connection lifecycle for Redis. RedisTestModule class RedisTestModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-redis/misk.redis/index.html#exceptions","text":"Name Summary RedisConnectionException class RedisConnectionException : RuntimeException","title":"Exceptions"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/index.html","text":"misk-redis / misk.redis / FakeRedis FakeRedis \u00b6 class FakeRedis : Redis Mimics a Redis instance for testing. Constructors \u00b6 Name Summary <init> FakeRedis() Mimics a Redis instance for testing. Properties \u00b6 Name Summary clock lateinit var clock: Clock Functions \u00b6 Name Summary del fun del(key: String ): Boolean Deletes a single key. fun del(vararg keys: String ): Int Deletes multiple keys. get fun get(key: String ): ByteString? Retrieves the value for the given key as a ByteString . hget fun hget(key: String , field: String ): ByteString? Retrieves the value for the given key and field as a ByteString . hgetAll fun hgetAll(key: String ): Map < String , ByteString>? Retrieves all the fields and associated values for the given key. Returns null if nothing found. hset fun hset(key: String , field: String , value: ByteString): Unit Sets the ByteString value for the given key and field mget fun mget(vararg keys: String ): List <ByteString?> Retrieves the values for the given list of keys. mset fun mset(vararg keyValues: ByteString): Unit Sets the key value pairs. set fun set(key: String , value: ByteString): Unit Sets the ByteString value for the given key. fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for a key with an expiration date. setnx fun setnx(key: String , value: ByteString): Unit fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist.","title":"FakeRedis - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/index.html#fakeredis","text":"class FakeRedis : Redis Mimics a Redis instance for testing.","title":"FakeRedis"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/index.html#constructors","text":"Name Summary <init> FakeRedis() Mimics a Redis instance for testing.","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/index.html#properties","text":"Name Summary clock lateinit var clock: Clock","title":"Properties"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/index.html#functions","text":"Name Summary del fun del(key: String ): Boolean Deletes a single key. fun del(vararg keys: String ): Int Deletes multiple keys. get fun get(key: String ): ByteString? Retrieves the value for the given key as a ByteString . hget fun hget(key: String , field: String ): ByteString? Retrieves the value for the given key and field as a ByteString . hgetAll fun hgetAll(key: String ): Map < String , ByteString>? Retrieves all the fields and associated values for the given key. Returns null if nothing found. hset fun hset(key: String , field: String , value: ByteString): Unit Sets the ByteString value for the given key and field mget fun mget(vararg keys: String ): List <ByteString?> Retrieves the values for the given list of keys. mset fun mset(vararg keyValues: ByteString): Unit Sets the key value pairs. set fun set(key: String , value: ByteString): Unit Sets the ByteString value for the given key. fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for a key with an expiration date. setnx fun setnx(key: String , value: ByteString): Unit fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist.","title":"Functions"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/-init-.html","text":"misk-redis / misk.redis / FakeRedis / <init> <init> \u00b6 FakeRedis() Mimics a Redis instance for testing.","title":" init "},{"location":"0.x/misk-redis/misk.redis/-fake-redis/-init-.html#init","text":"FakeRedis() Mimics a Redis instance for testing.","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/clock.html","text":"misk-redis / misk.redis / FakeRedis / clock clock \u00b6 lateinit var clock: Clock","title":"clock - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/clock.html#clock","text":"lateinit var clock: Clock","title":"clock"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/del.html","text":"misk-redis / misk.redis / FakeRedis / del del \u00b6 fun del(key: String ): Boolean Overrides Redis.del Deletes a single key. Parameters \u00b6 key - the key to delete Return false if the key was not deleted, true if the key was deleted fun del(vararg keys: String ): Int Overrides Redis.del Deletes multiple keys. Parameters \u00b6 keys - the keys to delete Return 0 if none of the keys were deleted, otherwise a positive integer representing the number of keys that were deleted","title":"del - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/del.html#del","text":"fun del(key: String ): Boolean Overrides Redis.del Deletes a single key.","title":"del"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/del.html#parameters","text":"key - the key to delete Return false if the key was not deleted, true if the key was deleted fun del(vararg keys: String ): Int Overrides Redis.del Deletes multiple keys.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/del.html#parameters_1","text":"keys - the keys to delete Return 0 if none of the keys were deleted, otherwise a positive integer representing the number of keys that were deleted","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/get.html","text":"misk-redis / misk.redis / FakeRedis / get get \u00b6 fun get(key: String ): ByteString? Overrides Redis.get Retrieves the value for the given key as a ByteString . Parameters \u00b6 key - the key to retrieve Return a ByteString if the key was found, null if the key was not found","title":"get - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/get.html#get","text":"fun get(key: String ): ByteString? Overrides Redis.get Retrieves the value for the given key as a ByteString .","title":"get"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/get.html#parameters","text":"key - the key to retrieve Return a ByteString if the key was found, null if the key was not found","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hget-all.html","text":"misk-redis / misk.redis / FakeRedis / hgetAll hgetAll \u00b6 fun hgetAll(key: String ): Map < String , ByteString>? Overrides Redis.hgetAll Retrieves all the fields and associated values for the given key. Returns null if nothing found. Parameters \u00b6 key - the key Return a Map<String, ByteString> of the fields to their associated values","title":"hgetAll - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hget-all.html#hgetall","text":"fun hgetAll(key: String ): Map < String , ByteString>? Overrides Redis.hgetAll Retrieves all the fields and associated values for the given key. Returns null if nothing found.","title":"hgetAll"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hget-all.html#parameters","text":"key - the key Return a Map<String, ByteString> of the fields to their associated values","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hget.html","text":"misk-redis / misk.redis / FakeRedis / hget hget \u00b6 fun hget(key: String , field: String ): ByteString? Overrides Redis.hget Retrieves the value for the given key and field as a ByteString . Parameters \u00b6 key - the key field - the field Return a ByteString if the key/field combination was found, null if not found","title":"hget - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hget.html#hget","text":"fun hget(key: String , field: String ): ByteString? Overrides Redis.hget Retrieves the value for the given key and field as a ByteString .","title":"hget"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hget.html#parameters","text":"key - the key field - the field Return a ByteString if the key/field combination was found, null if not found","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hset.html","text":"misk-redis / misk.redis / FakeRedis / hset hset \u00b6 fun hset(key: String , field: String , value: ByteString): Unit Overrides Redis.hset Sets the ByteString value for the given key and field Parameters \u00b6 key - the key field - the field value - the value to set","title":"hset - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hset.html#hset","text":"fun hset(key: String , field: String , value: ByteString): Unit Overrides Redis.hset Sets the ByteString value for the given key and field","title":"hset"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/hset.html#parameters","text":"key - the key field - the field value - the value to set","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/mget.html","text":"misk-redis / misk.redis / FakeRedis / mget mget \u00b6 fun mget(vararg keys: String ): List <ByteString?> Overrides Redis.mget Retrieves the values for the given list of keys. Parameters \u00b6 keys - the keys to retrieve Return a list of String in the same order as the specified list of keys. For each key, a value will be returned if a key was found, otherwise null is returned.","title":"mget - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/mget.html#mget","text":"fun mget(vararg keys: String ): List <ByteString?> Overrides Redis.mget Retrieves the values for the given list of keys.","title":"mget"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/mget.html#parameters","text":"keys - the keys to retrieve Return a list of String in the same order as the specified list of keys. For each key, a value will be returned if a key was found, otherwise null is returned.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/mset.html","text":"misk-redis / misk.redis / FakeRedis / mset mset \u00b6 fun mset(vararg keyValues: ByteString): Unit Overrides Redis.mset Sets the key value pairs. Parameters \u00b6 keyValues - the list of keys and values in alternating order.","title":"mset - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/mset.html#mset","text":"fun mset(vararg keyValues: ByteString): Unit Overrides Redis.mset Sets the key value pairs.","title":"mset"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/mset.html#parameters","text":"keyValues - the list of keys and values in alternating order.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/set.html","text":"misk-redis / misk.redis / FakeRedis / set set \u00b6 fun set(key: String , value: ByteString): Unit Overrides Redis.set Sets the ByteString value for the given key. Parameters \u00b6 key - the key to set value - the value to set fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.set Sets the ByteString value for a key with an expiration date. Parameters \u00b6 key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"set - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/set.html#set","text":"fun set(key: String , value: ByteString): Unit Overrides Redis.set Sets the ByteString value for the given key.","title":"set"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/set.html#parameters","text":"key - the key to set value - the value to set fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.set Sets the ByteString value for a key with an expiration date.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/set.html#parameters_1","text":"key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/setnx.html","text":"misk-redis / misk.redis / FakeRedis / setnx setnx \u00b6 fun setnx(key: String , value: ByteString): Unit Overrides Redis.setnx Sets the ByteString value for the given key if it does not already exist. Parameters \u00b6 key - the key to set value - the value to set fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.setnx Sets the ByteString value for the given key if it does not already exist. Parameters \u00b6 key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"setnx - Misk"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/setnx.html#setnx","text":"fun setnx(key: String , value: ByteString): Unit Overrides Redis.setnx Sets the ByteString value for the given key if it does not already exist.","title":"setnx"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/setnx.html#parameters","text":"key - the key to set value - the value to set fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.setnx Sets the ByteString value for the given key if it does not already exist.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-fake-redis/setnx.html#parameters_1","text":"key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-real-redis/index.html","text":"misk-redis / misk.redis / RealRedis RealRedis \u00b6 class RealRedis : Redis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued. Constructors \u00b6 Name Summary <init> RealRedis(jedisPool: JedisPool) For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued. Functions \u00b6 Name Summary close fun close(): Unit Closes the connection to Redis. del fun del(key: String ): Boolean Delete key. fun del(vararg keys: String ): Int Delete multiple keys. get fun get(key: String ): ByteString? Get a ByteString value. hget fun hget(key: String , field: String ): ByteString? Get a ByteString value for the given key and field. hgetAll fun hgetAll(key: String ): Map < String , ByteString>? Get a map of field -> value pairs for the given key. hset fun hset(key: String , field: String , value: ByteString): Unit Set a ByteArray value for the given key and field. mget fun mget(vararg keys: String ): List <ByteString?> Get multiple key values. mset fun mset(vararg keyValues: ByteString): Unit Set multiple key values. set fun set(key: String , value: ByteString): Unit Set a ByteArray value. fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Set a ByteArray value with an expiration. setnx fun setnx(key: String , value: ByteString): Unit Set a ByteArray value if it doesn\u2019t already exist. fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Set a ByteArray value if it doesn\u2019t already exist with an expiration.","title":"RealRedis - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/index.html#realredis","text":"class RealRedis : Redis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued.","title":"RealRedis"},{"location":"0.x/misk-redis/misk.redis/-real-redis/index.html#constructors","text":"Name Summary <init> RealRedis(jedisPool: JedisPool) For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued.","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-real-redis/index.html#functions","text":"Name Summary close fun close(): Unit Closes the connection to Redis. del fun del(key: String ): Boolean Delete key. fun del(vararg keys: String ): Int Delete multiple keys. get fun get(key: String ): ByteString? Get a ByteString value. hget fun hget(key: String , field: String ): ByteString? Get a ByteString value for the given key and field. hgetAll fun hgetAll(key: String ): Map < String , ByteString>? Get a map of field -> value pairs for the given key. hset fun hset(key: String , field: String , value: ByteString): Unit Set a ByteArray value for the given key and field. mget fun mget(vararg keys: String ): List <ByteString?> Get multiple key values. mset fun mset(vararg keyValues: ByteString): Unit Set multiple key values. set fun set(key: String , value: ByteString): Unit Set a ByteArray value. fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Set a ByteArray value with an expiration. setnx fun setnx(key: String , value: ByteString): Unit Set a ByteArray value if it doesn\u2019t already exist. fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Set a ByteArray value if it doesn\u2019t already exist with an expiration.","title":"Functions"},{"location":"0.x/misk-redis/misk.redis/-real-redis/-init-.html","text":"misk-redis / misk.redis / RealRedis / <init> <init> \u00b6 RealRedis(jedisPool: JedisPool) For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued.","title":" init "},{"location":"0.x/misk-redis/misk.redis/-real-redis/-init-.html#init","text":"RealRedis(jedisPool: JedisPool) For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued.","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-real-redis/close.html","text":"misk-redis / misk.redis / RealRedis / close close \u00b6 fun close(): Unit Closes the connection to Redis.","title":"close - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/close.html#close","text":"fun close(): Unit Closes the connection to Redis.","title":"close"},{"location":"0.x/misk-redis/misk.redis/-real-redis/del.html","text":"misk-redis / misk.redis / RealRedis / del del \u00b6 fun del(key: String ): Boolean Overrides Redis.del Delete key. fun del(vararg keys: String ): Int Overrides Redis.del Delete multiple keys.","title":"del - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/del.html#del","text":"fun del(key: String ): Boolean Overrides Redis.del Delete key. fun del(vararg keys: String ): Int Overrides Redis.del Delete multiple keys.","title":"del"},{"location":"0.x/misk-redis/misk.redis/-real-redis/get.html","text":"misk-redis / misk.redis / RealRedis / get get \u00b6 fun get(key: String ): ByteString? Overrides Redis.get Get a ByteString value.","title":"get - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/get.html#get","text":"fun get(key: String ): ByteString? Overrides Redis.get Get a ByteString value.","title":"get"},{"location":"0.x/misk-redis/misk.redis/-real-redis/hget-all.html","text":"misk-redis / misk.redis / RealRedis / hgetAll hgetAll \u00b6 fun hgetAll(key: String ): Map < String , ByteString>? Overrides Redis.hgetAll Get a map of field -> value pairs for the given key.","title":"hgetAll - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/hget-all.html#hgetall","text":"fun hgetAll(key: String ): Map < String , ByteString>? Overrides Redis.hgetAll Get a map of field -> value pairs for the given key.","title":"hgetAll"},{"location":"0.x/misk-redis/misk.redis/-real-redis/hget.html","text":"misk-redis / misk.redis / RealRedis / hget hget \u00b6 fun hget(key: String , field: String ): ByteString? Overrides Redis.hget Get a ByteString value for the given key and field.","title":"hget - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/hget.html#hget","text":"fun hget(key: String , field: String ): ByteString? Overrides Redis.hget Get a ByteString value for the given key and field.","title":"hget"},{"location":"0.x/misk-redis/misk.redis/-real-redis/hset.html","text":"misk-redis / misk.redis / RealRedis / hset hset \u00b6 fun hset(key: String , field: String , value: ByteString): Unit Overrides Redis.hset Set a ByteArray value for the given key and field.","title":"hset - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/hset.html#hset","text":"fun hset(key: String , field: String , value: ByteString): Unit Overrides Redis.hset Set a ByteArray value for the given key and field.","title":"hset"},{"location":"0.x/misk-redis/misk.redis/-real-redis/mget.html","text":"misk-redis / misk.redis / RealRedis / mget mget \u00b6 fun mget(vararg keys: String ): List <ByteString?> Overrides Redis.mget Get multiple key values.","title":"mget - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/mget.html#mget","text":"fun mget(vararg keys: String ): List <ByteString?> Overrides Redis.mget Get multiple key values.","title":"mget"},{"location":"0.x/misk-redis/misk.redis/-real-redis/mset.html","text":"misk-redis / misk.redis / RealRedis / mset mset \u00b6 fun mset(vararg keyValues: ByteString): Unit Overrides Redis.mset Set multiple key values.","title":"mset - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/mset.html#mset","text":"fun mset(vararg keyValues: ByteString): Unit Overrides Redis.mset Set multiple key values.","title":"mset"},{"location":"0.x/misk-redis/misk.redis/-real-redis/set.html","text":"misk-redis / misk.redis / RealRedis / set set \u00b6 fun set(key: String , value: ByteString): Unit Overrides Redis.set Set a ByteArray value. fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.set Set a ByteArray value with an expiration.","title":"set - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/set.html#set","text":"fun set(key: String , value: ByteString): Unit Overrides Redis.set Set a ByteArray value. fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.set Set a ByteArray value with an expiration.","title":"set"},{"location":"0.x/misk-redis/misk.redis/-real-redis/setnx.html","text":"misk-redis / misk.redis / RealRedis / setnx setnx \u00b6 fun setnx(key: String , value: ByteString): Unit Overrides Redis.setnx Set a ByteArray value if it doesn\u2019t already exist. fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.setnx Set a ByteArray value if it doesn\u2019t already exist with an expiration.","title":"setnx - Misk"},{"location":"0.x/misk-redis/misk.redis/-real-redis/setnx.html#setnx","text":"fun setnx(key: String , value: ByteString): Unit Overrides Redis.setnx Set a ByteArray value if it doesn\u2019t already exist. fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Overrides Redis.setnx Set a ByteArray value if it doesn\u2019t already exist with an expiration.","title":"setnx"},{"location":"0.x/misk-redis/misk.redis/-redis/index.html","text":"misk-redis / misk.redis / Redis Redis \u00b6 interface Redis A Redis client. Functions \u00b6 Name Summary del abstract fun del(key: String ): Boolean Deletes a single key. abstract fun del(vararg keys: String ): Int Deletes multiple keys. get abstract operator fun get(key: String ): ByteString? Retrieves the value for the given key as a ByteString . hget abstract fun hget(key: String , field: String ): ByteString? Retrieves the value for the given key and field as a ByteString . hgetAll abstract fun hgetAll(key: String ): Map < String , ByteString>? Retrieves all the fields and associated values for the given key. Returns null if nothing found. hset abstract fun hset(key: String , field: String , value: ByteString): Unit Sets the ByteString value for the given key and field mget abstract fun mget(vararg keys: String ): List <ByteString?> Retrieves the values for the given list of keys. mset abstract fun mset(vararg keyValues: ByteString): Unit Sets the key value pairs. set abstract operator fun set(key: String , value: ByteString): Unit Sets the ByteString value for the given key. abstract operator fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for a key with an expiration date. setnx abstract fun setnx(key: String , value: ByteString): Unit abstract fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist. Inheritors \u00b6 Name Summary FakeRedis class FakeRedis : Redis Mimics a Redis instance for testing. RealRedis class RealRedis : Redis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued.","title":"Redis - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/index.html#redis","text":"interface Redis A Redis client.","title":"Redis"},{"location":"0.x/misk-redis/misk.redis/-redis/index.html#functions","text":"Name Summary del abstract fun del(key: String ): Boolean Deletes a single key. abstract fun del(vararg keys: String ): Int Deletes multiple keys. get abstract operator fun get(key: String ): ByteString? Retrieves the value for the given key as a ByteString . hget abstract fun hget(key: String , field: String ): ByteString? Retrieves the value for the given key and field as a ByteString . hgetAll abstract fun hgetAll(key: String ): Map < String , ByteString>? Retrieves all the fields and associated values for the given key. Returns null if nothing found. hset abstract fun hset(key: String , field: String , value: ByteString): Unit Sets the ByteString value for the given key and field mget abstract fun mget(vararg keys: String ): List <ByteString?> Retrieves the values for the given list of keys. mset abstract fun mset(vararg keyValues: ByteString): Unit Sets the key value pairs. set abstract operator fun set(key: String , value: ByteString): Unit Sets the ByteString value for the given key. abstract operator fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for a key with an expiration date. setnx abstract fun setnx(key: String , value: ByteString): Unit abstract fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist.","title":"Functions"},{"location":"0.x/misk-redis/misk.redis/-redis/index.html#inheritors","text":"Name Summary FakeRedis class FakeRedis : Redis Mimics a Redis instance for testing. RealRedis class RealRedis : Redis For each command, a Jedis instance is retrieved from the pool and returned once the command has been issued.","title":"Inheritors"},{"location":"0.x/misk-redis/misk.redis/-redis/del.html","text":"misk-redis / misk.redis / Redis / del del \u00b6 abstract fun del(key: String ): Boolean Deletes a single key. Parameters \u00b6 key - the key to delete Return false if the key was not deleted, true if the key was deleted abstract fun del(vararg keys: String ): Int Deletes multiple keys. Parameters \u00b6 keys - the keys to delete Return 0 if none of the keys were deleted, otherwise a positive integer representing the number of keys that were deleted","title":"del - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/del.html#del","text":"abstract fun del(key: String ): Boolean Deletes a single key.","title":"del"},{"location":"0.x/misk-redis/misk.redis/-redis/del.html#parameters","text":"key - the key to delete Return false if the key was not deleted, true if the key was deleted abstract fun del(vararg keys: String ): Int Deletes multiple keys.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/del.html#parameters_1","text":"keys - the keys to delete Return 0 if none of the keys were deleted, otherwise a positive integer representing the number of keys that were deleted","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/get.html","text":"misk-redis / misk.redis / Redis / get get \u00b6 abstract operator fun get(key: String ): ByteString? Retrieves the value for the given key as a ByteString . Parameters \u00b6 key - the key to retrieve Return a ByteString if the key was found, null if the key was not found","title":"get - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/get.html#get","text":"abstract operator fun get(key: String ): ByteString? Retrieves the value for the given key as a ByteString .","title":"get"},{"location":"0.x/misk-redis/misk.redis/-redis/get.html#parameters","text":"key - the key to retrieve Return a ByteString if the key was found, null if the key was not found","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/hget-all.html","text":"misk-redis / misk.redis / Redis / hgetAll hgetAll \u00b6 abstract fun hgetAll(key: String ): Map < String , ByteString>? Retrieves all the fields and associated values for the given key. Returns null if nothing found. Parameters \u00b6 key - the key Return a Map<String, ByteString> of the fields to their associated values","title":"hgetAll - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/hget-all.html#hgetall","text":"abstract fun hgetAll(key: String ): Map < String , ByteString>? Retrieves all the fields and associated values for the given key. Returns null if nothing found.","title":"hgetAll"},{"location":"0.x/misk-redis/misk.redis/-redis/hget-all.html#parameters","text":"key - the key Return a Map<String, ByteString> of the fields to their associated values","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/hget.html","text":"misk-redis / misk.redis / Redis / hget hget \u00b6 abstract fun hget(key: String , field: String ): ByteString? Retrieves the value for the given key and field as a ByteString . Parameters \u00b6 key - the key field - the field Return a ByteString if the key/field combination was found, null if not found","title":"hget - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/hget.html#hget","text":"abstract fun hget(key: String , field: String ): ByteString? Retrieves the value for the given key and field as a ByteString .","title":"hget"},{"location":"0.x/misk-redis/misk.redis/-redis/hget.html#parameters","text":"key - the key field - the field Return a ByteString if the key/field combination was found, null if not found","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/hset.html","text":"misk-redis / misk.redis / Redis / hset hset \u00b6 abstract fun hset(key: String , field: String , value: ByteString): Unit Sets the ByteString value for the given key and field Parameters \u00b6 key - the key field - the field value - the value to set","title":"hset - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/hset.html#hset","text":"abstract fun hset(key: String , field: String , value: ByteString): Unit Sets the ByteString value for the given key and field","title":"hset"},{"location":"0.x/misk-redis/misk.redis/-redis/hset.html#parameters","text":"key - the key field - the field value - the value to set","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/mget.html","text":"misk-redis / misk.redis / Redis / mget mget \u00b6 abstract fun mget(vararg keys: String ): List <ByteString?> Retrieves the values for the given list of keys. Parameters \u00b6 keys - the keys to retrieve Return a list of String in the same order as the specified list of keys. For each key, a value will be returned if a key was found, otherwise null is returned.","title":"mget - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/mget.html#mget","text":"abstract fun mget(vararg keys: String ): List <ByteString?> Retrieves the values for the given list of keys.","title":"mget"},{"location":"0.x/misk-redis/misk.redis/-redis/mget.html#parameters","text":"keys - the keys to retrieve Return a list of String in the same order as the specified list of keys. For each key, a value will be returned if a key was found, otherwise null is returned.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/mset.html","text":"misk-redis / misk.redis / Redis / mset mset \u00b6 abstract fun mset(vararg keyValues: ByteString): Unit Sets the key value pairs. Parameters \u00b6 keyValues - the list of keys and values in alternating order.","title":"mset - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/mset.html#mset","text":"abstract fun mset(vararg keyValues: ByteString): Unit Sets the key value pairs.","title":"mset"},{"location":"0.x/misk-redis/misk.redis/-redis/mset.html#parameters","text":"keyValues - the list of keys and values in alternating order.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/set.html","text":"misk-redis / misk.redis / Redis / set set \u00b6 abstract operator fun set(key: String , value: ByteString): Unit Sets the ByteString value for the given key. Parameters \u00b6 key - the key to set value - the value to set abstract operator fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for a key with an expiration date. Parameters \u00b6 key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"set - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/set.html#set","text":"abstract operator fun set(key: String , value: ByteString): Unit Sets the ByteString value for the given key.","title":"set"},{"location":"0.x/misk-redis/misk.redis/-redis/set.html#parameters","text":"key - the key to set value - the value to set abstract operator fun set(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for a key with an expiration date.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/set.html#parameters_1","text":"key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/setnx.html","text":"misk-redis / misk.redis / Redis / setnx setnx \u00b6 abstract fun setnx(key: String , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist. Parameters \u00b6 key - the key to set value - the value to set abstract fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist. Parameters \u00b6 key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"setnx - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis/setnx.html#setnx","text":"abstract fun setnx(key: String , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist.","title":"setnx"},{"location":"0.x/misk-redis/misk.redis/-redis/setnx.html#parameters","text":"key - the key to set value - the value to set abstract fun setnx(key: String , expiryDuration: Duration , value: ByteString): Unit Sets the ByteString value for the given key if it does not already exist.","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis/setnx.html#parameters_1","text":"key - the key to set expiryDuration - the amount of time before the key expires value - the value to set","title":"Parameters"},{"location":"0.x/misk-redis/misk.redis/-redis-config/index.html","text":"misk-redis / misk.redis / RedisConfig RedisConfig \u00b6 class RedisConfig : LinkedHashMap < String , RedisReplicationGroupConfig >, Config Constructors \u00b6 Name Summary <init> RedisConfig() RedisConfig(m: Map < String , RedisReplicationGroupConfig >)","title":"RedisConfig - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-config/index.html#redisconfig","text":"class RedisConfig : LinkedHashMap < String , RedisReplicationGroupConfig >, Config","title":"RedisConfig"},{"location":"0.x/misk-redis/misk.redis/-redis-config/index.html#constructors","text":"Name Summary <init> RedisConfig() RedisConfig(m: Map < String , RedisReplicationGroupConfig >)","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-redis-config/-init-.html","text":"misk-redis / misk.redis / RedisConfig / <init> <init> \u00b6 RedisConfig() RedisConfig(m: Map < String , RedisReplicationGroupConfig >)","title":" init "},{"location":"0.x/misk-redis/misk.redis/-redis-config/-init-.html#init","text":"RedisConfig() RedisConfig(m: Map < String , RedisReplicationGroupConfig >)","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-redis-connection-exception/index.html","text":"misk-redis / misk.redis / RedisConnectionException RedisConnectionException \u00b6 class RedisConnectionException : RuntimeException Constructors \u00b6 Name Summary <init> RedisConnectionException(cluster: String , cause: Throwable )","title":"RedisConnectionException - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-connection-exception/index.html#redisconnectionexception","text":"class RedisConnectionException : RuntimeException","title":"RedisConnectionException"},{"location":"0.x/misk-redis/misk.redis/-redis-connection-exception/index.html#constructors","text":"Name Summary <init> RedisConnectionException(cluster: String , cause: Throwable )","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-redis-connection-exception/-init-.html","text":"misk-redis / misk.redis / RedisConnectionException / <init> <init> \u00b6 RedisConnectionException(cluster: String , cause: Throwable )","title":" init "},{"location":"0.x/misk-redis/misk.redis/-redis-connection-exception/-init-.html#init","text":"RedisConnectionException(cluster: String , cause: Throwable )","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-redis-module/index.html","text":"misk-redis / misk.redis / RedisModule RedisModule \u00b6 class RedisModule : KAbstractModule Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment Constructors \u00b6 Name Summary <init> RedisModule(redisConfig: RedisConfig , jedisPoolConfig: JedisPoolConfig) Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment Functions \u00b6 Name Summary configure fun configure(): Unit","title":"RedisModule - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-module/index.html#redismodule","text":"class RedisModule : KAbstractModule Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment","title":"RedisModule"},{"location":"0.x/misk-redis/misk.redis/-redis-module/index.html#constructors","text":"Name Summary <init> RedisModule(redisConfig: RedisConfig , jedisPoolConfig: JedisPoolConfig) Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-redis-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-redis/misk.redis/-redis-module/-init-.html","text":"misk-redis / misk.redis / RedisModule / <init> <init> \u00b6 RedisModule(redisConfig: RedisConfig , jedisPoolConfig: JedisPoolConfig) Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment","title":" init "},{"location":"0.x/misk-redis/misk.redis/-redis-module/-init-.html#init","text":"RedisModule(redisConfig: RedisConfig , jedisPoolConfig: JedisPoolConfig) Configures a JedisPool to connect to a Redis instance. The use of a JedisPool ensures thread safety. See: https://github.com/xetorthio/jedis/wiki/Getting-started#using-jedis-in-a-multithreaded-environment","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-redis-module/configure.html","text":"misk-redis / misk.redis / RedisModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/index.html","text":"misk-redis / misk.redis / RedisNodeConfig RedisNodeConfig \u00b6 data class RedisNodeConfig Constructors \u00b6 Name Summary <init> RedisNodeConfig(hostname: String , port: Int ) Properties \u00b6 Name Summary hostname val hostname: String port val port: Int","title":"RedisNodeConfig - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/index.html#redisnodeconfig","text":"data class RedisNodeConfig","title":"RedisNodeConfig"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/index.html#constructors","text":"Name Summary <init> RedisNodeConfig(hostname: String , port: Int )","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/index.html#properties","text":"Name Summary hostname val hostname: String port val port: Int","title":"Properties"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/-init-.html","text":"misk-redis / misk.redis / RedisNodeConfig / <init> <init> \u00b6 RedisNodeConfig(hostname: String , port: Int )","title":" init "},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/-init-.html#init","text":"RedisNodeConfig(hostname: String , port: Int )","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/hostname.html","text":"misk-redis / misk.redis / RedisNodeConfig / hostname hostname \u00b6 val hostname: String","title":"hostname - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/hostname.html#hostname","text":"val hostname: String","title":"hostname"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/port.html","text":"misk-redis / misk.redis / RedisNodeConfig / port port \u00b6 val port: Int","title":"port - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-node-config/port.html#port","text":"val port: Int","title":"port"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/index.html","text":"misk-redis / misk.redis / RedisReplicationGroupConfig RedisReplicationGroupConfig \u00b6 data class RedisReplicationGroupConfig Constructors \u00b6 Name Summary <init> RedisReplicationGroupConfig(writer_endpoint: RedisNodeConfig , reader_endpoint: RedisNodeConfig , redis_auth_password: String ) Properties \u00b6 Name Summary reader_endpoint val reader_endpoint: RedisNodeConfig redis_auth_password val redis_auth_password: String writer_endpoint val writer_endpoint: RedisNodeConfig","title":"RedisReplicationGroupConfig - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/index.html#redisreplicationgroupconfig","text":"data class RedisReplicationGroupConfig","title":"RedisReplicationGroupConfig"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/index.html#constructors","text":"Name Summary <init> RedisReplicationGroupConfig(writer_endpoint: RedisNodeConfig , reader_endpoint: RedisNodeConfig , redis_auth_password: String )","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/index.html#properties","text":"Name Summary reader_endpoint val reader_endpoint: RedisNodeConfig redis_auth_password val redis_auth_password: String writer_endpoint val writer_endpoint: RedisNodeConfig","title":"Properties"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/-init-.html","text":"misk-redis / misk.redis / RedisReplicationGroupConfig / <init> <init> \u00b6 RedisReplicationGroupConfig(writer_endpoint: RedisNodeConfig , reader_endpoint: RedisNodeConfig , redis_auth_password: String )","title":" init "},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/-init-.html#init","text":"RedisReplicationGroupConfig(writer_endpoint: RedisNodeConfig , reader_endpoint: RedisNodeConfig , redis_auth_password: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/reader_endpoint.html","text":"misk-redis / misk.redis / RedisReplicationGroupConfig / reader_endpoint reader_endpoint \u00b6 val reader_endpoint: RedisNodeConfig","title":"reader_endpoint - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/reader_endpoint.html#reader_endpoint","text":"val reader_endpoint: RedisNodeConfig","title":"reader_endpoint"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/redis_auth_password.html","text":"misk-redis / misk.redis / RedisReplicationGroupConfig / redis_auth_password redis_auth_password \u00b6 val redis_auth_password: String","title":"redis_auth_password - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/redis_auth_password.html#redis_auth_password","text":"val redis_auth_password: String","title":"redis_auth_password"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/writer_endpoint.html","text":"misk-redis / misk.redis / RedisReplicationGroupConfig / writer_endpoint writer_endpoint \u00b6 val writer_endpoint: RedisNodeConfig","title":"writer_endpoint - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-replication-group-config/writer_endpoint.html#writer_endpoint","text":"val writer_endpoint: RedisNodeConfig","title":"writer_endpoint"},{"location":"0.x/misk-redis/misk.redis/-redis-service/index.html","text":"misk-redis / misk.redis / RedisService RedisService \u00b6 @Singleton class RedisService : AbstractIdleService Controls the connection lifecycle for Redis. Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"RedisService - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-service/index.html#redisservice","text":"@Singleton class RedisService : AbstractIdleService Controls the connection lifecycle for Redis.","title":"RedisService"},{"location":"0.x/misk-redis/misk.redis/-redis-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-redis/misk.redis/-redis-service/shut-down.html","text":"misk-redis / misk.redis / RedisService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-redis/misk.redis/-redis-service/start-up.html","text":"misk-redis / misk.redis / RedisService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/index.html","text":"misk-redis / misk.redis / RedisTestModule RedisTestModule \u00b6 class RedisTestModule : KAbstractModule Constructors \u00b6 Name Summary <init> RedisTestModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"RedisTestModule - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/index.html#redistestmodule","text":"class RedisTestModule : KAbstractModule","title":"RedisTestModule"},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/index.html#constructors","text":"Name Summary <init> RedisTestModule()","title":"Constructors"},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/-init-.html","text":"misk-redis / misk.redis / RedisTestModule / <init> <init> \u00b6 RedisTestModule()","title":" init "},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/-init-.html#init","text":"RedisTestModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/configure.html","text":"misk-redis / misk.redis / RedisTestModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-redis/misk.redis/-redis-test-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-service/index.html","text":"misk-service Packages \u00b6 Name Summary misk Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-service/index.html#packages","text":"Name Summary misk","title":"Packages"},{"location":"0.x/misk-service/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-service/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.DelegatingService Interface to retrieve the underlying Service of a wrapper Service misk.ServiceManagerModule misk.ServiceModule Misk Services \u00b6 |","title":"All Types - Misk"},{"location":"0.x/misk-service/alltypes/index.html#all-types","text":"Name Summary misk.DelegatingService Interface to retrieve the underlying Service of a wrapper Service misk.ServiceManagerModule misk.ServiceModule","title":"All Types"},{"location":"0.x/misk-service/alltypes/index.html#misk-services","text":"|","title":"Misk Services"},{"location":"0.x/misk-service/misk/index.html","text":"misk-service / misk Package misk \u00b6 Types \u00b6 Name Summary DelegatingService interface DelegatingService : Service Interface to retrieve the underlying Service of a wrapper Service ServiceManagerModule class ServiceManagerModule : KAbstractModule ServiceModule class ServiceModule : KAbstractModule Misk Services \u00b6 | Functions \u00b6 Name Summary ServiceModule fun <T : Service> ServiceModule(qualifier: KClass <out Annotation >? = null): ServiceModule Returns a ServiceModule and hooks up service dependencies and enhancements.","title":"Package misk - Misk"},{"location":"0.x/misk-service/misk/index.html#package-misk","text":"","title":"Package misk"},{"location":"0.x/misk-service/misk/index.html#types","text":"Name Summary DelegatingService interface DelegatingService : Service Interface to retrieve the underlying Service of a wrapper Service ServiceManagerModule class ServiceManagerModule : KAbstractModule ServiceModule class ServiceModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-service/misk/index.html#misk-services","text":"|","title":"Misk Services"},{"location":"0.x/misk-service/misk/index.html#functions","text":"Name Summary ServiceModule fun <T : Service> ServiceModule(qualifier: KClass <out Annotation >? = null): ServiceModule Returns a ServiceModule and hooks up service dependencies and enhancements.","title":"Functions"},{"location":"0.x/misk-service/misk/-service-module.html","text":"misk-service / misk / ServiceModule ServiceModule \u00b6 inline fun <reified T : Service> ServiceModule(qualifier: KClass <out Annotation >? = null): ServiceModule Returns a ServiceModule and hooks up service dependencies and enhancements. Here\u2019s how: Guice.createInjector(object : KAbstractModule() { override fun configure() { install(ServiceModule<MyService>() .dependsOn<MyServiceDependency>()) install(ServiceModule<MyServiceDependency>()) } } Dependencies and services may be optionally annotated: Guice.createInjector(object : KAbstractModule() { override fun configure() { install(ServiceModule<MyService>(MyAnnotation::class) .dependsOn<MyServiceDependency>(AnotherAnnotation::class)) install(ServiceModule<MyServiceDependency>(AnotherAnnotation::class)) } }","title":"ServiceModule - Misk"},{"location":"0.x/misk-service/misk/-service-module.html#servicemodule","text":"inline fun <reified T : Service> ServiceModule(qualifier: KClass <out Annotation >? = null): ServiceModule Returns a ServiceModule and hooks up service dependencies and enhancements. Here\u2019s how: Guice.createInjector(object : KAbstractModule() { override fun configure() { install(ServiceModule<MyService>() .dependsOn<MyServiceDependency>()) install(ServiceModule<MyServiceDependency>()) } } Dependencies and services may be optionally annotated: Guice.createInjector(object : KAbstractModule() { override fun configure() { install(ServiceModule<MyService>(MyAnnotation::class) .dependsOn<MyServiceDependency>(AnotherAnnotation::class)) install(ServiceModule<MyServiceDependency>(AnotherAnnotation::class)) } }","title":"ServiceModule"},{"location":"0.x/misk-service/misk/-delegating-service/index.html","text":"misk-service / misk / DelegatingService DelegatingService \u00b6 interface DelegatingService : Service Interface to retrieve the underlying Service of a wrapper Service Properties \u00b6 Name Summary service abstract val service: Service","title":"DelegatingService - Misk"},{"location":"0.x/misk-service/misk/-delegating-service/index.html#delegatingservice","text":"interface DelegatingService : Service Interface to retrieve the underlying Service of a wrapper Service","title":"DelegatingService"},{"location":"0.x/misk-service/misk/-delegating-service/index.html#properties","text":"Name Summary service abstract val service: Service","title":"Properties"},{"location":"0.x/misk-service/misk/-delegating-service/service.html","text":"misk-service / misk / DelegatingService / service service \u00b6 abstract val service: Service","title":"service - Misk"},{"location":"0.x/misk-service/misk/-delegating-service/service.html#service","text":"abstract val service: Service","title":"service"},{"location":"0.x/misk-service/misk/-service-manager-module/index.html","text":"misk-service / misk / ServiceManagerModule ServiceManagerModule \u00b6 class ServiceManagerModule : KAbstractModule Constructors \u00b6 Name Summary <init> ServiceManagerModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"ServiceManagerModule - Misk"},{"location":"0.x/misk-service/misk/-service-manager-module/index.html#servicemanagermodule","text":"class ServiceManagerModule : KAbstractModule","title":"ServiceManagerModule"},{"location":"0.x/misk-service/misk/-service-manager-module/index.html#constructors","text":"Name Summary <init> ServiceManagerModule()","title":"Constructors"},{"location":"0.x/misk-service/misk/-service-manager-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-service/misk/-service-manager-module/-init-.html","text":"misk-service / misk / ServiceManagerModule / <init> <init> \u00b6 ServiceManagerModule()","title":" init "},{"location":"0.x/misk-service/misk/-service-manager-module/-init-.html#init","text":"ServiceManagerModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-service/misk/-service-manager-module/configure.html","text":"misk-service / misk / ServiceManagerModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-service/misk/-service-manager-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-service/misk/-service-module/index.html","text":"misk-service / misk / ServiceModule ServiceModule \u00b6 class ServiceModule : KAbstractModule Misk Services \u00b6 Services in Misk can depend on other services. Dependencies \u00b6 Suppose we have a DatabaseService and a MovieService , with the MovieService depending on the DatabaseService . DatabaseService depended on by MovieService When you install a service via this module, start-up and shut-down of its dependencies are handled automatically, so that a service can only run when the services it depends on are running. In the example above, the MovieService doesn\u2019t enter the STARTING state until the DatabaseService has entered the RUNNING state. Conversely, the MovieService must enter the TERMINATED state before the DatabaseService enters the STOPPING state. Dependencies can have their own dependencies, so there\u2019s an entire graph to manage of what starts and stops when. Enhancements \u00b6 Some services exist to enhance the behavior of another service. For example, a DatabaseService may manage a generic connection to a MySQL database, and the SchemaMigrationService may create tables specific to the application. We treat such enhancements as implementation details of the enhanced service: they depend on the service, but downstream dependencies like the MovieService don\u2019t need to know that they exist. DatabaseService enhanced by SchemaMigrationService depended on by MovieService In the above service graph we start the DatabaseService first, the SchemaMigrationService second, and finally the MovieService . The MovieService doesn\u2019t need to express a dependency on the SchemaMigrationService , that happens automatically for enhancements. What does this look like? \u00b6 Instead of using the regular service multi-bindings you might be used to, in the configure block of a Guice KAbstractModule , you would set up the above relationship as follows: override fun configure() { install(ServiceModule<SchemaMigrationService()) install(ServiceModule<DatabaseService>() .enhancedBy<SchemaMigrationService>()) install(ServiceModule<MoviesService>() .dependsOn<DatabaseService>()) } How does this work? \u00b6 Bindings are hooked up for a ServiceManager provider, which decorates the service with its dependencies and enhancements to defer its start up and shut down until its dependent services are ready. This service will stall in the STARTING state until all upstream services are RUNNING . Symmetrically it stalls in the STOPPING state until all dependent services are TERMINATED . Constructors \u00b6 Name Summary <init> ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf())``ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf(), enhances: Key<out Service>? = null) Misk Services \u00b6 | Properties \u00b6 Name Summary dependsOn val dependsOn: List <Key<out Service>> enhancedBy val enhancedBy: List <Key<out Service>> enhances val enhances: Key<out Service>? key val key: Key<out Service> Functions \u00b6 Name Summary configure fun configure(): Unit dependsOn fun dependsOn(upstream: Key<out Service>): ServiceModule fun <T : Service> dependsOn(qualifier: KClass <out Annotation >? = null): ServiceModule enhancedBy fun enhancedBy(enhancement: Key<out Service>): ServiceModule fun <T : Service> enhancedBy(qualifier: KClass <out Annotation >? = null): ServiceModule enhances fun enhances(toBeEnhanced: Key<out Service>): ServiceModule fun <T : Service> enhances(qualifier: KClass <out Annotation >? = null): ServiceModule","title":"ServiceModule - Misk"},{"location":"0.x/misk-service/misk/-service-module/index.html#servicemodule","text":"class ServiceModule : KAbstractModule","title":"ServiceModule"},{"location":"0.x/misk-service/misk/-service-module/index.html#misk-services","text":"Services in Misk can depend on other services.","title":"Misk Services"},{"location":"0.x/misk-service/misk/-service-module/index.html#dependencies","text":"Suppose we have a DatabaseService and a MovieService , with the MovieService depending on the DatabaseService . DatabaseService depended on by MovieService When you install a service via this module, start-up and shut-down of its dependencies are handled automatically, so that a service can only run when the services it depends on are running. In the example above, the MovieService doesn\u2019t enter the STARTING state until the DatabaseService has entered the RUNNING state. Conversely, the MovieService must enter the TERMINATED state before the DatabaseService enters the STOPPING state. Dependencies can have their own dependencies, so there\u2019s an entire graph to manage of what starts and stops when.","title":"Dependencies"},{"location":"0.x/misk-service/misk/-service-module/index.html#enhancements","text":"Some services exist to enhance the behavior of another service. For example, a DatabaseService may manage a generic connection to a MySQL database, and the SchemaMigrationService may create tables specific to the application. We treat such enhancements as implementation details of the enhanced service: they depend on the service, but downstream dependencies like the MovieService don\u2019t need to know that they exist. DatabaseService enhanced by SchemaMigrationService depended on by MovieService In the above service graph we start the DatabaseService first, the SchemaMigrationService second, and finally the MovieService . The MovieService doesn\u2019t need to express a dependency on the SchemaMigrationService , that happens automatically for enhancements.","title":"Enhancements"},{"location":"0.x/misk-service/misk/-service-module/index.html#what-does-this-look-like","text":"Instead of using the regular service multi-bindings you might be used to, in the configure block of a Guice KAbstractModule , you would set up the above relationship as follows: override fun configure() { install(ServiceModule<SchemaMigrationService()) install(ServiceModule<DatabaseService>() .enhancedBy<SchemaMigrationService>()) install(ServiceModule<MoviesService>() .dependsOn<DatabaseService>()) }","title":"What does this look like?"},{"location":"0.x/misk-service/misk/-service-module/index.html#how-does-this-work","text":"Bindings are hooked up for a ServiceManager provider, which decorates the service with its dependencies and enhancements to defer its start up and shut down until its dependent services are ready. This service will stall in the STARTING state until all upstream services are RUNNING . Symmetrically it stalls in the STOPPING state until all dependent services are TERMINATED .","title":"How does this work?"},{"location":"0.x/misk-service/misk/-service-module/index.html#constructors","text":"Name Summary <init> ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf())``ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf(), enhances: Key<out Service>? = null)","title":"Constructors"},{"location":"0.x/misk-service/misk/-service-module/index.html#misk-services_1","text":"|","title":"Misk Services"},{"location":"0.x/misk-service/misk/-service-module/index.html#properties","text":"Name Summary dependsOn val dependsOn: List <Key<out Service>> enhancedBy val enhancedBy: List <Key<out Service>> enhances val enhances: Key<out Service>? key val key: Key<out Service>","title":"Properties"},{"location":"0.x/misk-service/misk/-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit dependsOn fun dependsOn(upstream: Key<out Service>): ServiceModule fun <T : Service> dependsOn(qualifier: KClass <out Annotation >? = null): ServiceModule enhancedBy fun enhancedBy(enhancement: Key<out Service>): ServiceModule fun <T : Service> enhancedBy(qualifier: KClass <out Annotation >? = null): ServiceModule enhances fun enhances(toBeEnhanced: Key<out Service>): ServiceModule fun <T : Service> enhances(qualifier: KClass <out Annotation >? = null): ServiceModule","title":"Functions"},{"location":"0.x/misk-service/misk/-service-module/-init-.html","text":"misk-service / misk / ServiceModule / <init> <init> \u00b6 ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf())``ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf(), enhances: Key<out Service>? = null) Misk Services \u00b6 Services in Misk can depend on other services. Dependencies \u00b6 Suppose we have a DatabaseService and a MovieService , with the MovieService depending on the DatabaseService . DatabaseService depended on by MovieService When you install a service via this module, start-up and shut-down of its dependencies are handled automatically, so that a service can only run when the services it depends on are running. In the example above, the MovieService doesn\u2019t enter the STARTING state until the DatabaseService has entered the RUNNING state. Conversely, the MovieService must enter the TERMINATED state before the DatabaseService enters the STOPPING state. Dependencies can have their own dependencies, so there\u2019s an entire graph to manage of what starts and stops when. Enhancements \u00b6 Some services exist to enhance the behavior of another service. For example, a DatabaseService may manage a generic connection to a MySQL database, and the SchemaMigrationService may create tables specific to the application. We treat such enhancements as implementation details of the enhanced service: they depend on the service, but downstream dependencies like the MovieService don\u2019t need to know that they exist. DatabaseService enhanced by SchemaMigrationService depended on by MovieService In the above service graph we start the DatabaseService first, the SchemaMigrationService second, and finally the MovieService . The MovieService doesn\u2019t need to express a dependency on the SchemaMigrationService , that happens automatically for enhancements. What does this look like? \u00b6 Instead of using the regular service multi-bindings you might be used to, in the configure block of a Guice KAbstractModule , you would set up the above relationship as follows: override fun configure() { install(ServiceModule<SchemaMigrationService()) install(ServiceModule<DatabaseService>() .enhancedBy<SchemaMigrationService>()) install(ServiceModule<MoviesService>() .dependsOn<DatabaseService>()) } How does this work? \u00b6 Bindings are hooked up for a ServiceManager provider, which decorates the service with its dependencies and enhancements to defer its start up and shut down until its dependent services are ready. This service will stall in the STARTING state until all upstream services are RUNNING . Symmetrically it stalls in the STOPPING state until all dependent services are TERMINATED .","title":" init "},{"location":"0.x/misk-service/misk/-service-module/-init-.html#init","text":"ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf())``ServiceModule(key: Key<out Service>, dependsOn: List <Key<out Service>> = listOf(), enhancedBy: List <Key<out Service>> = listOf(), enhances: Key<out Service>? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-service/misk/-service-module/-init-.html#misk-services","text":"Services in Misk can depend on other services.","title":"Misk Services"},{"location":"0.x/misk-service/misk/-service-module/-init-.html#dependencies","text":"Suppose we have a DatabaseService and a MovieService , with the MovieService depending on the DatabaseService . DatabaseService depended on by MovieService When you install a service via this module, start-up and shut-down of its dependencies are handled automatically, so that a service can only run when the services it depends on are running. In the example above, the MovieService doesn\u2019t enter the STARTING state until the DatabaseService has entered the RUNNING state. Conversely, the MovieService must enter the TERMINATED state before the DatabaseService enters the STOPPING state. Dependencies can have their own dependencies, so there\u2019s an entire graph to manage of what starts and stops when.","title":"Dependencies"},{"location":"0.x/misk-service/misk/-service-module/-init-.html#enhancements","text":"Some services exist to enhance the behavior of another service. For example, a DatabaseService may manage a generic connection to a MySQL database, and the SchemaMigrationService may create tables specific to the application. We treat such enhancements as implementation details of the enhanced service: they depend on the service, but downstream dependencies like the MovieService don\u2019t need to know that they exist. DatabaseService enhanced by SchemaMigrationService depended on by MovieService In the above service graph we start the DatabaseService first, the SchemaMigrationService second, and finally the MovieService . The MovieService doesn\u2019t need to express a dependency on the SchemaMigrationService , that happens automatically for enhancements.","title":"Enhancements"},{"location":"0.x/misk-service/misk/-service-module/-init-.html#what-does-this-look-like","text":"Instead of using the regular service multi-bindings you might be used to, in the configure block of a Guice KAbstractModule , you would set up the above relationship as follows: override fun configure() { install(ServiceModule<SchemaMigrationService()) install(ServiceModule<DatabaseService>() .enhancedBy<SchemaMigrationService>()) install(ServiceModule<MoviesService>() .dependsOn<DatabaseService>()) }","title":"What does this look like?"},{"location":"0.x/misk-service/misk/-service-module/-init-.html#how-does-this-work","text":"Bindings are hooked up for a ServiceManager provider, which decorates the service with its dependencies and enhancements to defer its start up and shut down until its dependent services are ready. This service will stall in the STARTING state until all upstream services are RUNNING . Symmetrically it stalls in the STOPPING state until all dependent services are TERMINATED .","title":"How does this work?"},{"location":"0.x/misk-service/misk/-service-module/configure.html","text":"misk-service / misk / ServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-service/misk/-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-service/misk/-service-module/depends-on.html","text":"misk-service / misk / ServiceModule / dependsOn dependsOn \u00b6 fun dependsOn(upstream: Key<out Service>): ServiceModule inline fun <reified T : Service> dependsOn(qualifier: KClass <out Annotation >? = null): ServiceModule val dependsOn: List <Key<out Service>>","title":"dependsOn - Misk"},{"location":"0.x/misk-service/misk/-service-module/depends-on.html#dependson","text":"fun dependsOn(upstream: Key<out Service>): ServiceModule inline fun <reified T : Service> dependsOn(qualifier: KClass <out Annotation >? = null): ServiceModule val dependsOn: List <Key<out Service>>","title":"dependsOn"},{"location":"0.x/misk-service/misk/-service-module/enhanced-by.html","text":"misk-service / misk / ServiceModule / enhancedBy enhancedBy \u00b6 fun enhancedBy(enhancement: Key<out Service>): ServiceModule inline fun <reified T : Service> enhancedBy(qualifier: KClass <out Annotation >? = null): ServiceModule val enhancedBy: List <Key<out Service>>","title":"enhancedBy - Misk"},{"location":"0.x/misk-service/misk/-service-module/enhanced-by.html#enhancedby","text":"fun enhancedBy(enhancement: Key<out Service>): ServiceModule inline fun <reified T : Service> enhancedBy(qualifier: KClass <out Annotation >? = null): ServiceModule val enhancedBy: List <Key<out Service>>","title":"enhancedBy"},{"location":"0.x/misk-service/misk/-service-module/enhances.html","text":"misk-service / misk / ServiceModule / enhances enhances \u00b6 fun enhances(toBeEnhanced: Key<out Service>): ServiceModule inline fun <reified T : Service> enhances(qualifier: KClass <out Annotation >? = null): ServiceModule val enhances: Key<out Service>?","title":"enhances - Misk"},{"location":"0.x/misk-service/misk/-service-module/enhances.html#enhances","text":"fun enhances(toBeEnhanced: Key<out Service>): ServiceModule inline fun <reified T : Service> enhances(qualifier: KClass <out Annotation >? = null): ServiceModule val enhances: Key<out Service>?","title":"enhances"},{"location":"0.x/misk-service/misk/-service-module/key.html","text":"misk-service / misk / ServiceModule / key key \u00b6 val key: Key<out Service>","title":"key - Misk"},{"location":"0.x/misk-service/misk/-service-module/key.html#key","text":"val key: Key<out Service>","title":"key"},{"location":"0.x/misk-slack/index.html","text":"misk-slack Packages \u00b6 Name Summary misk.slack Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-slack/index.html#packages","text":"Name Summary misk.slack","title":"Packages"},{"location":"0.x/misk-slack/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-slack/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.slack.RealSlackClient misk.slack.SlackClient Dummy client that does nothing if SlackModule is not installed . misk.slack.SlackConfig misk.slack.SlackModule Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config. misk.slack.SlackWebhookApi misk.slack.SlackWebhookRequest misk.slack.SlackWebhookResponse","title":"All Types - Misk"},{"location":"0.x/misk-slack/alltypes/index.html#all-types","text":"Name Summary misk.slack.RealSlackClient misk.slack.SlackClient Dummy client that does nothing if SlackModule is not installed . misk.slack.SlackConfig misk.slack.SlackModule Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config. misk.slack.SlackWebhookApi misk.slack.SlackWebhookRequest misk.slack.SlackWebhookResponse","title":"All Types"},{"location":"0.x/misk-slack/misk.slack/index.html","text":"misk-slack / misk.slack Package misk.slack \u00b6 Types \u00b6 Name Summary RealSlackClient class RealSlackClient : SlackClient SlackClient open class SlackClient Dummy client that does nothing if SlackModule is not installed . SlackConfig data class SlackConfig SlackModule class SlackModule : KAbstractModule Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config. SlackWebhookApi interface SlackWebhookApi SlackWebhookRequest data class SlackWebhookRequest SlackWebhookResponse enum class SlackWebhookResponse","title":"Package misk.slack - Misk"},{"location":"0.x/misk-slack/misk.slack/index.html#package-miskslack","text":"","title":"Package misk.slack"},{"location":"0.x/misk-slack/misk.slack/index.html#types","text":"Name Summary RealSlackClient class RealSlackClient : SlackClient SlackClient open class SlackClient Dummy client that does nothing if SlackModule is not installed . SlackConfig data class SlackConfig SlackModule class SlackModule : KAbstractModule Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config. SlackWebhookApi interface SlackWebhookApi SlackWebhookRequest data class SlackWebhookRequest SlackWebhookResponse enum class SlackWebhookResponse","title":"Types"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/index.html","text":"misk-slack / misk.slack / RealSlackClient RealSlackClient \u00b6 class RealSlackClient : SlackClient Constructors \u00b6 Name Summary <init> RealSlackClient(slackWebHookApi: SlackWebhookApi , config: SlackConfig ) Functions \u00b6 Name Summary postMessage fun postMessage(username: String , iconEmoji: String , message: String , channel: String ?): SlackWebhookResponse ? Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. Does not throw on IO exceptions. Companion Object Properties \u00b6 Name Summary logger val logger: KLogger","title":"RealSlackClient - Misk"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/index.html#realslackclient","text":"class RealSlackClient : SlackClient","title":"RealSlackClient"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/index.html#constructors","text":"Name Summary <init> RealSlackClient(slackWebHookApi: SlackWebhookApi , config: SlackConfig )","title":"Constructors"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/index.html#functions","text":"Name Summary postMessage fun postMessage(username: String , iconEmoji: String , message: String , channel: String ?): SlackWebhookResponse ? Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. Does not throw on IO exceptions.","title":"Functions"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/index.html#companion-object-properties","text":"Name Summary logger val logger: KLogger","title":"Companion Object Properties"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/-init-.html","text":"misk-slack / misk.slack / RealSlackClient / <init> <init> \u00b6 RealSlackClient(slackWebHookApi: SlackWebhookApi , config: SlackConfig )","title":" init "},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/-init-.html#init","text":"RealSlackClient(slackWebHookApi: SlackWebhookApi , config: SlackConfig )","title":"&lt;init&gt;"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/logger.html","text":"misk-slack / misk.slack / RealSlackClient / logger logger \u00b6 val logger: KLogger","title":"logger - Misk"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/logger.html#logger","text":"val logger: KLogger","title":"logger"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/post-message.html","text":"misk-slack / misk.slack / RealSlackClient / postMessage postMessage \u00b6 fun postMessage(username: String , iconEmoji: String , message: String , channel: String ?): SlackWebhookResponse ? Overrides SlackClient.postMessage Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. Does not throw on IO exceptions.","title":"postMessage - Misk"},{"location":"0.x/misk-slack/misk.slack/-real-slack-client/post-message.html#postmessage","text":"fun postMessage(username: String , iconEmoji: String , message: String , channel: String ?): SlackWebhookResponse ? Overrides SlackClient.postMessage Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. Does not throw on IO exceptions.","title":"postMessage"},{"location":"0.x/misk-slack/misk.slack/-slack-client/index.html","text":"misk-slack / misk.slack / SlackClient SlackClient \u00b6 open class SlackClient Dummy client that does nothing if SlackModule is not installed . Constructors \u00b6 Name Summary <init> SlackClient() Dummy client that does nothing if SlackModule is not installed . Functions \u00b6 Name Summary postMessage open fun postMessage(username: String , iconEmoji: String , message: String , channel: String ? = null): SlackWebhookResponse ? Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. If the service has not configured a slack module, this method is a no-op. Does not throw on IO exceptions. Inheritors \u00b6 Name Summary RealSlackClient class RealSlackClient : SlackClient","title":"SlackClient - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-client/index.html#slackclient","text":"open class SlackClient Dummy client that does nothing if SlackModule is not installed .","title":"SlackClient"},{"location":"0.x/misk-slack/misk.slack/-slack-client/index.html#constructors","text":"Name Summary <init> SlackClient() Dummy client that does nothing if SlackModule is not installed .","title":"Constructors"},{"location":"0.x/misk-slack/misk.slack/-slack-client/index.html#functions","text":"Name Summary postMessage open fun postMessage(username: String , iconEmoji: String , message: String , channel: String ? = null): SlackWebhookResponse ? Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. If the service has not configured a slack module, this method is a no-op. Does not throw on IO exceptions.","title":"Functions"},{"location":"0.x/misk-slack/misk.slack/-slack-client/index.html#inheritors","text":"Name Summary RealSlackClient class RealSlackClient : SlackClient","title":"Inheritors"},{"location":"0.x/misk-slack/misk.slack/-slack-client/-init-.html","text":"misk-slack / misk.slack / SlackClient / <init> <init> \u00b6 SlackClient() Dummy client that does nothing if SlackModule is not installed .","title":" init "},{"location":"0.x/misk-slack/misk.slack/-slack-client/-init-.html#init","text":"SlackClient() Dummy client that does nothing if SlackModule is not installed .","title":"&lt;init&gt;"},{"location":"0.x/misk-slack/misk.slack/-slack-client/post-message.html","text":"misk-slack / misk.slack / SlackClient / postMessage postMessage \u00b6 open fun postMessage(username: String , iconEmoji: String , message: String , channel: String ? = null): SlackWebhookResponse ? Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. If the service has not configured a slack module, this method is a no-op. Does not throw on IO exceptions.","title":"postMessage - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-client/post-message.html#postmessage","text":"open fun postMessage(username: String , iconEmoji: String , message: String , channel: String ? = null): SlackWebhookResponse ? Post a message as the specified bot username and icon emoji in the channel. If no channel is provided, the default channel configured by the service is used. If the service has not configured a slack module, this method is a no-op. Does not throw on IO exceptions.","title":"postMessage"},{"location":"0.x/misk-slack/misk.slack/-slack-config/index.html","text":"misk-slack / misk.slack / SlackConfig SlackConfig \u00b6 data class SlackConfig Constructors \u00b6 Name Summary <init> SlackConfig(baseUrl: String = \"https://hooks.slack.com/\", webhook_path: Secret< String >, default_channel: String ?) Properties \u00b6 Name Summary baseUrl val baseUrl: String default_channel val default_channel: String ? The channel to post to if the caller doesn\u2019t specify one. A service that always posts to one channel should specify this, but a service that operates on other services can instead specify a channel for each message. webhook_path val webhook_path: Secret< String > The full webhook path, i.e. /services/\u2026 Ideally this is not stored plaintext in the config file, but in a secret.","title":"SlackConfig - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-config/index.html#slackconfig","text":"data class SlackConfig","title":"SlackConfig"},{"location":"0.x/misk-slack/misk.slack/-slack-config/index.html#constructors","text":"Name Summary <init> SlackConfig(baseUrl: String = \"https://hooks.slack.com/\", webhook_path: Secret< String >, default_channel: String ?)","title":"Constructors"},{"location":"0.x/misk-slack/misk.slack/-slack-config/index.html#properties","text":"Name Summary baseUrl val baseUrl: String default_channel val default_channel: String ? The channel to post to if the caller doesn\u2019t specify one. A service that always posts to one channel should specify this, but a service that operates on other services can instead specify a channel for each message. webhook_path val webhook_path: Secret< String > The full webhook path, i.e. /services/\u2026 Ideally this is not stored plaintext in the config file, but in a secret.","title":"Properties"},{"location":"0.x/misk-slack/misk.slack/-slack-config/-init-.html","text":"misk-slack / misk.slack / SlackConfig / <init> <init> \u00b6 SlackConfig(baseUrl: String = \"https://hooks.slack.com/\", webhook_path: Secret< String >, default_channel: String ?)","title":" init "},{"location":"0.x/misk-slack/misk.slack/-slack-config/-init-.html#init","text":"SlackConfig(baseUrl: String = \"https://hooks.slack.com/\", webhook_path: Secret< String >, default_channel: String ?)","title":"&lt;init&gt;"},{"location":"0.x/misk-slack/misk.slack/-slack-config/base-url.html","text":"misk-slack / misk.slack / SlackConfig / baseUrl baseUrl \u00b6 val baseUrl: String","title":"baseUrl - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-config/base-url.html#baseurl","text":"val baseUrl: String","title":"baseUrl"},{"location":"0.x/misk-slack/misk.slack/-slack-config/default_channel.html","text":"misk-slack / misk.slack / SlackConfig / default_channel default_channel \u00b6 val default_channel: String ? The channel to post to if the caller doesn\u2019t specify one. A service that always posts to one channel should specify this, but a service that operates on other services can instead specify a channel for each message.","title":"default_channel - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-config/default_channel.html#default_channel","text":"val default_channel: String ? The channel to post to if the caller doesn\u2019t specify one. A service that always posts to one channel should specify this, but a service that operates on other services can instead specify a channel for each message.","title":"default_channel"},{"location":"0.x/misk-slack/misk.slack/-slack-config/webhook_path.html","text":"misk-slack / misk.slack / SlackConfig / webhook_path webhook_path \u00b6 val webhook_path: Secret< String > The full webhook path, i.e. /services/\u2026 Ideally this is not stored plaintext in the config file, but in a secret.","title":"webhook_path - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-config/webhook_path.html#webhook_path","text":"val webhook_path: Secret< String > The full webhook path, i.e. /services/\u2026 Ideally this is not stored plaintext in the config file, but in a secret.","title":"webhook_path"},{"location":"0.x/misk-slack/misk.slack/-slack-module/index.html","text":"misk-slack / misk.slack / SlackModule SlackModule \u00b6 class SlackModule : KAbstractModule Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config. Constructors \u00b6 Name Summary <init> SlackModule(config: SlackConfig ) Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config. Functions \u00b6 Name Summary configure fun configure(): Unit provideMoshi fun provideMoshi(): Moshi provideSlackWebhookApi fun provideSlackWebhookApi(httpClientFactory: HttpClientFactory, moshi: Moshi): SlackWebhookApi","title":"SlackModule - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-module/index.html#slackmodule","text":"class SlackModule : KAbstractModule Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config.","title":"SlackModule"},{"location":"0.x/misk-slack/misk.slack/-slack-module/index.html#constructors","text":"Name Summary <init> SlackModule(config: SlackConfig ) Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config.","title":"Constructors"},{"location":"0.x/misk-slack/misk.slack/-slack-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideMoshi fun provideMoshi(): Moshi provideSlackWebhookApi fun provideSlackWebhookApi(httpClientFactory: HttpClientFactory, moshi: Moshi): SlackWebhookApi","title":"Functions"},{"location":"0.x/misk-slack/misk.slack/-slack-module/-init-.html","text":"misk-slack / misk.slack / SlackModule / <init> <init> \u00b6 SlackModule(config: SlackConfig ) Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config.","title":" init "},{"location":"0.x/misk-slack/misk.slack/-slack-module/-init-.html#init","text":"SlackModule(config: SlackConfig ) Installs the Slack webhook client. This should be installed once per service and enables imported libraries to post to Slack using the service level config.","title":"&lt;init&gt;"},{"location":"0.x/misk-slack/misk.slack/-slack-module/configure.html","text":"misk-slack / misk.slack / SlackModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-slack/misk.slack/-slack-module/provide-moshi.html","text":"misk-slack / misk.slack / SlackModule / provideMoshi provideMoshi \u00b6 @Provides @Singleton @Named(\"misk-slack\") fun provideMoshi(): Moshi","title":"provideMoshi - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-module/provide-moshi.html#providemoshi","text":"@Provides @Singleton @Named(\"misk-slack\") fun provideMoshi(): Moshi","title":"provideMoshi"},{"location":"0.x/misk-slack/misk.slack/-slack-module/provide-slack-webhook-api.html","text":"misk-slack / misk.slack / SlackModule / provideSlackWebhookApi provideSlackWebhookApi \u00b6 @Provides @Singleton fun provideSlackWebhookApi(httpClientFactory: HttpClientFactory, @Named(\"misk-slack\") moshi: Moshi): SlackWebhookApi","title":"provideSlackWebhookApi - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-module/provide-slack-webhook-api.html#provideslackwebhookapi","text":"@Provides @Singleton fun provideSlackWebhookApi(httpClientFactory: HttpClientFactory, @Named(\"misk-slack\") moshi: Moshi): SlackWebhookApi","title":"provideSlackWebhookApi"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-api/index.html","text":"misk-slack / misk.slack / SlackWebhookApi SlackWebhookApi \u00b6 interface SlackWebhookApi Functions \u00b6 Name Summary post abstract fun post(url: String , request: SlackWebhookRequest ): Call< Void >","title":"SlackWebhookApi - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-api/index.html#slackwebhookapi","text":"interface SlackWebhookApi","title":"SlackWebhookApi"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-api/index.html#functions","text":"Name Summary post abstract fun post(url: String , request: SlackWebhookRequest ): Call< Void >","title":"Functions"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-api/post.html","text":"misk-slack / misk.slack / SlackWebhookApi / post post \u00b6 @POST abstract fun post(@Url url: String , @Body request: SlackWebhookRequest ): Call< Void >","title":"post - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-api/post.html#post","text":"@POST abstract fun post(@Url url: String , @Body request: SlackWebhookRequest ): Call< Void >","title":"post"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/index.html","text":"misk-slack / misk.slack / SlackWebhookRequest SlackWebhookRequest \u00b6 @JsonClass(true) data class SlackWebhookRequest Constructors \u00b6 Name Summary <init> SlackWebhookRequest(channel: String , username: String , text: String , icon_emoji: String ) Properties \u00b6 Name Summary channel val channel: String icon_emoji val icon_emoji: String text val text: String username val username: String","title":"SlackWebhookRequest - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/index.html#slackwebhookrequest","text":"@JsonClass(true) data class SlackWebhookRequest","title":"SlackWebhookRequest"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/index.html#constructors","text":"Name Summary <init> SlackWebhookRequest(channel: String , username: String , text: String , icon_emoji: String )","title":"Constructors"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/index.html#properties","text":"Name Summary channel val channel: String icon_emoji val icon_emoji: String text val text: String username val username: String","title":"Properties"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/-init-.html","text":"misk-slack / misk.slack / SlackWebhookRequest / <init> <init> \u00b6 SlackWebhookRequest(channel: String , username: String , text: String , icon_emoji: String )","title":" init "},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/-init-.html#init","text":"SlackWebhookRequest(channel: String , username: String , text: String , icon_emoji: String )","title":"&lt;init&gt;"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/channel.html","text":"misk-slack / misk.slack / SlackWebhookRequest / channel channel \u00b6 val channel: String","title":"channel - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/channel.html#channel","text":"val channel: String","title":"channel"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/icon_emoji.html","text":"misk-slack / misk.slack / SlackWebhookRequest / icon_emoji icon_emoji \u00b6 val icon_emoji: String","title":"icon_emoji - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/icon_emoji.html#icon_emoji","text":"val icon_emoji: String","title":"icon_emoji"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/text.html","text":"misk-slack / misk.slack / SlackWebhookRequest / text text \u00b6 val text: String","title":"text - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/text.html#text","text":"val text: String","title":"text"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/username.html","text":"misk-slack / misk.slack / SlackWebhookRequest / username username \u00b6 val username: String","title":"username - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-request/username.html#username","text":"val username: String","title":"username"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/index.html","text":"misk-slack / misk.slack / SlackWebhookResponse SlackWebhookResponse \u00b6 @JsonClass(true) enum class SlackWebhookResponse Enum Values \u00b6 Name Summary ok invalid_payload user_not_found channel_not_found channel_is_archived action_prohibited missing_text_or_fallback_or_attachments","title":"SlackWebhookResponse - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/index.html#slackwebhookresponse","text":"@JsonClass(true) enum class SlackWebhookResponse","title":"SlackWebhookResponse"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/index.html#enum-values","text":"Name Summary ok invalid_payload user_not_found channel_not_found channel_is_archived action_prohibited missing_text_or_fallback_or_attachments","title":"Enum Values"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/action_prohibited.html","text":"misk-slack / misk.slack / SlackWebhookResponse / action_prohibited action_prohibited \u00b6 action_prohibited","title":"action_prohibited - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/action_prohibited.html#action_prohibited","text":"action_prohibited","title":"action_prohibited"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/channel_is_archived.html","text":"misk-slack / misk.slack / SlackWebhookResponse / channel_is_archived channel_is_archived \u00b6 channel_is_archived","title":"channel_is_archived - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/channel_is_archived.html#channel_is_archived","text":"channel_is_archived","title":"channel_is_archived"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/channel_not_found.html","text":"misk-slack / misk.slack / SlackWebhookResponse / channel_not_found channel_not_found \u00b6 channel_not_found","title":"channel_not_found - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/channel_not_found.html#channel_not_found","text":"channel_not_found","title":"channel_not_found"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/invalid_payload.html","text":"misk-slack / misk.slack / SlackWebhookResponse / invalid_payload invalid_payload \u00b6 invalid_payload","title":"invalid_payload - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/invalid_payload.html#invalid_payload","text":"invalid_payload","title":"invalid_payload"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/missing_text_or_fallback_or_attachments.html","text":"misk-slack / misk.slack / SlackWebhookResponse / missing_text_or_fallback_or_attachments missing_text_or_fallback_or_attachments \u00b6 missing_text_or_fallback_or_attachments","title":"missing_text_or_fallback_or_attachments - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/missing_text_or_fallback_or_attachments.html#missing_text_or_fallback_or_attachments","text":"missing_text_or_fallback_or_attachments","title":"missing_text_or_fallback_or_attachments"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/ok.html","text":"misk-slack / misk.slack / SlackWebhookResponse / ok ok \u00b6 ok","title":"ok - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/ok.html#ok","text":"ok","title":"ok"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/user_not_found.html","text":"misk-slack / misk.slack / SlackWebhookResponse / user_not_found user_not_found \u00b6 user_not_found","title":"user_not_found - Misk"},{"location":"0.x/misk-slack/misk.slack/-slack-webhook-response/user_not_found.html#user_not_found","text":"user_not_found","title":"user_not_found"},{"location":"0.x/misk-testing/index.html","text":"misk-testing Packages \u00b6 Name Summary misk misk.cloud.fake.security.keys misk.concurrent misk.containers misk.logging misk.mockito misk.random misk.service misk.services misk.testing misk.time misk.web org.assertj.core.api Index \u00b6 All Types","title":"misk-testing"},{"location":"0.x/misk-testing/index.html#packages","text":"Name Summary misk misk.cloud.fake.security.keys misk.concurrent misk.containers misk.logging misk.mockito misk.random misk.service misk.services misk.testing misk.time misk.web org.assertj.core.api","title":"Packages"},{"location":"0.x/misk-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.service.CachedTestService Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run. misk.containers.Composer Composer composes many Container s together to use in a unit test. misk.testing.ConcurrentMockTracer Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer . misk.containers.Container A Container creates a Docker container for testing. org.junit.jupiter.api.extension.ExtensionContext (extensions in package misk.testing) misk.testing.ExternalDependency An external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc. misk.time.FakeClock misk.time.FakeClockModule misk.web.FakeHttpCall misk.cloud.fake.security.keys.FakeKeyManagementModule misk.cloud.fake.security.keys.FakeKeyService misk.random.FakeRandom misk.random.FakeRandomModule misk.concurrent.FakeScheduledExecutorService ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. misk.services.FakeService misk.services.FakeServiceModule misk.concurrent.FakeSleeper Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread. misk.concurrent.FakeSleeperModule misk.random.FakeThreadLocalRandom misk.concurrent.FakeTicker misk.time.FakeTickerModule misk.web.FakeWebSocketListener misk.logging.LogCollectorModule misk.logging.LogCollectorService Marker interface for the service that produces a LogCollector . misk.testing.MiskExternalDependency misk.testing.MiskTest Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . misk.MiskTestingServiceModule MiskTestingServiceModule should be installed in unit testing environments. misk.testing.MiskTestModule misk.mockito.Mockito misk.testing.MockTracingBackendModule misk.testing.TemporaryFolder A temporary folder for use by a given test misk.testing.TemporaryFolderModule misk.web.WebServerTestingModule A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS. misk.web.WebTestClient Use WebTestClient to test calls to the application at the integration level.","title":"All Types - Misk"},{"location":"0.x/misk-testing/alltypes/index.html#all-types","text":"Name Summary misk.service.CachedTestService Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run. misk.containers.Composer Composer composes many Container s together to use in a unit test. misk.testing.ConcurrentMockTracer Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer . misk.containers.Container A Container creates a Docker container for testing. org.junit.jupiter.api.extension.ExtensionContext (extensions in package misk.testing) misk.testing.ExternalDependency An external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc. misk.time.FakeClock misk.time.FakeClockModule misk.web.FakeHttpCall misk.cloud.fake.security.keys.FakeKeyManagementModule misk.cloud.fake.security.keys.FakeKeyService misk.random.FakeRandom misk.random.FakeRandomModule misk.concurrent.FakeScheduledExecutorService ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. misk.services.FakeService misk.services.FakeServiceModule misk.concurrent.FakeSleeper Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread. misk.concurrent.FakeSleeperModule misk.random.FakeThreadLocalRandom misk.concurrent.FakeTicker misk.time.FakeTickerModule misk.web.FakeWebSocketListener misk.logging.LogCollectorModule misk.logging.LogCollectorService Marker interface for the service that produces a LogCollector . misk.testing.MiskExternalDependency misk.testing.MiskTest Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . misk.MiskTestingServiceModule MiskTestingServiceModule should be installed in unit testing environments. misk.testing.MiskTestModule misk.mockito.Mockito misk.testing.MockTracingBackendModule misk.testing.TemporaryFolder A temporary folder for use by a given test misk.testing.TemporaryFolderModule misk.web.WebServerTestingModule A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS. misk.web.WebTestClient Use WebTestClient to test calls to the application at the integration level.","title":"All Types"},{"location":"0.x/misk-testing/misk/index.html","text":"misk-testing / misk Package misk \u00b6 Types \u00b6 Name Summary MiskTestingServiceModule class MiskTestingServiceModule : KAbstractModule MiskTestingServiceModule should be installed in unit testing environments.","title":"Package misk - Misk"},{"location":"0.x/misk-testing/misk/index.html#package-misk","text":"","title":"Package misk"},{"location":"0.x/misk-testing/misk/index.html#types","text":"Name Summary MiskTestingServiceModule class MiskTestingServiceModule : KAbstractModule MiskTestingServiceModule should be installed in unit testing environments.","title":"Types"},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/index.html","text":"misk-testing / misk / MiskTestingServiceModule MiskTestingServiceModule \u00b6 class MiskTestingServiceModule : KAbstractModule MiskTestingServiceModule should be installed in unit testing environments. This should not contain application level fakes for testing. It includes a small, selective set of fake bindings to replace real bindings that cannot exist in a unit testing environment (e.g system env vars and filesystem dependencies). Constructors \u00b6 Name Summary <init> MiskTestingServiceModule() MiskTestingServiceModule should be installed in unit testing environments. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"MiskTestingServiceModule - Misk"},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/index.html#misktestingservicemodule","text":"class MiskTestingServiceModule : KAbstractModule MiskTestingServiceModule should be installed in unit testing environments. This should not contain application level fakes for testing. It includes a small, selective set of fake bindings to replace real bindings that cannot exist in a unit testing environment (e.g system env vars and filesystem dependencies).","title":"MiskTestingServiceModule"},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/index.html#constructors","text":"Name Summary <init> MiskTestingServiceModule() MiskTestingServiceModule should be installed in unit testing environments.","title":"Constructors"},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/-init-.html","text":"misk-testing / misk / MiskTestingServiceModule / <init> <init> \u00b6 MiskTestingServiceModule() MiskTestingServiceModule should be installed in unit testing environments. This should not contain application level fakes for testing. It includes a small, selective set of fake bindings to replace real bindings that cannot exist in a unit testing environment (e.g system env vars and filesystem dependencies).","title":" init "},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/-init-.html#init","text":"MiskTestingServiceModule() MiskTestingServiceModule should be installed in unit testing environments. This should not contain application level fakes for testing. It includes a small, selective set of fake bindings to replace real bindings that cannot exist in a unit testing environment (e.g system env vars and filesystem dependencies).","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/configure.html","text":"misk-testing / misk / MiskTestingServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk/-misk-testing-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/index.html","text":"misk-testing / misk.cloud.fake.security.keys Package misk.cloud.fake.security.keys \u00b6 Types \u00b6 Name Summary FakeKeyManagementModule class FakeKeyManagementModule : KAbstractModule FakeKeyService class FakeKeyService : KeyService","title":"Package misk.cloud.fake.security.keys - Misk"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/index.html#package-miskcloudfakesecuritykeys","text":"","title":"Package misk.cloud.fake.security.keys"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/index.html#types","text":"Name Summary FakeKeyManagementModule class FakeKeyManagementModule : KAbstractModule FakeKeyService class FakeKeyService : KeyService","title":"Types"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/index.html","text":"misk-testing / misk.cloud.fake.security.keys / FakeKeyManagementModule FakeKeyManagementModule \u00b6 class FakeKeyManagementModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeKeyManagementModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeKeyManagementModule - Misk"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/index.html#fakekeymanagementmodule","text":"class FakeKeyManagementModule : KAbstractModule","title":"FakeKeyManagementModule"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/index.html#constructors","text":"Name Summary <init> FakeKeyManagementModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/-init-.html","text":"misk-testing / misk.cloud.fake.security.keys / FakeKeyManagementModule / <init> <init> \u00b6 FakeKeyManagementModule()","title":" init "},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/-init-.html#init","text":"FakeKeyManagementModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/configure.html","text":"misk-testing / misk.cloud.fake.security.keys / FakeKeyManagementModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-management-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/index.html","text":"misk-testing / misk.cloud.fake.security.keys / FakeKeyService FakeKeyService \u00b6 class FakeKeyService : KeyService Constructors \u00b6 Name Summary <init> FakeKeyService() Functions \u00b6 Name Summary decrypt fun decrypt(keyAlias: String , cipherText: ByteString): ByteString encrypt fun encrypt(keyAlias: String , plainText: ByteString): ByteString","title":"FakeKeyService - Misk"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/index.html#fakekeyservice","text":"class FakeKeyService : KeyService","title":"FakeKeyService"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/index.html#constructors","text":"Name Summary <init> FakeKeyService()","title":"Constructors"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/index.html#functions","text":"Name Summary decrypt fun decrypt(keyAlias: String , cipherText: ByteString): ByteString encrypt fun encrypt(keyAlias: String , plainText: ByteString): ByteString","title":"Functions"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/-init-.html","text":"misk-testing / misk.cloud.fake.security.keys / FakeKeyService / <init> <init> \u00b6 FakeKeyService()","title":" init "},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/-init-.html#init","text":"FakeKeyService()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/decrypt.html","text":"misk-testing / misk.cloud.fake.security.keys / FakeKeyService / decrypt decrypt \u00b6 fun decrypt(keyAlias: String , cipherText: ByteString): ByteString","title":"decrypt - Misk"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/decrypt.html#decrypt","text":"fun decrypt(keyAlias: String , cipherText: ByteString): ByteString","title":"decrypt"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/encrypt.html","text":"misk-testing / misk.cloud.fake.security.keys / FakeKeyService / encrypt encrypt \u00b6 fun encrypt(keyAlias: String , plainText: ByteString): ByteString","title":"encrypt - Misk"},{"location":"0.x/misk-testing/misk.cloud.fake.security.keys/-fake-key-service/encrypt.html#encrypt","text":"fun encrypt(keyAlias: String , plainText: ByteString): ByteString","title":"encrypt"},{"location":"0.x/misk-testing/misk.concurrent/index.html","text":"misk-testing / misk.concurrent Package misk.concurrent \u00b6 Types \u00b6 Name Summary FakeScheduledExecutorService class FakeScheduledExecutorService : ScheduledExecutorService , ExecutorService ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. FakeSleeper class FakeSleeper : Sleeper Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread. FakeSleeperModule class FakeSleeperModule : KAbstractModule FakeTicker class FakeTicker : Ticker, Sleeper","title":"Package misk.concurrent - Misk"},{"location":"0.x/misk-testing/misk.concurrent/index.html#package-miskconcurrent","text":"","title":"Package misk.concurrent"},{"location":"0.x/misk-testing/misk.concurrent/index.html#types","text":"Name Summary FakeScheduledExecutorService class FakeScheduledExecutorService : ScheduledExecutorService , ExecutorService ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. FakeSleeper class FakeSleeper : Sleeper Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread. FakeSleeperModule class FakeSleeperModule : KAbstractModule FakeTicker class FakeTicker : Ticker, Sleeper","title":"Types"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/index.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService FakeScheduledExecutorService \u00b6 @Singleton class FakeScheduledExecutorService : ScheduledExecutorService , ExecutorService ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. This service must always \u201ccatch up\u201d to the clock, so fixed rate and fixed delay jobs are not different. Types \u00b6 Name Summary ScheduledFutureTask inner class ScheduledFutureTask<V> : FutureTask < V >, ScheduledFuture < V > Constructors \u00b6 Name Summary <init> FakeScheduledExecutorService(clock: Clock ) ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. Functions \u00b6 Name Summary isShutdown fun isShutdown(): Boolean schedule fun schedule(command: Runnable , delay: Long , unit: TimeUnit ): ScheduledFuture < Unit > fun <V> schedule(callable: Callable < V >, delay: Long , unit: TimeUnit ): ScheduledFuture < V > scheduleAtFixedRate fun scheduleAtFixedRate(command: Runnable , initialDelay: Long , period: Long , unit: TimeUnit ): ScheduledFuture <*> scheduleWithFixedDelay fun scheduleWithFixedDelay(command: Runnable , initialDelay: Long , delay: Long , unit: TimeUnit ): ScheduledFuture <*> shutdown fun shutdown(): Unit tick fun tick(): Unit Check the current time on the clock and run any scheduled tasks that are due.","title":"FakeScheduledExecutorService - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/index.html#fakescheduledexecutorservice","text":"@Singleton class FakeScheduledExecutorService : ScheduledExecutorService , ExecutorService ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. This service must always \u201ccatch up\u201d to the clock, so fixed rate and fixed delay jobs are not different.","title":"FakeScheduledExecutorService"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/index.html#types","text":"Name Summary ScheduledFutureTask inner class ScheduledFutureTask<V> : FutureTask < V >, ScheduledFuture < V >","title":"Types"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/index.html#constructors","text":"Name Summary <init> FakeScheduledExecutorService(clock: Clock ) ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task.","title":"Constructors"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/index.html#functions","text":"Name Summary isShutdown fun isShutdown(): Boolean schedule fun schedule(command: Runnable , delay: Long , unit: TimeUnit ): ScheduledFuture < Unit > fun <V> schedule(callable: Callable < V >, delay: Long , unit: TimeUnit ): ScheduledFuture < V > scheduleAtFixedRate fun scheduleAtFixedRate(command: Runnable , initialDelay: Long , period: Long , unit: TimeUnit ): ScheduledFuture <*> scheduleWithFixedDelay fun scheduleWithFixedDelay(command: Runnable , initialDelay: Long , delay: Long , unit: TimeUnit ): ScheduledFuture <*> shutdown fun shutdown(): Unit tick fun tick(): Unit Check the current time on the clock and run any scheduled tasks that are due.","title":"Functions"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-init-.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / <init> <init> \u00b6 FakeScheduledExecutorService(clock: Clock ) ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. This service must always \u201ccatch up\u201d to the clock, so fixed rate and fixed delay jobs are not different.","title":" init "},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-init-.html#init","text":"FakeScheduledExecutorService(clock: Clock ) ScheduledExecutorService for testing that runs in the current thread and is triggered using the tick() method. An injected Clock is used to decide whether to execute a scheduled task. This service must always \u201ccatch up\u201d to the clock, so fixed rate and fixed delay jobs are not different.","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/is-shutdown.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / isShutdown isShutdown \u00b6 fun isShutdown(): Boolean","title":"isShutdown - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/is-shutdown.html#isshutdown","text":"fun isShutdown(): Boolean","title":"isShutdown"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-at-fixed-rate.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / scheduleAtFixedRate scheduleAtFixedRate \u00b6 fun scheduleAtFixedRate(command: Runnable , initialDelay: Long , period: Long , unit: TimeUnit ): ScheduledFuture <*>","title":"scheduleAtFixedRate - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-at-fixed-rate.html#scheduleatfixedrate","text":"fun scheduleAtFixedRate(command: Runnable , initialDelay: Long , period: Long , unit: TimeUnit ): ScheduledFuture <*>","title":"scheduleAtFixedRate"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-with-fixed-delay.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / scheduleWithFixedDelay scheduleWithFixedDelay \u00b6 fun scheduleWithFixedDelay(command: Runnable , initialDelay: Long , delay: Long , unit: TimeUnit ): ScheduledFuture <*>","title":"scheduleWithFixedDelay - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule-with-fixed-delay.html#schedulewithfixeddelay","text":"fun scheduleWithFixedDelay(command: Runnable , initialDelay: Long , delay: Long , unit: TimeUnit ): ScheduledFuture <*>","title":"scheduleWithFixedDelay"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / schedule schedule \u00b6 fun schedule(command: Runnable , delay: Long , unit: TimeUnit ): ScheduledFuture < Unit > fun <V> schedule(callable: Callable < V >, delay: Long , unit: TimeUnit ): ScheduledFuture < V >","title":"schedule - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/schedule.html#schedule","text":"fun schedule(command: Runnable , delay: Long , unit: TimeUnit ): ScheduledFuture < Unit > fun <V> schedule(callable: Callable < V >, delay: Long , unit: TimeUnit ): ScheduledFuture < V >","title":"schedule"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/shutdown.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / shutdown shutdown \u00b6 fun shutdown(): Unit","title":"shutdown - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/shutdown.html#shutdown","text":"fun shutdown(): Unit","title":"shutdown"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/tick.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / tick tick \u00b6 fun tick(): Unit Check the current time on the clock and run any scheduled tasks that are due.","title":"tick - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/tick.html#tick","text":"fun tick(): Unit Check the current time on the clock and run any scheduled tasks that are due.","title":"tick"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/index.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask ScheduledFutureTask \u00b6 inner class ScheduledFutureTask<V> : FutureTask < V >, ScheduledFuture < V > Constructors \u00b6 Name Summary <init> ScheduledFutureTask(executeAt: Long , clock: Clock , task: () -> V ) ScheduledFutureTask(executeAt: Long , fixedDelay: Long , clock: Clock , task: () -> V ) Properties \u00b6 Name Summary clock val clock: Clock executeAt var executeAt: Long isRepeated val isRepeated: Boolean task val task: () -> V Functions \u00b6 Name Summary compareTo fun compareTo(other: Delayed ): Int getDelay fun getDelay(unit: TimeUnit ): Long runAndReset fun runAndReset(): Boolean","title":"ScheduledFutureTask - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/index.html#scheduledfuturetask","text":"inner class ScheduledFutureTask<V> : FutureTask < V >, ScheduledFuture < V >","title":"ScheduledFutureTask"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/index.html#constructors","text":"Name Summary <init> ScheduledFutureTask(executeAt: Long , clock: Clock , task: () -> V ) ScheduledFutureTask(executeAt: Long , fixedDelay: Long , clock: Clock , task: () -> V )","title":"Constructors"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/index.html#properties","text":"Name Summary clock val clock: Clock executeAt var executeAt: Long isRepeated val isRepeated: Boolean task val task: () -> V","title":"Properties"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/index.html#functions","text":"Name Summary compareTo fun compareTo(other: Delayed ): Int getDelay fun getDelay(unit: TimeUnit ): Long runAndReset fun runAndReset(): Boolean","title":"Functions"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/-init-.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / <init> <init> \u00b6 ScheduledFutureTask(executeAt: Long , clock: Clock , task: () -> V ) ScheduledFutureTask(executeAt: Long , fixedDelay: Long , clock: Clock , task: () -> V )","title":" init "},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/-init-.html#init","text":"ScheduledFutureTask(executeAt: Long , clock: Clock , task: () -> V ) ScheduledFutureTask(executeAt: Long , fixedDelay: Long , clock: Clock , task: () -> V )","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/clock.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / clock clock \u00b6 val clock: Clock","title":"clock - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/clock.html#clock","text":"val clock: Clock","title":"clock"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/compare-to.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / compareTo compareTo \u00b6 fun compareTo(other: Delayed ): Int","title":"compareTo - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/compare-to.html#compareto","text":"fun compareTo(other: Delayed ): Int","title":"compareTo"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/execute-at.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / executeAt executeAt \u00b6 var executeAt: Long","title":"executeAt - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/execute-at.html#executeat","text":"var executeAt: Long","title":"executeAt"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/get-delay.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / getDelay getDelay \u00b6 fun getDelay(unit: TimeUnit ): Long","title":"getDelay - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/get-delay.html#getdelay","text":"fun getDelay(unit: TimeUnit ): Long","title":"getDelay"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/is-repeated.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / isRepeated isRepeated \u00b6 val isRepeated: Boolean","title":"isRepeated - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/is-repeated.html#isrepeated","text":"val isRepeated: Boolean","title":"isRepeated"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/run-and-reset.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / runAndReset runAndReset \u00b6 fun runAndReset(): Boolean","title":"runAndReset - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/run-and-reset.html#runandreset","text":"fun runAndReset(): Boolean","title":"runAndReset"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/task.html","text":"misk-testing / misk.concurrent / FakeScheduledExecutorService / ScheduledFutureTask / task task \u00b6 val task: () -> V","title":"task - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-scheduled-executor-service/-scheduled-future-task/task.html#task","text":"val task: () -> V","title":"task"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/index.html","text":"misk-testing / misk.concurrent / FakeSleeper FakeSleeper \u00b6 @Singleton class FakeSleeper : Sleeper Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread. Constructors \u00b6 Name Summary <init> FakeSleeper(clock: Clock ) Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread. Functions \u00b6 Name Summary lastSleepDuration fun lastSleepDuration(): Duration ? Returns the last duration FakeSleeper was called with. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently. sleep fun sleep(duration: Duration ): Unit sleepCount fun sleepCount(): Int Returns the total number of times the FakeSleeper has been called. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently. tick fun tick(): Unit Check the current time and triggers any sleeping threads that are due to be awoken. waitForSleep fun waitForSleep(numThreads: Int ): Unit Blocks until the given number of threads are asleep (as a result of calling sleep on this FakeSleeper ).","title":"FakeSleeper - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/index.html#fakesleeper","text":"@Singleton class FakeSleeper : Sleeper Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread.","title":"FakeSleeper"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/index.html#constructors","text":"Name Summary <init> FakeSleeper(clock: Clock ) Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread.","title":"Constructors"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/index.html#functions","text":"Name Summary lastSleepDuration fun lastSleepDuration(): Duration ? Returns the last duration FakeSleeper was called with. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently. sleep fun sleep(duration: Duration ): Unit sleepCount fun sleepCount(): Int Returns the total number of times the FakeSleeper has been called. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently. tick fun tick(): Unit Check the current time and triggers any sleeping threads that are due to be awoken. waitForSleep fun waitForSleep(numThreads: Int ): Unit Blocks until the given number of threads are asleep (as a result of calling sleep on this FakeSleeper ).","title":"Functions"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/-init-.html","text":"misk-testing / misk.concurrent / FakeSleeper / <init> <init> \u00b6 FakeSleeper(clock: Clock ) Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread.","title":" init "},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/-init-.html#init","text":"FakeSleeper(clock: Clock ) Sleeper for testing that blocks threads calling sleep , and checks whether the threads should wake using the tick method. An injected Clock is used to decide whether to wake a thread.","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/last-sleep-duration.html","text":"misk-testing / misk.concurrent / FakeSleeper / lastSleepDuration lastSleepDuration \u00b6 fun lastSleepDuration(): Duration ? Returns the last duration FakeSleeper was called with. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently.","title":"lastSleepDuration - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/last-sleep-duration.html#lastsleepduration","text":"fun lastSleepDuration(): Duration ? Returns the last duration FakeSleeper was called with. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently.","title":"lastSleepDuration"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/sleep-count.html","text":"misk-testing / misk.concurrent / FakeSleeper / sleepCount sleepCount \u00b6 fun sleepCount(): Int Returns the total number of times the FakeSleeper has been called. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently.","title":"sleepCount - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/sleep-count.html#sleepcount","text":"fun sleepCount(): Int Returns the total number of times the FakeSleeper has been called. This is thread-safe, but the value may not be meaningful if the sleeper is being used concurrently.","title":"sleepCount"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/sleep.html","text":"misk-testing / misk.concurrent / FakeSleeper / sleep sleep \u00b6 fun sleep(duration: Duration ): Unit","title":"sleep - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/sleep.html#sleep","text":"fun sleep(duration: Duration ): Unit","title":"sleep"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/tick.html","text":"misk-testing / misk.concurrent / FakeSleeper / tick tick \u00b6 fun tick(): Unit Check the current time and triggers any sleeping threads that are due to be awoken.","title":"tick - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/tick.html#tick","text":"fun tick(): Unit Check the current time and triggers any sleeping threads that are due to be awoken.","title":"tick"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/wait-for-sleep.html","text":"misk-testing / misk.concurrent / FakeSleeper / waitForSleep waitForSleep \u00b6 fun waitForSleep(numThreads: Int ): Unit Blocks until the given number of threads are asleep (as a result of calling sleep on this FakeSleeper ).","title":"waitForSleep - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper/wait-for-sleep.html#waitforsleep","text":"fun waitForSleep(numThreads: Int ): Unit Blocks until the given number of threads are asleep (as a result of calling sleep on this FakeSleeper ).","title":"waitForSleep"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/index.html","text":"misk-testing / misk.concurrent / FakeSleeperModule FakeSleeperModule \u00b6 class FakeSleeperModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeSleeperModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeSleeperModule - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/index.html#fakesleepermodule","text":"class FakeSleeperModule : KAbstractModule","title":"FakeSleeperModule"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/index.html#constructors","text":"Name Summary <init> FakeSleeperModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/-init-.html","text":"misk-testing / misk.concurrent / FakeSleeperModule / <init> <init> \u00b6 FakeSleeperModule()","title":" init "},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/-init-.html#init","text":"FakeSleeperModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/configure.html","text":"misk-testing / misk.concurrent / FakeSleeperModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-sleeper-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/index.html","text":"misk-testing / misk.concurrent / FakeTicker FakeTicker \u00b6 @Singleton class FakeTicker : Ticker, Sleeper Constructors \u00b6 Name Summary <init> FakeTicker() Properties \u00b6 Name Summary nowMs val nowMs: Long Functions \u00b6 Name Summary read fun read(): Long sleep fun sleep(duration: Duration ): Unit sleepMs fun sleepMs(durationMs: Long ): Unit","title":"FakeTicker - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/index.html#faketicker","text":"@Singleton class FakeTicker : Ticker, Sleeper","title":"FakeTicker"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/index.html#constructors","text":"Name Summary <init> FakeTicker()","title":"Constructors"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/index.html#properties","text":"Name Summary nowMs val nowMs: Long","title":"Properties"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/index.html#functions","text":"Name Summary read fun read(): Long sleep fun sleep(duration: Duration ): Unit sleepMs fun sleepMs(durationMs: Long ): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/-init-.html","text":"misk-testing / misk.concurrent / FakeTicker / <init> <init> \u00b6 FakeTicker()","title":" init "},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/-init-.html#init","text":"FakeTicker()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/now-ms.html","text":"misk-testing / misk.concurrent / FakeTicker / nowMs nowMs \u00b6 val nowMs: Long","title":"nowMs - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/now-ms.html#nowms","text":"val nowMs: Long","title":"nowMs"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/read.html","text":"misk-testing / misk.concurrent / FakeTicker / read read \u00b6 fun read(): Long","title":"read - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/read.html#read","text":"fun read(): Long","title":"read"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/sleep-ms.html","text":"misk-testing / misk.concurrent / FakeTicker / sleepMs sleepMs \u00b6 fun sleepMs(durationMs: Long ): Unit","title":"sleepMs - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/sleep-ms.html#sleepms","text":"fun sleepMs(durationMs: Long ): Unit","title":"sleepMs"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/sleep.html","text":"misk-testing / misk.concurrent / FakeTicker / sleep sleep \u00b6 fun sleep(duration: Duration ): Unit","title":"sleep - Misk"},{"location":"0.x/misk-testing/misk.concurrent/-fake-ticker/sleep.html#sleep","text":"fun sleep(duration: Duration ): Unit","title":"sleep"},{"location":"0.x/misk-testing/misk.containers/index.html","text":"misk-testing / misk.containers Package misk.containers \u00b6 Types \u00b6 Name Summary Composer class Composer Composer composes many Container s together to use in a unit test. Container data class Container A Container creates a Docker container for testing.","title":"Package misk.containers - Misk"},{"location":"0.x/misk-testing/misk.containers/index.html#package-miskcontainers","text":"","title":"Package misk.containers"},{"location":"0.x/misk-testing/misk.containers/index.html#types","text":"Name Summary Composer class Composer Composer composes many Container s together to use in a unit test. Container data class Container A Container creates a Docker container for testing.","title":"Types"},{"location":"0.x/misk-testing/misk.containers/-composer/index.html","text":"misk-testing / misk.containers / Composer Composer \u00b6 class Composer Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start() Constructors \u00b6 Name Summary <init> Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test. Functions \u00b6 Name Summary start fun start(): Unit stop fun stop(): Unit","title":"Composer - Misk"},{"location":"0.x/misk-testing/misk.containers/-composer/index.html#composer","text":"class Composer Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start()","title":"Composer"},{"location":"0.x/misk-testing/misk.containers/-composer/index.html#constructors","text":"Name Summary <init> Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test.","title":"Constructors"},{"location":"0.x/misk-testing/misk.containers/-composer/index.html#functions","text":"Name Summary start fun start(): Unit stop fun stop(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.containers/-composer/-init-.html","text":"misk-testing / misk.containers / Composer / <init> <init> \u00b6 Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start()","title":" init "},{"location":"0.x/misk-testing/misk.containers/-composer/-init-.html#init","text":"Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.containers/-composer/start.html","text":"misk-testing / misk.containers / Composer / start start \u00b6 fun start(): Unit","title":"start - Misk"},{"location":"0.x/misk-testing/misk.containers/-composer/start.html#start","text":"fun start(): Unit","title":"start"},{"location":"0.x/misk-testing/misk.containers/-composer/stop.html","text":"misk-testing / misk.containers / Composer / stop stop \u00b6 fun stop(): Unit","title":"stop - Misk"},{"location":"0.x/misk-testing/misk.containers/-composer/stop.html#stop","text":"fun stop(): Unit","title":"stop"},{"location":"0.x/misk-testing/misk.containers/-container/index.html","text":"misk-testing / misk.containers / Container Container \u00b6 data class Container A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example. Constructors \u00b6 Name Summary <init> Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing. Properties \u00b6 Name Summary beforeStartHook val beforeStartHook: (docker: DockerClient, id: String ) -> Unit createCmd val createCmd: CreateContainerCmd.() -> Unit","title":"Container - Misk"},{"location":"0.x/misk-testing/misk.containers/-container/index.html#container","text":"data class Container A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example.","title":"Container"},{"location":"0.x/misk-testing/misk.containers/-container/index.html#constructors","text":"Name Summary <init> Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing.","title":"Constructors"},{"location":"0.x/misk-testing/misk.containers/-container/index.html#properties","text":"Name Summary beforeStartHook val beforeStartHook: (docker: DockerClient, id: String ) -> Unit createCmd val createCmd: CreateContainerCmd.() -> Unit","title":"Properties"},{"location":"0.x/misk-testing/misk.containers/-container/-init-.html","text":"misk-testing / misk.containers / Container / <init> <init> \u00b6 Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example.","title":" init "},{"location":"0.x/misk-testing/misk.containers/-container/-init-.html#init","text":"Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example.","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.containers/-container/before-start-hook.html","text":"misk-testing / misk.containers / Container / beforeStartHook beforeStartHook \u00b6 val beforeStartHook: (docker: DockerClient, id: String ) -> Unit","title":"beforeStartHook - Misk"},{"location":"0.x/misk-testing/misk.containers/-container/before-start-hook.html#beforestarthook","text":"val beforeStartHook: (docker: DockerClient, id: String ) -> Unit","title":"beforeStartHook"},{"location":"0.x/misk-testing/misk.containers/-container/create-cmd.html","text":"misk-testing / misk.containers / Container / createCmd createCmd \u00b6 val createCmd: CreateContainerCmd.() -> Unit","title":"createCmd - Misk"},{"location":"0.x/misk-testing/misk.containers/-container/create-cmd.html#createcmd","text":"val createCmd: CreateContainerCmd.() -> Unit","title":"createCmd"},{"location":"0.x/misk-testing/misk.logging/index.html","text":"misk-testing / misk.logging Package misk.logging \u00b6 Types \u00b6 Name Summary LogCollectorModule class LogCollectorModule : KAbstractModule LogCollectorService interface LogCollectorService : Service Marker interface for the service that produces a LogCollector .","title":"Package misk.logging - Misk"},{"location":"0.x/misk-testing/misk.logging/index.html#package-misklogging","text":"","title":"Package misk.logging"},{"location":"0.x/misk-testing/misk.logging/index.html#types","text":"Name Summary LogCollectorModule class LogCollectorModule : KAbstractModule LogCollectorService interface LogCollectorService : Service Marker interface for the service that produces a LogCollector .","title":"Types"},{"location":"0.x/misk-testing/misk.logging/-log-collector-service.html","text":"misk-testing / misk.logging / LogCollectorService LogCollectorService \u00b6 interface LogCollectorService : Service Marker interface for the service that produces a LogCollector .","title":"LogCollectorService - Misk"},{"location":"0.x/misk-testing/misk.logging/-log-collector-service.html#logcollectorservice","text":"interface LogCollectorService : Service Marker interface for the service that produces a LogCollector .","title":"LogCollectorService"},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/index.html","text":"misk-testing / misk.logging / LogCollectorModule LogCollectorModule \u00b6 class LogCollectorModule : KAbstractModule Constructors \u00b6 Name Summary <init> LogCollectorModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"LogCollectorModule - Misk"},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/index.html#logcollectormodule","text":"class LogCollectorModule : KAbstractModule","title":"LogCollectorModule"},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/index.html#constructors","text":"Name Summary <init> LogCollectorModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/-init-.html","text":"misk-testing / misk.logging / LogCollectorModule / <init> <init> \u00b6 LogCollectorModule()","title":" init "},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/-init-.html#init","text":"LogCollectorModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/configure.html","text":"misk-testing / misk.logging / LogCollectorModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.logging/-log-collector-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.mockito/index.html","text":"misk-testing / misk.mockito Package misk.mockito \u00b6 Types \u00b6 Name Summary Mockito object Mockito","title":"Package misk.mockito - Misk"},{"location":"0.x/misk-testing/misk.mockito/index.html#package-miskmockito","text":"","title":"Package misk.mockito"},{"location":"0.x/misk-testing/misk.mockito/index.html#types","text":"Name Summary Mockito object Mockito","title":"Types"},{"location":"0.x/misk-testing/misk.mockito/-mockito/index.html","text":"misk-testing / misk.mockito / Mockito Mockito \u00b6 object Mockito Functions \u00b6 Name Summary captor fun <T : Any > captor(): ArgumentCaptor< T > mock fun <T : Any > mock(): T whenever fun <T : Any > whenever(t: T ): OngoingStubbing< T >","title":"Mockito - Misk"},{"location":"0.x/misk-testing/misk.mockito/-mockito/index.html#mockito","text":"object Mockito","title":"Mockito"},{"location":"0.x/misk-testing/misk.mockito/-mockito/index.html#functions","text":"Name Summary captor fun <T : Any > captor(): ArgumentCaptor< T > mock fun <T : Any > mock(): T whenever fun <T : Any > whenever(t: T ): OngoingStubbing< T >","title":"Functions"},{"location":"0.x/misk-testing/misk.mockito/-mockito/captor.html","text":"misk-testing / misk.mockito / Mockito / captor captor \u00b6 inline fun <reified T : Any > captor(): ArgumentCaptor< T >","title":"captor - Misk"},{"location":"0.x/misk-testing/misk.mockito/-mockito/captor.html#captor","text":"inline fun <reified T : Any > captor(): ArgumentCaptor< T >","title":"captor"},{"location":"0.x/misk-testing/misk.mockito/-mockito/mock.html","text":"misk-testing / misk.mockito / Mockito / mock mock \u00b6 inline fun <reified T : Any > mock(): T","title":"mock - Misk"},{"location":"0.x/misk-testing/misk.mockito/-mockito/mock.html#mock","text":"inline fun <reified T : Any > mock(): T","title":"mock"},{"location":"0.x/misk-testing/misk.mockito/-mockito/whenever.html","text":"misk-testing / misk.mockito / Mockito / whenever whenever \u00b6 inline fun <reified T : Any > whenever(t: T ): OngoingStubbing< T >","title":"whenever - Misk"},{"location":"0.x/misk-testing/misk.mockito/-mockito/whenever.html#whenever","text":"inline fun <reified T : Any > whenever(t: T ): OngoingStubbing< T >","title":"whenever"},{"location":"0.x/misk-testing/misk.random/index.html","text":"misk-testing / misk.random Package misk.random \u00b6 Types \u00b6 Name Summary FakeRandom class FakeRandom : Random FakeRandomModule class FakeRandomModule : KAbstractModule FakeThreadLocalRandom class FakeThreadLocalRandom : ThreadLocalRandom","title":"Package misk.random - Misk"},{"location":"0.x/misk-testing/misk.random/index.html#package-miskrandom","text":"","title":"Package misk.random"},{"location":"0.x/misk-testing/misk.random/index.html#types","text":"Name Summary FakeRandom class FakeRandom : Random FakeRandomModule class FakeRandomModule : KAbstractModule FakeThreadLocalRandom class FakeThreadLocalRandom : ThreadLocalRandom","title":"Types"},{"location":"0.x/misk-testing/misk.random/-fake-random/index.html","text":"misk-testing / misk.random / FakeRandom FakeRandom \u00b6 @Singleton class FakeRandom : Random Constructors \u00b6 Name Summary <init> FakeRandom() Properties \u00b6 Name Summary nextBoolean var nextBoolean: Boolean ? nextDouble var nextDouble: Double ? nextFloat var nextFloat: Float ? nextInt var nextInt: Int ? nextLong var nextLong: Long ? Functions \u00b6 Name Summary nextBoolean fun nextBoolean(): Boolean nextDouble fun nextDouble(): Double nextFloat fun nextFloat(): Float nextInt fun nextInt(): Int nextLong fun nextLong(): Long","title":"FakeRandom - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random/index.html#fakerandom","text":"@Singleton class FakeRandom : Random","title":"FakeRandom"},{"location":"0.x/misk-testing/misk.random/-fake-random/index.html#constructors","text":"Name Summary <init> FakeRandom()","title":"Constructors"},{"location":"0.x/misk-testing/misk.random/-fake-random/index.html#properties","text":"Name Summary nextBoolean var nextBoolean: Boolean ? nextDouble var nextDouble: Double ? nextFloat var nextFloat: Float ? nextInt var nextInt: Int ? nextLong var nextLong: Long ?","title":"Properties"},{"location":"0.x/misk-testing/misk.random/-fake-random/index.html#functions","text":"Name Summary nextBoolean fun nextBoolean(): Boolean nextDouble fun nextDouble(): Double nextFloat fun nextFloat(): Float nextInt fun nextInt(): Int nextLong fun nextLong(): Long","title":"Functions"},{"location":"0.x/misk-testing/misk.random/-fake-random/-init-.html","text":"misk-testing / misk.random / FakeRandom / <init> <init> \u00b6 FakeRandom()","title":" init "},{"location":"0.x/misk-testing/misk.random/-fake-random/-init-.html#init","text":"FakeRandom()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-boolean.html","text":"misk-testing / misk.random / FakeRandom / nextBoolean nextBoolean \u00b6 var nextBoolean: Boolean ? fun nextBoolean(): Boolean","title":"nextBoolean - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-boolean.html#nextboolean","text":"var nextBoolean: Boolean ? fun nextBoolean(): Boolean","title":"nextBoolean"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-double.html","text":"misk-testing / misk.random / FakeRandom / nextDouble nextDouble \u00b6 var nextDouble: Double ? fun nextDouble(): Double","title":"nextDouble - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-double.html#nextdouble","text":"var nextDouble: Double ? fun nextDouble(): Double","title":"nextDouble"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-float.html","text":"misk-testing / misk.random / FakeRandom / nextFloat nextFloat \u00b6 var nextFloat: Float ? fun nextFloat(): Float","title":"nextFloat - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-float.html#nextfloat","text":"var nextFloat: Float ? fun nextFloat(): Float","title":"nextFloat"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-int.html","text":"misk-testing / misk.random / FakeRandom / nextInt nextInt \u00b6 var nextInt: Int ? fun nextInt(): Int","title":"nextInt - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-int.html#nextint","text":"var nextInt: Int ? fun nextInt(): Int","title":"nextInt"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-long.html","text":"misk-testing / misk.random / FakeRandom / nextLong nextLong \u00b6 var nextLong: Long ? fun nextLong(): Long","title":"nextLong - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random/next-long.html#nextlong","text":"var nextLong: Long ? fun nextLong(): Long","title":"nextLong"},{"location":"0.x/misk-testing/misk.random/-fake-random-module/index.html","text":"misk-testing / misk.random / FakeRandomModule FakeRandomModule \u00b6 class FakeRandomModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeRandomModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeRandomModule - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random-module/index.html#fakerandommodule","text":"class FakeRandomModule : KAbstractModule","title":"FakeRandomModule"},{"location":"0.x/misk-testing/misk.random/-fake-random-module/index.html#constructors","text":"Name Summary <init> FakeRandomModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.random/-fake-random-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.random/-fake-random-module/-init-.html","text":"misk-testing / misk.random / FakeRandomModule / <init> <init> \u00b6 FakeRandomModule()","title":" init "},{"location":"0.x/misk-testing/misk.random/-fake-random-module/-init-.html#init","text":"FakeRandomModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.random/-fake-random-module/configure.html","text":"misk-testing / misk.random / FakeRandomModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-random-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/index.html","text":"misk-testing / misk.random / FakeThreadLocalRandom FakeThreadLocalRandom \u00b6 @Singleton class FakeThreadLocalRandom : ThreadLocalRandom Constructors \u00b6 Name Summary <init> FakeThreadLocalRandom() Properties \u00b6 Name Summary fakeRandom lateinit var fakeRandom: FakeRandom Functions \u00b6 Name Summary current fun current(): FakeRandom","title":"FakeThreadLocalRandom - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/index.html#fakethreadlocalrandom","text":"@Singleton class FakeThreadLocalRandom : ThreadLocalRandom","title":"FakeThreadLocalRandom"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/index.html#constructors","text":"Name Summary <init> FakeThreadLocalRandom()","title":"Constructors"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/index.html#properties","text":"Name Summary fakeRandom lateinit var fakeRandom: FakeRandom","title":"Properties"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/index.html#functions","text":"Name Summary current fun current(): FakeRandom","title":"Functions"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/-init-.html","text":"misk-testing / misk.random / FakeThreadLocalRandom / <init> <init> \u00b6 FakeThreadLocalRandom()","title":" init "},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/-init-.html#init","text":"FakeThreadLocalRandom()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/current.html","text":"misk-testing / misk.random / FakeThreadLocalRandom / current current \u00b6 fun current(): FakeRandom","title":"current - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/current.html#current","text":"fun current(): FakeRandom","title":"current"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/fake-random.html","text":"misk-testing / misk.random / FakeThreadLocalRandom / fakeRandom fakeRandom \u00b6 lateinit var fakeRandom: FakeRandom","title":"fakeRandom - Misk"},{"location":"0.x/misk-testing/misk.random/-fake-thread-local-random/fake-random.html#fakerandom","text":"lateinit var fakeRandom: FakeRandom","title":"fakeRandom"},{"location":"0.x/misk-testing/misk.service/index.html","text":"misk-testing / misk.service Package misk.service \u00b6 Types \u00b6 Name Summary CachedTestService abstract class CachedTestService : AbstractIdleService Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run.","title":"Package misk.service - Misk"},{"location":"0.x/misk-testing/misk.service/index.html#package-miskservice","text":"","title":"Package misk.service"},{"location":"0.x/misk-testing/misk.service/index.html#types","text":"Name Summary CachedTestService abstract class CachedTestService : AbstractIdleService Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run.","title":"Types"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/index.html","text":"misk-testing / misk.service / CachedTestService CachedTestService \u00b6 abstract class CachedTestService : AbstractIdleService Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run. NOTE: The caching is only useful if the implementing service references a shared instance of their underlying resources. A common way to do this is to leverage a companion object. Example: Singleton class TestService : CachedTestService() { override fun actualStartup() { service.start() } override fun actualShutdown() { service.stop() } companion object { private val service = Service() } } Sharing the same underlying resources also means that your tests need to be more conscious about accessing resources scoped uniquely to that test run, or else making sure that they cleanup resources before they\u2019re run. This is similar to how we work with DBs, where either you run something like truncate tables before your tests, or you ensure that all your test statements are made relative to the scope of your test. Constructors \u00b6 Name Summary <init> CachedTestService() Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run. Functions \u00b6 Name Summary actualShutdown abstract fun actualShutdown(): Unit Actually shuts the service down. This will be invoked once per runtime. actualStartup abstract fun actualStartup(): Unit Actually starts the service up. This will be invoked once per runtime. shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"CachedTestService - Misk"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/index.html#cachedtestservice","text":"abstract class CachedTestService : AbstractIdleService Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run. NOTE: The caching is only useful if the implementing service references a shared instance of their underlying resources. A common way to do this is to leverage a companion object. Example: Singleton class TestService : CachedTestService() { override fun actualStartup() { service.start() } override fun actualShutdown() { service.stop() } companion object { private val service = Service() } } Sharing the same underlying resources also means that your tests need to be more conscious about accessing resources scoped uniquely to that test run, or else making sure that they cleanup resources before they\u2019re run. This is similar to how we work with DBs, where either you run something like truncate tables before your tests, or you ensure that all your test statements are made relative to the scope of your test.","title":"CachedTestService"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/index.html#constructors","text":"Name Summary <init> CachedTestService() Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run.","title":"Constructors"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/index.html#functions","text":"Name Summary actualShutdown abstract fun actualShutdown(): Unit Actually shuts the service down. This will be invoked once per runtime. actualStartup abstract fun actualStartup(): Unit Actually starts the service up. This will be invoked once per runtime. shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/-init-.html","text":"misk-testing / misk.service / CachedTestService / <init> <init> \u00b6 CachedTestService() Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run. NOTE: The caching is only useful if the implementing service references a shared instance of their underlying resources. A common way to do this is to leverage a companion object. Example: Singleton class TestService : CachedTestService() { override fun actualStartup() { service.start() } override fun actualShutdown() { service.stop() } companion object { private val service = Service() } } Sharing the same underlying resources also means that your tests need to be more conscious about accessing resources scoped uniquely to that test run, or else making sure that they cleanup resources before they\u2019re run. This is similar to how we work with DBs, where either you run something like truncate tables before your tests, or you ensure that all your test statements are made relative to the scope of your test.","title":" init "},{"location":"0.x/misk-testing/misk.service/-cached-test-service/-init-.html#init","text":"CachedTestService() Test services can derive from CachedTestService if they\u2019d like to reuse the same service for the span of a given runtime. This is helpful when you want to avoid incurring the cost of service startup and shutdown with each test run. NOTE: The caching is only useful if the implementing service references a shared instance of their underlying resources. A common way to do this is to leverage a companion object. Example: Singleton class TestService : CachedTestService() { override fun actualStartup() { service.start() } override fun actualShutdown() { service.stop() } companion object { private val service = Service() } } Sharing the same underlying resources also means that your tests need to be more conscious about accessing resources scoped uniquely to that test run, or else making sure that they cleanup resources before they\u2019re run. This is similar to how we work with DBs, where either you run something like truncate tables before your tests, or you ensure that all your test statements are made relative to the scope of your test.","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/actual-shutdown.html","text":"misk-testing / misk.service / CachedTestService / actualShutdown actualShutdown \u00b6 abstract fun actualShutdown(): Unit Actually shuts the service down. This will be invoked once per runtime.","title":"actualShutdown - Misk"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/actual-shutdown.html#actualshutdown","text":"abstract fun actualShutdown(): Unit Actually shuts the service down. This will be invoked once per runtime.","title":"actualShutdown"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/actual-startup.html","text":"misk-testing / misk.service / CachedTestService / actualStartup actualStartup \u00b6 abstract fun actualStartup(): Unit Actually starts the service up. This will be invoked once per runtime.","title":"actualStartup - Misk"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/actual-startup.html#actualstartup","text":"abstract fun actualStartup(): Unit Actually starts the service up. This will be invoked once per runtime.","title":"actualStartup"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/shut-down.html","text":"misk-testing / misk.service / CachedTestService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/start-up.html","text":"misk-testing / misk.service / CachedTestService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-testing/misk.service/-cached-test-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-testing/misk.services/index.html","text":"misk-testing / misk.services Package misk.services \u00b6 Types \u00b6 Name Summary FakeService class FakeService : AbstractIdleService FakeServiceModule class FakeServiceModule : KAbstractModule","title":"Package misk.services - Misk"},{"location":"0.x/misk-testing/misk.services/index.html#package-miskservices","text":"","title":"Package misk.services"},{"location":"0.x/misk-testing/misk.services/index.html#types","text":"Name Summary FakeService class FakeService : AbstractIdleService FakeServiceModule class FakeServiceModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-testing/misk.services/-fake-service/index.html","text":"misk-testing / misk.services / FakeService FakeService \u00b6 @Singleton class FakeService : AbstractIdleService Constructors \u00b6 Name Summary <init> FakeService() Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"FakeService - Misk"},{"location":"0.x/misk-testing/misk.services/-fake-service/index.html#fakeservice","text":"@Singleton class FakeService : AbstractIdleService","title":"FakeService"},{"location":"0.x/misk-testing/misk.services/-fake-service/index.html#constructors","text":"Name Summary <init> FakeService()","title":"Constructors"},{"location":"0.x/misk-testing/misk.services/-fake-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.services/-fake-service/-init-.html","text":"misk-testing / misk.services / FakeService / <init> <init> \u00b6 FakeService()","title":" init "},{"location":"0.x/misk-testing/misk.services/-fake-service/-init-.html#init","text":"FakeService()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.services/-fake-service/shut-down.html","text":"misk-testing / misk.services / FakeService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-testing/misk.services/-fake-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-testing/misk.services/-fake-service/start-up.html","text":"misk-testing / misk.services / FakeService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-testing/misk.services/-fake-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-testing/misk.services/-fake-service-module/index.html","text":"misk-testing / misk.services / FakeServiceModule FakeServiceModule \u00b6 class FakeServiceModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeServiceModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeServiceModule - Misk"},{"location":"0.x/misk-testing/misk.services/-fake-service-module/index.html#fakeservicemodule","text":"class FakeServiceModule : KAbstractModule","title":"FakeServiceModule"},{"location":"0.x/misk-testing/misk.services/-fake-service-module/index.html#constructors","text":"Name Summary <init> FakeServiceModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.services/-fake-service-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.services/-fake-service-module/-init-.html","text":"misk-testing / misk.services / FakeServiceModule / <init> <init> \u00b6 FakeServiceModule()","title":" init "},{"location":"0.x/misk-testing/misk.services/-fake-service-module/-init-.html#init","text":"FakeServiceModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.services/-fake-service-module/configure.html","text":"misk-testing / misk.services / FakeServiceModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.services/-fake-service-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.testing/index.html","text":"misk-testing / misk.testing Package misk.testing \u00b6 Types \u00b6 Name Summary ConcurrentMockTracer class ConcurrentMockTracer : MockTracer Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer . ExternalDependency interface ExternalDependency An external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc. MockTracingBackendModule class MockTracingBackendModule : KAbstractModule TemporaryFolder class TemporaryFolder A temporary folder for use by a given test TemporaryFolderModule class TemporaryFolderModule : KAbstractModule Annotations \u00b6 Name Summary MiskExternalDependency annotation class MiskExternalDependency MiskTest annotation class MiskTest Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . MiskTestModule annotation class MiskTestModule Extensions for External Classes \u00b6 Name Summary org.junit.jupiter.api.extension.ExtensionContext","title":"Package misk.testing - Misk"},{"location":"0.x/misk-testing/misk.testing/index.html#package-misktesting","text":"","title":"Package misk.testing"},{"location":"0.x/misk-testing/misk.testing/index.html#types","text":"Name Summary ConcurrentMockTracer class ConcurrentMockTracer : MockTracer Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer . ExternalDependency interface ExternalDependency An external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc. MockTracingBackendModule class MockTracingBackendModule : KAbstractModule TemporaryFolder class TemporaryFolder A temporary folder for use by a given test TemporaryFolderModule class TemporaryFolderModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-testing/misk.testing/index.html#annotations","text":"Name Summary MiskExternalDependency annotation class MiskExternalDependency MiskTest annotation class MiskTest Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . MiskTestModule annotation class MiskTestModule","title":"Annotations"},{"location":"0.x/misk-testing/misk.testing/index.html#extensions-for-external-classes","text":"Name Summary org.junit.jupiter.api.extension.ExtensionContext","title":"Extensions for External Classes"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/index.html","text":"misk-testing / misk.testing / ConcurrentMockTracer ConcurrentMockTracer \u00b6 @Singleton class ConcurrentMockTracer : MockTracer Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer . Constructors \u00b6 Name Summary <init> ConcurrentMockTracer() Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer . Functions \u00b6 Name Summary onSpanFinished fun onSpanFinished(mockSpan: MockSpan): Unit take fun take(): MockSpan Awaits a span, removes it, and returns it. fun take(operationName: String ): MockSpan Awaits a span named operationName , removes it, and returns it. Spans with other names are consumed and discarded.","title":"ConcurrentMockTracer - Misk"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/index.html#concurrentmocktracer","text":"@Singleton class ConcurrentMockTracer : MockTracer Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer .","title":"ConcurrentMockTracer"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/index.html#constructors","text":"Name Summary <init> ConcurrentMockTracer() Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer .","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/index.html#functions","text":"Name Summary onSpanFinished fun onSpanFinished(mockSpan: MockSpan): Unit take fun take(): MockSpan Awaits a span, removes it, and returns it. fun take(operationName: String ): MockSpan Awaits a span named operationName , removes it, and returns it. Spans with other names are consumed and discarded.","title":"Functions"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/-init-.html","text":"misk-testing / misk.testing / ConcurrentMockTracer / <init> <init> \u00b6 ConcurrentMockTracer() Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer .","title":" init "},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/-init-.html#init","text":"ConcurrentMockTracer() Extends MockTracer for use in concurrent environments, such as a web server and test client. Prefer this wherever you\u2019d otherwise use MockTracer .","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/on-span-finished.html","text":"misk-testing / misk.testing / ConcurrentMockTracer / onSpanFinished onSpanFinished \u00b6 protected fun onSpanFinished(mockSpan: MockSpan): Unit","title":"onSpanFinished - Misk"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/on-span-finished.html#onspanfinished","text":"protected fun onSpanFinished(mockSpan: MockSpan): Unit","title":"onSpanFinished"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/take.html","text":"misk-testing / misk.testing / ConcurrentMockTracer / take take \u00b6 fun take(): MockSpan Awaits a span, removes it, and returns it. fun take(operationName: String ): MockSpan Awaits a span named operationName , removes it, and returns it. Spans with other names are consumed and discarded.","title":"take - Misk"},{"location":"0.x/misk-testing/misk.testing/-concurrent-mock-tracer/take.html#take","text":"fun take(): MockSpan Awaits a span, removes it, and returns it. fun take(operationName: String ): MockSpan Awaits a span named operationName , removes it, and returns it. Spans with other names are consumed and discarded.","title":"take"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/index.html","text":"misk-testing / misk.testing / ExternalDependency ExternalDependency \u00b6 interface ExternalDependency An external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc. Properties \u00b6 Name Summary id open val id: String Unique ID for the dependency, used as a stable key across tests. Can be overridden if more than one instance of the dependency is supported. Functions \u00b6 Name Summary afterEach abstract fun afterEach(): Unit Called before each test run beforeEach abstract fun beforeEach(): Unit Called before each test run shutdown abstract fun shutdown(): Unit Stops the dependency. startup abstract fun startup(): Unit Starts the dependency.","title":"ExternalDependency - Misk"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/index.html#externaldependency","text":"interface ExternalDependency An external dependency of the Misk Application that needs to be started for test, like Redis, Vitess, MySQL, SQS, etc.","title":"ExternalDependency"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/index.html#properties","text":"Name Summary id open val id: String Unique ID for the dependency, used as a stable key across tests. Can be overridden if more than one instance of the dependency is supported.","title":"Properties"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/index.html#functions","text":"Name Summary afterEach abstract fun afterEach(): Unit Called before each test run beforeEach abstract fun beforeEach(): Unit Called before each test run shutdown abstract fun shutdown(): Unit Stops the dependency. startup abstract fun startup(): Unit Starts the dependency.","title":"Functions"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/after-each.html","text":"misk-testing / misk.testing / ExternalDependency / afterEach afterEach \u00b6 abstract fun afterEach(): Unit Called before each test run","title":"afterEach - Misk"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/after-each.html#aftereach","text":"abstract fun afterEach(): Unit Called before each test run","title":"afterEach"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/before-each.html","text":"misk-testing / misk.testing / ExternalDependency / beforeEach beforeEach \u00b6 abstract fun beforeEach(): Unit Called before each test run","title":"beforeEach - Misk"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/before-each.html#beforeeach","text":"abstract fun beforeEach(): Unit Called before each test run","title":"beforeEach"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/id.html","text":"misk-testing / misk.testing / ExternalDependency / id id \u00b6 open val id: String Unique ID for the dependency, used as a stable key across tests. Can be overridden if more than one instance of the dependency is supported.","title":"id - Misk"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/id.html#id","text":"open val id: String Unique ID for the dependency, used as a stable key across tests. Can be overridden if more than one instance of the dependency is supported.","title":"id"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/shutdown.html","text":"misk-testing / misk.testing / ExternalDependency / shutdown shutdown \u00b6 abstract fun shutdown(): Unit Stops the dependency.","title":"shutdown - Misk"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/shutdown.html#shutdown","text":"abstract fun shutdown(): Unit Stops the dependency.","title":"shutdown"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/startup.html","text":"misk-testing / misk.testing / ExternalDependency / startup startup \u00b6 abstract fun startup(): Unit Starts the dependency.","title":"startup - Misk"},{"location":"0.x/misk-testing/misk.testing/-external-dependency/startup.html#startup","text":"abstract fun startup(): Unit Starts the dependency.","title":"startup"},{"location":"0.x/misk-testing/misk.testing/-misk-external-dependency/index.html","text":"misk-testing / misk.testing / MiskExternalDependency MiskExternalDependency \u00b6 @Target([AnnotationTarget.FIELD]) annotation class MiskExternalDependency Constructors \u00b6 Name Summary <init> MiskExternalDependency()","title":"MiskExternalDependency - Misk"},{"location":"0.x/misk-testing/misk.testing/-misk-external-dependency/index.html#miskexternaldependency","text":"@Target([AnnotationTarget.FIELD]) annotation class MiskExternalDependency","title":"MiskExternalDependency"},{"location":"0.x/misk-testing/misk.testing/-misk-external-dependency/index.html#constructors","text":"Name Summary <init> MiskExternalDependency()","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-misk-external-dependency/-init-.html","text":"misk-testing / misk.testing / MiskExternalDependency / <init> <init> \u00b6 MiskExternalDependency()","title":" init "},{"location":"0.x/misk-testing/misk.testing/-misk-external-dependency/-init-.html#init","text":"MiskExternalDependency()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-misk-test/index.html","text":"misk-testing / misk.testing / MiskTest MiskTest \u00b6 @Target([AnnotationTarget.CLASS]) @ExtendWith([MiskTestExtension]) annotation class MiskTest Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . Configure test callbacks with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<BeforeEachCallback>().to<MyBeforeEach>() multibind<AfterEachCallback>().to<MyAfterEach>() Constructors \u00b6 Name Summary <init> MiskTest(startService: Boolean = false) Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . Properties \u00b6 Name Summary startService val startService: Boolean","title":"MiskTest - Misk"},{"location":"0.x/misk-testing/misk.testing/-misk-test/index.html#misktest","text":"@Target([AnnotationTarget.CLASS]) @ExtendWith([MiskTestExtension]) annotation class MiskTest Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . Configure test callbacks with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<BeforeEachCallback>().to<MyBeforeEach>() multibind<AfterEachCallback>().to<MyAfterEach>()","title":"MiskTest"},{"location":"0.x/misk-testing/misk.testing/-misk-test/index.html#constructors","text":"Name Summary <init> MiskTest(startService: Boolean = false) Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine .","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-misk-test/index.html#properties","text":"Name Summary startService val startService: Boolean","title":"Properties"},{"location":"0.x/misk-testing/misk.testing/-misk-test/-init-.html","text":"misk-testing / misk.testing / MiskTest / <init> <init> \u00b6 MiskTest(startService: Boolean = false) Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . Configure test callbacks with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<BeforeEachCallback>().to<MyBeforeEach>() multibind<AfterEachCallback>().to<MyAfterEach>()","title":" init "},{"location":"0.x/misk-testing/misk.testing/-misk-test/-init-.html#init","text":"MiskTest(startService: Boolean = false) Annotate your test classes with @MiskTest to have fields annotated with @Inject initialized. Provide modules to be installed by annotating a Module field in your test class with MiskTestModule . This can be a compound module, composed using Modules.combine . Configure test callbacks with Guice multibindings. Register instances by calling multibind() in a KAbstractModule : multibind<BeforeEachCallback>().to<MyBeforeEach>() multibind<AfterEachCallback>().to<MyAfterEach>()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-misk-test/start-service.html","text":"misk-testing / misk.testing / MiskTest / startService startService \u00b6 val startService: Boolean","title":"startService - Misk"},{"location":"0.x/misk-testing/misk.testing/-misk-test/start-service.html#startservice","text":"val startService: Boolean","title":"startService"},{"location":"0.x/misk-testing/misk.testing/-misk-test-module/index.html","text":"misk-testing / misk.testing / MiskTestModule MiskTestModule \u00b6 @Target([AnnotationTarget.FIELD]) annotation class MiskTestModule Constructors \u00b6 Name Summary <init> MiskTestModule()","title":"MiskTestModule - Misk"},{"location":"0.x/misk-testing/misk.testing/-misk-test-module/index.html#misktestmodule","text":"@Target([AnnotationTarget.FIELD]) annotation class MiskTestModule","title":"MiskTestModule"},{"location":"0.x/misk-testing/misk.testing/-misk-test-module/index.html#constructors","text":"Name Summary <init> MiskTestModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-misk-test-module/-init-.html","text":"misk-testing / misk.testing / MiskTestModule / <init> <init> \u00b6 MiskTestModule()","title":" init "},{"location":"0.x/misk-testing/misk.testing/-misk-test-module/-init-.html#init","text":"MiskTestModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/index.html","text":"misk-testing / misk.testing / MockTracingBackendModule MockTracingBackendModule \u00b6 class MockTracingBackendModule : KAbstractModule Constructors \u00b6 Name Summary <init> MockTracingBackendModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"MockTracingBackendModule - Misk"},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/index.html#mocktracingbackendmodule","text":"class MockTracingBackendModule : KAbstractModule","title":"MockTracingBackendModule"},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/index.html#constructors","text":"Name Summary <init> MockTracingBackendModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/-init-.html","text":"misk-testing / misk.testing / MockTracingBackendModule / <init> <init> \u00b6 MockTracingBackendModule()","title":" init "},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/-init-.html#init","text":"MockTracingBackendModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/configure.html","text":"misk-testing / misk.testing / MockTracingBackendModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.testing/-mock-tracing-backend-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/index.html","text":"misk-testing / misk.testing / TemporaryFolder TemporaryFolder \u00b6 class TemporaryFolder A temporary folder for use by a given test Constructors \u00b6 Name Summary <init> TemporaryFolder(root: Path ) A temporary folder for use by a given test Properties \u00b6 Name Summary root val root: Path Functions \u00b6 Name Summary delete fun delete(): Unit Deletes all files and folders under the temporary folder newFile fun newFile(): Path fun newFile(name: String ): Path newFolder fun newFolder(): Path fun newFolder(name: String ): Path","title":"TemporaryFolder - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/index.html#temporaryfolder","text":"class TemporaryFolder A temporary folder for use by a given test","title":"TemporaryFolder"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/index.html#constructors","text":"Name Summary <init> TemporaryFolder(root: Path ) A temporary folder for use by a given test","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/index.html#properties","text":"Name Summary root val root: Path","title":"Properties"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/index.html#functions","text":"Name Summary delete fun delete(): Unit Deletes all files and folders under the temporary folder newFile fun newFile(): Path fun newFile(name: String ): Path newFolder fun newFolder(): Path fun newFolder(name: String ): Path","title":"Functions"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/-init-.html","text":"misk-testing / misk.testing / TemporaryFolder / <init> <init> \u00b6 TemporaryFolder(root: Path ) A temporary folder for use by a given test","title":" init "},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/-init-.html#init","text":"TemporaryFolder(root: Path ) A temporary folder for use by a given test","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/delete.html","text":"misk-testing / misk.testing / TemporaryFolder / delete delete \u00b6 fun delete(): Unit Deletes all files and folders under the temporary folder","title":"delete - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/delete.html#delete","text":"fun delete(): Unit Deletes all files and folders under the temporary folder","title":"delete"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/new-file.html","text":"misk-testing / misk.testing / TemporaryFolder / newFile newFile \u00b6 fun newFile(): Path Return a new file with a randomly generated name fun newFile(name: String ): Path Return a new file with the given name","title":"newFile - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/new-file.html#newfile","text":"fun newFile(): Path Return a new file with a randomly generated name fun newFile(name: String ): Path Return a new file with the given name","title":"newFile"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/new-folder.html","text":"misk-testing / misk.testing / TemporaryFolder / newFolder newFolder \u00b6 fun newFolder(): Path Return a new folder with a randomly generated name fun newFolder(name: String ): Path Return a new folder with the given name","title":"newFolder - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/new-folder.html#newfolder","text":"fun newFolder(): Path Return a new folder with a randomly generated name fun newFolder(name: String ): Path Return a new folder with the given name","title":"newFolder"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/root.html","text":"misk-testing / misk.testing / TemporaryFolder / root root \u00b6 val root: Path","title":"root - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder/root.html#root","text":"val root: Path","title":"root"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/index.html","text":"misk-testing / misk.testing / TemporaryFolderModule TemporaryFolderModule \u00b6 class TemporaryFolderModule : KAbstractModule Types \u00b6 Name Summary DeleteTempFolder class DeleteTempFolder : AfterEachCallback Constructors \u00b6 Name Summary <init> TemporaryFolderModule() Functions \u00b6 Name Summary configure fun configure(): Unit provideTemporaryFolder fun provideTemporaryFolder(): TemporaryFolder","title":"TemporaryFolderModule - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/index.html#temporaryfoldermodule","text":"class TemporaryFolderModule : KAbstractModule","title":"TemporaryFolderModule"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/index.html#types","text":"Name Summary DeleteTempFolder class DeleteTempFolder : AfterEachCallback","title":"Types"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/index.html#constructors","text":"Name Summary <init> TemporaryFolderModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideTemporaryFolder fun provideTemporaryFolder(): TemporaryFolder","title":"Functions"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-init-.html","text":"misk-testing / misk.testing / TemporaryFolderModule / <init> <init> \u00b6 TemporaryFolderModule()","title":" init "},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-init-.html#init","text":"TemporaryFolderModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/configure.html","text":"misk-testing / misk.testing / TemporaryFolderModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/provide-temporary-folder.html","text":"misk-testing / misk.testing / TemporaryFolderModule / provideTemporaryFolder provideTemporaryFolder \u00b6 @Provides @Singleton fun provideTemporaryFolder(): TemporaryFolder","title":"provideTemporaryFolder - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/provide-temporary-folder.html#providetemporaryfolder","text":"@Provides @Singleton fun provideTemporaryFolder(): TemporaryFolder","title":"provideTemporaryFolder"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/index.html","text":"misk-testing / misk.testing / TemporaryFolderModule / DeleteTempFolder DeleteTempFolder \u00b6 class DeleteTempFolder : AfterEachCallback Constructors \u00b6 Name Summary <init> DeleteTempFolder(tempDir: TemporaryFolder ) Functions \u00b6 Name Summary afterEach fun afterEach(context: ExtensionContext): Unit","title":"DeleteTempFolder - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/index.html#deletetempfolder","text":"class DeleteTempFolder : AfterEachCallback","title":"DeleteTempFolder"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/index.html#constructors","text":"Name Summary <init> DeleteTempFolder(tempDir: TemporaryFolder )","title":"Constructors"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/index.html#functions","text":"Name Summary afterEach fun afterEach(context: ExtensionContext): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/-init-.html","text":"misk-testing / misk.testing / TemporaryFolderModule / DeleteTempFolder / <init> <init> \u00b6 DeleteTempFolder(tempDir: TemporaryFolder )","title":" init "},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/-init-.html#init","text":"DeleteTempFolder(tempDir: TemporaryFolder )","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/after-each.html","text":"misk-testing / misk.testing / TemporaryFolderModule / DeleteTempFolder / afterEach afterEach \u00b6 fun afterEach(context: ExtensionContext): Unit","title":"afterEach - Misk"},{"location":"0.x/misk-testing/misk.testing/-temporary-folder-module/-delete-temp-folder/after-each.html#aftereach","text":"fun afterEach(context: ExtensionContext): Unit","title":"afterEach"},{"location":"0.x/misk-testing/misk.testing/org.junit.jupiter.api.extension.-extension-context/index.html","text":"misk-testing / misk.testing / org.junit.jupiter.api.extension.ExtensionContext Extensions for org.junit.jupiter.api.extension.ExtensionContext \u00b6 Name Summary retrieve fun <T> ExtensionContext.retrieve(name: String ): T store fun <T> ExtensionContext.store(name: String , value: T ): Unit Stores an object scoped to the test class on the context","title":"Extensions for org.junit.jupiter.api.extension.ExtensionContext - Misk"},{"location":"0.x/misk-testing/misk.testing/org.junit.jupiter.api.extension.-extension-context/index.html#extensions-for-orgjunitjupiterapiextensionextensioncontext","text":"Name Summary retrieve fun <T> ExtensionContext.retrieve(name: String ): T store fun <T> ExtensionContext.store(name: String , value: T ): Unit Stores an object scoped to the test class on the context","title":"Extensions for org.junit.jupiter.api.extension.ExtensionContext"},{"location":"0.x/misk-testing/misk.testing/org.junit.jupiter.api.extension.-extension-context/retrieve.html","text":"misk-testing / misk.testing / org.junit.jupiter.api.extension.ExtensionContext / retrieve retrieve \u00b6 inline fun <reified T> ExtensionContext.retrieve(name: String ): T Return A previously stored object scoped to the test class","title":"retrieve - Misk"},{"location":"0.x/misk-testing/misk.testing/org.junit.jupiter.api.extension.-extension-context/retrieve.html#retrieve","text":"inline fun <reified T> ExtensionContext.retrieve(name: String ): T Return A previously stored object scoped to the test class","title":"retrieve"},{"location":"0.x/misk-testing/misk.testing/org.junit.jupiter.api.extension.-extension-context/store.html","text":"misk-testing / misk.testing / org.junit.jupiter.api.extension.ExtensionContext / store store \u00b6 fun <T> ExtensionContext.store(name: String , value: T ): Unit Stores an object scoped to the test class on the context","title":"store - Misk"},{"location":"0.x/misk-testing/misk.testing/org.junit.jupiter.api.extension.-extension-context/store.html#store","text":"fun <T> ExtensionContext.store(name: String , value: T ): Unit Stores an object scoped to the test class on the context","title":"store"},{"location":"0.x/misk-testing/misk.time/index.html","text":"misk-testing / misk.time Package misk.time \u00b6 Types \u00b6 Name Summary FakeClock class FakeClock : Clock FakeClockModule class FakeClockModule : KAbstractModule FakeTickerModule class FakeTickerModule : KAbstractModule","title":"Package misk.time - Misk"},{"location":"0.x/misk-testing/misk.time/index.html#package-misktime","text":"","title":"Package misk.time"},{"location":"0.x/misk-testing/misk.time/index.html#types","text":"Name Summary FakeClock class FakeClock : Clock FakeClockModule class FakeClockModule : KAbstractModule FakeTickerModule class FakeTickerModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-testing/misk.time/-fake-clock/index.html","text":"misk-testing / misk.time / FakeClock FakeClock \u00b6 class FakeClock : Clock Constructors \u00b6 Name Summary <init> FakeClock(epochMillis: Long = Instant.parse(\"2018-01-01T00:00:00Z\").toEpochMilli(), zone: ZoneId = ZoneId.of(\"UTC\")) Functions \u00b6 Name Summary add fun add(d: Duration ): Long fun add(n: Long , unit: TimeUnit ): Long getZone fun getZone(): ZoneId instant fun instant(): Instant setNow fun setNow(instant: Instant ): Unit withZone fun withZone(zone: ZoneId ): Clock","title":"FakeClock - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock/index.html#fakeclock","text":"class FakeClock : Clock","title":"FakeClock"},{"location":"0.x/misk-testing/misk.time/-fake-clock/index.html#constructors","text":"Name Summary <init> FakeClock(epochMillis: Long = Instant.parse(\"2018-01-01T00:00:00Z\").toEpochMilli(), zone: ZoneId = ZoneId.of(\"UTC\"))","title":"Constructors"},{"location":"0.x/misk-testing/misk.time/-fake-clock/index.html#functions","text":"Name Summary add fun add(d: Duration ): Long fun add(n: Long , unit: TimeUnit ): Long getZone fun getZone(): ZoneId instant fun instant(): Instant setNow fun setNow(instant: Instant ): Unit withZone fun withZone(zone: ZoneId ): Clock","title":"Functions"},{"location":"0.x/misk-testing/misk.time/-fake-clock/-init-.html","text":"misk-testing / misk.time / FakeClock / <init> <init> \u00b6 FakeClock(epochMillis: Long = Instant.parse(\"2018-01-01T00:00:00Z\").toEpochMilli(), zone: ZoneId = ZoneId.of(\"UTC\"))","title":" init "},{"location":"0.x/misk-testing/misk.time/-fake-clock/-init-.html#init","text":"FakeClock(epochMillis: Long = Instant.parse(\"2018-01-01T00:00:00Z\").toEpochMilli(), zone: ZoneId = ZoneId.of(\"UTC\"))","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.time/-fake-clock/add.html","text":"misk-testing / misk.time / FakeClock / add add \u00b6 fun add(d: Duration ): Long fun add(n: Long , unit: TimeUnit ): Long","title":"add - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock/add.html#add","text":"fun add(d: Duration ): Long fun add(n: Long , unit: TimeUnit ): Long","title":"add"},{"location":"0.x/misk-testing/misk.time/-fake-clock/get-zone.html","text":"misk-testing / misk.time / FakeClock / getZone getZone \u00b6 fun getZone(): ZoneId","title":"getZone - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock/get-zone.html#getzone","text":"fun getZone(): ZoneId","title":"getZone"},{"location":"0.x/misk-testing/misk.time/-fake-clock/instant.html","text":"misk-testing / misk.time / FakeClock / instant instant \u00b6 fun instant(): Instant","title":"instant - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock/instant.html#instant","text":"fun instant(): Instant","title":"instant"},{"location":"0.x/misk-testing/misk.time/-fake-clock/set-now.html","text":"misk-testing / misk.time / FakeClock / setNow setNow \u00b6 fun setNow(instant: Instant ): Unit","title":"setNow - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock/set-now.html#setnow","text":"fun setNow(instant: Instant ): Unit","title":"setNow"},{"location":"0.x/misk-testing/misk.time/-fake-clock/with-zone.html","text":"misk-testing / misk.time / FakeClock / withZone withZone \u00b6 fun withZone(zone: ZoneId ): Clock","title":"withZone - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock/with-zone.html#withzone","text":"fun withZone(zone: ZoneId ): Clock","title":"withZone"},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/index.html","text":"misk-testing / misk.time / FakeClockModule FakeClockModule \u00b6 class FakeClockModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeClockModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeClockModule - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/index.html#fakeclockmodule","text":"class FakeClockModule : KAbstractModule","title":"FakeClockModule"},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/index.html#constructors","text":"Name Summary <init> FakeClockModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/-init-.html","text":"misk-testing / misk.time / FakeClockModule / <init> <init> \u00b6 FakeClockModule()","title":" init "},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/-init-.html#init","text":"FakeClockModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/configure.html","text":"misk-testing / misk.time / FakeClockModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-clock-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/index.html","text":"misk-testing / misk.time / FakeTickerModule FakeTickerModule \u00b6 class FakeTickerModule : KAbstractModule Constructors \u00b6 Name Summary <init> FakeTickerModule() Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FakeTickerModule - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/index.html#faketickermodule","text":"class FakeTickerModule : KAbstractModule","title":"FakeTickerModule"},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/index.html#constructors","text":"Name Summary <init> FakeTickerModule()","title":"Constructors"},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/-init-.html","text":"misk-testing / misk.time / FakeTickerModule / <init> <init> \u00b6 FakeTickerModule()","title":" init "},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/-init-.html#init","text":"FakeTickerModule()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/configure.html","text":"misk-testing / misk.time / FakeTickerModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.time/-fake-ticker-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.web/index.html","text":"misk-testing / misk.web Package misk.web \u00b6 Types \u00b6 Name Summary FakeHttpCall data class FakeHttpCall : HttpCall FakeWebSocketListener class FakeWebSocketListener : WebSocketListener WebServerTestingModule class WebServerTestingModule : KAbstractModule A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS. WebTestClient class WebTestClient Use WebTestClient to test calls to the application at the integration level.","title":"Package misk.web - Misk"},{"location":"0.x/misk-testing/misk.web/index.html#package-miskweb","text":"","title":"Package misk.web"},{"location":"0.x/misk-testing/misk.web/index.html#types","text":"Name Summary FakeHttpCall data class FakeHttpCall : HttpCall FakeWebSocketListener class FakeWebSocketListener : WebSocketListener WebServerTestingModule class WebServerTestingModule : KAbstractModule A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS. WebTestClient class WebTestClient Use WebTestClient to test calls to the application at the integration level.","title":"Types"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/index.html","text":"misk-testing / misk.web / FakeHttpCall FakeHttpCall \u00b6 data class FakeHttpCall : HttpCall Constructors \u00b6 Name Summary <init> FakeHttpCall(url: HttpUrl = \"https://example.com/\".toHttpUrl(), linkLayerLocalAddress: SocketAddress = SocketAddress.Network(\"1.2.3.4\", 56789), dispatchMechanism: DispatchMechanism = DispatchMechanism.GET, requestHeaders: Headers = headersOf(), statusCode: Int = 200, headersBuilder: Builder = Headers.Builder(), sendTrailers: Boolean = false, trailersBuilder: Builder = Headers.Builder(), requestBody: BufferedSource? = Buffer(), responseBody: BufferedSink? = Buffer(), webSocket: WebSocket? = null, webSocketListener: WebSocketListener? = null) Properties \u00b6 Name Summary dispatchMechanism val dispatchMechanism: DispatchMechanism headersBuilder val headersBuilder: Builder linkLayerLocalAddress val linkLayerLocalAddress: SocketAddress requestBody var requestBody: BufferedSource? requestHeaders val requestHeaders: Headers responseBody var responseBody: BufferedSink? responseHeaders val responseHeaders: Headers sendTrailers var sendTrailers: Boolean statusCode var statusCode: Int trailersBuilder val trailersBuilder: Builder url val url: HttpUrl webSocket var webSocket: WebSocket? webSocketListener var webSocketListener: WebSocketListener? Functions \u00b6 Name Summary addResponseHeaders fun addResponseHeaders(headers: Headers): Unit initWebSocketListener fun initWebSocketListener(webSocketListener: WebSocketListener): Unit putRequestBody fun putRequestBody(requestBody: BufferedSource): Unit putResponseBody fun putResponseBody(responseBody: BufferedSink): Unit putWebSocket fun putWebSocket(webSocket: WebSocket): Unit requireTrailers fun requireTrailers(): Unit setResponseHeader fun setResponseHeader(name: String , value: String ): Unit setResponseTrailer fun setResponseTrailer(name: String , value: String ): Unit takeRequestBody fun takeRequestBody(): BufferedSource? takeResponseBody fun takeResponseBody(): BufferedSink? takeWebSocket fun takeWebSocket(): WebSocket?","title":"FakeHttpCall - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/index.html#fakehttpcall","text":"data class FakeHttpCall : HttpCall","title":"FakeHttpCall"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/index.html#constructors","text":"Name Summary <init> FakeHttpCall(url: HttpUrl = \"https://example.com/\".toHttpUrl(), linkLayerLocalAddress: SocketAddress = SocketAddress.Network(\"1.2.3.4\", 56789), dispatchMechanism: DispatchMechanism = DispatchMechanism.GET, requestHeaders: Headers = headersOf(), statusCode: Int = 200, headersBuilder: Builder = Headers.Builder(), sendTrailers: Boolean = false, trailersBuilder: Builder = Headers.Builder(), requestBody: BufferedSource? = Buffer(), responseBody: BufferedSink? = Buffer(), webSocket: WebSocket? = null, webSocketListener: WebSocketListener? = null)","title":"Constructors"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/index.html#properties","text":"Name Summary dispatchMechanism val dispatchMechanism: DispatchMechanism headersBuilder val headersBuilder: Builder linkLayerLocalAddress val linkLayerLocalAddress: SocketAddress requestBody var requestBody: BufferedSource? requestHeaders val requestHeaders: Headers responseBody var responseBody: BufferedSink? responseHeaders val responseHeaders: Headers sendTrailers var sendTrailers: Boolean statusCode var statusCode: Int trailersBuilder val trailersBuilder: Builder url val url: HttpUrl webSocket var webSocket: WebSocket? webSocketListener var webSocketListener: WebSocketListener?","title":"Properties"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/index.html#functions","text":"Name Summary addResponseHeaders fun addResponseHeaders(headers: Headers): Unit initWebSocketListener fun initWebSocketListener(webSocketListener: WebSocketListener): Unit putRequestBody fun putRequestBody(requestBody: BufferedSource): Unit putResponseBody fun putResponseBody(responseBody: BufferedSink): Unit putWebSocket fun putWebSocket(webSocket: WebSocket): Unit requireTrailers fun requireTrailers(): Unit setResponseHeader fun setResponseHeader(name: String , value: String ): Unit setResponseTrailer fun setResponseTrailer(name: String , value: String ): Unit takeRequestBody fun takeRequestBody(): BufferedSource? takeResponseBody fun takeResponseBody(): BufferedSink? takeWebSocket fun takeWebSocket(): WebSocket?","title":"Functions"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/-init-.html","text":"misk-testing / misk.web / FakeHttpCall / <init> <init> \u00b6 FakeHttpCall(url: HttpUrl = \"https://example.com/\".toHttpUrl(), linkLayerLocalAddress: SocketAddress = SocketAddress.Network(\"1.2.3.4\", 56789), dispatchMechanism: DispatchMechanism = DispatchMechanism.GET, requestHeaders: Headers = headersOf(), statusCode: Int = 200, headersBuilder: Builder = Headers.Builder(), sendTrailers: Boolean = false, trailersBuilder: Builder = Headers.Builder(), requestBody: BufferedSource? = Buffer(), responseBody: BufferedSink? = Buffer(), webSocket: WebSocket? = null, webSocketListener: WebSocketListener? = null)","title":" init "},{"location":"0.x/misk-testing/misk.web/-fake-http-call/-init-.html#init","text":"FakeHttpCall(url: HttpUrl = \"https://example.com/\".toHttpUrl(), linkLayerLocalAddress: SocketAddress = SocketAddress.Network(\"1.2.3.4\", 56789), dispatchMechanism: DispatchMechanism = DispatchMechanism.GET, requestHeaders: Headers = headersOf(), statusCode: Int = 200, headersBuilder: Builder = Headers.Builder(), sendTrailers: Boolean = false, trailersBuilder: Builder = Headers.Builder(), requestBody: BufferedSource? = Buffer(), responseBody: BufferedSink? = Buffer(), webSocket: WebSocket? = null, webSocketListener: WebSocketListener? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/add-response-headers.html","text":"misk-testing / misk.web / FakeHttpCall / addResponseHeaders addResponseHeaders \u00b6 fun addResponseHeaders(headers: Headers): Unit","title":"addResponseHeaders - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/add-response-headers.html#addresponseheaders","text":"fun addResponseHeaders(headers: Headers): Unit","title":"addResponseHeaders"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/dispatch-mechanism.html","text":"misk-testing / misk.web / FakeHttpCall / dispatchMechanism dispatchMechanism \u00b6 val dispatchMechanism: DispatchMechanism","title":"dispatchMechanism - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/dispatch-mechanism.html#dispatchmechanism","text":"val dispatchMechanism: DispatchMechanism","title":"dispatchMechanism"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/headers-builder.html","text":"misk-testing / misk.web / FakeHttpCall / headersBuilder headersBuilder \u00b6 val headersBuilder: Builder","title":"headersBuilder - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/headers-builder.html#headersbuilder","text":"val headersBuilder: Builder","title":"headersBuilder"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/init-web-socket-listener.html","text":"misk-testing / misk.web / FakeHttpCall / initWebSocketListener initWebSocketListener \u00b6 fun initWebSocketListener(webSocketListener: WebSocketListener): Unit","title":"initWebSocketListener - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/init-web-socket-listener.html#initwebsocketlistener","text":"fun initWebSocketListener(webSocketListener: WebSocketListener): Unit","title":"initWebSocketListener"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/link-layer-local-address.html","text":"misk-testing / misk.web / FakeHttpCall / linkLayerLocalAddress linkLayerLocalAddress \u00b6 val linkLayerLocalAddress: SocketAddress","title":"linkLayerLocalAddress - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/link-layer-local-address.html#linklayerlocaladdress","text":"val linkLayerLocalAddress: SocketAddress","title":"linkLayerLocalAddress"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/put-request-body.html","text":"misk-testing / misk.web / FakeHttpCall / putRequestBody putRequestBody \u00b6 fun putRequestBody(requestBody: BufferedSource): Unit","title":"putRequestBody - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/put-request-body.html#putrequestbody","text":"fun putRequestBody(requestBody: BufferedSource): Unit","title":"putRequestBody"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/put-response-body.html","text":"misk-testing / misk.web / FakeHttpCall / putResponseBody putResponseBody \u00b6 fun putResponseBody(responseBody: BufferedSink): Unit","title":"putResponseBody - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/put-response-body.html#putresponsebody","text":"fun putResponseBody(responseBody: BufferedSink): Unit","title":"putResponseBody"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/put-web-socket.html","text":"misk-testing / misk.web / FakeHttpCall / putWebSocket putWebSocket \u00b6 fun putWebSocket(webSocket: WebSocket): Unit","title":"putWebSocket - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/put-web-socket.html#putwebsocket","text":"fun putWebSocket(webSocket: WebSocket): Unit","title":"putWebSocket"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/request-body.html","text":"misk-testing / misk.web / FakeHttpCall / requestBody requestBody \u00b6 var requestBody: BufferedSource?","title":"requestBody - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/request-body.html#requestbody","text":"var requestBody: BufferedSource?","title":"requestBody"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/request-headers.html","text":"misk-testing / misk.web / FakeHttpCall / requestHeaders requestHeaders \u00b6 val requestHeaders: Headers","title":"requestHeaders - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/request-headers.html#requestheaders","text":"val requestHeaders: Headers","title":"requestHeaders"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/require-trailers.html","text":"misk-testing / misk.web / FakeHttpCall / requireTrailers requireTrailers \u00b6 fun requireTrailers(): Unit","title":"requireTrailers - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/require-trailers.html#requiretrailers","text":"fun requireTrailers(): Unit","title":"requireTrailers"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/response-body.html","text":"misk-testing / misk.web / FakeHttpCall / responseBody responseBody \u00b6 var responseBody: BufferedSink?","title":"responseBody - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/response-body.html#responsebody","text":"var responseBody: BufferedSink?","title":"responseBody"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/response-headers.html","text":"misk-testing / misk.web / FakeHttpCall / responseHeaders responseHeaders \u00b6 val responseHeaders: Headers","title":"responseHeaders - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/response-headers.html#responseheaders","text":"val responseHeaders: Headers","title":"responseHeaders"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/send-trailers.html","text":"misk-testing / misk.web / FakeHttpCall / sendTrailers sendTrailers \u00b6 var sendTrailers: Boolean","title":"sendTrailers - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/send-trailers.html#sendtrailers","text":"var sendTrailers: Boolean","title":"sendTrailers"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/set-response-header.html","text":"misk-testing / misk.web / FakeHttpCall / setResponseHeader setResponseHeader \u00b6 fun setResponseHeader(name: String , value: String ): Unit","title":"setResponseHeader - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/set-response-header.html#setresponseheader","text":"fun setResponseHeader(name: String , value: String ): Unit","title":"setResponseHeader"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/set-response-trailer.html","text":"misk-testing / misk.web / FakeHttpCall / setResponseTrailer setResponseTrailer \u00b6 fun setResponseTrailer(name: String , value: String ): Unit","title":"setResponseTrailer - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/set-response-trailer.html#setresponsetrailer","text":"fun setResponseTrailer(name: String , value: String ): Unit","title":"setResponseTrailer"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/status-code.html","text":"misk-testing / misk.web / FakeHttpCall / statusCode statusCode \u00b6 var statusCode: Int","title":"statusCode - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/status-code.html#statuscode","text":"var statusCode: Int","title":"statusCode"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/take-request-body.html","text":"misk-testing / misk.web / FakeHttpCall / takeRequestBody takeRequestBody \u00b6 fun takeRequestBody(): BufferedSource?","title":"takeRequestBody - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/take-request-body.html#takerequestbody","text":"fun takeRequestBody(): BufferedSource?","title":"takeRequestBody"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/take-response-body.html","text":"misk-testing / misk.web / FakeHttpCall / takeResponseBody takeResponseBody \u00b6 fun takeResponseBody(): BufferedSink?","title":"takeResponseBody - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/take-response-body.html#takeresponsebody","text":"fun takeResponseBody(): BufferedSink?","title":"takeResponseBody"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/take-web-socket.html","text":"misk-testing / misk.web / FakeHttpCall / takeWebSocket takeWebSocket \u00b6 fun takeWebSocket(): WebSocket?","title":"takeWebSocket - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/take-web-socket.html#takewebsocket","text":"fun takeWebSocket(): WebSocket?","title":"takeWebSocket"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/trailers-builder.html","text":"misk-testing / misk.web / FakeHttpCall / trailersBuilder trailersBuilder \u00b6 val trailersBuilder: Builder","title":"trailersBuilder - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/trailers-builder.html#trailersbuilder","text":"val trailersBuilder: Builder","title":"trailersBuilder"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/url.html","text":"misk-testing / misk.web / FakeHttpCall / url url \u00b6 val url: HttpUrl","title":"url - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/url.html#url","text":"val url: HttpUrl","title":"url"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/web-socket-listener.html","text":"misk-testing / misk.web / FakeHttpCall / webSocketListener webSocketListener \u00b6 var webSocketListener: WebSocketListener?","title":"webSocketListener - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/web-socket-listener.html#websocketlistener","text":"var webSocketListener: WebSocketListener?","title":"webSocketListener"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/web-socket.html","text":"misk-testing / misk.web / FakeHttpCall / webSocket webSocket \u00b6 var webSocket: WebSocket?","title":"webSocket - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-http-call/web-socket.html#websocket","text":"var webSocket: WebSocket?","title":"webSocket"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/index.html","text":"misk-testing / misk.web / FakeWebSocketListener FakeWebSocketListener \u00b6 class FakeWebSocketListener : WebSocketListener Constructors \u00b6 Name Summary <init> FakeWebSocketListener() Properties \u00b6 Name Summary messages val messages: LinkedBlockingDeque < String > Functions \u00b6 Name Summary onMessage fun onMessage(webSocket: WebSocket, text: String ): Unit takeMessage fun takeMessage(): String !","title":"FakeWebSocketListener - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/index.html#fakewebsocketlistener","text":"class FakeWebSocketListener : WebSocketListener","title":"FakeWebSocketListener"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/index.html#constructors","text":"Name Summary <init> FakeWebSocketListener()","title":"Constructors"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/index.html#properties","text":"Name Summary messages val messages: LinkedBlockingDeque < String >","title":"Properties"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/index.html#functions","text":"Name Summary onMessage fun onMessage(webSocket: WebSocket, text: String ): Unit takeMessage fun takeMessage(): String !","title":"Functions"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/-init-.html","text":"misk-testing / misk.web / FakeWebSocketListener / <init> <init> \u00b6 FakeWebSocketListener()","title":" init "},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/-init-.html#init","text":"FakeWebSocketListener()","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/messages.html","text":"misk-testing / misk.web / FakeWebSocketListener / messages messages \u00b6 val messages: LinkedBlockingDeque < String >","title":"messages - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/messages.html#messages","text":"val messages: LinkedBlockingDeque < String >","title":"messages"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/on-message.html","text":"misk-testing / misk.web / FakeWebSocketListener / onMessage onMessage \u00b6 fun onMessage(webSocket: WebSocket, text: String ): Unit","title":"onMessage - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/on-message.html#onmessage","text":"fun onMessage(webSocket: WebSocket, text: String ): Unit","title":"onMessage"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/take-message.html","text":"misk-testing / misk.web / FakeWebSocketListener / takeMessage takeMessage \u00b6 fun takeMessage(): String !","title":"takeMessage - Misk"},{"location":"0.x/misk-testing/misk.web/-fake-web-socket-listener/take-message.html#takemessage","text":"fun takeMessage(): String !","title":"takeMessage"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/index.html","text":"misk-testing / misk.web / WebServerTestingModule WebServerTestingModule \u00b6 class WebServerTestingModule : KAbstractModule A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS. Constructors \u00b6 Name Summary <init> WebServerTestingModule(webConfig: WebConfig = TESTING_WEB_CONFIG) A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS. Functions \u00b6 Name Summary configure fun configure(): Unit Companion Object Properties \u00b6 Name Summary TESTING_WEB_CONFIG val TESTING_WEB_CONFIG: WebConfig","title":"WebServerTestingModule - Misk"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/index.html#webservertestingmodule","text":"class WebServerTestingModule : KAbstractModule A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS.","title":"WebServerTestingModule"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/index.html#constructors","text":"Name Summary <init> WebServerTestingModule(webConfig: WebConfig = TESTING_WEB_CONFIG) A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS.","title":"Constructors"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/index.html#companion-object-properties","text":"Name Summary TESTING_WEB_CONFIG val TESTING_WEB_CONFIG: WebConfig","title":"Companion Object Properties"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/-init-.html","text":"misk-testing / misk.web / WebServerTestingModule / <init> <init> \u00b6 WebServerTestingModule(webConfig: WebConfig = TESTING_WEB_CONFIG) A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS.","title":" init "},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/-init-.html#init","text":"WebServerTestingModule(webConfig: WebConfig = TESTING_WEB_CONFIG) A module that starts an embedded Jetty web server configured for testing. The server supports both plaintext and TLS.","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/-t-e-s-t-i-n-g_-w-e-b_-c-o-n-f-i-g.html","text":"misk-testing / misk.web / WebServerTestingModule / TESTING_WEB_CONFIG TESTING_WEB_CONFIG \u00b6 val TESTING_WEB_CONFIG: WebConfig","title":"TESTING_WEB_CONFIG - Misk"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/-t-e-s-t-i-n-g_-w-e-b_-c-o-n-f-i-g.html#testing_web_config","text":"val TESTING_WEB_CONFIG: WebConfig","title":"TESTING_WEB_CONFIG"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/configure.html","text":"misk-testing / misk.web / WebServerTestingModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-testing/misk.web/-web-server-testing-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-testing/misk.web/-web-test-client/index.html","text":"misk-testing / misk.web / WebTestClient WebTestClient \u00b6 class WebTestClient Use WebTestClient to test calls to the application at the integration level. To use: Add @MiskTest(startService = true) to the test class Add a module under test: @MiskTestModule val module = TestModule() Add WebTestingModule to the module under test: install(WebTestingModule()) Inject WebTestClient in the test class Types \u00b6 Name Summary WebTestResponse data class WebTestResponse Constructors \u00b6 Name Summary <init> WebTestClient(moshi: Moshi, jettyService: JettyService) Use WebTestClient to test calls to the application at the integration level. Functions \u00b6 Name Summary call fun call(path: String , action: Builder.() -> Unit ): WebTestClient.WebTestResponse Performs a call to the started service. Allows the caller to customize the action before it\u2019s sent through. get fun get(path: String ): WebTestClient.WebTestResponse post fun <T : Any > post(path: String , body: T , tClass: KClass < T >): WebTestClient.WebTestResponse fun <T : Any > post(path: String , body: T ): WebTestClient.WebTestResponse Performs a POST request with a JSON request body created from the input. fun post(path: String , body: String , mediaType: MediaType = MediaTypes.APPLICATION_JSON_MEDIA_TYPE): WebTestClient.WebTestResponse Performs a POST request.","title":"WebTestClient - Misk"},{"location":"0.x/misk-testing/misk.web/-web-test-client/index.html#webtestclient","text":"class WebTestClient Use WebTestClient to test calls to the application at the integration level. To use: Add @MiskTest(startService = true) to the test class Add a module under test: @MiskTestModule val module = TestModule() Add WebTestingModule to the module under test: install(WebTestingModule()) Inject WebTestClient in the test class","title":"WebTestClient"},{"location":"0.x/misk-testing/misk.web/-web-test-client/index.html#types","text":"Name Summary WebTestResponse data class WebTestResponse","title":"Types"},{"location":"0.x/misk-testing/misk.web/-web-test-client/index.html#constructors","text":"Name Summary <init> WebTestClient(moshi: Moshi, jettyService: JettyService) Use WebTestClient to test calls to the application at the integration level.","title":"Constructors"},{"location":"0.x/misk-testing/misk.web/-web-test-client/index.html#functions","text":"Name Summary call fun call(path: String , action: Builder.() -> Unit ): WebTestClient.WebTestResponse Performs a call to the started service. Allows the caller to customize the action before it\u2019s sent through. get fun get(path: String ): WebTestClient.WebTestResponse post fun <T : Any > post(path: String , body: T , tClass: KClass < T >): WebTestClient.WebTestResponse fun <T : Any > post(path: String , body: T ): WebTestClient.WebTestResponse Performs a POST request with a JSON request body created from the input. fun post(path: String , body: String , mediaType: MediaType = MediaTypes.APPLICATION_JSON_MEDIA_TYPE): WebTestClient.WebTestResponse Performs a POST request.","title":"Functions"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-init-.html","text":"misk-testing / misk.web / WebTestClient / <init> <init> \u00b6 WebTestClient(moshi: Moshi, jettyService: JettyService) Use WebTestClient to test calls to the application at the integration level. To use: Add @MiskTest(startService = true) to the test class Add a module under test: @MiskTestModule val module = TestModule() Add WebTestingModule to the module under test: install(WebTestingModule()) Inject WebTestClient in the test class","title":" init "},{"location":"0.x/misk-testing/misk.web/-web-test-client/-init-.html#init","text":"WebTestClient(moshi: Moshi, jettyService: JettyService) Use WebTestClient to test calls to the application at the integration level. To use: Add @MiskTest(startService = true) to the test class Add a module under test: @MiskTestModule val module = TestModule() Add WebTestingModule to the module under test: install(WebTestingModule()) Inject WebTestClient in the test class","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.web/-web-test-client/call.html","text":"misk-testing / misk.web / WebTestClient / call call \u00b6 fun call(path: String , action: Builder.() -> Unit ): WebTestClient.WebTestResponse Performs a call to the started service. Allows the caller to customize the action before it\u2019s sent through.","title":"call - Misk"},{"location":"0.x/misk-testing/misk.web/-web-test-client/call.html#call","text":"fun call(path: String , action: Builder.() -> Unit ): WebTestClient.WebTestResponse Performs a call to the started service. Allows the caller to customize the action before it\u2019s sent through.","title":"call"},{"location":"0.x/misk-testing/misk.web/-web-test-client/get.html","text":"misk-testing / misk.web / WebTestClient / get get \u00b6 fun get(path: String ): WebTestClient.WebTestResponse","title":"get - Misk"},{"location":"0.x/misk-testing/misk.web/-web-test-client/get.html#get","text":"fun get(path: String ): WebTestClient.WebTestResponse","title":"get"},{"location":"0.x/misk-testing/misk.web/-web-test-client/post.html","text":"misk-testing / misk.web / WebTestClient / post post \u00b6 fun <T : Any > post(path: String , body: T , tClass: KClass < T >): WebTestClient.WebTestResponse inline fun <reified T : Any > post(path: String , body: T ): WebTestClient.WebTestResponse Performs a POST request with a JSON request body created from the input. fun post(path: String , body: String , mediaType: MediaType = MediaTypes.APPLICATION_JSON_MEDIA_TYPE): WebTestClient.WebTestResponse Performs a POST request.","title":"post - Misk"},{"location":"0.x/misk-testing/misk.web/-web-test-client/post.html#post","text":"fun <T : Any > post(path: String , body: T , tClass: KClass < T >): WebTestClient.WebTestResponse inline fun <reified T : Any > post(path: String , body: T ): WebTestClient.WebTestResponse Performs a POST request with a JSON request body created from the input. fun post(path: String , body: String , mediaType: MediaType = MediaTypes.APPLICATION_JSON_MEDIA_TYPE): WebTestClient.WebTestResponse Performs a POST request.","title":"post"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/index.html","text":"misk-testing / misk.web / WebTestClient / WebTestResponse WebTestResponse \u00b6 data class WebTestResponse Constructors \u00b6 Name Summary <init> WebTestResponse(response: Response, moshi: Moshi) Properties \u00b6 Name Summary response val response: Response Functions \u00b6 Name Summary parseJson fun <T : Any > parseJson(tClass: KClass < T >): T fun <T : Any > parseJson(): T","title":"WebTestResponse - Misk"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/index.html#webtestresponse","text":"data class WebTestResponse","title":"WebTestResponse"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/index.html#constructors","text":"Name Summary <init> WebTestResponse(response: Response, moshi: Moshi)","title":"Constructors"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/index.html#properties","text":"Name Summary response val response: Response","title":"Properties"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/index.html#functions","text":"Name Summary parseJson fun <T : Any > parseJson(tClass: KClass < T >): T fun <T : Any > parseJson(): T","title":"Functions"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/-init-.html","text":"misk-testing / misk.web / WebTestClient / WebTestResponse / <init> <init> \u00b6 WebTestResponse(response: Response, moshi: Moshi)","title":" init "},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/-init-.html#init","text":"WebTestResponse(response: Response, moshi: Moshi)","title":"&lt;init&gt;"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/parse-json.html","text":"misk-testing / misk.web / WebTestClient / WebTestResponse / parseJson parseJson \u00b6 fun <T : Any > parseJson(tClass: KClass < T >): T inline fun <reified T : Any > parseJson(): T","title":"parseJson - Misk"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/parse-json.html#parsejson","text":"fun <T : Any > parseJson(tClass: KClass < T >): T inline fun <reified T : Any > parseJson(): T","title":"parseJson"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/response.html","text":"misk-testing / misk.web / WebTestClient / WebTestResponse / response response \u00b6 val response: Response","title":"response - Misk"},{"location":"0.x/misk-testing/misk.web/-web-test-client/-web-test-response/response.html#response","text":"val response: Response","title":"response"},{"location":"0.x/misk-testing/org.assertj.core.api/index.html","text":"misk-testing / org.assertj.core.api Package org.assertj.core.api \u00b6 Functions \u00b6 Name Summary assertOrdering fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit containsExactly fun <KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE > isEqualToAsJson fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"Package org.assertj.core.api - Misk"},{"location":"0.x/misk-testing/org.assertj.core.api/index.html#package-orgassertjcoreapi","text":"","title":"Package org.assertj.core.api"},{"location":"0.x/misk-testing/org.assertj.core.api/index.html#functions","text":"Name Summary assertOrdering fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit containsExactly fun <KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE > isEqualToAsJson fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"Functions"},{"location":"0.x/misk-testing/org.assertj.core.api/assert-ordering.html","text":"misk-testing / org.assertj.core.api / assertOrdering assertOrdering \u00b6 fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit","title":"assertOrdering - Misk"},{"location":"0.x/misk-testing/org.assertj.core.api/assert-ordering.html#assertordering","text":"fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit","title":"assertOrdering"},{"location":"0.x/misk-testing/org.assertj.core.api/contains-exactly.html","text":"misk-testing / org.assertj.core.api / containsExactly containsExactly \u00b6 inline fun <reified KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE >","title":"containsExactly - Misk"},{"location":"0.x/misk-testing/org.assertj.core.api/contains-exactly.html#containsexactly","text":"inline fun <reified KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE >","title":"containsExactly"},{"location":"0.x/misk-testing/org.assertj.core.api/is-equal-to-as-json.html","text":"misk-testing / org.assertj.core.api / isEqualToAsJson isEqualToAsJson \u00b6 fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"isEqualToAsJson - Misk"},{"location":"0.x/misk-testing/org.assertj.core.api/is-equal-to-as-json.html#isequaltoasjson","text":"fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"isEqualToAsJson"},{"location":"0.x/misk-transactional-jobqueue/index.html","text":"misk-transactional-jobqueue Packages \u00b6 Name Summary misk.jobqueue Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-transactional-jobqueue/index.html#packages","text":"Name Summary misk.jobqueue","title":"Packages"},{"location":"0.x/misk-transactional-jobqueue/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-transactional-jobqueue/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.jobqueue.TransactionalJobQueue A TransactionalJobQueue supports enqueueing messages atomically in conjunction with making local database updates. With the transactional job queue, messages are written to a spooling table that is on the same database shard as the application\u2019s database entities, then forwards the messages asynchronously to the actual queueing system. Two variants of the enqueue operation exist - one which writes to the application\u2019s main shard, and another which writes to the shard on which a given entity group exists. Applications will typically use tbe second variant, writing jobs to the local shard in the context of a transaction that modifies the contents of an entity group.","title":"All Types - Misk"},{"location":"0.x/misk-transactional-jobqueue/alltypes/index.html#all-types","text":"Name Summary misk.jobqueue.TransactionalJobQueue A TransactionalJobQueue supports enqueueing messages atomically in conjunction with making local database updates. With the transactional job queue, messages are written to a spooling table that is on the same database shard as the application\u2019s database entities, then forwards the messages asynchronously to the actual queueing system. Two variants of the enqueue operation exist - one which writes to the application\u2019s main shard, and another which writes to the shard on which a given entity group exists. Applications will typically use tbe second variant, writing jobs to the local shard in the context of a transaction that modifies the contents of an entity group.","title":"All Types"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/index.html","text":"misk-transactional-jobqueue / misk.jobqueue Package misk.jobqueue \u00b6 Types \u00b6 Name Summary TransactionalJobQueue interface TransactionalJobQueue A TransactionalJobQueue supports enqueueing messages atomically in conjunction with making local database updates. With the transactional job queue, messages are written to a spooling table that is on the same database shard as the application\u2019s database entities, then forwards the messages asynchronously to the actual queueing system. Two variants of the enqueue operation exist - one which writes to the application\u2019s main shard, and another which writes to the shard on which a given entity group exists. Applications will typically use tbe second variant, writing jobs to the local shard in the context of a transaction that modifies the contents of an entity group.","title":"Package misk.jobqueue - Misk"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/index.html#package-miskjobqueue","text":"","title":"Package misk.jobqueue"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/index.html#types","text":"Name Summary TransactionalJobQueue interface TransactionalJobQueue A TransactionalJobQueue supports enqueueing messages atomically in conjunction with making local database updates. With the transactional job queue, messages are written to a spooling table that is on the same database shard as the application\u2019s database entities, then forwards the messages asynchronously to the actual queueing system. Two variants of the enqueue operation exist - one which writes to the application\u2019s main shard, and another which writes to the shard on which a given entity group exists. Applications will typically use tbe second variant, writing jobs to the local shard in the context of a transaction that modifies the contents of an entity group.","title":"Types"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/-transactional-job-queue/index.html","text":"misk-transactional-jobqueue / misk.jobqueue / TransactionalJobQueue TransactionalJobQueue \u00b6 interface TransactionalJobQueue A TransactionalJobQueue supports enqueueing messages atomically in conjunction with making local database updates. With the transactional job queue, messages are written to a spooling table that is on the same database shard as the application\u2019s database entities, then forwards the messages asynchronously to the actual queueing system. Two variants of the enqueue operation exist - one which writes to the application\u2019s main shard, and another which writes to the shard on which a given entity group exists. Applications will typically use tbe second variant, writing jobs to the local shard in the context of a transaction that modifies the contents of an entity group. Functions \u00b6 Name Summary enqueue abstract fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the database shard associated with the given entity group. Will throw an exception if the session is associated with a different entity group. abstract fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the primary (unaffiliated) database shard . Will throw an exception if the session is associated with an entity group.","title":"TransactionalJobQueue - Misk"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/-transactional-job-queue/index.html#transactionaljobqueue","text":"interface TransactionalJobQueue A TransactionalJobQueue supports enqueueing messages atomically in conjunction with making local database updates. With the transactional job queue, messages are written to a spooling table that is on the same database shard as the application\u2019s database entities, then forwards the messages asynchronously to the actual queueing system. Two variants of the enqueue operation exist - one which writes to the application\u2019s main shard, and another which writes to the shard on which a given entity group exists. Applications will typically use tbe second variant, writing jobs to the local shard in the context of a transaction that modifies the contents of an entity group.","title":"TransactionalJobQueue"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/-transactional-job-queue/index.html#functions","text":"Name Summary enqueue abstract fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the database shard associated with the given entity group. Will throw an exception if the session is associated with a different entity group. abstract fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the primary (unaffiliated) database shard . Will throw an exception if the session is associated with an entity group.","title":"Functions"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/-transactional-job-queue/enqueue.html","text":"misk-transactional-jobqueue / misk.jobqueue / TransactionalJobQueue / enqueue enqueue \u00b6 abstract fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the database shard associated with the given entity group. Will throw an exception if the session is associated with a different entity group. Parameters \u00b6 session - The database session to use in writing the job gid - The id of the entity group with which the job should be associated queueName - the name of the queue on which to place the job body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. attributes - Arbitrary contextual attributes associated with the job abstract fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the primary (unaffiliated) database shard . Will throw an exception if the session is associated with an entity group. Parameters \u00b6 session - The database session to use in writing the job queueName - the name of the queue on which to place the job body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. attributes - Arbitrary contextual attributes associated with the job","title":"enqueue - Misk"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/-transactional-job-queue/enqueue.html#enqueue","text":"abstract fun enqueue(session: Session, gid: Gid<*, *>, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the database shard associated with the given entity group. Will throw an exception if the session is associated with a different entity group.","title":"enqueue"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/-transactional-job-queue/enqueue.html#parameters","text":"session - The database session to use in writing the job gid - The id of the entity group with which the job should be associated queueName - the name of the queue on which to place the job body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. attributes - Arbitrary contextual attributes associated with the job abstract fun enqueue(session: Session, queueName: QueueName, body: String , idempotenceKey: String = UUID.randomUUID().toString(), deliveryDelay: Duration ? = null, attributes: Map < String , String > = mapOf()): Unit Enqueues a job to the primary (unaffiliated) database shard . Will throw an exception if the session is associated with an entity group.","title":"Parameters"},{"location":"0.x/misk-transactional-jobqueue/misk.jobqueue/-transactional-job-queue/enqueue.html#parameters_1","text":"session - The database session to use in writing the job queueName - the name of the queue on which to place the job body - The body of the job; can be any arbitrary string - it is up to the enqueuer and consumer to agree on the format of the body idempotenceKey - Client-assigned unique key, useful for application code to detect duplicate work. Implementations are expected to not perform any filtering based on this value, as it carries meaning only for application code (i.e. any logic around this property should take place in JobHandler s). Defaults to a randomly generated UUID when not explicitly set. deliveryDelay - If specified, the job will only become visible to the consumer after the provided duration. Used for jobs that should delay processing for a period of time. attributes - Arbitrary contextual attributes associated with the job","title":"Parameters"},{"location":"0.x/misk-warmup/index.html","text":"misk-warmup Packages \u00b6 Name Summary misk.warmup Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-warmup/index.html#packages","text":"Name Summary misk.warmup","title":"Packages"},{"location":"0.x/misk-warmup/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-warmup/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.warmup.WarmupModule misk.warmup.WarmupTask Register a warmup task in your service with the following:","title":"All Types - Misk"},{"location":"0.x/misk-warmup/alltypes/index.html#all-types","text":"Name Summary misk.warmup.WarmupModule misk.warmup.WarmupTask Register a warmup task in your service with the following:","title":"All Types"},{"location":"0.x/misk-warmup/misk.warmup/index.html","text":"misk-warmup / misk.warmup Package misk.warmup \u00b6 Types \u00b6 Name Summary WarmupModule class WarmupModule : KAbstractModule WarmupTask abstract class WarmupTask Register a warmup task in your service with the following: Functions \u00b6 Name Summary WarmupModule fun <T : WarmupTask > WarmupModule(qualifier: KClass <out Annotation >? = null): WarmupModule","title":"Package misk.warmup - Misk"},{"location":"0.x/misk-warmup/misk.warmup/index.html#package-miskwarmup","text":"","title":"Package misk.warmup"},{"location":"0.x/misk-warmup/misk.warmup/index.html#types","text":"Name Summary WarmupModule class WarmupModule : KAbstractModule WarmupTask abstract class WarmupTask Register a warmup task in your service with the following:","title":"Types"},{"location":"0.x/misk-warmup/misk.warmup/index.html#functions","text":"Name Summary WarmupModule fun <T : WarmupTask > WarmupModule(qualifier: KClass <out Annotation >? = null): WarmupModule","title":"Functions"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module.html","text":"misk-warmup / misk.warmup / WarmupModule WarmupModule \u00b6 inline fun <reified T : WarmupTask > WarmupModule(qualifier: KClass <out Annotation >? = null): WarmupModule","title":"WarmupModule - Misk"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module.html#warmupmodule","text":"inline fun <reified T : WarmupTask > WarmupModule(qualifier: KClass <out Annotation >? = null): WarmupModule","title":"WarmupModule"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/index.html","text":"misk-warmup / misk.warmup / WarmupModule WarmupModule \u00b6 class WarmupModule : KAbstractModule Constructors \u00b6 Name Summary <init> WarmupModule(name: String , key: Key<out WarmupTask >) Functions \u00b6 Name Summary configure fun configure(): Unit","title":"WarmupModule - Misk"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/index.html#warmupmodule","text":"class WarmupModule : KAbstractModule","title":"WarmupModule"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/index.html#constructors","text":"Name Summary <init> WarmupModule(name: String , key: Key<out WarmupTask >)","title":"Constructors"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/-init-.html","text":"misk-warmup / misk.warmup / WarmupModule / <init> <init> \u00b6 WarmupModule(name: String , key: Key<out WarmupTask >)","title":" init "},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/-init-.html#init","text":"WarmupModule(name: String , key: Key<out WarmupTask >)","title":"&lt;init&gt;"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/configure.html","text":"misk-warmup / misk.warmup / WarmupModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/index.html","text":"misk-warmup / misk.warmup / WarmupTask WarmupTask \u00b6 abstract class WarmupTask Register a warmup task in your service with the following: install(WarmupModule<MyWarmupTask>()) Misk will run the task after all services have started successfully, but before health checks report the service as healthy. Warm up tasks should complete quickly (under 10 seconds is best) because the service won\u2019t serve live traffic until all warm up tasks complete. Constructors \u00b6 Name Summary <init> WarmupTask() Register a warmup task in your service with the following: Functions \u00b6 Name Summary execute abstract fun execute(): Unit Perform production-like work to cause caches to be seeded, pools to be filled, and hot spots to be compiled. This should return once warmup is complete.","title":"WarmupTask - Misk"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/index.html#warmuptask","text":"abstract class WarmupTask Register a warmup task in your service with the following: install(WarmupModule<MyWarmupTask>()) Misk will run the task after all services have started successfully, but before health checks report the service as healthy. Warm up tasks should complete quickly (under 10 seconds is best) because the service won\u2019t serve live traffic until all warm up tasks complete.","title":"WarmupTask"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/index.html#constructors","text":"Name Summary <init> WarmupTask() Register a warmup task in your service with the following:","title":"Constructors"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/index.html#functions","text":"Name Summary execute abstract fun execute(): Unit Perform production-like work to cause caches to be seeded, pools to be filled, and hot spots to be compiled. This should return once warmup is complete.","title":"Functions"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/-init-.html","text":"misk-warmup / misk.warmup / WarmupTask / <init> <init> \u00b6 WarmupTask() Register a warmup task in your service with the following: install(WarmupModule<MyWarmupTask>()) Misk will run the task after all services have started successfully, but before health checks report the service as healthy. Warm up tasks should complete quickly (under 10 seconds is best) because the service won\u2019t serve live traffic until all warm up tasks complete.","title":" init "},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/-init-.html#init","text":"WarmupTask() Register a warmup task in your service with the following: install(WarmupModule<MyWarmupTask>()) Misk will run the task after all services have started successfully, but before health checks report the service as healthy. Warm up tasks should complete quickly (under 10 seconds is best) because the service won\u2019t serve live traffic until all warm up tasks complete.","title":"&lt;init&gt;"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/execute.html","text":"misk-warmup / misk.warmup / WarmupTask / execute execute \u00b6 abstract fun execute(): Unit Perform production-like work to cause caches to be seeded, pools to be filled, and hot spots to be compiled. This should return once warmup is complete.","title":"execute - Misk"},{"location":"0.x/misk-warmup/misk.warmup/-warmup-task/execute.html#execute","text":"abstract fun execute(): Unit Perform production-like work to cause caches to be seeded, pools to be filled, and hot spots to be compiled. This should return once warmup is complete.","title":"execute"},{"location":"0.x/misk-zookeeper/index.html","text":"misk-zookeeper Packages \u00b6 Name Summary misk.clustering.zookeeper misk.zookeeper Index \u00b6 All Types","title":"misk-zookeeper"},{"location":"0.x/misk-zookeeper/index.html#packages","text":"Name Summary misk.clustering.zookeeper misk.zookeeper","title":"Packages"},{"location":"0.x/misk-zookeeper/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-zookeeper/alltypes/index.html","text":"All Types \u00b6 Name Summary org.apache.curator.framework.CuratorFramework (extensions in package misk.clustering.zookeeper) misk.zookeeper.CuratorFrameworkModule Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . misk.zookeeper.FixedEnsembleProviderModule misk.clustering.zookeeper.ForZkLease misk.zookeeper.StaticHostModule Binds a zk HostProvider to a StaticHostProvider . kotlin.String (extensions in package misk.clustering.zookeeper) misk.zookeeper.ZkClientFactory Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace. misk.clustering.zookeeper.ZkLeaseModule Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example. misk.zookeeper.ZkService misk.clustering.zookeeper.ZookeeperConfig misk.zookeeper.ZookeeperDefaultModule Provides a connection to a qualified Zookeeper server with default settings.","title":"All Types - Misk"},{"location":"0.x/misk-zookeeper/alltypes/index.html#all-types","text":"Name Summary org.apache.curator.framework.CuratorFramework (extensions in package misk.clustering.zookeeper) misk.zookeeper.CuratorFrameworkModule Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . misk.zookeeper.FixedEnsembleProviderModule misk.clustering.zookeeper.ForZkLease misk.zookeeper.StaticHostModule Binds a zk HostProvider to a StaticHostProvider . kotlin.String (extensions in package misk.clustering.zookeeper) misk.zookeeper.ZkClientFactory Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace. misk.clustering.zookeeper.ZkLeaseModule Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example. misk.zookeeper.ZkService misk.clustering.zookeeper.ZookeeperConfig misk.zookeeper.ZookeeperDefaultModule Provides a connection to a qualified Zookeeper server with default settings.","title":"All Types"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/index.html","text":"misk-zookeeper / misk.clustering.zookeeper Package misk.clustering.zookeeper \u00b6 Types \u00b6 Name Summary ZkLeaseModule class ZkLeaseModule : KAbstractModule Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example. ZookeeperConfig data class ZookeeperConfig : Config Annotations \u00b6 Name Summary ForZkLease annotation class ForZkLease Extensions for External Classes \u00b6 Name Summary kotlin.String org.apache.curator.framework.CuratorFramework","title":"Package misk.clustering.zookeeper - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/index.html#package-miskclusteringzookeeper","text":"","title":"Package misk.clustering.zookeeper"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/index.html#types","text":"Name Summary ZkLeaseModule class ZkLeaseModule : KAbstractModule Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example. ZookeeperConfig data class ZookeeperConfig : Config","title":"Types"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/index.html#annotations","text":"Name Summary ForZkLease annotation class ForZkLease","title":"Annotations"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/index.html#extensions-for-external-classes","text":"Name Summary kotlin.String org.apache.curator.framework.CuratorFramework","title":"Extensions for External Classes"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-for-zk-lease/index.html","text":"misk-zookeeper / misk.clustering.zookeeper / ForZkLease ForZkLease \u00b6 @Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION, AnnotationTarget.VALUE_PARAMETER]) annotation class ForZkLease Constructors \u00b6 Name Summary <init> ForZkLease()","title":"ForZkLease - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-for-zk-lease/index.html#forzklease","text":"@Qualifier @Target([AnnotationTarget.FIELD, AnnotationTarget.FUNCTION, AnnotationTarget.VALUE_PARAMETER]) annotation class ForZkLease","title":"ForZkLease"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-for-zk-lease/index.html#constructors","text":"Name Summary <init> ForZkLease()","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-for-zk-lease/-init-.html","text":"misk-zookeeper / misk.clustering.zookeeper / ForZkLease / <init> <init> \u00b6 ForZkLease()","title":" init "},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-for-zk-lease/-init-.html#init","text":"ForZkLease()","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/index.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZkLeaseModule ZkLeaseModule \u00b6 class ZkLeaseModule : KAbstractModule Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example. Constructors \u00b6 Name Summary <init> ZkLeaseModule() Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example. Functions \u00b6 Name Summary configure fun configure(): Unit provideTaskQueue fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue Companion Object Properties \u00b6 Name Summary leaseManagerKey val leaseManagerKey: Key<*>","title":"ZkLeaseModule - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/index.html#zkleasemodule","text":"class ZkLeaseModule : KAbstractModule Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example.","title":"ZkLeaseModule"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/index.html#constructors","text":"Name Summary <init> ZkLeaseModule() Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example.","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/index.html#functions","text":"Name Summary configure fun configure(): Unit provideTaskQueue fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue","title":"Functions"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/index.html#companion-object-properties","text":"Name Summary leaseManagerKey val leaseManagerKey: Key<*>","title":"Companion Object Properties"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/-init-.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZkLeaseModule / <init> <init> \u00b6 ZkLeaseModule() Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example.","title":" init "},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/-init-.html#init","text":"ZkLeaseModule() Provides a zk impl for a LeaseManager . Applications must still provide a zk connection. See ZookeeperDefaultModule for an example.","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/configure.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZkLeaseModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/lease-manager-key.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZkLeaseModule / leaseManagerKey leaseManagerKey \u00b6 val leaseManagerKey: Key<*>","title":"leaseManagerKey - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/lease-manager-key.html#leasemanagerkey","text":"val leaseManagerKey: Key<*>","title":"leaseManagerKey"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/provide-task-queue.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZkLeaseModule / provideTaskQueue provideTaskQueue \u00b6 @Provides @Singleton fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue","title":"provideTaskQueue - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zk-lease-module/provide-task-queue.html#providetaskqueue","text":"@Provides @Singleton fun provideTaskQueue(queueFactory: RepeatedTaskQueueFactory): RepeatedTaskQueue","title":"provideTaskQueue"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/index.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZookeeperConfig ZookeeperConfig \u00b6 data class ZookeeperConfig : Config Constructors \u00b6 Name Summary <init> ZookeeperConfig(zk_connect: String , session_timeout_msecs: Int = 3000, cert_store: CertStoreConfig? = null, trust_store: TrustStoreConfig? = null) Properties \u00b6 Name Summary cert_store val cert_store: CertStoreConfig? session_timeout_msecs val session_timeout_msecs: Int trust_store val trust_store: TrustStoreConfig? zk_connect val zk_connect: String","title":"ZookeeperConfig - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/index.html#zookeeperconfig","text":"data class ZookeeperConfig : Config","title":"ZookeeperConfig"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/index.html#constructors","text":"Name Summary <init> ZookeeperConfig(zk_connect: String , session_timeout_msecs: Int = 3000, cert_store: CertStoreConfig? = null, trust_store: TrustStoreConfig? = null)","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/index.html#properties","text":"Name Summary cert_store val cert_store: CertStoreConfig? session_timeout_msecs val session_timeout_msecs: Int trust_store val trust_store: TrustStoreConfig? zk_connect val zk_connect: String","title":"Properties"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/-init-.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZookeeperConfig / <init> <init> \u00b6 ZookeeperConfig(zk_connect: String , session_timeout_msecs: Int = 3000, cert_store: CertStoreConfig? = null, trust_store: TrustStoreConfig? = null)","title":" init "},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/-init-.html#init","text":"ZookeeperConfig(zk_connect: String , session_timeout_msecs: Int = 3000, cert_store: CertStoreConfig? = null, trust_store: TrustStoreConfig? = null)","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/cert_store.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZookeeperConfig / cert_store cert_store \u00b6 val cert_store: CertStoreConfig?","title":"cert_store - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/cert_store.html#cert_store","text":"val cert_store: CertStoreConfig?","title":"cert_store"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/session_timeout_msecs.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZookeeperConfig / session_timeout_msecs session_timeout_msecs \u00b6 val session_timeout_msecs: Int","title":"session_timeout_msecs - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/session_timeout_msecs.html#session_timeout_msecs","text":"val session_timeout_msecs: Int","title":"session_timeout_msecs"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/trust_store.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZookeeperConfig / trust_store trust_store \u00b6 val trust_store: TrustStoreConfig?","title":"trust_store - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/trust_store.html#trust_store","text":"val trust_store: TrustStoreConfig?","title":"trust_store"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/zk_connect.html","text":"misk-zookeeper / misk.clustering.zookeeper / ZookeeperConfig / zk_connect zk_connect \u00b6 val zk_connect: String","title":"zk_connect - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/-zookeeper-config/zk_connect.html#zk_connect","text":"val zk_connect: String","title":"zk_connect"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/kotlin.-string/index.html","text":"misk-zookeeper / misk.clustering.zookeeper / kotlin.String Extensions for kotlin.String \u00b6 Name Summary asZkNamespace val String .asZkNamespace: String asZkPath val String .asZkPath: String","title":"Extensions for kotlin.String - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/kotlin.-string/index.html#extensions-for-kotlinstring","text":"Name Summary asZkNamespace val String .asZkNamespace: String asZkPath val String .asZkPath: String","title":"Extensions for kotlin.String"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/kotlin.-string/as-zk-namespace.html","text":"misk-zookeeper / misk.clustering.zookeeper / kotlin.String / asZkNamespace asZkNamespace \u00b6 val String .asZkNamespace: String Return a version of the path suitable for as a namespace (see CuratorFramework.usingNamespace","title":"asZkNamespace - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/kotlin.-string/as-zk-namespace.html#aszknamespace","text":"val String .asZkNamespace: String Return a version of the path suitable for as a namespace (see CuratorFramework.usingNamespace","title":"asZkNamespace"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/kotlin.-string/as-zk-path.html","text":"misk-zookeeper / misk.clustering.zookeeper / kotlin.String / asZkPath asZkPath \u00b6 val String .asZkPath: String Return a version of the string suitable as a path","title":"asZkPath - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/kotlin.-string/as-zk-path.html#aszkpath","text":"val String .asZkPath: String Return a version of the string suitable as a path","title":"asZkPath"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/org.apache.curator.framework.-curator-framework/index.html","text":"misk-zookeeper / misk.clustering.zookeeper / org.apache.curator.framework.CuratorFramework Extensions for org.apache.curator.framework.CuratorFramework \u00b6 Name Summary isConnected val CuratorFramework.isConnected: Boolean isRunning val CuratorFramework.isRunning: Boolean","title":"Extensions for org.apache.curator.framework.CuratorFramework - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/org.apache.curator.framework.-curator-framework/index.html#extensions-for-orgapachecuratorframeworkcuratorframework","text":"Name Summary isConnected val CuratorFramework.isConnected: Boolean isRunning val CuratorFramework.isRunning: Boolean","title":"Extensions for org.apache.curator.framework.CuratorFramework"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/org.apache.curator.framework.-curator-framework/is-connected.html","text":"misk-zookeeper / misk.clustering.zookeeper / org.apache.curator.framework.CuratorFramework / isConnected isConnected \u00b6 val CuratorFramework.isConnected: Boolean Return true if the client is connected to zk","title":"isConnected - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/org.apache.curator.framework.-curator-framework/is-connected.html#isconnected","text":"val CuratorFramework.isConnected: Boolean Return true if the client is connected to zk","title":"isConnected"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/org.apache.curator.framework.-curator-framework/is-running.html","text":"misk-zookeeper / misk.clustering.zookeeper / org.apache.curator.framework.CuratorFramework / isRunning isRunning \u00b6 val CuratorFramework.isRunning: Boolean Return true if the client is running","title":"isRunning - Misk"},{"location":"0.x/misk-zookeeper/misk.clustering.zookeeper/org.apache.curator.framework.-curator-framework/is-running.html#isrunning","text":"val CuratorFramework.isRunning: Boolean Return true if the client is running","title":"isRunning"},{"location":"0.x/misk-zookeeper/misk.zookeeper/index.html","text":"misk-zookeeper / misk.zookeeper Package misk.zookeeper \u00b6 Types \u00b6 Name Summary CuratorFrameworkModule class CuratorFrameworkModule : KAbstractModule Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . FixedEnsembleProviderModule class FixedEnsembleProviderModule : KAbstractModule StaticHostModule class StaticHostModule : KAbstractModule Binds a zk HostProvider to a StaticHostProvider . ZkClientFactory class ZkClientFactory Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace. ZkService class ZkService : AbstractIdleService ZookeeperDefaultModule class ZookeeperDefaultModule : KAbstractModule Provides a connection to a qualified Zookeeper server with default settings. Properties \u00b6 Name Summary DEFAULT_PERMS const val DEFAULT_PERMS: Int SERVICES_NODE const val SERVICES_NODE: String SHARED_DIR_PERMS const val SHARED_DIR_PERMS: Int","title":"Package misk.zookeeper - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/index.html#package-miskzookeeper","text":"","title":"Package misk.zookeeper"},{"location":"0.x/misk-zookeeper/misk.zookeeper/index.html#types","text":"Name Summary CuratorFrameworkModule class CuratorFrameworkModule : KAbstractModule Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . FixedEnsembleProviderModule class FixedEnsembleProviderModule : KAbstractModule StaticHostModule class StaticHostModule : KAbstractModule Binds a zk HostProvider to a StaticHostProvider . ZkClientFactory class ZkClientFactory Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace. ZkService class ZkService : AbstractIdleService ZookeeperDefaultModule class ZookeeperDefaultModule : KAbstractModule Provides a connection to a qualified Zookeeper server with default settings.","title":"Types"},{"location":"0.x/misk-zookeeper/misk.zookeeper/index.html#properties","text":"Name Summary DEFAULT_PERMS const val DEFAULT_PERMS: Int SERVICES_NODE const val SERVICES_NODE: String SHARED_DIR_PERMS const val SHARED_DIR_PERMS: Int","title":"Properties"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-d-e-f-a-u-l-t_-p-e-r-m-s.html","text":"misk-zookeeper / misk.zookeeper / DEFAULT_PERMS DEFAULT_PERMS \u00b6 const val DEFAULT_PERMS: Int","title":"DEFAULT_PERMS - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-d-e-f-a-u-l-t_-p-e-r-m-s.html#default_perms","text":"const val DEFAULT_PERMS: Int","title":"DEFAULT_PERMS"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-s-e-r-v-i-c-e-s_-n-o-d-e.html","text":"misk-zookeeper / misk.zookeeper / SERVICES_NODE SERVICES_NODE \u00b6 const val SERVICES_NODE: String","title":"SERVICES_NODE - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-s-e-r-v-i-c-e-s_-n-o-d-e.html#services_node","text":"const val SERVICES_NODE: String","title":"SERVICES_NODE"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-s-h-a-r-e-d_-d-i-r_-p-e-r-m-s.html","text":"misk-zookeeper / misk.zookeeper / SHARED_DIR_PERMS SHARED_DIR_PERMS \u00b6 const val SHARED_DIR_PERMS: Int","title":"SHARED_DIR_PERMS - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-s-h-a-r-e-d_-d-i-r_-p-e-r-m-s.html#shared_dir_perms","text":"const val SHARED_DIR_PERMS: Int","title":"SHARED_DIR_PERMS"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/index.html","text":"misk-zookeeper / misk.zookeeper / CuratorFrameworkModule CuratorFrameworkModule \u00b6 class CuratorFrameworkModule : KAbstractModule Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . If an application needs to connect to multiple Zookeepers, an optional qualifier can be passed resulting in an annotated CuratorFramework binding. @Qualifier annotation class MyZk install(CuratorFrameworkModule(config, MyZk::class) @Inject @MyZk CuratorFramework Constructors \u00b6 Name Summary <init> CuratorFrameworkModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . Functions \u00b6 Name Summary configure fun configure(): Unit","title":"CuratorFrameworkModule - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/index.html#curatorframeworkmodule","text":"class CuratorFrameworkModule : KAbstractModule Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . If an application needs to connect to multiple Zookeepers, an optional qualifier can be passed resulting in an annotated CuratorFramework binding. @Qualifier annotation class MyZk install(CuratorFrameworkModule(config, MyZk::class) @Inject @MyZk CuratorFramework","title":"CuratorFrameworkModule"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/index.html#constructors","text":"Name Summary <init> CuratorFrameworkModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework .","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/-init-.html","text":"misk-zookeeper / misk.zookeeper / CuratorFrameworkModule / <init> <init> \u00b6 CuratorFrameworkModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . If an application needs to connect to multiple Zookeepers, an optional qualifier can be passed resulting in an annotated CuratorFramework binding. @Qualifier annotation class MyZk install(CuratorFrameworkModule(config, MyZk::class) @Inject @MyZk CuratorFramework","title":" init "},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/-init-.html#init","text":"CuratorFrameworkModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a CuratorFramework for an application to use. A Service is also installed to manage the lifecycle of the CuratorFramework . If an application needs to connect to multiple Zookeepers, an optional qualifier can be passed resulting in an annotated CuratorFramework binding. @Qualifier annotation class MyZk install(CuratorFrameworkModule(config, MyZk::class) @Inject @MyZk CuratorFramework","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/configure.html","text":"misk-zookeeper / misk.zookeeper / CuratorFrameworkModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-curator-framework-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/index.html","text":"misk-zookeeper / misk.zookeeper / FixedEnsembleProviderModule FixedEnsembleProviderModule \u00b6 class FixedEnsembleProviderModule : KAbstractModule Constructors \u00b6 Name Summary <init> FixedEnsembleProviderModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >?) Functions \u00b6 Name Summary configure fun configure(): Unit","title":"FixedEnsembleProviderModule - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/index.html#fixedensembleprovidermodule","text":"class FixedEnsembleProviderModule : KAbstractModule","title":"FixedEnsembleProviderModule"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/index.html#constructors","text":"Name Summary <init> FixedEnsembleProviderModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >?)","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/-init-.html","text":"misk-zookeeper / misk.zookeeper / FixedEnsembleProviderModule / <init> <init> \u00b6 FixedEnsembleProviderModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >?)","title":" init "},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/-init-.html#init","text":"FixedEnsembleProviderModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >?)","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/configure.html","text":"misk-zookeeper / misk.zookeeper / FixedEnsembleProviderModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-fixed-ensemble-provider-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/index.html","text":"misk-zookeeper / misk.zookeeper / StaticHostModule StaticHostModule \u00b6 class StaticHostModule : KAbstractModule Binds a zk HostProvider to a StaticHostProvider . This is the default implementation used by Zookeeper. Constructors \u00b6 Name Summary <init> StaticHostModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a zk HostProvider to a StaticHostProvider . Functions \u00b6 Name Summary configure fun configure(): Unit","title":"StaticHostModule - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/index.html#statichostmodule","text":"class StaticHostModule : KAbstractModule Binds a zk HostProvider to a StaticHostProvider . This is the default implementation used by Zookeeper.","title":"StaticHostModule"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/index.html#constructors","text":"Name Summary <init> StaticHostModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a zk HostProvider to a StaticHostProvider .","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/-init-.html","text":"misk-zookeeper / misk.zookeeper / StaticHostModule / <init> <init> \u00b6 StaticHostModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a zk HostProvider to a StaticHostProvider . This is the default implementation used by Zookeeper.","title":" init "},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/-init-.html#init","text":"StaticHostModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Binds a zk HostProvider to a StaticHostProvider . This is the default implementation used by Zookeeper.","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/configure.html","text":"misk-zookeeper / misk.zookeeper / StaticHostModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-static-host-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/index.html","text":"misk-zookeeper / misk.zookeeper / ZkClientFactory ZkClientFactory \u00b6 class ZkClientFactory Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace. Constructors \u00b6 Name Summary <init> ZkClientFactory(appName: String , curator: CuratorFramework) Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace. Functions \u00b6 Name Summary client fun client(): CuratorFramework","title":"ZkClientFactory - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/index.html#zkclientfactory","text":"class ZkClientFactory Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace.","title":"ZkClientFactory"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/index.html#constructors","text":"Name Summary <init> ZkClientFactory(appName: String , curator: CuratorFramework) Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace.","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/index.html#functions","text":"Name Summary client fun client(): CuratorFramework","title":"Functions"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/-init-.html","text":"misk-zookeeper / misk.zookeeper / ZkClientFactory / <init> <init> \u00b6 ZkClientFactory(appName: String , curator: CuratorFramework) Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace.","title":" init "},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/-init-.html#init","text":"ZkClientFactory(appName: String , curator: CuratorFramework) Factory for generating a zookeeper client that\u2019s configured to read and write data within the app\u2019s namespace.","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/client.html","text":"misk-zookeeper / misk.zookeeper / ZkClientFactory / client client \u00b6 fun client(): CuratorFramework","title":"client - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-client-factory/client.html#client","text":"fun client(): CuratorFramework","title":"client"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-service/index.html","text":"misk-zookeeper / misk.zookeeper / ZkService ZkService \u00b6 class ZkService : AbstractIdleService Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"ZkService - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-service/index.html#zkservice","text":"class ZkService : AbstractIdleService","title":"ZkService"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-service/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-service/shut-down.html","text":"misk-zookeeper / misk.zookeeper / ZkService / shutDown shutDown \u00b6 protected fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-service/shut-down.html#shutdown","text":"protected fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-service/start-up.html","text":"misk-zookeeper / misk.zookeeper / ZkService / startUp startUp \u00b6 protected fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zk-service/start-up.html#startup","text":"protected fun startUp(): Unit","title":"startUp"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/index.html","text":"misk-zookeeper / misk.zookeeper / ZookeeperDefaultModule ZookeeperDefaultModule \u00b6 class ZookeeperDefaultModule : KAbstractModule Provides a connection to a qualified Zookeeper server with default settings. Applications can install this module directly to use the default settings or provide explicit bindings to override the defaults. Constructors \u00b6 Name Summary <init> ZookeeperDefaultModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Provides a connection to a qualified Zookeeper server with default settings. Functions \u00b6 Name Summary configure fun configure(): Unit","title":"ZookeeperDefaultModule - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/index.html#zookeeperdefaultmodule","text":"class ZookeeperDefaultModule : KAbstractModule Provides a connection to a qualified Zookeeper server with default settings. Applications can install this module directly to use the default settings or provide explicit bindings to override the defaults.","title":"ZookeeperDefaultModule"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/index.html#constructors","text":"Name Summary <init> ZookeeperDefaultModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Provides a connection to a qualified Zookeeper server with default settings.","title":"Constructors"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/-init-.html","text":"misk-zookeeper / misk.zookeeper / ZookeeperDefaultModule / <init> <init> \u00b6 ZookeeperDefaultModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Provides a connection to a qualified Zookeeper server with default settings. Applications can install this module directly to use the default settings or provide explicit bindings to override the defaults.","title":" init "},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/-init-.html#init","text":"ZookeeperDefaultModule(config: ZookeeperConfig , qualifier: KClass <out Annotation >? = null) Provides a connection to a qualified Zookeeper server with default settings. Applications can install this module directly to use the default settings or provide explicit bindings to override the defaults.","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/configure.html","text":"misk-zookeeper / misk.zookeeper / ZookeeperDefaultModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-zookeeper/misk.zookeeper/-zookeeper-default-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/misk-zookeeper-testing/index.html","text":"misk-zookeeper-testing Packages \u00b6 Name Summary misk.zookeeper.testing Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/misk-zookeeper-testing/index.html#packages","text":"Name Summary misk.zookeeper.testing","title":"Packages"},{"location":"0.x/misk-zookeeper-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/misk-zookeeper-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary misk.zookeeper.testing.EmbeddedZookeeper misk.zookeeper.testing.ZkTestModule","title":"All Types - Misk"},{"location":"0.x/misk-zookeeper-testing/alltypes/index.html#all-types","text":"Name Summary misk.zookeeper.testing.EmbeddedZookeeper misk.zookeeper.testing.ZkTestModule","title":"All Types"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/index.html","text":"misk-zookeeper-testing / misk.zookeeper.testing Package misk.zookeeper.testing \u00b6 Types \u00b6 Name Summary EmbeddedZookeeper class EmbeddedZookeeper ZkTestModule class ZkTestModule : KAbstractModule Functions \u00b6 Name Summary main fun main(args: Array < String >): Unit","title":"Package misk.zookeeper.testing - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/index.html#package-miskzookeepertesting","text":"","title":"Package misk.zookeeper.testing"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/index.html#types","text":"Name Summary EmbeddedZookeeper class EmbeddedZookeeper ZkTestModule class ZkTestModule : KAbstractModule","title":"Types"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/index.html#functions","text":"Name Summary main fun main(args: Array < String >): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/main.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / main main \u00b6 fun main(args: Array < String >): Unit","title":"main - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/main.html#main","text":"fun main(args: Array < String >): Unit","title":"main"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/index.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper EmbeddedZookeeper \u00b6 class EmbeddedZookeeper Constructors \u00b6 Name Summary <init> EmbeddedZookeeper(basePort: Int ) Properties \u00b6 Name Summary basePort val basePort: Int Functions \u00b6 Name Summary start fun start(): Unit stop fun stop(): Unit Companion Object Properties \u00b6 Name Summary CLIENT_PORT const val CLIENT_PORT: Int LEADER_PORT const val LEADER_PORT: Int PEER_PORT const val PEER_PORT: Int","title":"EmbeddedZookeeper - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/index.html#embeddedzookeeper","text":"class EmbeddedZookeeper","title":"EmbeddedZookeeper"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/index.html#constructors","text":"Name Summary <init> EmbeddedZookeeper(basePort: Int )","title":"Constructors"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/index.html#properties","text":"Name Summary basePort val basePort: Int","title":"Properties"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/index.html#functions","text":"Name Summary start fun start(): Unit stop fun stop(): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/index.html#companion-object-properties","text":"Name Summary CLIENT_PORT const val CLIENT_PORT: Int LEADER_PORT const val LEADER_PORT: Int PEER_PORT const val PEER_PORT: Int","title":"Companion Object Properties"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-c-l-i-e-n-t_-p-o-r-t.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper / CLIENT_PORT CLIENT_PORT \u00b6 const val CLIENT_PORT: Int","title":"CLIENT_PORT - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-c-l-i-e-n-t_-p-o-r-t.html#client_port","text":"const val CLIENT_PORT: Int","title":"CLIENT_PORT"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-init-.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper / <init> <init> \u00b6 EmbeddedZookeeper(basePort: Int )","title":" init "},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-init-.html#init","text":"EmbeddedZookeeper(basePort: Int )","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-l-e-a-d-e-r_-p-o-r-t.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper / LEADER_PORT LEADER_PORT \u00b6 const val LEADER_PORT: Int","title":"LEADER_PORT - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-l-e-a-d-e-r_-p-o-r-t.html#leader_port","text":"const val LEADER_PORT: Int","title":"LEADER_PORT"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-p-e-e-r_-p-o-r-t.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper / PEER_PORT PEER_PORT \u00b6 const val PEER_PORT: Int","title":"PEER_PORT - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/-p-e-e-r_-p-o-r-t.html#peer_port","text":"const val PEER_PORT: Int","title":"PEER_PORT"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/base-port.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper / basePort basePort \u00b6 val basePort: Int","title":"basePort - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/base-port.html#baseport","text":"val basePort: Int","title":"basePort"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/start.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper / start start \u00b6 fun start(): Unit","title":"start - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/start.html#start","text":"fun start(): Unit","title":"start"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/stop.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / EmbeddedZookeeper / stop stop \u00b6 fun stop(): Unit","title":"stop - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-embedded-zookeeper/stop.html#stop","text":"fun stop(): Unit","title":"stop"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/index.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / ZkTestModule ZkTestModule \u00b6 class ZkTestModule : KAbstractModule Constructors \u00b6 Name Summary <init> ZkTestModule(qualifier: KClass <out Annotation >?) Functions \u00b6 Name Summary configure fun configure(): Unit","title":"ZkTestModule - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/index.html#zktestmodule","text":"class ZkTestModule : KAbstractModule","title":"ZkTestModule"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/index.html#constructors","text":"Name Summary <init> ZkTestModule(qualifier: KClass <out Annotation >?)","title":"Constructors"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/index.html#functions","text":"Name Summary configure fun configure(): Unit","title":"Functions"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/-init-.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / ZkTestModule / <init> <init> \u00b6 ZkTestModule(qualifier: KClass <out Annotation >?)","title":" init "},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/-init-.html#init","text":"ZkTestModule(qualifier: KClass <out Annotation >?)","title":"&lt;init&gt;"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/configure.html","text":"misk-zookeeper-testing / misk.zookeeper.testing / ZkTestModule / configure configure \u00b6 protected fun configure(): Unit","title":"configure - Misk"},{"location":"0.x/misk-zookeeper-testing/misk.zookeeper.testing/-zk-test-module/configure.html#configure","text":"protected fun configure(): Unit","title":"configure"},{"location":"0.x/wisp-aws-environment/index.html","text":"wisp-aws-environment Packages \u00b6 Name Summary wisp.aws.environment Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-aws-environment/index.html#packages","text":"Name Summary wisp.aws.environment","title":"Packages"},{"location":"0.x/wisp-aws-environment/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-aws-environment/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.aws.environment.AwsAccountId AwsAccountId is the id of the account in which the service is running wisp.aws.environment.AwsEnvironment AwsEnvironment pulls region and account information from installed environment variables wisp.aws.environment.AwsRegion AwsRegion is the region in which the service is running","title":"All Types - Misk"},{"location":"0.x/wisp-aws-environment/alltypes/index.html#all-types","text":"Name Summary wisp.aws.environment.AwsAccountId AwsAccountId is the id of the account in which the service is running wisp.aws.environment.AwsEnvironment AwsEnvironment pulls region and account information from installed environment variables wisp.aws.environment.AwsRegion AwsRegion is the region in which the service is running","title":"All Types"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/index.html","text":"wisp-aws-environment / wisp.aws.environment Package wisp.aws.environment \u00b6 Types \u00b6 Name Summary AwsAccountId data class AwsAccountId AwsAccountId is the id of the account in which the service is running AwsEnvironment object AwsEnvironment AwsEnvironment pulls region and account information from installed environment variables AwsRegion data class AwsRegion AwsRegion is the region in which the service is running","title":"Package wisp.aws.environment - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/index.html#package-wispawsenvironment","text":"","title":"Package wisp.aws.environment"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/index.html#types","text":"Name Summary AwsAccountId data class AwsAccountId AwsAccountId is the id of the account in which the service is running AwsEnvironment object AwsEnvironment AwsEnvironment pulls region and account information from installed environment variables AwsRegion data class AwsRegion AwsRegion is the region in which the service is running","title":"Types"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/index.html","text":"wisp-aws-environment / wisp.aws.environment / AwsAccountId AwsAccountId \u00b6 data class AwsAccountId AwsAccountId is the id of the account in which the service is running Constructors \u00b6 Name Summary <init> AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running Properties \u00b6 Name Summary value val value: String","title":"AwsAccountId - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/index.html#awsaccountid","text":"data class AwsAccountId AwsAccountId is the id of the account in which the service is running","title":"AwsAccountId"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/index.html#constructors","text":"Name Summary <init> AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running","title":"Constructors"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/index.html#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/-init-.html","text":"wisp-aws-environment / wisp.aws.environment / AwsAccountId / <init> <init> \u00b6 AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running","title":" init "},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/-init-.html#init","text":"AwsAccountId(value: String ) AwsAccountId is the id of the account in which the service is running","title":"&lt;init&gt;"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/value.html","text":"wisp-aws-environment / wisp.aws.environment / AwsAccountId / value value \u00b6 val value: String","title":"value - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-account-id/value.html#value","text":"val value: String","title":"value"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-environment/index.html","text":"wisp-aws-environment / wisp.aws.environment / AwsEnvironment AwsEnvironment \u00b6 object AwsEnvironment AwsEnvironment pulls region and account information from installed environment variables Note: Because of different package names for AWS1 vs AWS2 sdks, we can\u2019t use AWS\u2019s Region class. Functions \u00b6 Name Summary awsAccountId fun awsAccountId(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariable: String = \"ACCOUNT_ID\"): AwsAccountId awsRegion fun awsRegion(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariables: List < String > = listOf(\"REGION\", \"AWS_REGION\"), defaultAwsRegion: String = \"us-west-2\"): AwsRegion","title":"AwsEnvironment - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-environment/index.html#awsenvironment","text":"object AwsEnvironment AwsEnvironment pulls region and account information from installed environment variables Note: Because of different package names for AWS1 vs AWS2 sdks, we can\u2019t use AWS\u2019s Region class.","title":"AwsEnvironment"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-environment/index.html#functions","text":"Name Summary awsAccountId fun awsAccountId(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariable: String = \"ACCOUNT_ID\"): AwsAccountId awsRegion fun awsRegion(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariables: List < String > = listOf(\"REGION\", \"AWS_REGION\"), defaultAwsRegion: String = \"us-west-2\"): AwsRegion","title":"Functions"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-account-id.html","text":"wisp-aws-environment / wisp.aws.environment / AwsEnvironment / awsAccountId awsAccountId \u00b6 fun awsAccountId(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariable: String = \"ACCOUNT_ID\"): AwsAccountId","title":"awsAccountId - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-account-id.html#awsaccountid","text":"fun awsAccountId(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariable: String = \"ACCOUNT_ID\"): AwsAccountId","title":"awsAccountId"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-region.html","text":"wisp-aws-environment / wisp.aws.environment / AwsEnvironment / awsRegion awsRegion \u00b6 fun awsRegion(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariables: List < String > = listOf(\"REGION\", \"AWS_REGION\"), defaultAwsRegion: String = \"us-west-2\"): AwsRegion","title":"awsRegion - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-environment/aws-region.html#awsregion","text":"fun awsRegion(environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real, environmentVariables: List < String > = listOf(\"REGION\", \"AWS_REGION\"), defaultAwsRegion: String = \"us-west-2\"): AwsRegion","title":"awsRegion"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/index.html","text":"wisp-aws-environment / wisp.aws.environment / AwsRegion AwsRegion \u00b6 data class AwsRegion AwsRegion is the region in which the service is running Constructors \u00b6 Name Summary <init> AwsRegion(name: String ) AwsRegion is the region in which the service is running Properties \u00b6 Name Summary name val name: String","title":"AwsRegion - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/index.html#awsregion","text":"data class AwsRegion AwsRegion is the region in which the service is running","title":"AwsRegion"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/index.html#constructors","text":"Name Summary <init> AwsRegion(name: String ) AwsRegion is the region in which the service is running","title":"Constructors"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/-init-.html","text":"wisp-aws-environment / wisp.aws.environment / AwsRegion / <init> <init> \u00b6 AwsRegion(name: String ) AwsRegion is the region in which the service is running","title":" init "},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/-init-.html#init","text":"AwsRegion(name: String ) AwsRegion is the region in which the service is running","title":"&lt;init&gt;"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/name.html","text":"wisp-aws-environment / wisp.aws.environment / AwsRegion / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/wisp-aws-environment/wisp.aws.environment/-aws-region/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/wisp-client/index.html","text":"wisp-client Packages \u00b6 Name Summary wisp.client Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-client/index.html#packages","text":"Name Summary wisp.client","title":"Packages"},{"location":"0.x/wisp-client/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-client/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.client.EnvoyClientEndpointProvider Envoy configuration provider per endpoint that misk clients can customize to their needs. wisp.client.HttpClientConfig wisp.client.HttpClientEndpointConfig wisp.client.HttpClientEnvoyConfig wisp.client.HttpClientFactory wisp.client.HttpClientsConfig wisp.client.HttpClientSSLConfig wisp.client.NoOpDns wisp.client.OkHttpClientCommonConfigurator wisp.client.UnixDomainServerSocketFactory Impersonate TCP-style ServerSocketFactory over UNIX domain sockets. wisp.client.UnixDomainSocketFactory Impersonate TCP-style SocketFactory over UNIX domain sockets.","title":"All Types - Misk"},{"location":"0.x/wisp-client/alltypes/index.html#all-types","text":"Name Summary wisp.client.EnvoyClientEndpointProvider Envoy configuration provider per endpoint that misk clients can customize to their needs. wisp.client.HttpClientConfig wisp.client.HttpClientEndpointConfig wisp.client.HttpClientEnvoyConfig wisp.client.HttpClientFactory wisp.client.HttpClientsConfig wisp.client.HttpClientSSLConfig wisp.client.NoOpDns wisp.client.OkHttpClientCommonConfigurator wisp.client.UnixDomainServerSocketFactory Impersonate TCP-style ServerSocketFactory over UNIX domain sockets. wisp.client.UnixDomainSocketFactory Impersonate TCP-style SocketFactory over UNIX domain sockets.","title":"All Types"},{"location":"0.x/wisp-client/wisp.client/index.html","text":"wisp-client / wisp.client Package wisp.client \u00b6 Types \u00b6 Name Summary EnvoyClientEndpointProvider interface EnvoyClientEndpointProvider Envoy configuration provider per endpoint that misk clients can customize to their needs. HttpClientConfig data class HttpClientConfig HttpClientEndpointConfig data class HttpClientEndpointConfig HttpClientEnvoyConfig data class HttpClientEnvoyConfig HttpClientFactory class HttpClientFactory HttpClientsConfig data class HttpClientsConfig HttpClientSSLConfig data class HttpClientSSLConfig NoOpDns object NoOpDns : Dns OkHttpClientCommonConfigurator class OkHttpClientCommonConfigurator UnixDomainServerSocketFactory class UnixDomainServerSocketFactory : ServerSocketFactory Impersonate TCP-style ServerSocketFactory over UNIX domain sockets. UnixDomainSocketFactory class UnixDomainSocketFactory : SocketFactory Impersonate TCP-style SocketFactory over UNIX domain sockets. Functions \u00b6 Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"Package wisp.client - Misk"},{"location":"0.x/wisp-client/wisp.client/index.html#package-wispclient","text":"","title":"Package wisp.client"},{"location":"0.x/wisp-client/wisp.client/index.html#types","text":"Name Summary EnvoyClientEndpointProvider interface EnvoyClientEndpointProvider Envoy configuration provider per endpoint that misk clients can customize to their needs. HttpClientConfig data class HttpClientConfig HttpClientEndpointConfig data class HttpClientEndpointConfig HttpClientEnvoyConfig data class HttpClientEnvoyConfig HttpClientFactory class HttpClientFactory HttpClientsConfig data class HttpClientsConfig HttpClientSSLConfig data class HttpClientSSLConfig NoOpDns object NoOpDns : Dns OkHttpClientCommonConfigurator class OkHttpClientCommonConfigurator UnixDomainServerSocketFactory class UnixDomainServerSocketFactory : ServerSocketFactory Impersonate TCP-style ServerSocketFactory over UNIX domain sockets. UnixDomainSocketFactory class UnixDomainSocketFactory : SocketFactory Impersonate TCP-style SocketFactory over UNIX domain sockets.","title":"Types"},{"location":"0.x/wisp-client/wisp.client/index.html#functions","text":"Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/apply-defaults.html","text":"wisp-client / wisp.client / applyDefaults applyDefaults \u00b6 fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"applyDefaults - Misk"},{"location":"0.x/wisp-client/wisp.client/apply-defaults.html#applydefaults","text":"fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"applyDefaults"},{"location":"0.x/wisp-client/wisp.client/-envoy-client-endpoint-provider/index.html","text":"wisp-client / wisp.client / EnvoyClientEndpointProvider EnvoyClientEndpointProvider \u00b6 interface EnvoyClientEndpointProvider Envoy configuration provider per endpoint that misk clients can customize to their needs. Functions \u00b6 Name Summary unixSocket abstract fun unixSocket(httpClientEnvoyConfig: HttpClientEnvoyConfig ): File Unix socket file to be used to communicate to the local Envoy sidecar. url abstract fun url(httpClientEnvoyConfig: HttpClientEnvoyConfig ): String Host header that will be used to route the request.","title":"EnvoyClientEndpointProvider - Misk"},{"location":"0.x/wisp-client/wisp.client/-envoy-client-endpoint-provider/index.html#envoyclientendpointprovider","text":"interface EnvoyClientEndpointProvider Envoy configuration provider per endpoint that misk clients can customize to their needs.","title":"EnvoyClientEndpointProvider"},{"location":"0.x/wisp-client/wisp.client/-envoy-client-endpoint-provider/index.html#functions","text":"Name Summary unixSocket abstract fun unixSocket(httpClientEnvoyConfig: HttpClientEnvoyConfig ): File Unix socket file to be used to communicate to the local Envoy sidecar. url abstract fun url(httpClientEnvoyConfig: HttpClientEnvoyConfig ): String Host header that will be used to route the request.","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/-envoy-client-endpoint-provider/unix-socket.html","text":"wisp-client / wisp.client / EnvoyClientEndpointProvider / unixSocket unixSocket \u00b6 abstract fun unixSocket(httpClientEnvoyConfig: HttpClientEnvoyConfig ): File Unix socket file to be used to communicate to the local Envoy sidecar.","title":"unixSocket - Misk"},{"location":"0.x/wisp-client/wisp.client/-envoy-client-endpoint-provider/unix-socket.html#unixsocket","text":"abstract fun unixSocket(httpClientEnvoyConfig: HttpClientEnvoyConfig ): File Unix socket file to be used to communicate to the local Envoy sidecar.","title":"unixSocket"},{"location":"0.x/wisp-client/wisp.client/-envoy-client-endpoint-provider/url.html","text":"wisp-client / wisp.client / EnvoyClientEndpointProvider / url url \u00b6 abstract fun url(httpClientEnvoyConfig: HttpClientEnvoyConfig ): String Host header that will be used to route the request.","title":"url - Misk"},{"location":"0.x/wisp-client/wisp.client/-envoy-client-endpoint-provider/url.html#url","text":"abstract fun url(httpClientEnvoyConfig: HttpClientEnvoyConfig ): String Host header that will be used to route the request.","title":"url"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/index.html","text":"wisp-client / wisp.client / HttpClientConfig HttpClientConfig \u00b6 data class HttpClientConfig Constructors \u00b6 Name Summary <init> HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null) Properties \u00b6 Name Summary callTimeout val callTimeout: Duration ? connectTimeout val connectTimeout: Duration ? keepAliveDuration val keepAliveDuration: Duration ? maxIdleConnections val maxIdleConnections: Int ? maxRequests val maxRequests: Int ? maxRequestsPerHost val maxRequestsPerHost: Int ? pingInterval val pingInterval: Duration ? protocols val protocols: List < String >? readTimeout val readTimeout: Duration ? ssl val ssl: HttpClientSSLConfig ? unixSocketFile val unixSocketFile: String ? writeTimeout val writeTimeout: Duration ? Extension Functions \u00b6 Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"HttpClientConfig - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/index.html#httpclientconfig","text":"data class HttpClientConfig","title":"HttpClientConfig"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/index.html#constructors","text":"Name Summary <init> HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null)","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/index.html#properties","text":"Name Summary callTimeout val callTimeout: Duration ? connectTimeout val connectTimeout: Duration ? keepAliveDuration val keepAliveDuration: Duration ? maxIdleConnections val maxIdleConnections: Int ? maxRequests val maxRequests: Int ? maxRequestsPerHost val maxRequestsPerHost: Int ? pingInterval val pingInterval: Duration ? protocols val protocols: List < String >? readTimeout val readTimeout: Duration ? ssl val ssl: HttpClientSSLConfig ? unixSocketFile val unixSocketFile: String ? writeTimeout val writeTimeout: Duration ?","title":"Properties"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/index.html#extension-functions","text":"Name Summary applyDefaults fun HttpClientConfig .applyDefaults(other: HttpClientConfig ): HttpClientConfig","title":"Extension Functions"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/-init-.html","text":"wisp-client / wisp.client / HttpClientConfig / <init> <init> \u00b6 HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null)","title":" init "},{"location":"0.x/wisp-client/wisp.client/-http-client-config/-init-.html#init","text":"HttpClientConfig(connectTimeout: Duration ? = null, writeTimeout: Duration ? = null, readTimeout: Duration ? = null, pingInterval: Duration ? = null, callTimeout: Duration ? = null, maxRequests: Int ? = null, maxRequestsPerHost: Int ? = null, maxIdleConnections: Int ? = null, keepAliveDuration: Duration ? = null, ssl: HttpClientSSLConfig ? = null, unixSocketFile: String ? = null, protocols: List < String >? = null)","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/call-timeout.html","text":"wisp-client / wisp.client / HttpClientConfig / callTimeout callTimeout \u00b6 val callTimeout: Duration ?","title":"callTimeout - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/call-timeout.html#calltimeout","text":"val callTimeout: Duration ?","title":"callTimeout"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/connect-timeout.html","text":"wisp-client / wisp.client / HttpClientConfig / connectTimeout connectTimeout \u00b6 val connectTimeout: Duration ?","title":"connectTimeout - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/connect-timeout.html#connecttimeout","text":"val connectTimeout: Duration ?","title":"connectTimeout"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/keep-alive-duration.html","text":"wisp-client / wisp.client / HttpClientConfig / keepAliveDuration keepAliveDuration \u00b6 val keepAliveDuration: Duration ?","title":"keepAliveDuration - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/keep-alive-duration.html#keepaliveduration","text":"val keepAliveDuration: Duration ?","title":"keepAliveDuration"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/max-idle-connections.html","text":"wisp-client / wisp.client / HttpClientConfig / maxIdleConnections maxIdleConnections \u00b6 val maxIdleConnections: Int ?","title":"maxIdleConnections - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/max-idle-connections.html#maxidleconnections","text":"val maxIdleConnections: Int ?","title":"maxIdleConnections"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/max-requests-per-host.html","text":"wisp-client / wisp.client / HttpClientConfig / maxRequestsPerHost maxRequestsPerHost \u00b6 val maxRequestsPerHost: Int ?","title":"maxRequestsPerHost - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/max-requests-per-host.html#maxrequestsperhost","text":"val maxRequestsPerHost: Int ?","title":"maxRequestsPerHost"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/max-requests.html","text":"wisp-client / wisp.client / HttpClientConfig / maxRequests maxRequests \u00b6 val maxRequests: Int ?","title":"maxRequests - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/max-requests.html#maxrequests","text":"val maxRequests: Int ?","title":"maxRequests"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/ping-interval.html","text":"wisp-client / wisp.client / HttpClientConfig / pingInterval pingInterval \u00b6 val pingInterval: Duration ?","title":"pingInterval - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/ping-interval.html#pinginterval","text":"val pingInterval: Duration ?","title":"pingInterval"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/protocols.html","text":"wisp-client / wisp.client / HttpClientConfig / protocols protocols \u00b6 val protocols: List < String >?","title":"protocols - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/protocols.html#protocols","text":"val protocols: List < String >?","title":"protocols"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/read-timeout.html","text":"wisp-client / wisp.client / HttpClientConfig / readTimeout readTimeout \u00b6 val readTimeout: Duration ?","title":"readTimeout - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/read-timeout.html#readtimeout","text":"val readTimeout: Duration ?","title":"readTimeout"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/ssl.html","text":"wisp-client / wisp.client / HttpClientConfig / ssl ssl \u00b6 val ssl: HttpClientSSLConfig ?","title":"ssl - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/ssl.html#ssl","text":"val ssl: HttpClientSSLConfig ?","title":"ssl"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/unix-socket-file.html","text":"wisp-client / wisp.client / HttpClientConfig / unixSocketFile unixSocketFile \u00b6 val unixSocketFile: String ?","title":"unixSocketFile - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/unix-socket-file.html#unixsocketfile","text":"val unixSocketFile: String ?","title":"unixSocketFile"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/write-timeout.html","text":"wisp-client / wisp.client / HttpClientConfig / writeTimeout writeTimeout \u00b6 val writeTimeout: Duration ?","title":"writeTimeout - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-config/write-timeout.html#writetimeout","text":"val writeTimeout: Duration ?","title":"writeTimeout"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/index.html","text":"wisp-client / wisp.client / HttpClientEndpointConfig HttpClientEndpointConfig \u00b6 data class HttpClientEndpointConfig Constructors \u00b6 Name Summary <init> HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig()) Properties \u00b6 Name Summary clientConfig val clientConfig: HttpClientConfig envoy val envoy: HttpClientEnvoyConfig ? url val url: String ?","title":"HttpClientEndpointConfig - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/index.html#httpclientendpointconfig","text":"data class HttpClientEndpointConfig","title":"HttpClientEndpointConfig"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/index.html#constructors","text":"Name Summary <init> HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig())","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/index.html#properties","text":"Name Summary clientConfig val clientConfig: HttpClientConfig envoy val envoy: HttpClientEnvoyConfig ? url val url: String ?","title":"Properties"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/-init-.html","text":"wisp-client / wisp.client / HttpClientEndpointConfig / <init> <init> \u00b6 HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig())","title":" init "},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/-init-.html#init","text":"HttpClientEndpointConfig(url: String ? = null, envoy: HttpClientEnvoyConfig ? = null, clientConfig: HttpClientConfig = HttpClientConfig())","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/client-config.html","text":"wisp-client / wisp.client / HttpClientEndpointConfig / clientConfig clientConfig \u00b6 val clientConfig: HttpClientConfig","title":"clientConfig - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/client-config.html#clientconfig","text":"val clientConfig: HttpClientConfig","title":"clientConfig"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/envoy.html","text":"wisp-client / wisp.client / HttpClientEndpointConfig / envoy envoy \u00b6 val envoy: HttpClientEnvoyConfig ?","title":"envoy - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/envoy.html#envoy","text":"val envoy: HttpClientEnvoyConfig ?","title":"envoy"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/url.html","text":"wisp-client / wisp.client / HttpClientEndpointConfig / url url \u00b6 val url: String ?","title":"url - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-endpoint-config/url.html#url","text":"val url: String ?","title":"url"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/index.html","text":"wisp-client / wisp.client / HttpClientEnvoyConfig HttpClientEnvoyConfig \u00b6 data class HttpClientEnvoyConfig Constructors \u00b6 Name Summary <init> HttpClientEnvoyConfig(app: String , env: String ? = null) Properties \u00b6 Name Summary app val app: String env val env: String ? Environment to target. If null, the same environment as the app is running in is assumed.","title":"HttpClientEnvoyConfig - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/index.html#httpclientenvoyconfig","text":"data class HttpClientEnvoyConfig","title":"HttpClientEnvoyConfig"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/index.html#constructors","text":"Name Summary <init> HttpClientEnvoyConfig(app: String , env: String ? = null)","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/index.html#properties","text":"Name Summary app val app: String env val env: String ? Environment to target. If null, the same environment as the app is running in is assumed.","title":"Properties"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/-init-.html","text":"wisp-client / wisp.client / HttpClientEnvoyConfig / <init> <init> \u00b6 HttpClientEnvoyConfig(app: String , env: String ? = null)","title":" init "},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/-init-.html#init","text":"HttpClientEnvoyConfig(app: String , env: String ? = null)","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/app.html","text":"wisp-client / wisp.client / HttpClientEnvoyConfig / app app \u00b6 val app: String","title":"app - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/app.html#app","text":"val app: String","title":"app"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/env.html","text":"wisp-client / wisp.client / HttpClientEnvoyConfig / env env \u00b6 val env: String ? Environment to target. If null, the same environment as the app is running in is assumed.","title":"env - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-envoy-config/env.html#env","text":"val env: String ? Environment to target. If null, the same environment as the app is running in is assumed.","title":"env"},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/index.html","text":"wisp-client / wisp.client / HttpClientFactory HttpClientFactory \u00b6 class HttpClientFactory Constructors \u00b6 Name Summary <init> HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator , envoyClientEndpointProvider: EnvoyClientEndpointProvider ?, okhttpInterceptors: List <Interceptor>?) Functions \u00b6 Name Summary create fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"HttpClientFactory - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/index.html#httpclientfactory","text":"class HttpClientFactory","title":"HttpClientFactory"},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/index.html#constructors","text":"Name Summary <init> HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator , envoyClientEndpointProvider: EnvoyClientEndpointProvider ?, okhttpInterceptors: List <Interceptor>?)","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/index.html#functions","text":"Name Summary create fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/-init-.html","text":"wisp-client / wisp.client / HttpClientFactory / <init> <init> \u00b6 HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator , envoyClientEndpointProvider: EnvoyClientEndpointProvider ?, okhttpInterceptors: List <Interceptor>?)","title":" init "},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/-init-.html#init","text":"HttpClientFactory(sslLoader: SslLoader, sslContextFactory: SslContextFactory, okHttpClientCommonConfigurator: OkHttpClientCommonConfigurator , envoyClientEndpointProvider: EnvoyClientEndpointProvider ?, okhttpInterceptors: List <Interceptor>?)","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/create.html","text":"wisp-client / wisp.client / HttpClientFactory / create create \u00b6 fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"create - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-factory/create.html#create","text":"fun create(config: HttpClientEndpointConfig ): OkHttpClient Returns a client initialized based on config .","title":"create"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/index.html","text":"wisp-client / wisp.client / HttpClientSSLConfig HttpClientSSLConfig \u00b6 data class HttpClientSSLConfig Constructors \u00b6 Name Summary <init> HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig) Properties \u00b6 Name Summary cert_store val cert_store: CertStoreConfig? trust_store val trust_store: TrustStoreConfig","title":"HttpClientSSLConfig - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/index.html#httpclientsslconfig","text":"data class HttpClientSSLConfig","title":"HttpClientSSLConfig"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/index.html#constructors","text":"Name Summary <init> HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/index.html#properties","text":"Name Summary cert_store val cert_store: CertStoreConfig? trust_store val trust_store: TrustStoreConfig","title":"Properties"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/-init-.html","text":"wisp-client / wisp.client / HttpClientSSLConfig / <init> <init> \u00b6 HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)","title":" init "},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/-init-.html#init","text":"HttpClientSSLConfig(cert_store: CertStoreConfig?, trust_store: TrustStoreConfig)","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/cert_store.html","text":"wisp-client / wisp.client / HttpClientSSLConfig / cert_store cert_store \u00b6 val cert_store: CertStoreConfig?","title":"cert_store - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/cert_store.html#cert_store","text":"val cert_store: CertStoreConfig?","title":"cert_store"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/trust_store.html","text":"wisp-client / wisp.client / HttpClientSSLConfig / trust_store trust_store \u00b6 val trust_store: TrustStoreConfig","title":"trust_store - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-client-s-s-l-config/trust_store.html#trust_store","text":"val trust_store: TrustStoreConfig","title":"trust_store"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/index.html","text":"wisp-client / wisp.client / HttpClientsConfig HttpClientsConfig \u00b6 data class HttpClientsConfig Constructors \u00b6 Name Summary <init> HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf()) Properties \u00b6 Name Summary endpoints val endpoints: Map < String , HttpClientEndpointConfig > hostConfigs val hostConfigs: LinkedHashMap < String , HttpClientConfig > Functions \u00b6 Name Summary endpointNames fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get get operator fun get(clientName: String ): HttpClientEndpointConfig operator fun get(url: URL ): HttpClientEndpointConfig Companion Object Properties \u00b6 Name Summary httpClientConfigDefaults val httpClientConfigDefaults: HttpClientConfig","title":"HttpClientsConfig - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/index.html#httpclientsconfig","text":"data class HttpClientsConfig","title":"HttpClientsConfig"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/index.html#constructors","text":"Name Summary <init> HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf())","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/index.html#properties","text":"Name Summary endpoints val endpoints: Map < String , HttpClientEndpointConfig > hostConfigs val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"Properties"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/index.html#functions","text":"Name Summary endpointNames fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get get operator fun get(clientName: String ): HttpClientEndpointConfig operator fun get(url: URL ): HttpClientEndpointConfig","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/index.html#companion-object-properties","text":"Name Summary httpClientConfigDefaults val httpClientConfigDefaults: HttpClientConfig","title":"Companion Object Properties"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/-init-.html","text":"wisp-client / wisp.client / HttpClientsConfig / <init> <init> \u00b6 HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf())","title":" init "},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/-init-.html#init","text":"HttpClientsConfig(hostConfigs: LinkedHashMap < String , HttpClientConfig > = linkedMapOf(), endpoints: Map < String , HttpClientEndpointConfig > = mapOf())","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/endpoint-names.html","text":"wisp-client / wisp.client / HttpClientsConfig / endpointNames endpointNames \u00b6 fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get","title":"endpointNames - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/endpoint-names.html#endpointnames","text":"fun endpointNames(): Set < String > Names of configured endpoints, all of which can be fetched using get","title":"endpointNames"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/endpoints.html","text":"wisp-client / wisp.client / HttpClientsConfig / endpoints endpoints \u00b6 val endpoints: Map < String , HttpClientEndpointConfig >","title":"endpoints - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/endpoints.html#endpoints","text":"val endpoints: Map < String , HttpClientEndpointConfig >","title":"endpoints"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/get.html","text":"wisp-client / wisp.client / HttpClientsConfig / get get \u00b6 operator fun get(clientName: String ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given client, populated with defaults as needed operator fun get(url: URL ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given URL, populated with defaults as needed","title":"get - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/get.html#get","text":"operator fun get(clientName: String ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given client, populated with defaults as needed operator fun get(url: URL ): HttpClientEndpointConfig Return The HttpClientEndpointConfig for the given URL, populated with defaults as needed","title":"get"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/host-configs.html","text":"wisp-client / wisp.client / HttpClientsConfig / hostConfigs hostConfigs \u00b6 val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"hostConfigs - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/host-configs.html#hostconfigs","text":"val hostConfigs: LinkedHashMap < String , HttpClientConfig >","title":"hostConfigs"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/http-client-config-defaults.html","text":"wisp-client / wisp.client / HttpClientsConfig / httpClientConfigDefaults httpClientConfigDefaults \u00b6 val httpClientConfigDefaults: HttpClientConfig","title":"httpClientConfigDefaults - Misk"},{"location":"0.x/wisp-client/wisp.client/-http-clients-config/http-client-config-defaults.html#httpclientconfigdefaults","text":"val httpClientConfigDefaults: HttpClientConfig","title":"httpClientConfigDefaults"},{"location":"0.x/wisp-client/wisp.client/-no-op-dns/index.html","text":"wisp-client / wisp.client / NoOpDns NoOpDns \u00b6 object NoOpDns : Dns Functions \u00b6 Name Summary lookup fun lookup(hostname: String ): List < InetAddress !>","title":"NoOpDns - Misk"},{"location":"0.x/wisp-client/wisp.client/-no-op-dns/index.html#noopdns","text":"object NoOpDns : Dns","title":"NoOpDns"},{"location":"0.x/wisp-client/wisp.client/-no-op-dns/index.html#functions","text":"Name Summary lookup fun lookup(hostname: String ): List < InetAddress !>","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/-no-op-dns/lookup.html","text":"wisp-client / wisp.client / NoOpDns / lookup lookup \u00b6 fun lookup(hostname: String ): List < InetAddress !>","title":"lookup - Misk"},{"location":"0.x/wisp-client/wisp.client/-no-op-dns/lookup.html#lookup","text":"fun lookup(hostname: String ): List < InetAddress !>","title":"lookup"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/index.html","text":"wisp-client / wisp.client / OkHttpClientCommonConfigurator OkHttpClientCommonConfigurator \u00b6 class OkHttpClientCommonConfigurator Constructors \u00b6 Name Summary <init> OkHttpClientCommonConfigurator() Functions \u00b6 Name Summary configure fun configure(builder: Builder, config: HttpClientEndpointConfig ): Builder Companion Object Properties \u00b6 Name Summary keepAliveDuration val keepAliveDuration: Duration ! maxIdleConnections val maxIdleConnections: Int","title":"OkHttpClientCommonConfigurator - Misk"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/index.html#okhttpclientcommonconfigurator","text":"class OkHttpClientCommonConfigurator","title":"OkHttpClientCommonConfigurator"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/index.html#constructors","text":"Name Summary <init> OkHttpClientCommonConfigurator()","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/index.html#functions","text":"Name Summary configure fun configure(builder: Builder, config: HttpClientEndpointConfig ): Builder","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/index.html#companion-object-properties","text":"Name Summary keepAliveDuration val keepAliveDuration: Duration ! maxIdleConnections val maxIdleConnections: Int","title":"Companion Object Properties"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/-init-.html","text":"wisp-client / wisp.client / OkHttpClientCommonConfigurator / <init> <init> \u00b6 OkHttpClientCommonConfigurator()","title":" init "},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/-init-.html#init","text":"OkHttpClientCommonConfigurator()","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/configure.html","text":"wisp-client / wisp.client / OkHttpClientCommonConfigurator / configure configure \u00b6 fun configure(builder: Builder, config: HttpClientEndpointConfig ): Builder","title":"configure - Misk"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/configure.html#configure","text":"fun configure(builder: Builder, config: HttpClientEndpointConfig ): Builder","title":"configure"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/keep-alive-duration.html","text":"wisp-client / wisp.client / OkHttpClientCommonConfigurator / keepAliveDuration keepAliveDuration \u00b6 val keepAliveDuration: Duration !","title":"keepAliveDuration - Misk"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/keep-alive-duration.html#keepaliveduration","text":"val keepAliveDuration: Duration !","title":"keepAliveDuration"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/max-idle-connections.html","text":"wisp-client / wisp.client / OkHttpClientCommonConfigurator / maxIdleConnections maxIdleConnections \u00b6 val maxIdleConnections: Int","title":"maxIdleConnections - Misk"},{"location":"0.x/wisp-client/wisp.client/-ok-http-client-common-configurator/max-idle-connections.html#maxidleconnections","text":"val maxIdleConnections: Int","title":"maxIdleConnections"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/index.html","text":"wisp-client / wisp.client / UnixDomainServerSocketFactory UnixDomainServerSocketFactory \u00b6 class UnixDomainServerSocketFactory : ServerSocketFactory Impersonate TCP-style ServerSocketFactory over UNIX domain sockets. Constructors \u00b6 Name Summary <init> UnixDomainServerSocketFactory(path: File !) Functions \u00b6 Name Summary createServerSocket fun createServerSocket(): ServerSocket ! fun createServerSocket(port: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int , inetAddress: InetAddress !): ServerSocket !","title":"UnixDomainServerSocketFactory - Misk"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/index.html#unixdomainserversocketfactory","text":"class UnixDomainServerSocketFactory : ServerSocketFactory Impersonate TCP-style ServerSocketFactory over UNIX domain sockets.","title":"UnixDomainServerSocketFactory"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/index.html#constructors","text":"Name Summary <init> UnixDomainServerSocketFactory(path: File !)","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/index.html#functions","text":"Name Summary createServerSocket fun createServerSocket(): ServerSocket ! fun createServerSocket(port: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int , inetAddress: InetAddress !): ServerSocket !","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/-init-.html","text":"wisp-client / wisp.client / UnixDomainServerSocketFactory / <init> <init> \u00b6 UnixDomainServerSocketFactory(path: File !)","title":" init "},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/-init-.html#init","text":"UnixDomainServerSocketFactory(path: File !)","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/create-server-socket.html","text":"wisp-client / wisp.client / UnixDomainServerSocketFactory / createServerSocket createServerSocket \u00b6 fun createServerSocket(): ServerSocket ! fun createServerSocket(port: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int , inetAddress: InetAddress !): ServerSocket !","title":"createServerSocket - Misk"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-server-socket-factory/create-server-socket.html#createserversocket","text":"fun createServerSocket(): ServerSocket ! fun createServerSocket(port: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int ): ServerSocket ! fun createServerSocket(port: Int , backlog: Int , inetAddress: InetAddress !): ServerSocket !","title":"createServerSocket"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/index.html","text":"wisp-client / wisp.client / UnixDomainSocketFactory UnixDomainSocketFactory \u00b6 class UnixDomainSocketFactory : SocketFactory Impersonate TCP-style SocketFactory over UNIX domain sockets. Constructors \u00b6 Name Summary <init> UnixDomainSocketFactory(path: File !) Functions \u00b6 Name Summary createSocket fun createSocket(): Socket ! fun createSocket(host: String !, port: Int ): Socket ! fun createSocket(host: String !, port: Int , localHost: InetAddress !, localPort: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int , localAddress: InetAddress !, localPort: Int ): Socket !","title":"UnixDomainSocketFactory - Misk"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/index.html#unixdomainsocketfactory","text":"class UnixDomainSocketFactory : SocketFactory Impersonate TCP-style SocketFactory over UNIX domain sockets.","title":"UnixDomainSocketFactory"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/index.html#constructors","text":"Name Summary <init> UnixDomainSocketFactory(path: File !)","title":"Constructors"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/index.html#functions","text":"Name Summary createSocket fun createSocket(): Socket ! fun createSocket(host: String !, port: Int ): Socket ! fun createSocket(host: String !, port: Int , localHost: InetAddress !, localPort: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int , localAddress: InetAddress !, localPort: Int ): Socket !","title":"Functions"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/-init-.html","text":"wisp-client / wisp.client / UnixDomainSocketFactory / <init> <init> \u00b6 UnixDomainSocketFactory(path: File !)","title":" init "},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/-init-.html#init","text":"UnixDomainSocketFactory(path: File !)","title":"&lt;init&gt;"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/create-socket.html","text":"wisp-client / wisp.client / UnixDomainSocketFactory / createSocket createSocket \u00b6 fun createSocket(): Socket ! fun createSocket(host: String !, port: Int ): Socket ! fun createSocket(host: String !, port: Int , localHost: InetAddress !, localPort: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int , localAddress: InetAddress !, localPort: Int ): Socket !","title":"createSocket - Misk"},{"location":"0.x/wisp-client/wisp.client/-unix-domain-socket-factory/create-socket.html#createsocket","text":"fun createSocket(): Socket ! fun createSocket(host: String !, port: Int ): Socket ! fun createSocket(host: String !, port: Int , localHost: InetAddress !, localPort: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int ): Socket ! fun createSocket(host: InetAddress !, port: Int , localAddress: InetAddress !, localPort: Int ): Socket !","title":"createSocket"},{"location":"0.x/wisp-config/index.html","text":"wisp-config Packages \u00b6 Name Summary wisp.config Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-config/index.html#packages","text":"Name Summary wisp.config","title":"Packages"},{"location":"0.x/wisp-config/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-config/alltypes/index.html","text":"All Types \u00b6 Name Summary com.sksamuel.hoplite.ConfigLoader.Builder (extensions in package wisp.config) wisp.config.Config wisp.config.ConfigSource Config location and format (default yaml). The location should be in a format that ResourceLoader understands. wisp.config.WispConfig WispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite","title":"All Types - Misk"},{"location":"0.x/wisp-config/alltypes/index.html#all-types","text":"Name Summary com.sksamuel.hoplite.ConfigLoader.Builder (extensions in package wisp.config) wisp.config.Config wisp.config.ConfigSource Config location and format (default yaml). The location should be in a format that ResourceLoader understands. wisp.config.WispConfig WispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite","title":"All Types"},{"location":"0.x/wisp-config/wisp.config/index.html","text":"wisp-config / wisp.config Package wisp.config \u00b6 Types \u00b6 Name Summary Config interface Config ConfigSource data class ConfigSource Config location and format (default yaml). The location should be in a format that ResourceLoader understands. WispConfig object WispConfig WispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite Extensions for External Classes \u00b6 Name Summary com.sksamuel.hoplite.ConfigLoader.Builder","title":"Package wisp.config - Misk"},{"location":"0.x/wisp-config/wisp.config/index.html#package-wispconfig","text":"","title":"Package wisp.config"},{"location":"0.x/wisp-config/wisp.config/index.html#types","text":"Name Summary Config interface Config ConfigSource data class ConfigSource Config location and format (default yaml). The location should be in a format that ResourceLoader understands. WispConfig object WispConfig WispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite","title":"Types"},{"location":"0.x/wisp-config/wisp.config/index.html#extensions-for-external-classes","text":"Name Summary com.sksamuel.hoplite.ConfigLoader.Builder","title":"Extensions for External Classes"},{"location":"0.x/wisp-config/wisp.config/-config.html","text":"wisp-config / wisp.config / Config Config \u00b6 interface Config","title":"Config - Misk"},{"location":"0.x/wisp-config/wisp.config/-config.html#config","text":"interface Config","title":"Config"},{"location":"0.x/wisp-config/wisp.config/-config-source/index.html","text":"wisp-config / wisp.config / ConfigSource ConfigSource \u00b6 data class ConfigSource Config location and format (default yaml). The location should be in a format that ResourceLoader understands. Constructors \u00b6 Name Summary <init> ConfigSource(configLocation: String , format: String = \"yml\") Config location and format (default yaml). The location should be in a format that ResourceLoader understands. Properties \u00b6 Name Summary configLocation val configLocation: String format val format: String","title":"ConfigSource - Misk"},{"location":"0.x/wisp-config/wisp.config/-config-source/index.html#configsource","text":"data class ConfigSource Config location and format (default yaml). The location should be in a format that ResourceLoader understands.","title":"ConfigSource"},{"location":"0.x/wisp-config/wisp.config/-config-source/index.html#constructors","text":"Name Summary <init> ConfigSource(configLocation: String , format: String = \"yml\") Config location and format (default yaml). The location should be in a format that ResourceLoader understands.","title":"Constructors"},{"location":"0.x/wisp-config/wisp.config/-config-source/index.html#properties","text":"Name Summary configLocation val configLocation: String format val format: String","title":"Properties"},{"location":"0.x/wisp-config/wisp.config/-config-source/-init-.html","text":"wisp-config / wisp.config / ConfigSource / <init> <init> \u00b6 ConfigSource(configLocation: String , format: String = \"yml\") Config location and format (default yaml). The location should be in a format that ResourceLoader understands.","title":" init "},{"location":"0.x/wisp-config/wisp.config/-config-source/-init-.html#init","text":"ConfigSource(configLocation: String , format: String = \"yml\") Config location and format (default yaml). The location should be in a format that ResourceLoader understands.","title":"&lt;init&gt;"},{"location":"0.x/wisp-config/wisp.config/-config-source/config-location.html","text":"wisp-config / wisp.config / ConfigSource / configLocation configLocation \u00b6 val configLocation: String","title":"configLocation - Misk"},{"location":"0.x/wisp-config/wisp.config/-config-source/config-location.html#configlocation","text":"val configLocation: String","title":"configLocation"},{"location":"0.x/wisp-config/wisp.config/-config-source/format.html","text":"wisp-config / wisp.config / ConfigSource / format format \u00b6 val format: String","title":"format - Misk"},{"location":"0.x/wisp-config/wisp.config/-config-source/format.html#format","text":"val format: String","title":"format"},{"location":"0.x/wisp-config/wisp.config/-wisp-config/index.html","text":"wisp-config / wisp.config / WispConfig WispConfig \u00b6 object WispConfig WispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite Config precedence is in order of sources added for loading, so if you want an environment config file to override values in the default file, it has to be added first. Note that config values from Environment Variables, System Properties and User Settings are always loaded first, see: https://github.com/sksamuel/hoplite#property-sources for details. Secrets in config are automatically handled, see: https://github.com/sksamuel/hoplite#masked-values Note that if you are passing configuration fragments within Wisp, your config class should implement Config Functions \u00b6 Name Summary builder fun builder(): Builder Get a config builder.","title":"WispConfig - Misk"},{"location":"0.x/wisp-config/wisp.config/-wisp-config/index.html#wispconfig","text":"object WispConfig WispConfig is a wrapper around the Hoplite config library: https://github.com/sksamuel/hoplite Config precedence is in order of sources added for loading, so if you want an environment config file to override values in the default file, it has to be added first. Note that config values from Environment Variables, System Properties and User Settings are always loaded first, see: https://github.com/sksamuel/hoplite#property-sources for details. Secrets in config are automatically handled, see: https://github.com/sksamuel/hoplite#masked-values Note that if you are passing configuration fragments within Wisp, your config class should implement Config","title":"WispConfig"},{"location":"0.x/wisp-config/wisp.config/-wisp-config/index.html#functions","text":"Name Summary builder fun builder(): Builder Get a config builder.","title":"Functions"},{"location":"0.x/wisp-config/wisp.config/-wisp-config/builder.html","text":"wisp-config / wisp.config / WispConfig / builder builder \u00b6 fun builder(): Builder Get a config builder. Example use: val myConfig = WispConfig.builder() \u2026 .addWispConfigSources(\u2026) \u2026 .build .loadConfigOrThrow() Note that if you are passing configuration fragments within Wisp, MyConfig should implement Config Return ConfigLoader.Builder","title":"builder - Misk"},{"location":"0.x/wisp-config/wisp.config/-wisp-config/builder.html#builder","text":"fun builder(): Builder Get a config builder. Example use: val myConfig = WispConfig.builder() \u2026 .addWispConfigSources(\u2026) \u2026 .build .loadConfigOrThrow() Note that if you are passing configuration fragments within Wisp, MyConfig should implement Config Return ConfigLoader.Builder","title":"builder"},{"location":"0.x/wisp-config/wisp.config/com.sksamuel.hoplite.-config-loader.-builder/index.html","text":"wisp-config / wisp.config / com.sksamuel.hoplite.ConfigLoader.Builder Extensions for com.sksamuel.hoplite.ConfigLoader.Builder \u00b6 Name Summary addWispConfigSources fun Builder.addWispConfigSources(configSources: List < ConfigSource >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Builder Add the config sources in the order supplied. If the config source location does not exist it is silently skipped, i.e. the config locations are optional.","title":"Extensions for com.sksamuel.hoplite.ConfigLoader.Builder - Misk"},{"location":"0.x/wisp-config/wisp.config/com.sksamuel.hoplite.-config-loader.-builder/index.html#extensions-for-comsksamuelhopliteconfigloaderbuilder","text":"Name Summary addWispConfigSources fun Builder.addWispConfigSources(configSources: List < ConfigSource >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Builder Add the config sources in the order supplied. If the config source location does not exist it is silently skipped, i.e. the config locations are optional.","title":"Extensions for com.sksamuel.hoplite.ConfigLoader.Builder"},{"location":"0.x/wisp-config/wisp.config/com.sksamuel.hoplite.-config-loader.-builder/add-wisp-config-sources.html","text":"wisp-config / wisp.config / com.sksamuel.hoplite.ConfigLoader.Builder / addWispConfigSources addWispConfigSources \u00b6 fun Builder.addWispConfigSources(configSources: List < ConfigSource >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Builder Add the config sources in the order supplied. If the config source location does not exist it is silently skipped, i.e. the config locations are optional.","title":"addWispConfigSources - Misk"},{"location":"0.x/wisp-config/wisp.config/com.sksamuel.hoplite.-config-loader.-builder/add-wisp-config-sources.html#addwispconfigsources","text":"fun Builder.addWispConfigSources(configSources: List < ConfigSource >, resourceLoader: ResourceLoader = ResourceLoader.SYSTEM): Builder Add the config sources in the order supplied. If the config source location does not exist it is silently skipped, i.e. the config locations are optional.","title":"addWispConfigSources"},{"location":"0.x/wisp-containers-testing/index.html","text":"wisp-containers-testing Packages \u00b6 Name Summary wisp.containers Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-containers-testing/index.html#packages","text":"Name Summary wisp.containers","title":"Packages"},{"location":"0.x/wisp-containers-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-containers-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.containers.Composer Composer composes many Container s together to use in a unit test. wisp.containers.Container A Container creates a Docker container for testing.","title":"All Types - Misk"},{"location":"0.x/wisp-containers-testing/alltypes/index.html#all-types","text":"Name Summary wisp.containers.Composer Composer composes many Container s together to use in a unit test. wisp.containers.Container A Container creates a Docker container for testing.","title":"All Types"},{"location":"0.x/wisp-containers-testing/wisp.containers/index.html","text":"wisp-containers-testing / wisp.containers Package wisp.containers \u00b6 Types \u00b6 Name Summary Composer class Composer Composer composes many Container s together to use in a unit test. Container data class Container A Container creates a Docker container for testing.","title":"Package wisp.containers - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/index.html#package-wispcontainers","text":"","title":"Package wisp.containers"},{"location":"0.x/wisp-containers-testing/wisp.containers/index.html#types","text":"Name Summary Composer class Composer Composer composes many Container s together to use in a unit test. Container data class Container A Container creates a Docker container for testing.","title":"Types"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/index.html","text":"wisp-containers-testing / wisp.containers / Composer Composer \u00b6 class Composer Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start() Constructors \u00b6 Name Summary <init> Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test. Properties \u00b6 Name Summary running val running: AtomicBoolean Functions \u00b6 Name Summary start fun start(): Unit stop fun stop(): Unit","title":"Composer - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/index.html#composer","text":"class Composer Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start()","title":"Composer"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/index.html#constructors","text":"Name Summary <init> Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test.","title":"Constructors"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/index.html#properties","text":"Name Summary running val running: AtomicBoolean","title":"Properties"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/index.html#functions","text":"Name Summary start fun start(): Unit stop fun stop(): Unit","title":"Functions"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/-init-.html","text":"wisp-containers-testing / wisp.containers / Composer / <init> <init> \u00b6 Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start()","title":" init "},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/-init-.html#init","text":"Composer(name: String , vararg containers: Container ) Composer composes many Container s together to use in a unit test. The Container s are networked using a dedicated Docker network. Tests need to expose ports in order for the test to communicate with the containers over 127.0.0.1. The following example composes Kafka and Zookeeper containers for testing. Kafka is exposed to the jUnit test via 127.0.0.1:9102. In this example, Zookeeper is not exposed to the test. val zkContainer = Container { withImage(\"confluentinc/cp-zookeeper\") withName(\"zookeeper\") withEnv(\"ZOOKEEPER_CLIENT_PORT=2181\") } val kafka = Container { withImage(\"confluentinc/cp-kafka\" withName(\"kafka\") withExposedPorts(ExposedPort.tcp(port)) withPortBindings(Ports().apply { bind(ExposedPort.tcp(9102), Ports.Binding.bindPort(9102)) }) withEnv( \"KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181\", \"KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9102\") } val composer = Composer(\"e-kafka\", zkContainer, kafka) composer.start()","title":"&lt;init&gt;"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/running.html","text":"wisp-containers-testing / wisp.containers / Composer / running running \u00b6 val running: AtomicBoolean","title":"running - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/running.html#running","text":"val running: AtomicBoolean","title":"running"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/start.html","text":"wisp-containers-testing / wisp.containers / Composer / start start \u00b6 fun start(): Unit","title":"start - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/start.html#start","text":"fun start(): Unit","title":"start"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/stop.html","text":"wisp-containers-testing / wisp.containers / Composer / stop stop \u00b6 fun stop(): Unit","title":"stop - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/-composer/stop.html#stop","text":"fun stop(): Unit","title":"stop"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/index.html","text":"wisp-containers-testing / wisp.containers / Container Container \u00b6 data class Container A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example. Constructors \u00b6 Name Summary <init> Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing. Properties \u00b6 Name Summary beforeStartHook val beforeStartHook: (docker: DockerClient, id: String ) -> Unit createCmd val createCmd: CreateContainerCmd.() -> Unit","title":"Container - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/index.html#container","text":"data class Container A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example.","title":"Container"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/index.html#constructors","text":"Name Summary <init> Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing.","title":"Constructors"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/index.html#properties","text":"Name Summary beforeStartHook val beforeStartHook: (docker: DockerClient, id: String ) -> Unit createCmd val createCmd: CreateContainerCmd.() -> Unit","title":"Properties"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/-init-.html","text":"wisp-containers-testing / wisp.containers / Container / <init> <init> \u00b6 Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example.","title":" init "},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/-init-.html#init","text":"Container(createCmd: CreateContainerCmd.() -> Unit )``Container(createCmd: CreateContainerCmd.() -> Unit , beforeStartHook: (docker: DockerClient, id: String ) -> Unit ) A Container creates a Docker container for testing. Tests provide a lambda to build a CreateContainerCmd . The createCmd lambda must set CreateContainerCmd.withName and CreateContainerCmd.withImage . All other fields are optional. The Composer takes care of setting up the network. There may be a need to configure your container between the creation and start steps. beforeStartHook provides you with an id to your container allowing you to manipulate as necessary before the command/entrypoint is invoked. See Composer for an example.","title":"&lt;init&gt;"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/before-start-hook.html","text":"wisp-containers-testing / wisp.containers / Container / beforeStartHook beforeStartHook \u00b6 val beforeStartHook: (docker: DockerClient, id: String ) -> Unit","title":"beforeStartHook - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/before-start-hook.html#beforestarthook","text":"val beforeStartHook: (docker: DockerClient, id: String ) -> Unit","title":"beforeStartHook"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/create-cmd.html","text":"wisp-containers-testing / wisp.containers / Container / createCmd createCmd \u00b6 val createCmd: CreateContainerCmd.() -> Unit","title":"createCmd - Misk"},{"location":"0.x/wisp-containers-testing/wisp.containers/-container/create-cmd.html#createcmd","text":"val createCmd: CreateContainerCmd.() -> Unit","title":"createCmd"},{"location":"0.x/wisp-deployment/index.html","text":"wisp-deployment Packages \u00b6 Name Summary wisp.deployment Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-deployment/index.html#packages","text":"Name Summary wisp.deployment","title":"Packages"},{"location":"0.x/wisp-deployment/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-deployment/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.deployment.Deployment Deployment describes the context in which the application is running wisp.deployment.EnvironmentVariableLoader Loads an environment variable value. wisp.deployment.RealEnvironmentVariableLoader","title":"All Types - Misk"},{"location":"0.x/wisp-deployment/alltypes/index.html#all-types","text":"Name Summary wisp.deployment.Deployment Deployment describes the context in which the application is running wisp.deployment.EnvironmentVariableLoader Loads an environment variable value. wisp.deployment.RealEnvironmentVariableLoader","title":"All Types"},{"location":"0.x/wisp-deployment/wisp.deployment/index.html","text":"wisp-deployment / wisp.deployment Package wisp.deployment \u00b6 Types \u00b6 Name Summary Deployment data class Deployment Deployment describes the context in which the application is running EnvironmentVariableLoader interface EnvironmentVariableLoader Loads an environment variable value. RealEnvironmentVariableLoader class RealEnvironmentVariableLoader : EnvironmentVariableLoader Properties \u00b6 Name Summary deployments val deployments: Map < String , Deployment > DEVELOPMENT val DEVELOPMENT: Deployment PRODUCTION val PRODUCTION: Deployment STAGING val STAGING: Deployment TESTING val TESTING: Deployment Functions \u00b6 Name Summary getDeploymentFromEnvironmentVariable fun getDeploymentFromEnvironmentVariable(defaultDeployment: Deployment = DEVELOPMENT, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real): Deployment Determines a Deployment based on the value within the ENVIRONMENT variable, defaulting to local development if not set (i.e. isLocalDevelopment == true)","title":"Package wisp.deployment - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/index.html#package-wispdeployment","text":"","title":"Package wisp.deployment"},{"location":"0.x/wisp-deployment/wisp.deployment/index.html#types","text":"Name Summary Deployment data class Deployment Deployment describes the context in which the application is running EnvironmentVariableLoader interface EnvironmentVariableLoader Loads an environment variable value. RealEnvironmentVariableLoader class RealEnvironmentVariableLoader : EnvironmentVariableLoader","title":"Types"},{"location":"0.x/wisp-deployment/wisp.deployment/index.html#properties","text":"Name Summary deployments val deployments: Map < String , Deployment > DEVELOPMENT val DEVELOPMENT: Deployment PRODUCTION val PRODUCTION: Deployment STAGING val STAGING: Deployment TESTING val TESTING: Deployment","title":"Properties"},{"location":"0.x/wisp-deployment/wisp.deployment/index.html#functions","text":"Name Summary getDeploymentFromEnvironmentVariable fun getDeploymentFromEnvironmentVariable(defaultDeployment: Deployment = DEVELOPMENT, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real): Deployment Determines a Deployment based on the value within the ENVIRONMENT variable, defaulting to local development if not set (i.e. isLocalDevelopment == true)","title":"Functions"},{"location":"0.x/wisp-deployment/wisp.deployment/-d-e-v-e-l-o-p-m-e-n-t.html","text":"wisp-deployment / wisp.deployment / DEVELOPMENT DEVELOPMENT \u00b6 val DEVELOPMENT: Deployment","title":"DEVELOPMENT - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-d-e-v-e-l-o-p-m-e-n-t.html#development","text":"val DEVELOPMENT: Deployment","title":"DEVELOPMENT"},{"location":"0.x/wisp-deployment/wisp.deployment/-p-r-o-d-u-c-t-i-o-n.html","text":"wisp-deployment / wisp.deployment / PRODUCTION PRODUCTION \u00b6 val PRODUCTION: Deployment","title":"PRODUCTION - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-p-r-o-d-u-c-t-i-o-n.html#production","text":"val PRODUCTION: Deployment","title":"PRODUCTION"},{"location":"0.x/wisp-deployment/wisp.deployment/-s-t-a-g-i-n-g.html","text":"wisp-deployment / wisp.deployment / STAGING STAGING \u00b6 val STAGING: Deployment","title":"STAGING - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-s-t-a-g-i-n-g.html#staging","text":"val STAGING: Deployment","title":"STAGING"},{"location":"0.x/wisp-deployment/wisp.deployment/-t-e-s-t-i-n-g.html","text":"wisp-deployment / wisp.deployment / TESTING TESTING \u00b6 val TESTING: Deployment","title":"TESTING - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-t-e-s-t-i-n-g.html#testing","text":"val TESTING: Deployment","title":"TESTING"},{"location":"0.x/wisp-deployment/wisp.deployment/deployments.html","text":"wisp-deployment / wisp.deployment / deployments deployments \u00b6 val deployments: Map < String , Deployment >","title":"deployments - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/deployments.html#deployments","text":"val deployments: Map < String , Deployment >","title":"deployments"},{"location":"0.x/wisp-deployment/wisp.deployment/get-deployment-from-environment-variable.html","text":"wisp-deployment / wisp.deployment / getDeploymentFromEnvironmentVariable getDeploymentFromEnvironmentVariable \u00b6 fun getDeploymentFromEnvironmentVariable(defaultDeployment: Deployment = DEVELOPMENT, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real): Deployment Determines a Deployment based on the value within the ENVIRONMENT variable, defaulting to local development if not set (i.e. isLocalDevelopment == true)","title":"getDeploymentFromEnvironmentVariable - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/get-deployment-from-environment-variable.html#getdeploymentfromenvironmentvariable","text":"fun getDeploymentFromEnvironmentVariable(defaultDeployment: Deployment = DEVELOPMENT, environmentVariableLoader: EnvironmentVariableLoader = EnvironmentVariableLoader.real): Deployment Determines a Deployment based on the value within the ENVIRONMENT variable, defaulting to local development if not set (i.e. isLocalDevelopment == true)","title":"getDeploymentFromEnvironmentVariable"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/index.html","text":"wisp-deployment / wisp.deployment / Deployment Deployment \u00b6 data class Deployment Deployment describes the context in which the application is running Constructors \u00b6 Name Summary <init> Deployment(name: String , isProduction: Boolean = false, isStaging: Boolean = false, isTest: Boolean = false, isLocalDevelopment: Boolean = false) Deployment describes the context in which the application is running Properties \u00b6 Name Summary isFake val isFake: Boolean Returns true if running outside of a cluster (CI or local development). Mutually exclusive with isReal. isLocalDevelopment val isLocalDevelopment: Boolean Whether the service is running on a local developer machine, including as a Docker image. isProduction val isProduction: Boolean Whether the service is running in a production environment, having an SLA or handling customer data. isReal val isReal: Boolean Returns true if running in a managed cluster, such as a staging or production cluster. Mutually exclusive with isFake. isStaging val isStaging: Boolean Whether the service is running in a staging environment. isTest val isTest: Boolean Whether the service is running in a test environment, either locally or in a CI. name val name: String The name of this deployment. This is used for debugging and should not be parsed. Functions \u00b6 Name Summary mapToEnvironmentName fun mapToEnvironmentName(): String","title":"Deployment - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/index.html#deployment","text":"data class Deployment Deployment describes the context in which the application is running","title":"Deployment"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/index.html#constructors","text":"Name Summary <init> Deployment(name: String , isProduction: Boolean = false, isStaging: Boolean = false, isTest: Boolean = false, isLocalDevelopment: Boolean = false) Deployment describes the context in which the application is running","title":"Constructors"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/index.html#properties","text":"Name Summary isFake val isFake: Boolean Returns true if running outside of a cluster (CI or local development). Mutually exclusive with isReal. isLocalDevelopment val isLocalDevelopment: Boolean Whether the service is running on a local developer machine, including as a Docker image. isProduction val isProduction: Boolean Whether the service is running in a production environment, having an SLA or handling customer data. isReal val isReal: Boolean Returns true if running in a managed cluster, such as a staging or production cluster. Mutually exclusive with isFake. isStaging val isStaging: Boolean Whether the service is running in a staging environment. isTest val isTest: Boolean Whether the service is running in a test environment, either locally or in a CI. name val name: String The name of this deployment. This is used for debugging and should not be parsed.","title":"Properties"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/index.html#functions","text":"Name Summary mapToEnvironmentName fun mapToEnvironmentName(): String","title":"Functions"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/-init-.html","text":"wisp-deployment / wisp.deployment / Deployment / <init> <init> \u00b6 Deployment(name: String , isProduction: Boolean = false, isStaging: Boolean = false, isTest: Boolean = false, isLocalDevelopment: Boolean = false) Deployment describes the context in which the application is running","title":" init "},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/-init-.html#init","text":"Deployment(name: String , isProduction: Boolean = false, isStaging: Boolean = false, isTest: Boolean = false, isLocalDevelopment: Boolean = false) Deployment describes the context in which the application is running","title":"&lt;init&gt;"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-fake.html","text":"wisp-deployment / wisp.deployment / Deployment / isFake isFake \u00b6 val isFake: Boolean Returns true if running outside of a cluster (CI or local development). Mutually exclusive with isReal.","title":"isFake - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-fake.html#isfake","text":"val isFake: Boolean Returns true if running outside of a cluster (CI or local development). Mutually exclusive with isReal.","title":"isFake"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-local-development.html","text":"wisp-deployment / wisp.deployment / Deployment / isLocalDevelopment isLocalDevelopment \u00b6 val isLocalDevelopment: Boolean Whether the service is running on a local developer machine, including as a Docker image.","title":"isLocalDevelopment - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-local-development.html#islocaldevelopment","text":"val isLocalDevelopment: Boolean Whether the service is running on a local developer machine, including as a Docker image.","title":"isLocalDevelopment"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-production.html","text":"wisp-deployment / wisp.deployment / Deployment / isProduction isProduction \u00b6 val isProduction: Boolean Whether the service is running in a production environment, having an SLA or handling customer data.","title":"isProduction - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-production.html#isproduction","text":"val isProduction: Boolean Whether the service is running in a production environment, having an SLA or handling customer data.","title":"isProduction"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-real.html","text":"wisp-deployment / wisp.deployment / Deployment / isReal isReal \u00b6 val isReal: Boolean Returns true if running in a managed cluster, such as a staging or production cluster. Mutually exclusive with isFake.","title":"isReal - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-real.html#isreal","text":"val isReal: Boolean Returns true if running in a managed cluster, such as a staging or production cluster. Mutually exclusive with isFake.","title":"isReal"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-staging.html","text":"wisp-deployment / wisp.deployment / Deployment / isStaging isStaging \u00b6 val isStaging: Boolean Whether the service is running in a staging environment.","title":"isStaging - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-staging.html#isstaging","text":"val isStaging: Boolean Whether the service is running in a staging environment.","title":"isStaging"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-test.html","text":"wisp-deployment / wisp.deployment / Deployment / isTest isTest \u00b6 val isTest: Boolean Whether the service is running in a test environment, either locally or in a CI.","title":"isTest - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/is-test.html#istest","text":"val isTest: Boolean Whether the service is running in a test environment, either locally or in a CI.","title":"isTest"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/map-to-environment-name.html","text":"wisp-deployment / wisp.deployment / Deployment / mapToEnvironmentName mapToEnvironmentName \u00b6 fun mapToEnvironmentName(): String","title":"mapToEnvironmentName - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/map-to-environment-name.html#maptoenvironmentname","text":"fun mapToEnvironmentName(): String","title":"mapToEnvironmentName"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/name.html","text":"wisp-deployment / wisp.deployment / Deployment / name name \u00b6 val name: String The name of this deployment. This is used for debugging and should not be parsed. All pods in the same deployment will have this same name.","title":"name - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-deployment/name.html#name","text":"val name: String The name of this deployment. This is used for debugging and should not be parsed. All pods in the same deployment will have this same name.","title":"name"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/index.html","text":"wisp-deployment / wisp.deployment / EnvironmentVariableLoader EnvironmentVariableLoader \u00b6 interface EnvironmentVariableLoader Loads an environment variable value. Functions \u00b6 Name Summary getEnvironmentVariable open fun getEnvironmentVariable(name: String ): String Get the environment variable value that must exist getEnvironmentVariableOrDefault open fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String Get the environment variable value, or if it does not exist, use the defaultValue supplied. Companion Object Properties \u00b6 Name Summary real val real: RealEnvironmentVariableLoader Inheritors \u00b6 Name Summary RealEnvironmentVariableLoader class RealEnvironmentVariableLoader : EnvironmentVariableLoader","title":"EnvironmentVariableLoader - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/index.html#environmentvariableloader","text":"interface EnvironmentVariableLoader Loads an environment variable value.","title":"EnvironmentVariableLoader"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/index.html#functions","text":"Name Summary getEnvironmentVariable open fun getEnvironmentVariable(name: String ): String Get the environment variable value that must exist getEnvironmentVariableOrDefault open fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String Get the environment variable value, or if it does not exist, use the defaultValue supplied.","title":"Functions"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/index.html#companion-object-properties","text":"Name Summary real val real: RealEnvironmentVariableLoader","title":"Companion Object Properties"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/index.html#inheritors","text":"Name Summary RealEnvironmentVariableLoader class RealEnvironmentVariableLoader : EnvironmentVariableLoader","title":"Inheritors"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable-or-default.html","text":"wisp-deployment / wisp.deployment / EnvironmentVariableLoader / getEnvironmentVariableOrDefault getEnvironmentVariableOrDefault \u00b6 open fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String Get the environment variable value, or if it does not exist, use the defaultValue supplied.","title":"getEnvironmentVariableOrDefault - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable-or-default.html#getenvironmentvariableordefault","text":"open fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String Get the environment variable value, or if it does not exist, use the defaultValue supplied.","title":"getEnvironmentVariableOrDefault"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable.html","text":"wisp-deployment / wisp.deployment / EnvironmentVariableLoader / getEnvironmentVariable getEnvironmentVariable \u00b6 open fun getEnvironmentVariable(name: String ): String Get the environment variable value that must exist Exceptions \u00b6 IllegalStateException - if the environment variable is not found","title":"getEnvironmentVariable - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable.html#getenvironmentvariable","text":"open fun getEnvironmentVariable(name: String ): String Get the environment variable value that must exist","title":"getEnvironmentVariable"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/get-environment-variable.html#exceptions","text":"IllegalStateException - if the environment variable is not found","title":"Exceptions"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/real.html","text":"wisp-deployment / wisp.deployment / EnvironmentVariableLoader / real real \u00b6 val real: RealEnvironmentVariableLoader","title":"real - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-environment-variable-loader/real.html#real","text":"val real: RealEnvironmentVariableLoader","title":"real"},{"location":"0.x/wisp-deployment/wisp.deployment/-real-environment-variable-loader/index.html","text":"wisp-deployment / wisp.deployment / RealEnvironmentVariableLoader RealEnvironmentVariableLoader \u00b6 class RealEnvironmentVariableLoader : EnvironmentVariableLoader Constructors \u00b6 Name Summary <init> RealEnvironmentVariableLoader() Inherited Functions \u00b6 Name Summary getEnvironmentVariable open fun getEnvironmentVariable(name: String ): String Get the environment variable value that must exist getEnvironmentVariableOrDefault open fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String Get the environment variable value, or if it does not exist, use the defaultValue supplied.","title":"RealEnvironmentVariableLoader - Misk"},{"location":"0.x/wisp-deployment/wisp.deployment/-real-environment-variable-loader/index.html#realenvironmentvariableloader","text":"class RealEnvironmentVariableLoader : EnvironmentVariableLoader","title":"RealEnvironmentVariableLoader"},{"location":"0.x/wisp-deployment/wisp.deployment/-real-environment-variable-loader/index.html#constructors","text":"Name Summary <init> RealEnvironmentVariableLoader()","title":"Constructors"},{"location":"0.x/wisp-deployment/wisp.deployment/-real-environment-variable-loader/index.html#inherited-functions","text":"Name Summary getEnvironmentVariable open fun getEnvironmentVariable(name: String ): String Get the environment variable value that must exist getEnvironmentVariableOrDefault open fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String Get the environment variable value, or if it does not exist, use the defaultValue supplied.","title":"Inherited Functions"},{"location":"0.x/wisp-deployment/wisp.deployment/-real-environment-variable-loader/-init-.html","text":"wisp-deployment / wisp.deployment / RealEnvironmentVariableLoader / <init> <init> \u00b6 RealEnvironmentVariableLoader()","title":" init "},{"location":"0.x/wisp-deployment/wisp.deployment/-real-environment-variable-loader/-init-.html#init","text":"RealEnvironmentVariableLoader()","title":"&lt;init&gt;"},{"location":"0.x/wisp-deployment-testing/index.html","text":"wisp-deployment-testing Packages \u00b6 Name Summary wisp.deployment Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-deployment-testing/index.html#packages","text":"Name Summary wisp.deployment","title":"Packages"},{"location":"0.x/wisp-deployment-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-deployment-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.deployment.FakeEnvironmentVariableLoader A Fake EnvironmentVariableLoader that loads from an in memory map","title":"All Types - Misk"},{"location":"0.x/wisp-deployment-testing/alltypes/index.html#all-types","text":"Name Summary wisp.deployment.FakeEnvironmentVariableLoader A Fake EnvironmentVariableLoader that loads from an in memory map","title":"All Types"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/index.html","text":"wisp-deployment-testing / wisp.deployment Package wisp.deployment \u00b6 Types \u00b6 Name Summary FakeEnvironmentVariableLoader class FakeEnvironmentVariableLoader : EnvironmentVariableLoader A Fake EnvironmentVariableLoader that loads from an in memory map","title":"Package wisp.deployment - Misk"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/index.html#package-wispdeployment","text":"","title":"Package wisp.deployment"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/index.html#types","text":"Name Summary FakeEnvironmentVariableLoader class FakeEnvironmentVariableLoader : EnvironmentVariableLoader A Fake EnvironmentVariableLoader that loads from an in memory map","title":"Types"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/index.html","text":"wisp-deployment-testing / wisp.deployment / FakeEnvironmentVariableLoader FakeEnvironmentVariableLoader \u00b6 class FakeEnvironmentVariableLoader : EnvironmentVariableLoader A Fake EnvironmentVariableLoader that loads from an in memory map Constructors \u00b6 Name Summary <init> FakeEnvironmentVariableLoader(vars: MutableMap < String , String > = mutableMapOf()) A Fake EnvironmentVariableLoader that loads from an in memory map Properties \u00b6 Name Summary vars val vars: MutableMap < String , String > Functions \u00b6 Name Summary getEnvironmentVariable fun getEnvironmentVariable(name: String ): String getEnvironmentVariableOrDefault fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String","title":"FakeEnvironmentVariableLoader - Misk"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/index.html#fakeenvironmentvariableloader","text":"class FakeEnvironmentVariableLoader : EnvironmentVariableLoader A Fake EnvironmentVariableLoader that loads from an in memory map","title":"FakeEnvironmentVariableLoader"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/index.html#constructors","text":"Name Summary <init> FakeEnvironmentVariableLoader(vars: MutableMap < String , String > = mutableMapOf()) A Fake EnvironmentVariableLoader that loads from an in memory map","title":"Constructors"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/index.html#properties","text":"Name Summary vars val vars: MutableMap < String , String >","title":"Properties"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/index.html#functions","text":"Name Summary getEnvironmentVariable fun getEnvironmentVariable(name: String ): String getEnvironmentVariableOrDefault fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String","title":"Functions"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/-init-.html","text":"wisp-deployment-testing / wisp.deployment / FakeEnvironmentVariableLoader / <init> <init> \u00b6 FakeEnvironmentVariableLoader(vars: MutableMap < String , String > = mutableMapOf()) A Fake EnvironmentVariableLoader that loads from an in memory map","title":" init "},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/-init-.html#init","text":"FakeEnvironmentVariableLoader(vars: MutableMap < String , String > = mutableMapOf()) A Fake EnvironmentVariableLoader that loads from an in memory map","title":"&lt;init&gt;"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable-or-default.html","text":"wisp-deployment-testing / wisp.deployment / FakeEnvironmentVariableLoader / getEnvironmentVariableOrDefault getEnvironmentVariableOrDefault \u00b6 fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String","title":"getEnvironmentVariableOrDefault - Misk"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable-or-default.html#getenvironmentvariableordefault","text":"fun getEnvironmentVariableOrDefault(name: String , defaultValue: String ): String","title":"getEnvironmentVariableOrDefault"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable.html","text":"wisp-deployment-testing / wisp.deployment / FakeEnvironmentVariableLoader / getEnvironmentVariable getEnvironmentVariable \u00b6 fun getEnvironmentVariable(name: String ): String","title":"getEnvironmentVariable - Misk"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/get-environment-variable.html#getenvironmentvariable","text":"fun getEnvironmentVariable(name: String ): String","title":"getEnvironmentVariable"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/vars.html","text":"wisp-deployment-testing / wisp.deployment / FakeEnvironmentVariableLoader / vars vars \u00b6 val vars: MutableMap < String , String >","title":"vars - Misk"},{"location":"0.x/wisp-deployment-testing/wisp.deployment/-fake-environment-variable-loader/vars.html#vars","text":"val vars: MutableMap < String , String >","title":"vars"},{"location":"0.x/wisp-feature/index.html","text":"wisp-feature Packages \u00b6 Name Summary wisp.feature Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-feature/index.html#packages","text":"Name Summary wisp.feature","title":"Packages"},{"location":"0.x/wisp-feature/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-feature/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.feature.Attributes Extra attributes to be used for evaluating features. wisp.feature.DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. wisp.feature.Feature Typed feature string. wisp.feature.FeatureFlags Interface for evaluating feature flags. wisp.feature.FeatureFlagValidation com.squareup.moshi.JsonAdapter (extensions in package wisp.feature) wisp.feature.TrackerReference","title":"All Types - Misk"},{"location":"0.x/wisp-feature/alltypes/index.html#all-types","text":"Name Summary wisp.feature.Attributes Extra attributes to be used for evaluating features. wisp.feature.DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. wisp.feature.Feature Typed feature string. wisp.feature.FeatureFlags Interface for evaluating feature flags. wisp.feature.FeatureFlagValidation com.squareup.moshi.JsonAdapter (extensions in package wisp.feature) wisp.feature.TrackerReference","title":"All Types"},{"location":"0.x/wisp-feature/wisp.feature/index.html","text":"wisp-feature / wisp.feature Package wisp.feature \u00b6 Types \u00b6 Name Summary Attributes open class Attributes Extra attributes to be used for evaluating features. DynamicConfig interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. Feature open class Feature Typed feature string. FeatureFlags interface FeatureFlags Interface for evaluating feature flags. FeatureFlagValidation object FeatureFlagValidation TrackerReference interface TrackerReference Extensions for External Classes \u00b6 Name Summary com.squareup.moshi.JsonAdapter Functions \u00b6 Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Package wisp.feature - Misk"},{"location":"0.x/wisp-feature/wisp.feature/index.html#package-wispfeature","text":"","title":"Package wisp.feature"},{"location":"0.x/wisp-feature/wisp.feature/index.html#types","text":"Name Summary Attributes open class Attributes Extra attributes to be used for evaluating features. DynamicConfig interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. Feature open class Feature Typed feature string. FeatureFlags interface FeatureFlags Interface for evaluating feature flags. FeatureFlagValidation object FeatureFlagValidation TrackerReference interface TrackerReference","title":"Types"},{"location":"0.x/wisp-feature/wisp.feature/index.html#extensions-for-external-classes","text":"Name Summary com.squareup.moshi.JsonAdapter","title":"Extensions for External Classes"},{"location":"0.x/wisp-feature/wisp.feature/index.html#functions","text":"Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/wisp-feature/wisp.feature/get-enum.html","text":"wisp-feature / wisp.feature / getEnum getEnum \u00b6 inline fun <reified T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T inline fun <reified T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getEnum - Misk"},{"location":"0.x/wisp-feature/wisp.feature/get-enum.html#getenum","text":"inline fun <reified T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T inline fun <reified T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getEnum"},{"location":"0.x/wisp-feature/wisp.feature/get-json.html","text":"wisp-feature / wisp.feature / getJson getJson \u00b6 inline fun <reified T> DynamicConfig .getJson(feature: Feature ): T inline fun <reified T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/get-json.html#getjson","text":"inline fun <reified T> DynamicConfig .getJson(feature: Feature ): T inline fun <reified T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T","title":"getJson"},{"location":"0.x/wisp-feature/wisp.feature/track-enum.html","text":"wisp-feature / wisp.feature / trackEnum trackEnum \u00b6 inline fun <reified T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/wisp-feature/wisp.feature/track-enum.html#trackenum","text":"inline fun <reified T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum"},{"location":"0.x/wisp-feature/wisp.feature/track-json.html","text":"wisp-feature / wisp.feature / trackJson trackJson \u00b6 inline fun <reified T> DynamicConfig .trackJson(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/track-json.html#trackjson","text":"inline fun <reified T> DynamicConfig .trackJson(feature: Feature , executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference inline fun <reified T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , noinline tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/index.html","text":"wisp-feature / wisp.feature / Attributes Attributes \u00b6 open class Attributes Extra attributes to be used for evaluating features. Constructors \u00b6 Name Summary <init> Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false) Extra attributes to be used for evaluating features. Properties \u00b6 Name Summary anonymous val anonymous: Boolean number val number: Map < String , Number >? text val text: Map < String , String > Functions \u00b6 Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String","title":"Attributes - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/index.html#attributes","text":"open class Attributes Extra attributes to be used for evaluating features.","title":"Attributes"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/index.html#constructors","text":"Name Summary <init> Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false) Extra attributes to be used for evaluating features.","title":"Constructors"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/index.html#properties","text":"Name Summary anonymous val anonymous: Boolean number val number: Map < String , Number >? text val text: Map < String , String >","title":"Properties"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/index.html#functions","text":"Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String","title":"Functions"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/-init-.html","text":"wisp-feature / wisp.feature / Attributes / <init> <init> \u00b6 Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false) Extra attributes to be used for evaluating features.","title":" init "},{"location":"0.x/wisp-feature/wisp.feature/-attributes/-init-.html#init","text":"Attributes(text: Map < String , String > = mapOf(), number: Map < String , Number >? = null, anonymous: Boolean = false) Extra attributes to be used for evaluating features.","title":"&lt;init&gt;"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/anonymous.html","text":"wisp-feature / wisp.feature / Attributes / anonymous anonymous \u00b6 val anonymous: Boolean","title":"anonymous - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/anonymous.html#anonymous","text":"val anonymous: Boolean","title":"anonymous"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/equals.html","text":"wisp-feature / wisp.feature / Attributes / equals equals \u00b6 open fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/equals.html#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/hash-code.html","text":"wisp-feature / wisp.feature / Attributes / hashCode hashCode \u00b6 open fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/hash-code.html#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/number.html","text":"wisp-feature / wisp.feature / Attributes / number number \u00b6 val number: Map < String , Number >?","title":"number - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/number.html#number","text":"val number: Map < String , Number >?","title":"number"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/text.html","text":"wisp-feature / wisp.feature / Attributes / text text \u00b6 val text: Map < String , String >","title":"text - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/text.html#text","text":"val text: Map < String , String >","title":"text"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/to-string.html","text":"wisp-feature / wisp.feature / Attributes / toString toString \u00b6 open fun toString(): String","title":"toString - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-attributes/to-string.html#tostring","text":"open fun toString(): String","title":"toString"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/index.html","text":"wisp-feature / wisp.feature / DynamicConfig DynamicConfig \u00b6 interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys. Functions \u00b6 Name Summary getBoolean abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag. getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag. getInt abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag. getJson abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag. getString abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag. trackBoolean abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. trackInt abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. trackJson abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. trackString abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value. Extension Functions \u00b6 Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"DynamicConfig - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/index.html#dynamicconfig","text":"interface DynamicConfig Interface for evaluating dynamic flags. Dynamic flags are similar to feature flags, but they don\u2019t support different variations for different keys.","title":"DynamicConfig"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/index.html#functions","text":"Name Summary getBoolean abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag. getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag. getInt abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag. getJson abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag. getString abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag. trackBoolean abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. trackInt abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. trackJson abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. trackString abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value.","title":"Functions"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/index.html#extension-functions","text":"Name Summary getEnum fun <T : Enum < T >> DynamicConfig .getEnum(feature: Feature ): T getJson fun <T> DynamicConfig .getJson(feature: Feature ): T trackEnum fun <T : Enum < T >> DynamicConfig .trackEnum(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> DynamicConfig .trackJson(feature: Feature , executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Extension Functions"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-boolean.html","text":"wisp-feature / wisp.feature / DynamicConfig / getBoolean getBoolean \u00b6 abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag.","title":"getBoolean - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-boolean.html#getboolean","text":"abstract fun getBoolean(feature: Feature ): Boolean Returns the value of an boolean dynamic flag.","title":"getBoolean"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-enum.html","text":"wisp-feature / wisp.feature / DynamicConfig / getEnum getEnum \u00b6 abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag.","title":"getEnum - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-enum.html#getenum","text":"abstract fun <T : Enum < T >> getEnum(feature: Feature , clazz: Class < T >): T Returns the value of an enumerated dynamic flag.","title":"getEnum"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-int.html","text":"wisp-feature / wisp.feature / DynamicConfig / getInt getInt \u00b6 abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag.","title":"getInt - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-int.html#getint","text":"abstract fun getInt(feature: Feature ): Int Returns the value of an integer dynamic flag.","title":"getInt"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-json.html","text":"wisp-feature / wisp.feature / DynamicConfig / getJson getJson \u00b6 abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag.","title":"getJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-json.html#getjson","text":"abstract fun <T> getJson(feature: Feature , clazz: Class < T >): T Returns the value of a JSON dynamic flag.","title":"getJson"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-string.html","text":"wisp-feature / wisp.feature / DynamicConfig / getString getString \u00b6 abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag.","title":"getString - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/get-string.html#getstring","text":"abstract fun getString(feature: Feature ): String Returns the value of a string dynamic flag.","title":"getString"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-boolean.html","text":"wisp-feature / wisp.feature / DynamicConfig / trackBoolean trackBoolean \u00b6 abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackBoolean - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-boolean.html#trackboolean","text":"abstract fun trackBoolean(feature: Feature , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a boolean dynamic config tracker which will be invoked whenever the boolean dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackBoolean"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-enum.html","text":"wisp-feature / wisp.feature / DynamicConfig / trackEnum trackEnum \u00b6 abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackEnum - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-enum.html#trackenum","text":"abstract fun <T : Enum < T >> trackEnum(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a enum dynamic config tracker which will be invoked whenever the enum dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackEnum"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-int.html","text":"wisp-feature / wisp.feature / DynamicConfig / trackInt trackInt \u00b6 abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackInt - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-int.html#trackint","text":"abstract fun trackInt(feature: Feature , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a integer dynamic config tracker which will be invoked whenever the integer dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackInt"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-json.html","text":"wisp-feature / wisp.feature / DynamicConfig / trackJson trackJson \u00b6 abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-json.html#trackjson","text":"abstract fun <T> trackJson(feature: Feature , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a json dynamic config tracker which will be invoked whenever the json dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackJson"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-string.html","text":"wisp-feature / wisp.feature / DynamicConfig / trackString trackString \u00b6 abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackString - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-dynamic-config/track-string.html#trackstring","text":"abstract fun trackString(feature: Feature , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a string dynamic config tracker which will be invoked whenever the string dynamic config changes value. Returns a tracker reference which can be used to un-register the tracker.","title":"trackString"},{"location":"0.x/wisp-feature/wisp.feature/-feature/index.html","text":"wisp-feature / wisp.feature / Feature Feature \u00b6 open class Feature Typed feature string. Constructors \u00b6 Name Summary <init> Feature(name: String ) Typed feature string. Properties \u00b6 Name Summary name val name: String Functions \u00b6 Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String","title":"Feature - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature/index.html#feature","text":"open class Feature Typed feature string.","title":"Feature"},{"location":"0.x/wisp-feature/wisp.feature/-feature/index.html#constructors","text":"Name Summary <init> Feature(name: String ) Typed feature string.","title":"Constructors"},{"location":"0.x/wisp-feature/wisp.feature/-feature/index.html#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"0.x/wisp-feature/wisp.feature/-feature/index.html#functions","text":"Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String","title":"Functions"},{"location":"0.x/wisp-feature/wisp.feature/-feature/-init-.html","text":"wisp-feature / wisp.feature / Feature / <init> <init> \u00b6 Feature(name: String ) Typed feature string.","title":" init "},{"location":"0.x/wisp-feature/wisp.feature/-feature/-init-.html#init","text":"Feature(name: String ) Typed feature string.","title":"&lt;init&gt;"},{"location":"0.x/wisp-feature/wisp.feature/-feature/equals.html","text":"wisp-feature / wisp.feature / Feature / equals equals \u00b6 open fun equals(other: Any ?): Boolean","title":"equals - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature/equals.html#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"0.x/wisp-feature/wisp.feature/-feature/hash-code.html","text":"wisp-feature / wisp.feature / Feature / hashCode hashCode \u00b6 open fun hashCode(): Int","title":"hashCode - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature/hash-code.html#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"0.x/wisp-feature/wisp.feature/-feature/name.html","text":"wisp-feature / wisp.feature / Feature / name name \u00b6 val name: String","title":"name - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature/name.html#name","text":"val name: String","title":"name"},{"location":"0.x/wisp-feature/wisp.feature/-feature/to-string.html","text":"wisp-feature / wisp.feature / Feature / toString toString \u00b6 open fun toString(): String","title":"toString - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature/to-string.html#tostring","text":"open fun toString(): String","title":"toString"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flag-validation/index.html","text":"wisp-feature / wisp.feature / FeatureFlagValidation FeatureFlagValidation \u00b6 object FeatureFlagValidation Functions \u00b6 Name Summary checkValidKey fun checkValidKey(feature: Feature , key: String ): Unit Validates the feature flags\u2019s hashing \u201ckey\u201d. Most implementation technically support arbitrary strings, but we still prefer to restrict valid input to prevent accidentally passing in the wrong value or potentially sensitive information.","title":"FeatureFlagValidation - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flag-validation/index.html#featureflagvalidation","text":"object FeatureFlagValidation","title":"FeatureFlagValidation"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flag-validation/index.html#functions","text":"Name Summary checkValidKey fun checkValidKey(feature: Feature , key: String ): Unit Validates the feature flags\u2019s hashing \u201ckey\u201d. Most implementation technically support arbitrary strings, but we still prefer to restrict valid input to prevent accidentally passing in the wrong value or potentially sensitive information.","title":"Functions"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flag-validation/check-valid-key.html","text":"wisp-feature / wisp.feature / FeatureFlagValidation / checkValidKey checkValidKey \u00b6 fun checkValidKey(feature: Feature , key: String ): Unit Validates the feature flags\u2019s hashing \u201ckey\u201d. Most implementation technically support arbitrary strings, but we still prefer to restrict valid input to prevent accidentally passing in the wrong value or potentially sensitive information.","title":"checkValidKey - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flag-validation/check-valid-key.html#checkvalidkey","text":"fun checkValidKey(feature: Feature , key: String ): Unit Validates the feature flags\u2019s hashing \u201ckey\u201d. Most implementation technically support arbitrary strings, but we still prefer to restrict valid input to prevent accidentally passing in the wrong value or potentially sensitive information.","title":"checkValidKey"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/index.html","text":"wisp-feature / wisp.feature / FeatureFlags FeatureFlags \u00b6 interface FeatureFlags Interface for evaluating feature flags. Functions \u00b6 Name Summary getBoolean abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. open fun getBoolean(feature: Feature , key: String ): Boolean getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T getInt abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. open fun getInt(feature: Feature , key: String ): Int getJson abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes. open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T getString abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. open fun getString(feature: Feature , key: String ): String trackBoolean abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes. open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Extension Functions \u00b6 Name Summary getEnum fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"FeatureFlags - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/index.html#featureflags","text":"interface FeatureFlags Interface for evaluating feature flags.","title":"FeatureFlags"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/index.html#functions","text":"Name Summary getBoolean abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. open fun getBoolean(feature: Feature , key: String ): Boolean getEnum abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T getInt abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. open fun getInt(feature: Feature , key: String ): Int getJson abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes. open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T getString abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. open fun getString(feature: Feature , key: String ): String trackBoolean abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes. open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes. open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/index.html#extension-functions","text":"Name Summary getEnum fun <T : Enum < T >> FeatureFlags .getEnum(feature: Feature , key: String , attributes: Attributes = Attributes()): T getJson fun <T> FeatureFlags .getJson(feature: Feature , key: String , attributes: Attributes = Attributes()): T trackEnum fun <T : Enum < T >> FeatureFlags .trackEnum(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackJson fun <T> FeatureFlags .trackJson(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Extension Functions"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-boolean.html","text":"wisp-feature / wisp.feature / FeatureFlags / getBoolean getBoolean \u00b6 abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. See Also getEnum open fun getBoolean(feature: Feature , key: String ): Boolean","title":"getBoolean - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-boolean.html#getboolean","text":"abstract fun getBoolean(feature: Feature , key: String , attributes: Attributes = Attributes()): Boolean Calculates the value of an boolean feature flag for the given key and attributes. See Also getEnum open fun getBoolean(feature: Feature , key: String ): Boolean","title":"getBoolean"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-enum.html","text":"wisp-feature / wisp.feature / FeatureFlags / getEnum getEnum \u00b6 abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes. Parameters \u00b6 feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation. Exceptions \u00b6 RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T","title":"getEnum - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-enum.html#getenum","text":"abstract fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of an enumerated feature flag for the given key and attributes.","title":"getEnum"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-enum.html#parameters","text":"feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation.","title":"Parameters"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-enum.html#exceptions","text":"RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. open fun <T : Enum < T >> getEnum(feature: Feature , key: String , clazz: Class < T >): T","title":"Exceptions"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-int.html","text":"wisp-feature / wisp.feature / FeatureFlags / getInt getInt \u00b6 abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. See Also getEnum open fun getInt(feature: Feature , key: String ): Int","title":"getInt - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-int.html#getint","text":"abstract fun getInt(feature: Feature , key: String , attributes: Attributes = Attributes()): Int Calculates the value of an integer feature flag for the given key and attributes. See Also getEnum open fun getInt(feature: Feature , key: String ): Int","title":"getInt"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-json.html","text":"wisp-feature / wisp.feature / FeatureFlags / getJson getJson \u00b6 abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes. Parameters \u00b6 clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also getEnum open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T","title":"getJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-json.html#getjson","text":"abstract fun <T> getJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes()): T Calculates the value of a JSON feature flag for the given key and attributes.","title":"getJson"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-json.html#parameters","text":"clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also getEnum open fun <T> getJson(feature: Feature , key: String , clazz: Class < T >): T","title":"Parameters"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-string.html","text":"wisp-feature / wisp.feature / FeatureFlags / getString getString \u00b6 abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. See Also getEnum open fun getString(feature: Feature , key: String ): String","title":"getString - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/get-string.html#getstring","text":"abstract fun getString(feature: Feature , key: String , attributes: Attributes = Attributes()): String Calculates the value of a string feature flag for the given key and attributes. See Also getEnum open fun getString(feature: Feature , key: String ): String","title":"getString"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-boolean.html","text":"wisp-feature / wisp.feature / FeatureFlags / trackBoolean trackBoolean \u00b6 abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. See Also trackEnum open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-boolean.html#trackboolean","text":"abstract fun trackBoolean(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference Registers a tracker for the value of an boolean feature flag for the given key and attributes. See Also trackEnum open fun trackBoolean(feature: Feature , key: String , executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-enum.html","text":"wisp-feature / wisp.feature / FeatureFlags / trackEnum trackEnum \u00b6 abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes. Parameters \u00b6 feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation. tracker - a tracker to be registered for processing of changed values Exceptions \u00b6 RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. Return a reference to the registered tracker allowing to un-register it open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-enum.html#trackenum","text":"abstract fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of an enumerated feature flag for the given key and attributes.","title":"trackEnum"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-enum.html#parameters","text":"feature - name of the feature flag to evaluate. key - unique primary key for the entity the flag should be evaluated against. clazz - the enum type. attributes - additional attributes to provide to flag evaluation. tracker - a tracker to be registered for processing of changed values","title":"Parameters"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-enum.html#exceptions","text":"RuntimeException - if the service is unavailable. IllegalStateException - if the flag is off with no default value. Return a reference to the registered tracker allowing to un-register it open fun <T : Enum < T >> trackEnum(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Exceptions"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-int.html","text":"wisp-feature / wisp.feature / FeatureFlags / trackInt trackInt \u00b6 abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. See Also trackEnum open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-int.html#trackint","text":"abstract fun trackInt(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference Registers a tracker for the value of an integer feature flag for the given key and attributes. See Also trackEnum open fun trackInt(feature: Feature , key: String , executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-json.html","text":"wisp-feature / wisp.feature / FeatureFlags / trackJson trackJson \u00b6 abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes. Parameters \u00b6 clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also trackEnum open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-json.html#trackjson","text":"abstract fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, attributes: Attributes = Attributes(), executor: Executor , tracker: ( T ) -> Unit ): TrackerReference Registers a tracker for the value of a JSON feature flag for the given key and attributes.","title":"trackJson"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-json.html#parameters","text":"clazz - the type to convert the JSON string into. It is expected that a Moshi type adapter is registered with the impl. See Also trackEnum open fun <T> trackJson(feature: Feature , key: String , clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"Parameters"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-string.html","text":"wisp-feature / wisp.feature / FeatureFlags / trackString trackString \u00b6 abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. See Also trackEnum open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-feature-flags/track-string.html#trackstring","text":"abstract fun trackString(feature: Feature , key: String , attributes: Attributes = Attributes(), executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Registers a tracker for the value of a string feature flag for the given key and attributes. See Also trackEnum open fun trackString(feature: Feature , key: String , executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString"},{"location":"0.x/wisp-feature/wisp.feature/-tracker-reference/index.html","text":"wisp-feature / wisp.feature / TrackerReference TrackerReference \u00b6 interface TrackerReference Functions \u00b6 Name Summary unregister abstract fun unregister(): Unit","title":"TrackerReference - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-tracker-reference/index.html#trackerreference","text":"interface TrackerReference","title":"TrackerReference"},{"location":"0.x/wisp-feature/wisp.feature/-tracker-reference/index.html#functions","text":"Name Summary unregister abstract fun unregister(): Unit","title":"Functions"},{"location":"0.x/wisp-feature/wisp.feature/-tracker-reference/unregister.html","text":"wisp-feature / wisp.feature / TrackerReference / unregister unregister \u00b6 abstract fun unregister(): Unit","title":"unregister - Misk"},{"location":"0.x/wisp-feature/wisp.feature/-tracker-reference/unregister.html#unregister","text":"abstract fun unregister(): Unit","title":"unregister"},{"location":"0.x/wisp-feature/wisp.feature/com.squareup.moshi.-json-adapter/index.html","text":"wisp-feature / wisp.feature / com.squareup.moshi.JsonAdapter Extensions for com.squareup.moshi.JsonAdapter \u00b6 Name Summary fromSafeJson fun <T> JsonAdapter< T >.fromSafeJson(json: String ): T ? Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields. toSafeJson fun <T> JsonAdapter< T >.toSafeJson(value: T ): String Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.","title":"Extensions for com.squareup.moshi.JsonAdapter - Misk"},{"location":"0.x/wisp-feature/wisp.feature/com.squareup.moshi.-json-adapter/index.html#extensions-for-comsquareupmoshijsonadapter","text":"Name Summary fromSafeJson fun <T> JsonAdapter< T >.fromSafeJson(json: String ): T ? Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields. toSafeJson fun <T> JsonAdapter< T >.toSafeJson(value: T ): String Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.","title":"Extensions for com.squareup.moshi.JsonAdapter"},{"location":"0.x/wisp-feature/wisp.feature/com.squareup.moshi.-json-adapter/from-safe-json.html","text":"wisp-feature / wisp.feature / com.squareup.moshi.JsonAdapter / fromSafeJson fromSafeJson \u00b6 fun <T> JsonAdapter< T >.fromSafeJson(json: String ): T ? Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.","title":"fromSafeJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/com.squareup.moshi.-json-adapter/from-safe-json.html#fromsafejson","text":"fun <T> JsonAdapter< T >.fromSafeJson(json: String ): T ? Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.","title":"fromSafeJson"},{"location":"0.x/wisp-feature/wisp.feature/com.squareup.moshi.-json-adapter/to-safe-json.html","text":"wisp-feature / wisp.feature / com.squareup.moshi.JsonAdapter / toSafeJson toSafeJson \u00b6 fun <T> JsonAdapter< T >.toSafeJson(value: T ): String Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.","title":"toSafeJson - Misk"},{"location":"0.x/wisp-feature/wisp.feature/com.squareup.moshi.-json-adapter/to-safe-json.html#tosafejson","text":"fun <T> JsonAdapter< T >.toSafeJson(value: T ): String Attempts to use JsonAdapter.failOnUnknown and logs any issues before falling back to ignoring the unknown fields.","title":"toSafeJson"},{"location":"0.x/wisp-feature-testing/index.html","text":"wisp-feature-testing Packages \u00b6 Name Summary wisp.feature.testing Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-feature-testing/index.html#packages","text":"Name Summary wisp.feature.testing","title":"Packages"},{"location":"0.x/wisp-feature-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-feature-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.feature.testing.FakeFeatureFlags In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"All Types - Misk"},{"location":"0.x/wisp-feature-testing/alltypes/index.html#all-types","text":"Name Summary wisp.feature.testing.FakeFeatureFlags In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"All Types"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/index.html","text":"wisp-feature-testing / wisp.feature.testing Package wisp.feature.testing \u00b6 Types \u00b6 Name Summary FakeFeatureFlags class FakeFeatureFlags : FeatureFlags, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"Package wisp.feature.testing - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/index.html#package-wispfeaturetesting","text":"","title":"Package wisp.feature.testing"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/index.html#types","text":"Name Summary FakeFeatureFlags class FakeFeatureFlags : FeatureFlags, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"Types"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/index.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags FakeFeatureFlags \u00b6 class FakeFeatureFlags : FeatureFlags, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden. Constructors \u00b6 Name Summary <init> FakeFeatureFlags(moshi: () -> Moshi) In-memory test implementation of FeatureFlags that allows flags to be overridden. Properties \u00b6 Name Summary moshi val moshi: () -> Moshi Functions \u00b6 Name Summary getBoolean fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T getInt fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int getJson fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T getString fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String override fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit overrideJson fun <T> overrideJson(feature: Feature, value: T ): Unit overrideJsonString fun overrideJsonString(feature: Feature, json: String ): Unit overrideKey fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit overrideKeyJson fun <T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit reset fun reset(): Unit trackBoolean fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference Companion Object Properties \u00b6 Name Summary defaultAttributes val defaultAttributes: Attributes KEY const val KEY: String","title":"FakeFeatureFlags - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/index.html#fakefeatureflags","text":"class FakeFeatureFlags : FeatureFlags, DynamicConfig In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"FakeFeatureFlags"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/index.html#constructors","text":"Name Summary <init> FakeFeatureFlags(moshi: () -> Moshi) In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"Constructors"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/index.html#properties","text":"Name Summary moshi val moshi: () -> Moshi","title":"Properties"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/index.html#functions","text":"Name Summary getBoolean fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean getEnum fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T getInt fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int getJson fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T getString fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String override fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit overrideJson fun <T> overrideJson(feature: Feature, value: T ): Unit overrideJsonString fun overrideJsonString(feature: Feature, json: String ): Unit overrideKey fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit overrideKeyJson fun <T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit reset fun reset(): Unit trackBoolean fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference trackEnum fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackInt fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference trackJson fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference trackString fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"Functions"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/index.html#companion-object-properties","text":"Name Summary defaultAttributes val defaultAttributes: Attributes KEY const val KEY: String","title":"Companion Object Properties"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-init-.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / <init> <init> \u00b6 FakeFeatureFlags(moshi: () -> Moshi) In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":" init "},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-init-.html#init","text":"FakeFeatureFlags(moshi: () -> Moshi) In-memory test implementation of FeatureFlags that allows flags to be overridden.","title":"&lt;init&gt;"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-k-e-y.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / KEY KEY \u00b6 const val KEY: String","title":"KEY - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/-k-e-y.html#key","text":"const val KEY: String","title":"KEY"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/default-attributes.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / defaultAttributes defaultAttributes \u00b6 val defaultAttributes: Attributes","title":"defaultAttributes - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/default-attributes.html#defaultattributes","text":"val defaultAttributes: Attributes","title":"defaultAttributes"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-boolean.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / getBoolean getBoolean \u00b6 fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean","title":"getBoolean - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-boolean.html#getboolean","text":"fun getBoolean(feature: Feature, key: String , attributes: Attributes): Boolean fun getBoolean(feature: Feature): Boolean","title":"getBoolean"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-enum.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / getEnum getEnum \u00b6 fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T","title":"getEnum - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-enum.html#getenum","text":"fun <T : Enum < T >> getEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T : Enum < T >> getEnum(feature: Feature, clazz: Class < T >): T","title":"getEnum"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-int.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / getInt getInt \u00b6 fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int","title":"getInt - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-int.html#getint","text":"fun getInt(feature: Feature, key: String , attributes: Attributes): Int fun getInt(feature: Feature): Int","title":"getInt"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-json.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / getJson getJson \u00b6 fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T","title":"getJson - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-json.html#getjson","text":"fun <T> getJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes): T fun <T> getJson(feature: Feature, clazz: Class < T >): T","title":"getJson"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-string.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / getString getString \u00b6 fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String","title":"getString - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/get-string.html#getstring","text":"fun getString(feature: Feature, key: String , attributes: Attributes): String fun getString(feature: Feature): String","title":"getString"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/moshi.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / moshi moshi \u00b6 val moshi: () -> Moshi","title":"moshi - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/moshi.html#moshi","text":"val moshi: () -> Moshi","title":"moshi"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json-string.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / overrideJsonString overrideJsonString \u00b6 fun overrideJsonString(feature: Feature, json: String ): Unit","title":"overrideJsonString - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json-string.html#overridejsonstring","text":"fun overrideJsonString(feature: Feature, json: String ): Unit","title":"overrideJsonString"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / overrideJson overrideJson \u00b6 inline fun <reified T> overrideJson(feature: Feature, value: T ): Unit","title":"overrideJson - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-json.html#overridejson","text":"inline fun <reified T> overrideJson(feature: Feature, value: T ): Unit","title":"overrideJson"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key-json.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / overrideKeyJson overrideKeyJson \u00b6 @JvmOverloads inline fun <reified T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKeyJson - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key-json.html#overridekeyjson","text":"@JvmOverloads inline fun <reified T> overrideKeyJson(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKeyJson"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / overrideKey overrideKey \u00b6 @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit @JvmOverloads fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKey - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override-key.html#overridekey","text":"@JvmOverloads fun overrideKey(feature: Feature, key: String , value: Boolean , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Int , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: String , attributes: Attributes = defaultAttributes): Unit @JvmOverloads fun overrideKey(feature: Feature, key: String , value: Enum <*>, attributes: Attributes = defaultAttributes): Unit fun <T> overrideKey(feature: Feature, key: String , value: T , clazz: Class < T >): Unit @JvmOverloads fun <T> overrideKey(feature: Feature, key: String , value: T , attributes: Attributes = defaultAttributes): Unit","title":"overrideKey"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / override override \u00b6 fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit","title":"override - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/override.html#override","text":"fun override(feature: Feature, value: Boolean ): Unit fun override(feature: Feature, value: Int ): Unit fun override(feature: Feature, value: String ): Unit fun override(feature: Feature, value: Enum <*>): Unit fun <T> override(feature: Feature, value: T ): Unit fun <T> override(feature: Feature, value: T , clazz: Class < T >): Unit","title":"override"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/reset.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / reset reset \u00b6 fun reset(): Unit","title":"reset - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/reset.html#reset","text":"fun reset(): Unit","title":"reset"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-boolean.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / trackBoolean trackBoolean \u00b6 fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-boolean.html#trackboolean","text":"fun trackBoolean(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference fun trackBoolean(feature: Feature, executor: Executor , tracker: ( Boolean ) -> Unit ): TrackerReference","title":"trackBoolean"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-enum.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / trackEnum trackEnum \u00b6 fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-enum.html#trackenum","text":"fun <T : Enum < T >> trackEnum(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T : Enum < T >> trackEnum(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackEnum"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-int.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / trackInt trackInt \u00b6 fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-int.html#trackint","text":"fun trackInt(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference fun trackInt(feature: Feature, executor: Executor , tracker: ( Int ) -> Unit ): TrackerReference","title":"trackInt"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-json.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / trackJson trackJson \u00b6 fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-json.html#trackjson","text":"fun <T> trackJson(feature: Feature, key: String , clazz: Class < T >, attributes: Attributes, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference fun <T> trackJson(feature: Feature, clazz: Class < T >, executor: Executor , tracker: ( T ) -> Unit ): TrackerReference","title":"trackJson"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-string.html","text":"wisp-feature-testing / wisp.feature.testing / FakeFeatureFlags / trackString trackString \u00b6 fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString - Misk"},{"location":"0.x/wisp-feature-testing/wisp.feature.testing/-fake-feature-flags/track-string.html#trackstring","text":"fun trackString(feature: Feature, key: String , attributes: Attributes, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference fun trackString(feature: Feature, executor: Executor , tracker: ( String ) -> Unit ): TrackerReference","title":"trackString"},{"location":"0.x/wisp-logging/index.html","text":"wisp-logging Packages \u00b6 Name Summary wisp.logging Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-logging/index.html#packages","text":"Name Summary wisp.logging","title":"Packages"},{"location":"0.x/wisp-logging/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-logging/alltypes/index.html","text":"All Types \u00b6 Name Summary mu.KLogger (extensions in package wisp.logging) wisp.logging.Tag","title":"All Types - Misk"},{"location":"0.x/wisp-logging/alltypes/index.html#all-types","text":"Name Summary mu.KLogger (extensions in package wisp.logging) wisp.logging.Tag","title":"All Types"},{"location":"0.x/wisp-logging/wisp.logging/index.html","text":"wisp-logging / wisp.logging Package wisp.logging \u00b6 Type Aliases \u00b6 Name Summary Tag typealias Tag = Pair < String , Any ?> Extensions for External Classes \u00b6 Name Summary mu.KLogger Functions \u00b6 Name Summary getLogger fun <T> getLogger(): KLogger","title":"Package wisp.logging - Misk"},{"location":"0.x/wisp-logging/wisp.logging/index.html#package-wisplogging","text":"","title":"Package wisp.logging"},{"location":"0.x/wisp-logging/wisp.logging/index.html#type-aliases","text":"Name Summary Tag typealias Tag = Pair < String , Any ?>","title":"Type Aliases"},{"location":"0.x/wisp-logging/wisp.logging/index.html#extensions-for-external-classes","text":"Name Summary mu.KLogger","title":"Extensions for External Classes"},{"location":"0.x/wisp-logging/wisp.logging/index.html#functions","text":"Name Summary getLogger fun <T> getLogger(): KLogger","title":"Functions"},{"location":"0.x/wisp-logging/wisp.logging/-tag.html","text":"wisp-logging / wisp.logging / Tag Tag \u00b6 typealias Tag = Pair < String , Any ?>","title":"Tag - Misk"},{"location":"0.x/wisp-logging/wisp.logging/-tag.html#tag","text":"typealias Tag = Pair < String , Any ?>","title":"Tag"},{"location":"0.x/wisp-logging/wisp.logging/get-logger.html","text":"wisp-logging / wisp.logging / getLogger getLogger \u00b6 inline fun <reified T> getLogger(): KLogger","title":"getLogger - Misk"},{"location":"0.x/wisp-logging/wisp.logging/get-logger.html#getlogger","text":"inline fun <reified T> getLogger(): KLogger","title":"getLogger"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/index.html","text":"wisp-logging / wisp.logging / mu.KLogger Extensions for mu.KLogger \u00b6 Name Summary debug fun KLogger.debug(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.debug(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit error fun KLogger.error(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.error(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit info fun KLogger.info(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.info(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit log fun KLogger.log(level: Level, vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.log(level: Level, th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit warn fun KLogger.warn(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.warn(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"Extensions for mu.KLogger - Misk"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/index.html#extensions-for-muklogger","text":"Name Summary debug fun KLogger.debug(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.debug(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit error fun KLogger.error(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.error(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit info fun KLogger.info(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.info(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit log fun KLogger.log(level: Level, vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.log(level: Level, th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit warn fun KLogger.warn(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.warn(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"Extensions for mu.KLogger"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/debug.html","text":"wisp-logging / wisp.logging / mu.KLogger / debug debug \u00b6 fun KLogger.debug(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.debug(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"debug - Misk"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/debug.html#debug","text":"fun KLogger.debug(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.debug(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"debug"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/error.html","text":"wisp-logging / wisp.logging / mu.KLogger / error error \u00b6 fun KLogger.error(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.error(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"error - Misk"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/error.html#error","text":"fun KLogger.error(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.error(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"error"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/info.html","text":"wisp-logging / wisp.logging / mu.KLogger / info info \u00b6 fun KLogger.info(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.info(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"info - Misk"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/info.html#info","text":"fun KLogger.info(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.info(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"info"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/log.html","text":"wisp-logging / wisp.logging / mu.KLogger / log log \u00b6 fun KLogger.log(level: Level, vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.log(level: Level, th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"log - Misk"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/log.html#log","text":"fun KLogger.log(level: Level, vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.log(level: Level, th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"log"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/warn.html","text":"wisp-logging / wisp.logging / mu.KLogger / warn warn \u00b6 fun KLogger.warn(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.warn(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"warn - Misk"},{"location":"0.x/wisp-logging/wisp.logging/mu.-k-logger/warn.html#warn","text":"fun KLogger.warn(vararg tags: Tag , message: () -> Any ?): Unit fun KLogger.warn(th: Throwable , vararg tags: Tag , message: () -> Any ?): Unit","title":"warn"},{"location":"0.x/wisp-logging-testing/index.html","text":"wisp-logging-testing Packages \u00b6 Name Summary org.assertj.core.api wisp.logging Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-logging-testing/index.html#packages","text":"Name Summary org.assertj.core.api wisp.logging","title":"Packages"},{"location":"0.x/wisp-logging-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-logging-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.logging.LogCollector Collects log messages so they may be asserted on for testing. wisp.logging.WispQueuedLogCollector","title":"All Types - Misk"},{"location":"0.x/wisp-logging-testing/alltypes/index.html#all-types","text":"Name Summary wisp.logging.LogCollector Collects log messages so they may be asserted on for testing. wisp.logging.WispQueuedLogCollector","title":"All Types"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/index.html","text":"wisp-logging-testing / org.assertj.core.api Package org.assertj.core.api \u00b6 Functions \u00b6 Name Summary assertOrdering fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit containsExactly fun <KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE > isEqualToAsJson fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"Package org.assertj.core.api - Misk"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/index.html#package-orgassertjcoreapi","text":"","title":"Package org.assertj.core.api"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/index.html#functions","text":"Name Summary assertOrdering fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit containsExactly fun <KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE > isEqualToAsJson fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"Functions"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/assert-ordering.html","text":"wisp-logging-testing / org.assertj.core.api / assertOrdering assertOrdering \u00b6 fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit","title":"assertOrdering - Misk"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/assert-ordering.html#assertordering","text":"fun <A : Comparable < A >> assertOrdering(vararg values: A ): Unit","title":"assertOrdering"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/contains-exactly.html","text":"wisp-logging-testing / org.assertj.core.api / containsExactly containsExactly \u00b6 inline fun <reified KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE >","title":"containsExactly - Misk"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/contains-exactly.html#containsexactly","text":"inline fun <reified KEY, VALUE> MapAssert< KEY , VALUE >.containsExactly(vararg p: Pair < KEY , VALUE >): MapAssert< KEY , VALUE >","title":"containsExactly"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/is-equal-to-as-json.html","text":"wisp-logging-testing / org.assertj.core.api / isEqualToAsJson isEqualToAsJson \u00b6 fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"isEqualToAsJson - Misk"},{"location":"0.x/wisp-logging-testing/org.assertj.core.api/is-equal-to-as-json.html#isequaltoasjson","text":"fun <ACTUAL : CharSequence > AbstractCharSequenceAssert<*, ACTUAL >.isEqualToAsJson(expected: CharSequence ): AbstractCharSequenceAssert<*, ACTUAL >","title":"isEqualToAsJson"},{"location":"0.x/wisp-logging-testing/wisp.logging/index.html","text":"wisp-logging-testing / wisp.logging Package wisp.logging \u00b6 Types \u00b6 Name Summary LogCollector interface LogCollector Collects log messages so they may be asserted on for testing. WispQueuedLogCollector class WispQueuedLogCollector : LogCollector","title":"Package wisp.logging - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/index.html#package-wisplogging","text":"","title":"Package wisp.logging"},{"location":"0.x/wisp-logging-testing/wisp.logging/index.html#types","text":"Name Summary LogCollector interface LogCollector Collects log messages so they may be asserted on for testing. WispQueuedLogCollector class WispQueuedLogCollector : LogCollector","title":"Types"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/index.html","text":"wisp-logging-testing / wisp.logging / LogCollector LogCollector \u00b6 interface LogCollector Collects log messages so they may be asserted on for testing. To use it, add the LogCollectorModule to your test. You\u2019ll need @MiskTest with services started because this uses a service to install a log appender for the duration of the test. In your test method you should perform some action that logs, then use an injected logCollector to verify that the expected logs were emitted: @MiskTest(startService = true) class MyTest { @MiskTestModule val module = Modules.combine( MiskServiceModule(), LogCollectorModule(), ... ) @Inject lateinit var logCollector: LogCollector @Test fun test() { someMethodThatLogs() assertThat(logCollector.takeMessages()).containsExactly(\"this is the only logged message!\") } } Use the optional parameters of takeMessages to constrain which log messages are returned. Functions \u00b6 Name Summary takeEvent abstract fun takeEvent(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): ILoggingEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed. takeEvents abstract fun takeEvents(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List <ILoggingEvent> Removes all currently-collected log events and returns those that match the requested criteria. takeMessage abstract fun takeMessage(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): String Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed. takeMessages abstract fun takeMessages(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List < String > Removes all currently-collected log messages and returns those that match the requested criteria. Inheritors \u00b6 Name Summary WispQueuedLogCollector class WispQueuedLogCollector : LogCollector","title":"LogCollector - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/index.html#logcollector","text":"interface LogCollector Collects log messages so they may be asserted on for testing. To use it, add the LogCollectorModule to your test. You\u2019ll need @MiskTest with services started because this uses a service to install a log appender for the duration of the test. In your test method you should perform some action that logs, then use an injected logCollector to verify that the expected logs were emitted: @MiskTest(startService = true) class MyTest { @MiskTestModule val module = Modules.combine( MiskServiceModule(), LogCollectorModule(), ... ) @Inject lateinit var logCollector: LogCollector @Test fun test() { someMethodThatLogs() assertThat(logCollector.takeMessages()).containsExactly(\"this is the only logged message!\") } } Use the optional parameters of takeMessages to constrain which log messages are returned.","title":"LogCollector"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/index.html#functions","text":"Name Summary takeEvent abstract fun takeEvent(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): ILoggingEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed. takeEvents abstract fun takeEvents(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List <ILoggingEvent> Removes all currently-collected log events and returns those that match the requested criteria. takeMessage abstract fun takeMessage(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): String Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed. takeMessages abstract fun takeMessages(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List < String > Removes all currently-collected log messages and returns those that match the requested criteria.","title":"Functions"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/index.html#inheritors","text":"Name Summary WispQueuedLogCollector class WispQueuedLogCollector : LogCollector","title":"Inheritors"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-event.html","text":"wisp-logging-testing / wisp.logging / LogCollector / takeEvent takeEvent \u00b6 abstract fun takeEvent(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): ILoggingEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.","title":"takeEvent - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-event.html#takeevent","text":"abstract fun takeEvent(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): ILoggingEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.","title":"takeEvent"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-events.html","text":"wisp-logging-testing / wisp.logging / LogCollector / takeEvents takeEvents \u00b6 abstract fun takeEvents(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List <ILoggingEvent> Removes all currently-collected log events and returns those that match the requested criteria.","title":"takeEvents - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-events.html#takeevents","text":"abstract fun takeEvents(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List <ILoggingEvent> Removes all currently-collected log events and returns those that match the requested criteria.","title":"takeEvents"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-message.html","text":"wisp-logging-testing / wisp.logging / LogCollector / takeMessage takeMessage \u00b6 abstract fun takeMessage(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): String Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.","title":"takeMessage - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-message.html#takemessage","text":"abstract fun takeMessage(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): String Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.","title":"takeMessage"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-messages.html","text":"wisp-logging-testing / wisp.logging / LogCollector / takeMessages takeMessages \u00b6 abstract fun takeMessages(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List < String > Removes all currently-collected log messages and returns those that match the requested criteria.","title":"takeMessages - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-log-collector/take-messages.html#takemessages","text":"abstract fun takeMessages(loggerClass: KClass <*>? = null, minLevel: Level = Level.INFO, pattern: Regex ? = null): List < String > Removes all currently-collected log messages and returns those that match the requested criteria.","title":"takeMessages"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/index.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector WispQueuedLogCollector \u00b6 class WispQueuedLogCollector : LogCollector Constructors \u00b6 Name Summary <init> WispQueuedLogCollector() Functions \u00b6 Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit takeEvent fun takeEvent(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): ILoggingEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed. takeEvents fun takeEvents(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List <ILoggingEvent> Removes all currently-collected log events and returns those that match the requested criteria. takeMessage fun takeMessage(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): String Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed. takeMessages fun takeMessages(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List < String > Removes all currently-collected log messages and returns those that match the requested criteria.","title":"WispQueuedLogCollector - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/index.html#wispqueuedlogcollector","text":"class WispQueuedLogCollector : LogCollector","title":"WispQueuedLogCollector"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/index.html#constructors","text":"Name Summary <init> WispQueuedLogCollector()","title":"Constructors"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/index.html#functions","text":"Name Summary shutDown fun shutDown(): Unit startUp fun startUp(): Unit takeEvent fun takeEvent(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): ILoggingEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed. takeEvents fun takeEvents(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List <ILoggingEvent> Removes all currently-collected log events and returns those that match the requested criteria. takeMessage fun takeMessage(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): String Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed. takeMessages fun takeMessages(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List < String > Removes all currently-collected log messages and returns those that match the requested criteria.","title":"Functions"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/-init-.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector / <init> <init> \u00b6 WispQueuedLogCollector()","title":" init "},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/-init-.html#init","text":"WispQueuedLogCollector()","title":"&lt;init&gt;"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/shut-down.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector / shutDown shutDown \u00b6 fun shutDown(): Unit","title":"shutDown - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/shut-down.html#shutdown","text":"fun shutDown(): Unit","title":"shutDown"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/start-up.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector / startUp startUp \u00b6 fun startUp(): Unit","title":"startUp - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/start-up.html#startup","text":"fun startUp(): Unit","title":"startUp"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-event.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector / takeEvent takeEvent \u00b6 fun takeEvent(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): ILoggingEvent Overrides LogCollector.takeEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.","title":"takeEvent - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-event.html#takeevent","text":"fun takeEvent(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): ILoggingEvent Overrides LogCollector.takeEvent Waits until a matching event is logged, and returns it. The returned event and all preceding events are also removed.","title":"takeEvent"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-events.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector / takeEvents takeEvents \u00b6 fun takeEvents(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List <ILoggingEvent> Overrides LogCollector.takeEvents Removes all currently-collected log events and returns those that match the requested criteria.","title":"takeEvents - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-events.html#takeevents","text":"fun takeEvents(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List <ILoggingEvent> Overrides LogCollector.takeEvents Removes all currently-collected log events and returns those that match the requested criteria.","title":"takeEvents"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-message.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector / takeMessage takeMessage \u00b6 fun takeMessage(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): String Overrides LogCollector.takeMessage Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.","title":"takeMessage - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-message.html#takemessage","text":"fun takeMessage(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): String Overrides LogCollector.takeMessage Waits until a matching event is logged, and returns its message. The returned event and all preceding events are also removed.","title":"takeMessage"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-messages.html","text":"wisp-logging-testing / wisp.logging / WispQueuedLogCollector / takeMessages takeMessages \u00b6 fun takeMessages(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List < String > Overrides LogCollector.takeMessages Removes all currently-collected log messages and returns those that match the requested criteria.","title":"takeMessages - Misk"},{"location":"0.x/wisp-logging-testing/wisp.logging/-wisp-queued-log-collector/take-messages.html#takemessages","text":"fun takeMessages(loggerClass: KClass <*>?, minLevel: Level, pattern: Regex ?): List < String > Overrides LogCollector.takeMessages Removes all currently-collected log messages and returns those that match the requested criteria.","title":"takeMessages"},{"location":"0.x/wisp-resource-loader/index.html","text":"wisp-resource-loader Packages \u00b6 Name Summary wisp.resources Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-resource-loader/index.html#packages","text":"Name Summary wisp.resources","title":"Packages"},{"location":"0.x/wisp-resource-loader/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-resource-loader/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.resources.ClasspathResourceLoaderBackend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. wisp.resources.FilesystemLoaderBackend Read-only resources that are fetched from the local filesystem using absolute paths. wisp.resources.MemoryResourceLoaderBackend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. wisp.resources.ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.","title":"All Types - Misk"},{"location":"0.x/wisp-resource-loader/alltypes/index.html#all-types","text":"Name Summary wisp.resources.ClasspathResourceLoaderBackend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. wisp.resources.FilesystemLoaderBackend Read-only resources that are fetched from the local filesystem using absolute paths. wisp.resources.MemoryResourceLoaderBackend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. wisp.resources.ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.","title":"All Types"},{"location":"0.x/wisp-resource-loader/wisp.resources/index.html","text":"wisp-resource-loader / wisp.resources Package wisp.resources \u00b6 Types \u00b6 Name Summary ClasspathResourceLoaderBackend object ClasspathResourceLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. FilesystemLoaderBackend object FilesystemLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from the local filesystem using absolute paths. MemoryResourceLoaderBackend class MemoryResourceLoaderBackend : ResourceLoader.Backend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. ResourceLoader class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.","title":"Package wisp.resources - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/index.html#package-wispresources","text":"","title":"Package wisp.resources"},{"location":"0.x/wisp-resource-loader/wisp.resources/index.html#types","text":"Name Summary ClasspathResourceLoaderBackend object ClasspathResourceLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. FilesystemLoaderBackend object FilesystemLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from the local filesystem using absolute paths. MemoryResourceLoaderBackend class MemoryResourceLoaderBackend : ResourceLoader.Backend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. ResourceLoader class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.","title":"Types"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/index.html","text":"wisp-resource-loader / wisp.resources / ClasspathResourceLoaderBackend ClasspathResourceLoaderBackend \u00b6 object ClasspathResourceLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. This uses the scheme classpath: . Functions \u00b6 Name Summary exists fun exists(path: String ): Boolean list fun list(path: String ): List < String > open fun open(path: String ): BufferedSource? Inherited Functions \u00b6 Name Summary all open fun all(): Set < String > put open fun put(path: String , data: ByteString): Unit","title":"ClasspathResourceLoaderBackend - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/index.html#classpathresourceloaderbackend","text":"object ClasspathResourceLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. This uses the scheme classpath: .","title":"ClasspathResourceLoaderBackend"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/index.html#functions","text":"Name Summary exists fun exists(path: String ): Boolean list fun list(path: String ): List < String > open fun open(path: String ): BufferedSource?","title":"Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/index.html#inherited-functions","text":"Name Summary all open fun all(): Set < String > put open fun put(path: String , data: ByteString): Unit","title":"Inherited Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/exists.html","text":"wisp-resource-loader / wisp.resources / ClasspathResourceLoaderBackend / exists exists \u00b6 fun exists(path: String ): Boolean Overrides Backend.exists","title":"exists - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/exists.html#exists","text":"fun exists(path: String ): Boolean Overrides Backend.exists","title":"exists"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/list.html","text":"wisp-resource-loader / wisp.resources / ClasspathResourceLoaderBackend / list list \u00b6 fun list(path: String ): List < String > Overrides Backend.list","title":"list - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/list.html#list","text":"fun list(path: String ): List < String > Overrides Backend.list","title":"list"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/open.html","text":"wisp-resource-loader / wisp.resources / ClasspathResourceLoaderBackend / open open \u00b6 fun open(path: String ): BufferedSource? Overrides Backend.open","title":"open - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-classpath-resource-loader-backend/open.html#open","text":"fun open(path: String ): BufferedSource? Overrides Backend.open","title":"open"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/index.html","text":"wisp-resource-loader / wisp.resources / FilesystemLoaderBackend FilesystemLoaderBackend \u00b6 object FilesystemLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from the local filesystem using absolute paths. This uses the scheme filesystem: . Functions \u00b6 Name Summary exists fun exists(path: String ): Boolean open fun open(path: String ): BufferedSource? Inherited Functions \u00b6 Name Summary all open fun all(): Set < String > list open fun list(path: String ): List < String > put open fun put(path: String , data: ByteString): Unit","title":"FilesystemLoaderBackend - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/index.html#filesystemloaderbackend","text":"object FilesystemLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from the local filesystem using absolute paths. This uses the scheme filesystem: .","title":"FilesystemLoaderBackend"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/index.html#functions","text":"Name Summary exists fun exists(path: String ): Boolean open fun open(path: String ): BufferedSource?","title":"Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/index.html#inherited-functions","text":"Name Summary all open fun all(): Set < String > list open fun list(path: String ): List < String > put open fun put(path: String , data: ByteString): Unit","title":"Inherited Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/exists.html","text":"wisp-resource-loader / wisp.resources / FilesystemLoaderBackend / exists exists \u00b6 fun exists(path: String ): Boolean Overrides Backend.exists","title":"exists - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/exists.html#exists","text":"fun exists(path: String ): Boolean Overrides Backend.exists","title":"exists"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/open.html","text":"wisp-resource-loader / wisp.resources / FilesystemLoaderBackend / open open \u00b6 fun open(path: String ): BufferedSource? Overrides Backend.open","title":"open - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-filesystem-loader-backend/open.html#open","text":"fun open(path: String ): BufferedSource? Overrides Backend.open","title":"open"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/index.html","text":"wisp-resource-loader / wisp.resources / MemoryResourceLoaderBackend MemoryResourceLoaderBackend \u00b6 class MemoryResourceLoaderBackend : ResourceLoader.Backend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. This uses the scheme memory: . Constructors \u00b6 Name Summary <init> MemoryResourceLoaderBackend() Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. Functions \u00b6 Name Summary all fun all(): Set < String > exists fun exists(path: String ): Boolean open fun open(path: String ): BufferedSource? put fun put(path: String , data: ByteString): Unit Inherited Functions \u00b6 Name Summary list open fun list(path: String ): List < String >","title":"MemoryResourceLoaderBackend - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/index.html#memoryresourceloaderbackend","text":"class MemoryResourceLoaderBackend : ResourceLoader.Backend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. This uses the scheme memory: .","title":"MemoryResourceLoaderBackend"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/index.html#constructors","text":"Name Summary <init> MemoryResourceLoaderBackend() Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend.","title":"Constructors"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/index.html#functions","text":"Name Summary all fun all(): Set < String > exists fun exists(path: String ): Boolean open fun open(path: String ): BufferedSource? put fun put(path: String , data: ByteString): Unit","title":"Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/index.html#inherited-functions","text":"Name Summary list open fun list(path: String ): List < String >","title":"Inherited Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-init-.html","text":"wisp-resource-loader / wisp.resources / MemoryResourceLoaderBackend / <init> <init> \u00b6 MemoryResourceLoaderBackend() Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. This uses the scheme memory: .","title":" init "},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/-init-.html#init","text":"MemoryResourceLoaderBackend() Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend. This uses the scheme memory: .","title":"&lt;init&gt;"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/all.html","text":"wisp-resource-loader / wisp.resources / MemoryResourceLoaderBackend / all all \u00b6 fun all(): Set < String > Overrides Backend.all","title":"all - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/all.html#all","text":"fun all(): Set < String > Overrides Backend.all","title":"all"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/exists.html","text":"wisp-resource-loader / wisp.resources / MemoryResourceLoaderBackend / exists exists \u00b6 fun exists(path: String ): Boolean Overrides Backend.exists","title":"exists - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/exists.html#exists","text":"fun exists(path: String ): Boolean Overrides Backend.exists","title":"exists"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/open.html","text":"wisp-resource-loader / wisp.resources / MemoryResourceLoaderBackend / open open \u00b6 fun open(path: String ): BufferedSource? Overrides Backend.open","title":"open - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/open.html#open","text":"fun open(path: String ): BufferedSource? Overrides Backend.open","title":"open"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/put.html","text":"wisp-resource-loader / wisp.resources / MemoryResourceLoaderBackend / put put \u00b6 fun put(path: String , data: ByteString): Unit Overrides Backend.put","title":"put - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-memory-resource-loader-backend/put.html#put","text":"fun put(path: String , data: ByteString): Unit Overrides Backend.put","title":"put"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/index.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader ResourceLoader \u00b6 class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key. Types \u00b6 Name Summary Backend abstract class Backend Constructors \u00b6 Name Summary <init> ResourceLoader(backends: Map < String , ResourceLoader.Backend >) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Functions \u00b6 Name Summary copyTo fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir . exists fun exists(address: String ): Boolean Returns true if a resource at address exists. list fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address . open fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists. put fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly. requireUtf8 fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing. utf8 fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently. walk fun walk(address: String ): List < String > Companion Object Properties \u00b6 Name Summary SYSTEM val SYSTEM: ResourceLoader","title":"ResourceLoader - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/index.html#resourceloader","text":"class ResourceLoader ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.","title":"ResourceLoader"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/index.html#types","text":"Name Summary Backend abstract class Backend","title":"Types"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/index.html#constructors","text":"Name Summary <init> ResourceLoader(backends: Map < String , ResourceLoader.Backend >) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source.","title":"Constructors"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/index.html#functions","text":"Name Summary copyTo fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir . exists fun exists(address: String ): Boolean Returns true if a resource at address exists. list fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address . open fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists. put fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly. requireUtf8 fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing. utf8 fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently. walk fun walk(address: String ): List < String >","title":"Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/index.html#companion-object-properties","text":"Name Summary SYSTEM val SYSTEM: ResourceLoader","title":"Companion Object Properties"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-init-.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / <init> <init> \u00b6 ResourceLoader(backends: Map < String , ResourceLoader.Backend >) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.","title":" init "},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-init-.html#init","text":"ResourceLoader(backends: Map < String , ResourceLoader.Backend >) ResourceLoader is a testable API for loading resources from the classpath, from the filesystem, from memory, or from another Backend source. Resource addresses have a scheme name, a colon, and an absolute filesystem-like path: classpath:/migrations/v1.sql . Schemes identify backends classpath: or memory: . Paths start with a slash and have any number of segments. Classpath resources use the scheme classpath: . The backend reads data from the src/main/resources of the project\u2019s modules and the contents of all library .jar files. Classpath resources are read-only. Filesystem resources use the scheme filesystem: . The backend reads data from the host machine\u2019s local filesystem. It is read-only and does not support list . Memory resources use the scheme memory: . The backend starts empty and is populated by calls to put . Other backends are permitted. They should be registered with a MapBinder with the backend scheme like classpath: as the key.","title":"&lt;init&gt;"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-s-y-s-t-e-m.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / SYSTEM SYSTEM \u00b6 val SYSTEM: ResourceLoader","title":"SYSTEM - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-s-y-s-t-e-m.html#system","text":"val SYSTEM: ResourceLoader","title":"SYSTEM"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/copy-to.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / copyTo copyTo \u00b6 fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir .","title":"copyTo - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/copy-to.html#copyto","text":"fun copyTo(root: String , dir: Path ): Unit Copies all resources with root as a prefix to the directory dir .","title":"copyTo"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/exists.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / exists exists \u00b6 fun exists(address: String ): Boolean Returns true if a resource at address exists.","title":"exists - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/exists.html#exists","text":"fun exists(address: String ): Boolean Returns true if a resource at address exists.","title":"exists"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/list.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / list list \u00b6 fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address .","title":"list - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/list.html#list","text":"fun list(address: String ): List < String > Returns the full path of the resources that are immediate children of address .","title":"list"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/open.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / open open \u00b6 fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists.","title":"open - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/open.html#open","text":"fun open(address: String ): BufferedSource? Return a buffered source for address , or null if no such resource exists.","title":"open"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/put.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / put put \u00b6 fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly.","title":"put - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/put.html#put","text":"fun put(address: String , utf8: String ): Unit Writes a resource as UTF-8. Throws if the backend is readonly. fun put(address: String , data: ByteString): Unit Writes a resource. Throws if the backend is readonly.","title":"put"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/require-utf8.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / requireUtf8 requireUtf8 \u00b6 fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing.","title":"requireUtf8 - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/require-utf8.html#requireutf8","text":"fun requireUtf8(address: String ): String Like utf8 , but throws IllegalStateException if the resource is missing.","title":"requireUtf8"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/utf8.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / utf8 utf8 \u00b6 fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently.","title":"utf8 - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/utf8.html#utf8","text":"fun utf8(address: String ): String ? Return the contents of address as a string, or null if no such resource exists. Note that this method decodes the resource on every use. It is the caller\u2019s responsibility to cache the result if it is to be loaded frequently.","title":"utf8"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/walk.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / walk walk \u00b6 fun walk(address: String ): List < String >","title":"walk - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/walk.html#walk","text":"fun walk(address: String ): List < String >","title":"walk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/index.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / Backend Backend \u00b6 abstract class Backend Constructors \u00b6 Name Summary <init> Backend() Functions \u00b6 Name Summary all open fun all(): Set < String > exists abstract fun exists(path: String ): Boolean list open fun list(path: String ): List < String > open abstract fun open(path: String ): BufferedSource? put open fun put(path: String , data: ByteString): Unit Inheritors \u00b6 Name Summary ClasspathResourceLoaderBackend object ClasspathResourceLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. FilesystemLoaderBackend object FilesystemLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from the local filesystem using absolute paths. MemoryResourceLoaderBackend class MemoryResourceLoaderBackend : ResourceLoader.Backend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend.","title":"Backend - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/index.html#backend","text":"abstract class Backend","title":"Backend"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/index.html#constructors","text":"Name Summary <init> Backend()","title":"Constructors"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/index.html#functions","text":"Name Summary all open fun all(): Set < String > exists abstract fun exists(path: String ): Boolean list open fun list(path: String ): List < String > open abstract fun open(path: String ): BufferedSource? put open fun put(path: String , data: ByteString): Unit","title":"Functions"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/index.html#inheritors","text":"Name Summary ClasspathResourceLoaderBackend object ClasspathResourceLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from either the deployed .jar file or the local filesystem. FilesystemLoaderBackend object FilesystemLoaderBackend : ResourceLoader.Backend Read-only resources that are fetched from the local filesystem using absolute paths. MemoryResourceLoaderBackend class MemoryResourceLoaderBackend : ResourceLoader.Backend Read-write resources stored only in memory. Most useful for testing. It is possible to have multiple instances of this backend.","title":"Inheritors"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/-init-.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / Backend / <init> <init> \u00b6 Backend()","title":" init "},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/-init-.html#init","text":"Backend()","title":"&lt;init&gt;"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/all.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / Backend / all all \u00b6 open fun all(): Set < String >","title":"all - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/all.html#all","text":"open fun all(): Set < String >","title":"all"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/exists.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / Backend / exists exists \u00b6 abstract fun exists(path: String ): Boolean","title":"exists - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/exists.html#exists","text":"abstract fun exists(path: String ): Boolean","title":"exists"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/list.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / Backend / list list \u00b6 open fun list(path: String ): List < String >","title":"list - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/list.html#list","text":"open fun list(path: String ): List < String >","title":"list"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/open.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / Backend / open open \u00b6 abstract fun open(path: String ): BufferedSource?","title":"open - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/open.html#open","text":"abstract fun open(path: String ): BufferedSource?","title":"open"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/put.html","text":"wisp-resource-loader / wisp.resources / ResourceLoader / Backend / put put \u00b6 open fun put(path: String , data: ByteString): Unit","title":"put - Misk"},{"location":"0.x/wisp-resource-loader/wisp.resources/-resource-loader/-backend/put.html#put","text":"open fun put(path: String , data: ByteString): Unit","title":"put"},{"location":"0.x/wisp-resource-loader-testing/index.html","text":"wisp-resource-loader-testing Packages \u00b6 Name Summary wisp.resources Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-resource-loader-testing/index.html#packages","text":"Name Summary wisp.resources","title":"Packages"},{"location":"0.x/wisp-resource-loader-testing/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-resource-loader-testing/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.resources.FakeFilesystemLoaderBackend A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map.","title":"All Types - Misk"},{"location":"0.x/wisp-resource-loader-testing/alltypes/index.html#all-types","text":"Name Summary wisp.resources.FakeFilesystemLoaderBackend A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map.","title":"All Types"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/index.html","text":"wisp-resource-loader-testing / wisp.resources Package wisp.resources \u00b6 Types \u00b6 Name Summary FakeFilesystemLoaderBackend class FakeFilesystemLoaderBackend : Backend A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map.","title":"Package wisp.resources - Misk"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/index.html#package-wispresources","text":"","title":"Package wisp.resources"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/index.html#types","text":"Name Summary FakeFilesystemLoaderBackend class FakeFilesystemLoaderBackend : Backend A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map.","title":"Types"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/index.html","text":"wisp-resource-loader-testing / wisp.resources / FakeFilesystemLoaderBackend FakeFilesystemLoaderBackend \u00b6 class FakeFilesystemLoaderBackend : Backend A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map. newMapBinder<String, String>(ForFakeFiles::class).addBinding(\"/etc/foo.txt\").toInstance(\"hello!\") Constructors \u00b6 Name Summary <init> FakeFilesystemLoaderBackend(files: Map < String , String >) A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map. Functions \u00b6 Name Summary exists fun exists(path: String ): Boolean open fun open(path: String ): BufferedSource?","title":"FakeFilesystemLoaderBackend - Misk"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/index.html#fakefilesystemloaderbackend","text":"class FakeFilesystemLoaderBackend : Backend A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map. newMapBinder<String, String>(ForFakeFiles::class).addBinding(\"/etc/foo.txt\").toInstance(\"hello!\")","title":"FakeFilesystemLoaderBackend"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/index.html#constructors","text":"Name Summary <init> FakeFilesystemLoaderBackend(files: Map < String , String >) A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map.","title":"Constructors"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/index.html#functions","text":"Name Summary exists fun exists(path: String ): Boolean open fun open(path: String ): BufferedSource?","title":"Functions"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/-init-.html","text":"wisp-resource-loader-testing / wisp.resources / FakeFilesystemLoaderBackend / <init> <init> \u00b6 FakeFilesystemLoaderBackend(files: Map < String , String >) A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map. newMapBinder<String, String>(ForFakeFiles::class).addBinding(\"/etc/foo.txt\").toInstance(\"hello!\")","title":" init "},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/-init-.html#init","text":"FakeFilesystemLoaderBackend(files: Map < String , String >) A fake FilesystemLoaderBackend that loads file contents from an in-memory map. The map can be populated by adding to the ForFakeFiles map. newMapBinder<String, String>(ForFakeFiles::class).addBinding(\"/etc/foo.txt\").toInstance(\"hello!\")","title":"&lt;init&gt;"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/exists.html","text":"wisp-resource-loader-testing / wisp.resources / FakeFilesystemLoaderBackend / exists exists \u00b6 fun exists(path: String ): Boolean","title":"exists - Misk"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/exists.html#exists","text":"fun exists(path: String ): Boolean","title":"exists"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/open.html","text":"wisp-resource-loader-testing / wisp.resources / FakeFilesystemLoaderBackend / open open \u00b6 fun open(path: String ): BufferedSource?","title":"open - Misk"},{"location":"0.x/wisp-resource-loader-testing/wisp.resources/-fake-filesystem-loader-backend/open.html#open","text":"fun open(path: String ): BufferedSource?","title":"open"},{"location":"0.x/wisp-ssl/index.html","text":"wisp-ssl Packages \u00b6 Name Summary wisp.security.ssl Index \u00b6 All Types","title":"Packages - Misk"},{"location":"0.x/wisp-ssl/index.html#packages","text":"Name Summary wisp.security.ssl","title":"Packages"},{"location":"0.x/wisp-ssl/index.html#index","text":"All Types","title":"Index"},{"location":"0.x/wisp-ssl/alltypes/index.html","text":"All Types \u00b6 Name Summary wisp.security.ssl.CertificateAndKey wisp.security.ssl.CertStore A certificate and its private key. wisp.security.ssl.CertStoreConfig java.security.KeyStore (extensions in package wisp.security.ssl) wisp.security.ssl.PemComboFile A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves). wisp.security.ssl.SslContextFactory wisp.security.ssl.SslLoader Loads keys and certificates from the file system. wisp.security.ssl.TrustStore A set of trusted root certificates. wisp.security.ssl.TrustStoreConfig","title":"All Types - Misk"},{"location":"0.x/wisp-ssl/alltypes/index.html#all-types","text":"Name Summary wisp.security.ssl.CertificateAndKey wisp.security.ssl.CertStore A certificate and its private key. wisp.security.ssl.CertStoreConfig java.security.KeyStore (extensions in package wisp.security.ssl) wisp.security.ssl.PemComboFile A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves). wisp.security.ssl.SslContextFactory wisp.security.ssl.SslLoader Loads keys and certificates from the file system. wisp.security.ssl.TrustStore A set of trusted root certificates. wisp.security.ssl.TrustStoreConfig","title":"All Types"},{"location":"0.x/wisp-ssl/wisp.security.ssl/index.html","text":"wisp-ssl / wisp.security.ssl Package wisp.security.ssl \u00b6 Types \u00b6 Name Summary CertificateAndKey data class CertificateAndKey CertStore data class CertStore A certificate and its private key. CertStoreConfig data class CertStoreConfig PemComboFile data class PemComboFile A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves). SslContextFactory class SslContextFactory SslLoader class SslLoader Loads keys and certificates from the file system. TrustStore data class TrustStore A set of trusted root certificates. TrustStoreConfig data class TrustStoreConfig Extensions for External Classes \u00b6 Name Summary java.security.KeyStore","title":"Package wisp.security.ssl - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/index.html#package-wispsecurityssl","text":"","title":"Package wisp.security.ssl"},{"location":"0.x/wisp-ssl/wisp.security.ssl/index.html#types","text":"Name Summary CertificateAndKey data class CertificateAndKey CertStore data class CertStore A certificate and its private key. CertStoreConfig data class CertStoreConfig PemComboFile data class PemComboFile A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves). SslContextFactory class SslContextFactory SslLoader class SslLoader Loads keys and certificates from the file system. TrustStore data class TrustStore A set of trusted root certificates. TrustStoreConfig data class TrustStoreConfig","title":"Types"},{"location":"0.x/wisp-ssl/wisp.security.ssl/index.html#extensions-for-external-classes","text":"Name Summary java.security.KeyStore","title":"Extensions for External Classes"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/index.html","text":"wisp-ssl / wisp.security.ssl / CertStore CertStore \u00b6 data class CertStore A certificate and its private key. Constructors \u00b6 Name Summary <init> CertStore(keyStore: KeyStore ) A certificate and its private key. Properties \u00b6 Name Summary keyStore val keyStore: KeyStore","title":"CertStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/index.html#certstore","text":"data class CertStore A certificate and its private key.","title":"CertStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/index.html#constructors","text":"Name Summary <init> CertStore(keyStore: KeyStore ) A certificate and its private key.","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/index.html#properties","text":"Name Summary keyStore val keyStore: KeyStore","title":"Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/-init-.html","text":"wisp-ssl / wisp.security.ssl / CertStore / <init> <init> \u00b6 CertStore(keyStore: KeyStore ) A certificate and its private key.","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/-init-.html#init","text":"CertStore(keyStore: KeyStore ) A certificate and its private key.","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/key-store.html","text":"wisp-ssl / wisp.security.ssl / CertStore / keyStore keyStore \u00b6 val keyStore: KeyStore","title":"keyStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store/key-store.html#keystore","text":"val keyStore: KeyStore","title":"keyStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/index.html","text":"wisp-ssl / wisp.security.ssl / CertStoreConfig CertStoreConfig \u00b6 data class CertStoreConfig Constructors \u00b6 Name Summary <init> CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS) Properties \u00b6 Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String","title":"CertStoreConfig - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/index.html#certstoreconfig","text":"data class CertStoreConfig","title":"CertStoreConfig"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/index.html#constructors","text":"Name Summary <init> CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS)","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/index.html#properties","text":"Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String","title":"Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/-init-.html","text":"wisp-ssl / wisp.security.ssl / CertStoreConfig / <init> <init> \u00b6 CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS)","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/-init-.html#init","text":"CertStoreConfig(resource: String , passphrase: String ? = null, format: String = SslLoader.FORMAT_JCEKS)","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/format.html","text":"wisp-ssl / wisp.security.ssl / CertStoreConfig / format format \u00b6 val format: String","title":"format - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/format.html#format","text":"val format: String","title":"format"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/passphrase.html","text":"wisp-ssl / wisp.security.ssl / CertStoreConfig / passphrase passphrase \u00b6 val passphrase: String ?","title":"passphrase - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/passphrase.html#passphrase","text":"val passphrase: String ?","title":"passphrase"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/resource.html","text":"wisp-ssl / wisp.security.ssl / CertStoreConfig / resource resource \u00b6 val resource: String","title":"resource - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-cert-store-config/resource.html#resource","text":"val resource: String","title":"resource"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/index.html","text":"wisp-ssl / wisp.security.ssl / CertificateAndKey CertificateAndKey \u00b6 data class CertificateAndKey Constructors \u00b6 Name Summary <init> CertificateAndKey(certificate: X509Certificate , privateKey: PrivateKey ) Properties \u00b6 Name Summary certificate val certificate: X509Certificate privateKey val privateKey: PrivateKey","title":"CertificateAndKey - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/index.html#certificateandkey","text":"data class CertificateAndKey","title":"CertificateAndKey"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/index.html#constructors","text":"Name Summary <init> CertificateAndKey(certificate: X509Certificate , privateKey: PrivateKey )","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/index.html#properties","text":"Name Summary certificate val certificate: X509Certificate privateKey val privateKey: PrivateKey","title":"Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/-init-.html","text":"wisp-ssl / wisp.security.ssl / CertificateAndKey / <init> <init> \u00b6 CertificateAndKey(certificate: X509Certificate , privateKey: PrivateKey )","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/-init-.html#init","text":"CertificateAndKey(certificate: X509Certificate , privateKey: PrivateKey )","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/certificate.html","text":"wisp-ssl / wisp.security.ssl / CertificateAndKey / certificate certificate \u00b6 val certificate: X509Certificate","title":"certificate - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/certificate.html#certificate","text":"val certificate: X509Certificate","title":"certificate"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/private-key.html","text":"wisp-ssl / wisp.security.ssl / CertificateAndKey / privateKey privateKey \u00b6 val privateKey: PrivateKey","title":"privateKey - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-certificate-and-key/private-key.html#privatekey","text":"val privateKey: PrivateKey","title":"privateKey"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/index.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile PemComboFile \u00b6 data class PemComboFile A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves). Constructors \u00b6 Name Summary <init> PemComboFile(certificates: List <ByteString>, privateRsaKeys: List <ByteString>, privateKeys: List <ByteString>, passphrase: String ) A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves). Properties \u00b6 Name Summary certificates val certificates: List <ByteString> passphrase val passphrase: String privateKeys val privateKeys: List <ByteString> privateRsaKeys val privateRsaKeys: List <ByteString> Functions \u00b6 Name Summary decodeCertificates fun decodeCertificates(): List < Certificate > newEmptyKeyStore fun newEmptyKeyStore(): KeyStore Companion Object Functions \u00b6 Name Summary convertPKCS1toPKCS8 fun convertPKCS1toPKCS8(pkcs1Key: ByteString): KeySpec parse fun parse(certKeyComboSource: BufferedSource, passphrase: String ? = null): PemComboFile","title":"PemComboFile - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/index.html#pemcombofile","text":"data class PemComboFile A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves).","title":"PemComboFile"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/index.html#constructors","text":"Name Summary <init> PemComboFile(certificates: List <ByteString>, privateRsaKeys: List <ByteString>, privateKeys: List <ByteString>, passphrase: String ) A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves).","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/index.html#properties","text":"Name Summary certificates val certificates: List <ByteString> passphrase val passphrase: String privateKeys val privateKeys: List <ByteString> privateRsaKeys val privateRsaKeys: List <ByteString>","title":"Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/index.html#functions","text":"Name Summary decodeCertificates fun decodeCertificates(): List < Certificate > newEmptyKeyStore fun newEmptyKeyStore(): KeyStore","title":"Functions"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/index.html#companion-object-functions","text":"Name Summary convertPKCS1toPKCS8 fun convertPKCS1toPKCS8(pkcs1Key: ByteString): KeySpec parse fun parse(certKeyComboSource: BufferedSource, passphrase: String ? = null): PemComboFile","title":"Companion Object Functions"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/-init-.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / <init> <init> \u00b6 PemComboFile(certificates: List <ByteString>, privateRsaKeys: List <ByteString>, privateKeys: List <ByteString>, passphrase: String ) A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves).","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/-init-.html#init","text":"PemComboFile(certificates: List <ByteString>, privateRsaKeys: List <ByteString>, privateKeys: List <ByteString>, passphrase: String ) A file containing a mix of PEM-encoded certificates and PEM-encoded private keys. Can be used both for trust stores (which certificate authorities a TLS client trusts) and also for TLS servers (which certificate chain a TLS server serves).","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/certificates.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / certificates certificates \u00b6 val certificates: List <ByteString>","title":"certificates - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/certificates.html#certificates","text":"val certificates: List <ByteString>","title":"certificates"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/convert-p-k-c-s1to-p-k-c-s8.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / convertPKCS1toPKCS8 convertPKCS1toPKCS8 \u00b6 fun convertPKCS1toPKCS8(pkcs1Key: ByteString): KeySpec","title":"convertPKCS1toPKCS8 - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/convert-p-k-c-s1to-p-k-c-s8.html#convertpkcs1topkcs8","text":"fun convertPKCS1toPKCS8(pkcs1Key: ByteString): KeySpec","title":"convertPKCS1toPKCS8"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/decode-certificates.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / decodeCertificates decodeCertificates \u00b6 fun decodeCertificates(): List < Certificate >","title":"decodeCertificates - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/decode-certificates.html#decodecertificates","text":"fun decodeCertificates(): List < Certificate >","title":"decodeCertificates"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/new-empty-key-store.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / newEmptyKeyStore newEmptyKeyStore \u00b6 fun newEmptyKeyStore(): KeyStore","title":"newEmptyKeyStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/new-empty-key-store.html#newemptykeystore","text":"fun newEmptyKeyStore(): KeyStore","title":"newEmptyKeyStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/parse.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / parse parse \u00b6 fun parse(certKeyComboSource: BufferedSource, passphrase: String ? = null): PemComboFile","title":"parse - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/parse.html#parse","text":"fun parse(certKeyComboSource: BufferedSource, passphrase: String ? = null): PemComboFile","title":"parse"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/passphrase.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / passphrase passphrase \u00b6 val passphrase: String","title":"passphrase - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/passphrase.html#passphrase","text":"val passphrase: String","title":"passphrase"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-keys.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / privateKeys privateKeys \u00b6 val privateKeys: List <ByteString>","title":"privateKeys - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-keys.html#privatekeys","text":"val privateKeys: List <ByteString>","title":"privateKeys"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-rsa-keys.html","text":"wisp-ssl / wisp.security.ssl / PemComboFile / privateRsaKeys privateRsaKeys \u00b6 val privateRsaKeys: List <ByteString>","title":"privateRsaKeys - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-pem-combo-file/private-rsa-keys.html#privatersakeys","text":"val privateRsaKeys: List <ByteString>","title":"privateRsaKeys"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/index.html","text":"wisp-ssl / wisp.security.ssl / SslContextFactory SslContextFactory \u00b6 class SslContextFactory Constructors \u00b6 Name Summary <init> SslContextFactory(sslLoader: SslLoader ) Functions \u00b6 Name Summary create fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext loadTrustManagers fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager >","title":"SslContextFactory - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/index.html#sslcontextfactory","text":"class SslContextFactory","title":"SslContextFactory"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/index.html#constructors","text":"Name Summary <init> SslContextFactory(sslLoader: SslLoader )","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/index.html#functions","text":"Name Summary create fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext loadTrustManagers fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager >","title":"Functions"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/-init-.html","text":"wisp-ssl / wisp.security.ssl / SslContextFactory / <init> <init> \u00b6 SslContextFactory(sslLoader: SslLoader )","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/-init-.html#init","text":"SslContextFactory(sslLoader: SslLoader )","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/create.html","text":"wisp-ssl / wisp.security.ssl / SslContextFactory / create create \u00b6 fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext Return A new SSLContext for the given certstore and optional truststore config","title":"create - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/create.html#create","text":"fun create(certStore: CertStoreConfig ? = null, trustStore: TrustStoreConfig ? = null): SSLContext fun create(certStore: CertStore ?, pin: CharArray ?, trustStore: TrustStore ? = null): SSLContext Return A new SSLContext for the given certstore and optional truststore config","title":"create"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/load-trust-managers.html","text":"wisp-ssl / wisp.security.ssl / SslContextFactory / loadTrustManagers loadTrustManagers \u00b6 fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager > Return a set of TrustManager s based on the certificates in the given truststore","title":"loadTrustManagers - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-context-factory/load-trust-managers.html#loadtrustmanagers","text":"fun loadTrustManagers(trustStore: KeyStore ): Array < TrustManager > Return a set of TrustManager s based on the certificates in the given truststore","title":"loadTrustManagers"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/index.html","text":"wisp-ssl / wisp.security.ssl / SslLoader SslLoader \u00b6 class SslLoader Loads keys and certificates from the file system. Constructors \u00b6 Name Summary <init> SslLoader(resourceLoader: ResourceLoader) Loads keys and certificates from the file system. Properties \u00b6 Name Summary resourceLoader val resourceLoader: ResourceLoader Functions \u00b6 Name Summary loadCertStore fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore ? loadTrustStore fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore ? Companion Object Properties \u00b6 Name Summary FORMAT_JCEKS const val FORMAT_JCEKS: String FORMAT_JKS const val FORMAT_JKS: String FORMAT_PEM const val FORMAT_PEM: String","title":"SslLoader - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/index.html#sslloader","text":"class SslLoader Loads keys and certificates from the file system.","title":"SslLoader"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/index.html#constructors","text":"Name Summary <init> SslLoader(resourceLoader: ResourceLoader) Loads keys and certificates from the file system.","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/index.html#properties","text":"Name Summary resourceLoader val resourceLoader: ResourceLoader","title":"Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/index.html#functions","text":"Name Summary loadCertStore fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore ? loadTrustStore fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore ?","title":"Functions"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/index.html#companion-object-properties","text":"Name Summary FORMAT_JCEKS const val FORMAT_JCEKS: String FORMAT_JKS const val FORMAT_JKS: String FORMAT_PEM const val FORMAT_PEM: String","title":"Companion Object Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-c-e-k-s.html","text":"wisp-ssl / wisp.security.ssl / SslLoader / FORMAT_JCEKS FORMAT_JCEKS \u00b6 const val FORMAT_JCEKS: String","title":"FORMAT_JCEKS - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-c-e-k-s.html#format_jceks","text":"const val FORMAT_JCEKS: String","title":"FORMAT_JCEKS"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-k-s.html","text":"wisp-ssl / wisp.security.ssl / SslLoader / FORMAT_JKS FORMAT_JKS \u00b6 const val FORMAT_JKS: String","title":"FORMAT_JKS - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-f-o-r-m-a-t_-j-k-s.html#format_jks","text":"const val FORMAT_JKS: String","title":"FORMAT_JKS"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-f-o-r-m-a-t_-p-e-m.html","text":"wisp-ssl / wisp.security.ssl / SslLoader / FORMAT_PEM FORMAT_PEM \u00b6 const val FORMAT_PEM: String","title":"FORMAT_PEM - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-f-o-r-m-a-t_-p-e-m.html#format_pem","text":"const val FORMAT_PEM: String","title":"FORMAT_PEM"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-init-.html","text":"wisp-ssl / wisp.security.ssl / SslLoader / <init> <init> \u00b6 SslLoader(resourceLoader: ResourceLoader) Loads keys and certificates from the file system.","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/-init-.html#init","text":"SslLoader(resourceLoader: ResourceLoader) Loads keys and certificates from the file system.","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/load-cert-store.html","text":"wisp-ssl / wisp.security.ssl / SslLoader / loadCertStore loadCertStore \u00b6 fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore ?","title":"loadCertStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/load-cert-store.html#loadcertstore","text":"fun loadCertStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): CertStore ? fun loadCertStore(config: CertStoreConfig ): CertStore ?","title":"loadCertStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/load-trust-store.html","text":"wisp-ssl / wisp.security.ssl / SslLoader / loadTrustStore loadTrustStore \u00b6 fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore ?","title":"loadTrustStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/load-trust-store.html#loadtruststore","text":"fun loadTrustStore(path: String , format: String = FORMAT_PEM, passphrase: String ? = null): TrustStore ? fun loadTrustStore(config: TrustStoreConfig ): TrustStore ?","title":"loadTrustStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/resource-loader.html","text":"wisp-ssl / wisp.security.ssl / SslLoader / resourceLoader resourceLoader \u00b6 val resourceLoader: ResourceLoader","title":"resourceLoader - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-ssl-loader/resource-loader.html#resourceloader","text":"val resourceLoader: ResourceLoader","title":"resourceLoader"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/index.html","text":"wisp-ssl / wisp.security.ssl / TrustStore TrustStore \u00b6 data class TrustStore A set of trusted root certificates. Constructors \u00b6 Name Summary <init> TrustStore(keyStore: KeyStore ) A set of trusted root certificates. Properties \u00b6 Name Summary keyStore val keyStore: KeyStore","title":"TrustStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/index.html#truststore","text":"data class TrustStore A set of trusted root certificates.","title":"TrustStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/index.html#constructors","text":"Name Summary <init> TrustStore(keyStore: KeyStore ) A set of trusted root certificates.","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/index.html#properties","text":"Name Summary keyStore val keyStore: KeyStore","title":"Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/-init-.html","text":"wisp-ssl / wisp.security.ssl / TrustStore / <init> <init> \u00b6 TrustStore(keyStore: KeyStore ) A set of trusted root certificates.","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/-init-.html#init","text":"TrustStore(keyStore: KeyStore ) A set of trusted root certificates.","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/key-store.html","text":"wisp-ssl / wisp.security.ssl / TrustStore / keyStore keyStore \u00b6 val keyStore: KeyStore","title":"keyStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store/key-store.html#keystore","text":"val keyStore: KeyStore","title":"keyStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/index.html","text":"wisp-ssl / wisp.security.ssl / TrustStoreConfig TrustStoreConfig \u00b6 data class TrustStoreConfig Constructors \u00b6 Name Summary <init> TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS) Properties \u00b6 Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String","title":"TrustStoreConfig - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/index.html#truststoreconfig","text":"data class TrustStoreConfig","title":"TrustStoreConfig"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/index.html#constructors","text":"Name Summary <init> TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS)","title":"Constructors"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/index.html#properties","text":"Name Summary format val format: String passphrase val passphrase: String ? resource val resource: String","title":"Properties"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/-init-.html","text":"wisp-ssl / wisp.security.ssl / TrustStoreConfig / <init> <init> \u00b6 TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS)","title":" init "},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/-init-.html#init","text":"TrustStoreConfig(resource: String , passphrase: String ? = null, format: String = FORMAT_JCEKS)","title":"&lt;init&gt;"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/format.html","text":"wisp-ssl / wisp.security.ssl / TrustStoreConfig / format format \u00b6 val format: String","title":"format - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/format.html#format","text":"val format: String","title":"format"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/passphrase.html","text":"wisp-ssl / wisp.security.ssl / TrustStoreConfig / passphrase passphrase \u00b6 val passphrase: String ?","title":"passphrase - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/passphrase.html#passphrase","text":"val passphrase: String ?","title":"passphrase"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/resource.html","text":"wisp-ssl / wisp.security.ssl / TrustStoreConfig / resource resource \u00b6 val resource: String","title":"resource - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/-trust-store-config/resource.html#resource","text":"val resource: String","title":"resource"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/index.html","text":"wisp-ssl / wisp.security.ssl / java.security.KeyStore Extensions for java.security.KeyStore \u00b6 Name Summary aliasesOfType fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > fun <T : Entry > KeyStore .aliasesOfType(): List < String > getCertificateAndKey fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey ? getPrivateKey fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey getX509Certificate fun KeyStore .getX509Certificate(alias: String ): X509Certificate fun KeyStore .getX509Certificate(): X509Certificate getX509CertificateChain fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > fun KeyStore .getX509CertificateChain(): Array < X509Certificate > onlyAlias val KeyStore .onlyAlias: String","title":"Extensions for java.security.KeyStore - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/index.html#extensions-for-javasecuritykeystore","text":"Name Summary aliasesOfType fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > fun <T : Entry > KeyStore .aliasesOfType(): List < String > getCertificateAndKey fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey ? getPrivateKey fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey getX509Certificate fun KeyStore .getX509Certificate(alias: String ): X509Certificate fun KeyStore .getX509Certificate(): X509Certificate getX509CertificateChain fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > fun KeyStore .getX509CertificateChain(): Array < X509Certificate > onlyAlias val KeyStore .onlyAlias: String","title":"Extensions for java.security.KeyStore"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/aliases-of-type.html","text":"wisp-ssl / wisp.security.ssl / java.security.KeyStore / aliasesOfType aliasesOfType \u00b6 fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > Return all aliases present in the keystore of a given entry type. inline fun <reified T : Entry > KeyStore .aliasesOfType(): List < String >","title":"aliasesOfType - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/aliases-of-type.html#aliasesoftype","text":"fun KeyStore .aliasesOfType(entryClass: Class <out Entry >): List < String > Return all aliases present in the keystore of a given entry type. inline fun <reified T : Entry > KeyStore .aliasesOfType(): List < String >","title":"aliasesOfType"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-certificate-and-key.html","text":"wisp-ssl / wisp.security.ssl / java.security.KeyStore / getCertificateAndKey getCertificateAndKey \u00b6 fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? Return the certificate and key pair for the given alias fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey ? Return the one and only CertificateAndKey in the keystore","title":"getCertificateAndKey - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-certificate-and-key.html#getcertificateandkey","text":"fun KeyStore .getCertificateAndKey(alias: String , passphrase: CharArray ): CertificateAndKey ? Return the certificate and key pair for the given alias fun KeyStore .getCertificateAndKey(passphrase: CharArray ): CertificateAndKey ? Return the one and only CertificateAndKey in the keystore","title":"getCertificateAndKey"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-private-key.html","text":"wisp-ssl / wisp.security.ssl / java.security.KeyStore / getPrivateKey getPrivateKey \u00b6 fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey Return the PrivateKey with the given alias fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey Return the one and only PrivateKey in the keystore","title":"getPrivateKey - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-private-key.html#getprivatekey","text":"fun KeyStore .getPrivateKey(alias: String , passphrase: CharArray ): PrivateKey Return the PrivateKey with the given alias fun KeyStore .getPrivateKey(passphrase: CharArray ): PrivateKey Return the one and only PrivateKey in the keystore","title":"getPrivateKey"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-x509-certificate-chain.html","text":"wisp-ssl / wisp.security.ssl / java.security.KeyStore / getX509CertificateChain getX509CertificateChain \u00b6 fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > Return the X509Certificate chain with the provided alias fun KeyStore .getX509CertificateChain(): Array < X509Certificate > Return the one and only X509Certificate chain in the keystore","title":"getX509CertificateChain - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-x509-certificate-chain.html#getx509certificatechain","text":"fun KeyStore .getX509CertificateChain(alias: String ): Array < X509Certificate > Return the X509Certificate chain with the provided alias fun KeyStore .getX509CertificateChain(): Array < X509Certificate > Return the one and only X509Certificate chain in the keystore","title":"getX509CertificateChain"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-x509-certificate.html","text":"wisp-ssl / wisp.security.ssl / java.security.KeyStore / getX509Certificate getX509Certificate \u00b6 fun KeyStore .getX509Certificate(alias: String ): X509Certificate Return The X509Certificate with the provided alias fun KeyStore .getX509Certificate(): X509Certificate Return the one and only X509Certificate in the keystore","title":"getX509Certificate - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/get-x509-certificate.html#getx509certificate","text":"fun KeyStore .getX509Certificate(alias: String ): X509Certificate Return The X509Certificate with the provided alias fun KeyStore .getX509Certificate(): X509Certificate Return the one and only X509Certificate in the keystore","title":"getX509Certificate"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/only-alias.html","text":"wisp-ssl / wisp.security.ssl / java.security.KeyStore / onlyAlias onlyAlias \u00b6 val KeyStore .onlyAlias: String Return the only alias in the keystore, if the keystore only has a single entry","title":"onlyAlias - Misk"},{"location":"0.x/wisp-ssl/wisp.security.ssl/java.security.-key-store/only-alias.html#onlyalias","text":"val KeyStore .onlyAlias: String Return the only alias in the keystore, if the keystore only has a single entry","title":"onlyAlias"}]}